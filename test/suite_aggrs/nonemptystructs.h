/* {lssfd} */
struct A1 { l m0; s m1; s m2; f m3; d m4; };
void f_cpA1(struct A1 *x, const struct A1 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1(const struct A1 *x, const struct A1 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1, m0), 1);
		dcStructField(st, 's', offsetof(struct A1, m1), 1);
		dcStructField(st, 's', offsetof(struct A1, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i} */
struct A2 { i m0; };
void f_cpA2(struct A2 *x, const struct A2 *y) { x->m0 = y->m0; };
int f_cmpA2(const struct A2 *x, const struct A2 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA2() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A2), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A2, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{i}spfcpplisp} */
struct A3 { struct A2 m0; s m1; p m2; f m3; c m4; p m5; p m6; l m7; i m8; s m9; p m10; };
void f_cpA3(struct A3 *x, const struct A3 *y) { f_cpA2(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA3(const struct A3 *x, const struct A3 *y) { return f_cmpA2(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA3() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A3), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A3, m0), 1, f_touchdcstA2());
		dcStructField(st, 's', offsetof(struct A3, m1), 1);
		dcStructField(st, 'p', offsetof(struct A3, m2), 1);
		dcStructField(st, 'f', offsetof(struct A3, m3), 1);
		dcStructField(st, 'c', offsetof(struct A3, m4), 1);
		dcStructField(st, 'p', offsetof(struct A3, m5), 1);
		dcStructField(st, 'p', offsetof(struct A3, m6), 1);
		dcStructField(st, 'l', offsetof(struct A3, m7), 1);
		dcStructField(st, 'i', offsetof(struct A3, m8), 1);
		dcStructField(st, 's', offsetof(struct A3, m9), 1);
		dcStructField(st, 'p', offsetof(struct A3, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssd} */
struct A4 { s m0; s m1; d m2; };
void f_cpA4(struct A4 *x, const struct A4 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA4(const struct A4 *x, const struct A4 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA4() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A4), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A4, m0), 1);
		dcStructField(st, 's', offsetof(struct A4, m1), 1);
		dcStructField(st, 'd', offsetof(struct A4, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcdsppjld} */
struct A5 { j m0; c m1; d m2; s m3; p m4; p m5; j m6; l m7; d m8; };
void f_cpA5(struct A5 *x, const struct A5 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA5(const struct A5 *x, const struct A5 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA5() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A5), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A5, m0), 1);
		dcStructField(st, 'c', offsetof(struct A5, m1), 1);
		dcStructField(st, 'd', offsetof(struct A5, m2), 1);
		dcStructField(st, 's', offsetof(struct A5, m3), 1);
		dcStructField(st, 'p', offsetof(struct A5, m4), 1);
		dcStructField(st, 'p', offsetof(struct A5, m5), 1);
		dcStructField(st, 'j', offsetof(struct A5, m6), 1);
		dcStructField(st, 'l', offsetof(struct A5, m7), 1);
		dcStructField(st, 'd', offsetof(struct A5, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {li} */
struct A6 { l m0; i m1; };
void f_cpA6(struct A6 *x, const struct A6 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA6(const struct A6 *x, const struct A6 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA6() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A6), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A6, m0), 1);
		dcStructField(st, 'i', offsetof(struct A6, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdfddcpl} */
struct A7 { p m0; d m1; f m2; d m3; d m4; c m5; p m6; l m7; };
void f_cpA7(struct A7 *x, const struct A7 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA7(const struct A7 *x, const struct A7 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA7() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A7), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A7, m0), 1);
		dcStructField(st, 'd', offsetof(struct A7, m1), 1);
		dcStructField(st, 'f', offsetof(struct A7, m2), 1);
		dcStructField(st, 'd', offsetof(struct A7, m3), 1);
		dcStructField(st, 'd', offsetof(struct A7, m4), 1);
		dcStructField(st, 'c', offsetof(struct A7, m5), 1);
		dcStructField(st, 'p', offsetof(struct A7, m6), 1);
		dcStructField(st, 'l', offsetof(struct A7, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{li}pp{pdfddcpl}} */
struct A8 { struct A6 m0; p m1; p m2; struct A7 m3; };
void f_cpA8(struct A8 *x, const struct A8 *y) { f_cpA6(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA7(&x->m3, &y->m3); };
int f_cmpA8(const struct A8 *x, const struct A8 *y) { return f_cmpA6(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA7(&x->m3, &y->m3); };
DCstruct* f_touchdcstA8() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A8), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A8, m0), 1, f_touchdcstA6());
		dcStructField(st, 'p', offsetof(struct A8, m1), 1);
		dcStructField(st, 'p', offsetof(struct A8, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A8, m3), 1, f_touchdcstA7());
		dcCloseStruct(st);
	}
	return st;
};
/* {dsisjc} */
struct A9 { d m0; s m1; i m2; s m3; j m4; c m5; };
void f_cpA9(struct A9 *x, const struct A9 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA9(const struct A9 *x, const struct A9 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA9() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A9), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A9, m0), 1);
		dcStructField(st, 's', offsetof(struct A9, m1), 1);
		dcStructField(st, 'i', offsetof(struct A9, m2), 1);
		dcStructField(st, 's', offsetof(struct A9, m3), 1);
		dcStructField(st, 'j', offsetof(struct A9, m4), 1);
		dcStructField(st, 'c', offsetof(struct A9, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {il{dsisjc}pjcfjs} */
struct A10 { i m0; l m1; struct A9 m2; p m3; j m4; c m5; f m6; j m7; s m8; };
void f_cpA10(struct A10 *x, const struct A10 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA9(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA10(const struct A10 *x, const struct A10 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA9(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA10() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A10), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A10, m0), 1);
		dcStructField(st, 'l', offsetof(struct A10, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A10, m2), 1, f_touchdcstA9());
		dcStructField(st, 'p', offsetof(struct A10, m3), 1);
		dcStructField(st, 'j', offsetof(struct A10, m4), 1);
		dcStructField(st, 'c', offsetof(struct A10, m5), 1);
		dcStructField(st, 'f', offsetof(struct A10, m6), 1);
		dcStructField(st, 'j', offsetof(struct A10, m7), 1);
		dcStructField(st, 's', offsetof(struct A10, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l} */
struct A11 { l m0; };
void f_cpA11(struct A11 *x, const struct A11 *y) { x->m0 = y->m0; };
int f_cmpA11(const struct A11 *x, const struct A11 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA11() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A11), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A11, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjlil} */
struct A12 { p m0; j m1; l m2; i m3; l m4; };
void f_cpA12(struct A12 *x, const struct A12 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA12(const struct A12 *x, const struct A12 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA12() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A12), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A12, m0), 1);
		dcStructField(st, 'j', offsetof(struct A12, m1), 1);
		dcStructField(st, 'l', offsetof(struct A12, m2), 1);
		dcStructField(st, 'i', offsetof(struct A12, m3), 1);
		dcStructField(st, 'l', offsetof(struct A12, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdl} */
struct A13 { c m0; d m1; l m2; };
void f_cpA13(struct A13 *x, const struct A13 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA13(const struct A13 *x, const struct A13 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA13() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A13), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A13, m0), 1);
		dcStructField(st, 'd', offsetof(struct A13, m1), 1);
		dcStructField(st, 'l', offsetof(struct A13, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssfpp} */
struct A14 { s m0; s m1; f m2; p m3; p m4; };
void f_cpA14(struct A14 *x, const struct A14 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA14(const struct A14 *x, const struct A14 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA14() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A14), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A14, m0), 1);
		dcStructField(st, 's', offsetof(struct A14, m1), 1);
		dcStructField(st, 'f', offsetof(struct A14, m2), 1);
		dcStructField(st, 'p', offsetof(struct A14, m3), 1);
		dcStructField(st, 'p', offsetof(struct A14, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fipfcpisfjjjc} */
struct A15 { f m0; i m1; p m2; f m3; c m4; p m5; i m6; s m7; f m8; j m9; j m10; j m11; c m12; };
void f_cpA15(struct A15 *x, const struct A15 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA15(const struct A15 *x, const struct A15 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA15() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A15), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A15, m0), 1);
		dcStructField(st, 'i', offsetof(struct A15, m1), 1);
		dcStructField(st, 'p', offsetof(struct A15, m2), 1);
		dcStructField(st, 'f', offsetof(struct A15, m3), 1);
		dcStructField(st, 'c', offsetof(struct A15, m4), 1);
		dcStructField(st, 'p', offsetof(struct A15, m5), 1);
		dcStructField(st, 'i', offsetof(struct A15, m6), 1);
		dcStructField(st, 's', offsetof(struct A15, m7), 1);
		dcStructField(st, 'f', offsetof(struct A15, m8), 1);
		dcStructField(st, 'j', offsetof(struct A15, m9), 1);
		dcStructField(st, 'j', offsetof(struct A15, m10), 1);
		dcStructField(st, 'j', offsetof(struct A15, m11), 1);
		dcStructField(st, 'c', offsetof(struct A15, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jldlpjpdipp} */
struct A16 { j m0; l m1; d m2; l m3; p m4; j m5; p m6; d m7; i m8; p m9; p m10; };
void f_cpA16(struct A16 *x, const struct A16 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA16(const struct A16 *x, const struct A16 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA16() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A16), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A16, m0), 1);
		dcStructField(st, 'l', offsetof(struct A16, m1), 1);
		dcStructField(st, 'd', offsetof(struct A16, m2), 1);
		dcStructField(st, 'l', offsetof(struct A16, m3), 1);
		dcStructField(st, 'p', offsetof(struct A16, m4), 1);
		dcStructField(st, 'j', offsetof(struct A16, m5), 1);
		dcStructField(st, 'p', offsetof(struct A16, m6), 1);
		dcStructField(st, 'd', offsetof(struct A16, m7), 1);
		dcStructField(st, 'i', offsetof(struct A16, m8), 1);
		dcStructField(st, 'p', offsetof(struct A16, m9), 1);
		dcStructField(st, 'p', offsetof(struct A16, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcifdjpcil} */
struct A17 { d m0; c m1; i m2; f m3; d m4; j m5; p m6; c m7; i m8; l m9; };
void f_cpA17(struct A17 *x, const struct A17 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA17(const struct A17 *x, const struct A17 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA17() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A17), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A17, m0), 1);
		dcStructField(st, 'c', offsetof(struct A17, m1), 1);
		dcStructField(st, 'i', offsetof(struct A17, m2), 1);
		dcStructField(st, 'f', offsetof(struct A17, m3), 1);
		dcStructField(st, 'd', offsetof(struct A17, m4), 1);
		dcStructField(st, 'j', offsetof(struct A17, m5), 1);
		dcStructField(st, 'p', offsetof(struct A17, m6), 1);
		dcStructField(st, 'c', offsetof(struct A17, m7), 1);
		dcStructField(st, 'i', offsetof(struct A17, m8), 1);
		dcStructField(st, 'l', offsetof(struct A17, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffj{jldlpjpdipp}cjfllis{dcifdjpcil}j} */
struct A18 { f m0; f m1; j m2; struct A16 m3; c m4; j m5; f m6; l m7; l m8; i m9; s m10; struct A17 m11; j m12; };
void f_cpA18(struct A18 *x, const struct A18 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA16(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA17(&x->m11, &y->m11); x->m12 = y->m12; };
int f_cmpA18(const struct A18 *x, const struct A18 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA16(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA17(&x->m11, &y->m11) && x->m12 == y->m12; };
DCstruct* f_touchdcstA18() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A18), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A18, m0), 1);
		dcStructField(st, 'f', offsetof(struct A18, m1), 1);
		dcStructField(st, 'j', offsetof(struct A18, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A18, m3), 1, f_touchdcstA16());
		dcStructField(st, 'c', offsetof(struct A18, m4), 1);
		dcStructField(st, 'j', offsetof(struct A18, m5), 1);
		dcStructField(st, 'f', offsetof(struct A18, m6), 1);
		dcStructField(st, 'l', offsetof(struct A18, m7), 1);
		dcStructField(st, 'l', offsetof(struct A18, m8), 1);
		dcStructField(st, 'i', offsetof(struct A18, m9), 1);
		dcStructField(st, 's', offsetof(struct A18, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A18, m11), 1, f_touchdcstA17());
		dcStructField(st, 'j', offsetof(struct A18, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sppjffipdp} */
struct A19 { s m0; p m1; p m2; j m3; f m4; f m5; i m6; p m7; d m8; p m9; };
void f_cpA19(struct A19 *x, const struct A19 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA19(const struct A19 *x, const struct A19 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA19() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A19), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A19, m0), 1);
		dcStructField(st, 'p', offsetof(struct A19, m1), 1);
		dcStructField(st, 'p', offsetof(struct A19, m2), 1);
		dcStructField(st, 'j', offsetof(struct A19, m3), 1);
		dcStructField(st, 'f', offsetof(struct A19, m4), 1);
		dcStructField(st, 'f', offsetof(struct A19, m5), 1);
		dcStructField(st, 'i', offsetof(struct A19, m6), 1);
		dcStructField(st, 'p', offsetof(struct A19, m7), 1);
		dcStructField(st, 'd', offsetof(struct A19, m8), 1);
		dcStructField(st, 'p', offsetof(struct A19, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcl} */
struct A20 { j m0; c m1; l m2; };
void f_cpA20(struct A20 *x, const struct A20 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA20(const struct A20 *x, const struct A20 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA20() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A20), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A20, m0), 1);
		dcStructField(st, 'c', offsetof(struct A20, m1), 1);
		dcStructField(st, 'l', offsetof(struct A20, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdcl} */
struct A21 { j m0; d m1; c m2; l m3; };
void f_cpA21(struct A21 *x, const struct A21 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA21(const struct A21 *x, const struct A21 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA21() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A21), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A21, m0), 1);
		dcStructField(st, 'd', offsetof(struct A21, m1), 1);
		dcStructField(st, 'c', offsetof(struct A21, m2), 1);
		dcStructField(st, 'l', offsetof(struct A21, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cddcdclsspc} */
struct A22 { c m0; d m1; d m2; c m3; d m4; c m5; l m6; s m7; s m8; p m9; c m10; };
void f_cpA22(struct A22 *x, const struct A22 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA22(const struct A22 *x, const struct A22 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA22() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A22), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A22, m0), 1);
		dcStructField(st, 'd', offsetof(struct A22, m1), 1);
		dcStructField(st, 'd', offsetof(struct A22, m2), 1);
		dcStructField(st, 'c', offsetof(struct A22, m3), 1);
		dcStructField(st, 'd', offsetof(struct A22, m4), 1);
		dcStructField(st, 'c', offsetof(struct A22, m5), 1);
		dcStructField(st, 'l', offsetof(struct A22, m6), 1);
		dcStructField(st, 's', offsetof(struct A22, m7), 1);
		dcStructField(st, 's', offsetof(struct A22, m8), 1);
		dcStructField(st, 'p', offsetof(struct A22, m9), 1);
		dcStructField(st, 'c', offsetof(struct A22, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plijsdfpdjdcppjcfsf} */
struct A23 { p m0; l m1; i m2; j m3; s m4; d m5; f m6; p m7; d m8; j m9; d m10; c m11; p m12; p m13; j m14; c m15; f m16; s m17; f m18; };
void f_cpA23(struct A23 *x, const struct A23 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA23(const struct A23 *x, const struct A23 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA23() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A23), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A23, m0), 1);
		dcStructField(st, 'l', offsetof(struct A23, m1), 1);
		dcStructField(st, 'i', offsetof(struct A23, m2), 1);
		dcStructField(st, 'j', offsetof(struct A23, m3), 1);
		dcStructField(st, 's', offsetof(struct A23, m4), 1);
		dcStructField(st, 'd', offsetof(struct A23, m5), 1);
		dcStructField(st, 'f', offsetof(struct A23, m6), 1);
		dcStructField(st, 'p', offsetof(struct A23, m7), 1);
		dcStructField(st, 'd', offsetof(struct A23, m8), 1);
		dcStructField(st, 'j', offsetof(struct A23, m9), 1);
		dcStructField(st, 'd', offsetof(struct A23, m10), 1);
		dcStructField(st, 'c', offsetof(struct A23, m11), 1);
		dcStructField(st, 'p', offsetof(struct A23, m12), 1);
		dcStructField(st, 'p', offsetof(struct A23, m13), 1);
		dcStructField(st, 'j', offsetof(struct A23, m14), 1);
		dcStructField(st, 'c', offsetof(struct A23, m15), 1);
		dcStructField(st, 'f', offsetof(struct A23, m16), 1);
		dcStructField(st, 's', offsetof(struct A23, m17), 1);
		dcStructField(st, 'f', offsetof(struct A23, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fllpfdfjlssspc} */
struct A24 { f m0; l m1; l m2; p m3; f m4; d m5; f m6; j m7; l m8; s m9; s m10; s m11; p m12; c m13; };
void f_cpA24(struct A24 *x, const struct A24 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA24(const struct A24 *x, const struct A24 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA24() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A24), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A24, m0), 1);
		dcStructField(st, 'l', offsetof(struct A24, m1), 1);
		dcStructField(st, 'l', offsetof(struct A24, m2), 1);
		dcStructField(st, 'p', offsetof(struct A24, m3), 1);
		dcStructField(st, 'f', offsetof(struct A24, m4), 1);
		dcStructField(st, 'd', offsetof(struct A24, m5), 1);
		dcStructField(st, 'f', offsetof(struct A24, m6), 1);
		dcStructField(st, 'j', offsetof(struct A24, m7), 1);
		dcStructField(st, 'l', offsetof(struct A24, m8), 1);
		dcStructField(st, 's', offsetof(struct A24, m9), 1);
		dcStructField(st, 's', offsetof(struct A24, m10), 1);
		dcStructField(st, 's', offsetof(struct A24, m11), 1);
		dcStructField(st, 'p', offsetof(struct A24, m12), 1);
		dcStructField(st, 'c', offsetof(struct A24, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjjpc} */
struct A25 { f m0; j m1; j m2; p m3; c m4; };
void f_cpA25(struct A25 *x, const struct A25 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA25(const struct A25 *x, const struct A25 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA25() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A25), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A25, m0), 1);
		dcStructField(st, 'j', offsetof(struct A25, m1), 1);
		dcStructField(st, 'j', offsetof(struct A25, m2), 1);
		dcStructField(st, 'p', offsetof(struct A25, m3), 1);
		dcStructField(st, 'c', offsetof(struct A25, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddij} */
struct A26 { d m0; d m1; i m2; j m3; };
void f_cpA26(struct A26 *x, const struct A26 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA26(const struct A26 *x, const struct A26 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA26() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A26), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A26, m0), 1);
		dcStructField(st, 'd', offsetof(struct A26, m1), 1);
		dcStructField(st, 'i', offsetof(struct A26, m2), 1);
		dcStructField(st, 'j', offsetof(struct A26, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {s} */
struct A27 { s m0; };
void f_cpA27(struct A27 *x, const struct A27 *y) { x->m0 = y->m0; };
int f_cmpA27(const struct A27 *x, const struct A27 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA27() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A27), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A27, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {f} */
struct A28 { f m0; };
void f_cpA28(struct A28 *x, const struct A28 *y) { x->m0 = y->m0; };
int f_cmpA28(const struct A28 *x, const struct A28 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA28() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A28), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A28, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {f{f}dpfpi} */
struct A29 { f m0; struct A28 m1; d m2; p m3; f m4; p m5; i m6; };
void f_cpA29(struct A29 *x, const struct A29 *y) { x->m0 = y->m0; f_cpA28(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA29(const struct A29 *x, const struct A29 *y) { return x->m0 == y->m0 && f_cmpA28(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA29() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A29), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A29, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A29, m1), 1, f_touchdcstA28());
		dcStructField(st, 'd', offsetof(struct A29, m2), 1);
		dcStructField(st, 'p', offsetof(struct A29, m3), 1);
		dcStructField(st, 'f', offsetof(struct A29, m4), 1);
		dcStructField(st, 'p', offsetof(struct A29, m5), 1);
		dcStructField(st, 'i', offsetof(struct A29, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpdljldip} */
struct A30 { j m0; p m1; d m2; l m3; j m4; l m5; d m6; i m7; p m8; };
void f_cpA30(struct A30 *x, const struct A30 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA30(const struct A30 *x, const struct A30 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA30() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A30), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A30, m0), 1);
		dcStructField(st, 'p', offsetof(struct A30, m1), 1);
		dcStructField(st, 'd', offsetof(struct A30, m2), 1);
		dcStructField(st, 'l', offsetof(struct A30, m3), 1);
		dcStructField(st, 'j', offsetof(struct A30, m4), 1);
		dcStructField(st, 'l', offsetof(struct A30, m5), 1);
		dcStructField(st, 'd', offsetof(struct A30, m6), 1);
		dcStructField(st, 'i', offsetof(struct A30, m7), 1);
		dcStructField(st, 'p', offsetof(struct A30, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldp} */
struct A31 { l m0; d m1; p m2; };
void f_cpA31(struct A31 *x, const struct A31 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA31(const struct A31 *x, const struct A31 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA31() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A31), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A31, m0), 1);
		dcStructField(st, 'd', offsetof(struct A31, m1), 1);
		dcStructField(st, 'p', offsetof(struct A31, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {splsjcpl{jpdljldip}di{ldp}cldi} */
struct A32 { s m0; p m1; l m2; s m3; j m4; c m5; p m6; l m7; struct A30 m8; d m9; i m10; struct A31 m11; c m12; l m13; d m14; i m15; };
void f_cpA32(struct A32 *x, const struct A32 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA30(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; f_cpA31(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA32(const struct A32 *x, const struct A32 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA30(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA31(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA32() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A32), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A32, m0), 1);
		dcStructField(st, 'p', offsetof(struct A32, m1), 1);
		dcStructField(st, 'l', offsetof(struct A32, m2), 1);
		dcStructField(st, 's', offsetof(struct A32, m3), 1);
		dcStructField(st, 'j', offsetof(struct A32, m4), 1);
		dcStructField(st, 'c', offsetof(struct A32, m5), 1);
		dcStructField(st, 'p', offsetof(struct A32, m6), 1);
		dcStructField(st, 'l', offsetof(struct A32, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A32, m8), 1, f_touchdcstA30());
		dcStructField(st, 'd', offsetof(struct A32, m9), 1);
		dcStructField(st, 'i', offsetof(struct A32, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A32, m11), 1, f_touchdcstA31());
		dcStructField(st, 'c', offsetof(struct A32, m12), 1);
		dcStructField(st, 'l', offsetof(struct A32, m13), 1);
		dcStructField(st, 'd', offsetof(struct A32, m14), 1);
		dcStructField(st, 'i', offsetof(struct A32, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d} */
struct A33 { d m0; };
void f_cpA33(struct A33 *x, const struct A33 *y) { x->m0 = y->m0; };
int f_cmpA33(const struct A33 *x, const struct A33 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA33() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A33), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A33, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{f{f}dpfpi}{splsjcpl{jpdljldip}di{ldp}cldi}sjjs{d}ijdfisc} */
struct A34 { l m0; struct A29 m1; struct A32 m2; s m3; j m4; j m5; s m6; struct A33 m7; i m8; j m9; d m10; f m11; i m12; s m13; c m14; };
void f_cpA34(struct A34 *x, const struct A34 *y) { x->m0 = y->m0; f_cpA29(&x->m1, &y->m1); f_cpA32(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA33(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA34(const struct A34 *x, const struct A34 *y) { return x->m0 == y->m0 && f_cmpA29(&x->m1, &y->m1) && f_cmpA32(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA33(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA34() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A34), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A34, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A34, m1), 1, f_touchdcstA29());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A34, m2), 1, f_touchdcstA32());
		dcStructField(st, 's', offsetof(struct A34, m3), 1);
		dcStructField(st, 'j', offsetof(struct A34, m4), 1);
		dcStructField(st, 'j', offsetof(struct A34, m5), 1);
		dcStructField(st, 's', offsetof(struct A34, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A34, m7), 1, f_touchdcstA33());
		dcStructField(st, 'i', offsetof(struct A34, m8), 1);
		dcStructField(st, 'j', offsetof(struct A34, m9), 1);
		dcStructField(st, 'd', offsetof(struct A34, m10), 1);
		dcStructField(st, 'f', offsetof(struct A34, m11), 1);
		dcStructField(st, 'i', offsetof(struct A34, m12), 1);
		dcStructField(st, 's', offsetof(struct A34, m13), 1);
		dcStructField(st, 'c', offsetof(struct A34, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sijpdfcfs} */
struct A35 { s m0; i m1; j m2; p m3; d m4; f m5; c m6; f m7; s m8; };
void f_cpA35(struct A35 *x, const struct A35 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA35(const struct A35 *x, const struct A35 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA35() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A35), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A35, m0), 1);
		dcStructField(st, 'i', offsetof(struct A35, m1), 1);
		dcStructField(st, 'j', offsetof(struct A35, m2), 1);
		dcStructField(st, 'p', offsetof(struct A35, m3), 1);
		dcStructField(st, 'd', offsetof(struct A35, m4), 1);
		dcStructField(st, 'f', offsetof(struct A35, m5), 1);
		dcStructField(st, 'c', offsetof(struct A35, m6), 1);
		dcStructField(st, 'f', offsetof(struct A35, m7), 1);
		dcStructField(st, 's', offsetof(struct A35, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psc{sijpdfcfs}pp} */
struct A36 { p m0; s m1; c m2; struct A35 m3; p m4; p m5; };
void f_cpA36(struct A36 *x, const struct A36 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA35(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA36(const struct A36 *x, const struct A36 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA35(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA36() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A36), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A36, m0), 1);
		dcStructField(st, 's', offsetof(struct A36, m1), 1);
		dcStructField(st, 'c', offsetof(struct A36, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A36, m3), 1, f_touchdcstA35());
		dcStructField(st, 'p', offsetof(struct A36, m4), 1);
		dcStructField(st, 'p', offsetof(struct A36, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdljjl} */
struct A37 { f m0; d m1; l m2; j m3; j m4; l m5; };
void f_cpA37(struct A37 *x, const struct A37 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA37(const struct A37 *x, const struct A37 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA37() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A37), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A37, m0), 1);
		dcStructField(st, 'd', offsetof(struct A37, m1), 1);
		dcStructField(st, 'l', offsetof(struct A37, m2), 1);
		dcStructField(st, 'j', offsetof(struct A37, m3), 1);
		dcStructField(st, 'j', offsetof(struct A37, m4), 1);
		dcStructField(st, 'l', offsetof(struct A37, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fdljjl}pi} */
struct A38 { struct A37 m0; p m1; i m2; };
void f_cpA38(struct A38 *x, const struct A38 *y) { f_cpA37(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA38(const struct A38 *x, const struct A38 *y) { return f_cmpA37(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA38() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A38), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A38, m0), 1, f_touchdcstA37());
		dcStructField(st, 'p', offsetof(struct A38, m1), 1);
		dcStructField(st, 'i', offsetof(struct A38, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljs} */
struct A39 { l m0; j m1; s m2; };
void f_cpA39(struct A39 *x, const struct A39 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA39(const struct A39 *x, const struct A39 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA39() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A39), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A39, m0), 1);
		dcStructField(st, 'j', offsetof(struct A39, m1), 1);
		dcStructField(st, 's', offsetof(struct A39, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spldcilisj} */
struct A40 { s m0; p m1; l m2; d m3; c m4; i m5; l m6; i m7; s m8; j m9; };
void f_cpA40(struct A40 *x, const struct A40 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA40(const struct A40 *x, const struct A40 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA40() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A40), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A40, m0), 1);
		dcStructField(st, 'p', offsetof(struct A40, m1), 1);
		dcStructField(st, 'l', offsetof(struct A40, m2), 1);
		dcStructField(st, 'd', offsetof(struct A40, m3), 1);
		dcStructField(st, 'c', offsetof(struct A40, m4), 1);
		dcStructField(st, 'i', offsetof(struct A40, m5), 1);
		dcStructField(st, 'l', offsetof(struct A40, m6), 1);
		dcStructField(st, 'i', offsetof(struct A40, m7), 1);
		dcStructField(st, 's', offsetof(struct A40, m8), 1);
		dcStructField(st, 'j', offsetof(struct A40, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{ljs}cjf{spldcilisj}} */
struct A41 { struct A39 m0; c m1; j m2; f m3; struct A40 m4; };
void f_cpA41(struct A41 *x, const struct A41 *y) { f_cpA39(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA40(&x->m4, &y->m4); };
int f_cmpA41(const struct A41 *x, const struct A41 *y) { return f_cmpA39(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA40(&x->m4, &y->m4); };
DCstruct* f_touchdcstA41() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A41), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A41, m0), 1, f_touchdcstA39());
		dcStructField(st, 'c', offsetof(struct A41, m1), 1);
		dcStructField(st, 'j', offsetof(struct A41, m2), 1);
		dcStructField(st, 'f', offsetof(struct A41, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A41, m4), 1, f_touchdcstA40());
		dcCloseStruct(st);
	}
	return st;
};
/* {psjcjdsjp} */
struct A42 { p m0; s m1; j m2; c m3; j m4; d m5; s m6; j m7; p m8; };
void f_cpA42(struct A42 *x, const struct A42 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA42(const struct A42 *x, const struct A42 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA42() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A42), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A42, m0), 1);
		dcStructField(st, 's', offsetof(struct A42, m1), 1);
		dcStructField(st, 'j', offsetof(struct A42, m2), 1);
		dcStructField(st, 'c', offsetof(struct A42, m3), 1);
		dcStructField(st, 'j', offsetof(struct A42, m4), 1);
		dcStructField(st, 'd', offsetof(struct A42, m5), 1);
		dcStructField(st, 's', offsetof(struct A42, m6), 1);
		dcStructField(st, 'j', offsetof(struct A42, m7), 1);
		dcStructField(st, 'p', offsetof(struct A42, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijii{psjcjdsjp}ddpsppl} */
struct A43 { i m0; j m1; i m2; i m3; struct A42 m4; d m5; d m6; p m7; s m8; p m9; p m10; l m11; };
void f_cpA43(struct A43 *x, const struct A43 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA42(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA43(const struct A43 *x, const struct A43 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA42(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA43() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A43), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A43, m0), 1);
		dcStructField(st, 'j', offsetof(struct A43, m1), 1);
		dcStructField(st, 'i', offsetof(struct A43, m2), 1);
		dcStructField(st, 'i', offsetof(struct A43, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A43, m4), 1, f_touchdcstA42());
		dcStructField(st, 'd', offsetof(struct A43, m5), 1);
		dcStructField(st, 'd', offsetof(struct A43, m6), 1);
		dcStructField(st, 'p', offsetof(struct A43, m7), 1);
		dcStructField(st, 's', offsetof(struct A43, m8), 1);
		dcStructField(st, 'p', offsetof(struct A43, m9), 1);
		dcStructField(st, 'p', offsetof(struct A43, m10), 1);
		dcStructField(st, 'l', offsetof(struct A43, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjdlscdlip} */
struct A44 { p m0; j m1; d m2; l m3; s m4; c m5; d m6; l m7; i m8; p m9; };
void f_cpA44(struct A44 *x, const struct A44 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA44(const struct A44 *x, const struct A44 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA44() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A44), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A44, m0), 1);
		dcStructField(st, 'j', offsetof(struct A44, m1), 1);
		dcStructField(st, 'd', offsetof(struct A44, m2), 1);
		dcStructField(st, 'l', offsetof(struct A44, m3), 1);
		dcStructField(st, 's', offsetof(struct A44, m4), 1);
		dcStructField(st, 'c', offsetof(struct A44, m5), 1);
		dcStructField(st, 'd', offsetof(struct A44, m6), 1);
		dcStructField(st, 'l', offsetof(struct A44, m7), 1);
		dcStructField(st, 'i', offsetof(struct A44, m8), 1);
		dcStructField(st, 'p', offsetof(struct A44, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdlsslcfds} */
struct A45 { f m0; d m1; l m2; s m3; s m4; l m5; c m6; f m7; d m8; s m9; };
void f_cpA45(struct A45 *x, const struct A45 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA45(const struct A45 *x, const struct A45 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA45() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A45), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A45, m0), 1);
		dcStructField(st, 'd', offsetof(struct A45, m1), 1);
		dcStructField(st, 'l', offsetof(struct A45, m2), 1);
		dcStructField(st, 's', offsetof(struct A45, m3), 1);
		dcStructField(st, 's', offsetof(struct A45, m4), 1);
		dcStructField(st, 'l', offsetof(struct A45, m5), 1);
		dcStructField(st, 'c', offsetof(struct A45, m6), 1);
		dcStructField(st, 'f', offsetof(struct A45, m7), 1);
		dcStructField(st, 'd', offsetof(struct A45, m8), 1);
		dcStructField(st, 's', offsetof(struct A45, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jsljpf} */
struct A46 { j m0; s m1; l m2; j m3; p m4; f m5; };
void f_cpA46(struct A46 *x, const struct A46 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA46(const struct A46 *x, const struct A46 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA46() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A46), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A46, m0), 1);
		dcStructField(st, 's', offsetof(struct A46, m1), 1);
		dcStructField(st, 'l', offsetof(struct A46, m2), 1);
		dcStructField(st, 'j', offsetof(struct A46, m3), 1);
		dcStructField(st, 'p', offsetof(struct A46, m4), 1);
		dcStructField(st, 'f', offsetof(struct A46, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spl} */
struct A47 { s m0; p m1; l m2; };
void f_cpA47(struct A47 *x, const struct A47 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA47(const struct A47 *x, const struct A47 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA47() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A47), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A47, m0), 1);
		dcStructField(st, 'p', offsetof(struct A47, m1), 1);
		dcStructField(st, 'l', offsetof(struct A47, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slfppcc} */
struct A48 { s m0; l m1; f m2; p m3; p m4; c m5; c m6; };
void f_cpA48(struct A48 *x, const struct A48 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA48(const struct A48 *x, const struct A48 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA48() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A48), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A48, m0), 1);
		dcStructField(st, 'l', offsetof(struct A48, m1), 1);
		dcStructField(st, 'f', offsetof(struct A48, m2), 1);
		dcStructField(st, 'p', offsetof(struct A48, m3), 1);
		dcStructField(st, 'p', offsetof(struct A48, m4), 1);
		dcStructField(st, 'c', offsetof(struct A48, m5), 1);
		dcStructField(st, 'c', offsetof(struct A48, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scp{fdlsslcfds}{jsljpf}fdpdpf{spl}fcjddsp{slfppcc}p} */
struct A49 { s m0; c m1; p m2; struct A45 m3; struct A46 m4; f m5; d m6; p m7; d m8; p m9; f m10; struct A47 m11; f m12; c m13; j m14; d m15; d m16; s m17; p m18; struct A48 m19; p m20; };
void f_cpA49(struct A49 *x, const struct A49 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA45(&x->m3, &y->m3); f_cpA46(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA47(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA48(&x->m19, &y->m19); x->m20 = y->m20; };
int f_cmpA49(const struct A49 *x, const struct A49 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA45(&x->m3, &y->m3) && f_cmpA46(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA47(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA48(&x->m19, &y->m19) && x->m20 == y->m20; };
DCstruct* f_touchdcstA49() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A49), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A49, m0), 1);
		dcStructField(st, 'c', offsetof(struct A49, m1), 1);
		dcStructField(st, 'p', offsetof(struct A49, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A49, m3), 1, f_touchdcstA45());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A49, m4), 1, f_touchdcstA46());
		dcStructField(st, 'f', offsetof(struct A49, m5), 1);
		dcStructField(st, 'd', offsetof(struct A49, m6), 1);
		dcStructField(st, 'p', offsetof(struct A49, m7), 1);
		dcStructField(st, 'd', offsetof(struct A49, m8), 1);
		dcStructField(st, 'p', offsetof(struct A49, m9), 1);
		dcStructField(st, 'f', offsetof(struct A49, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A49, m11), 1, f_touchdcstA47());
		dcStructField(st, 'f', offsetof(struct A49, m12), 1);
		dcStructField(st, 'c', offsetof(struct A49, m13), 1);
		dcStructField(st, 'j', offsetof(struct A49, m14), 1);
		dcStructField(st, 'd', offsetof(struct A49, m15), 1);
		dcStructField(st, 'd', offsetof(struct A49, m16), 1);
		dcStructField(st, 's', offsetof(struct A49, m17), 1);
		dcStructField(st, 'p', offsetof(struct A49, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A49, m19), 1, f_touchdcstA48());
		dcStructField(st, 'p', offsetof(struct A49, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ss} */
struct A50 { s m0; s m1; };
void f_cpA50(struct A50 *x, const struct A50 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA50(const struct A50 *x, const struct A50 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA50() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A50), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A50, m0), 1);
		dcStructField(st, 's', offsetof(struct A50, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {di} */
struct A51 { d m0; i m1; };
void f_cpA51(struct A51 *x, const struct A51 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA51(const struct A51 *x, const struct A51 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA51() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A51), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A51, m0), 1);
		dcStructField(st, 'i', offsetof(struct A51, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icscispid{psc{sijpdfcfs}pp}lpildid{d}pfldfi{{fdljjl}pi}c{{ljs}cjf{spldcilisj}}{ijii{psjcjdsjp}ddpsppl}{pjdlscdlip}jljldcps{scp{fdlsslcfds}{jsljpf}fdpdpf{spl}fcjddsp{slfppcc}p}pipj{ss}df{di}s} */
struct A52 { i m0; c m1; s m2; c m3; i m4; s m5; p m6; i m7; d m8; struct A36 m9; l m10; p m11; i m12; l m13; d m14; i m15; d m16; struct A33 m17; p m18; f m19; l m20; d m21; f m22; i m23; struct A38 m24; c m25; struct A41 m26; struct A43 m27; struct A44 m28; j m29; l m30; j m31; l m32; d m33; c m34; p m35; s m36; struct A49 m37; p m38; i m39; p m40; j m41; struct A50 m42; d m43; f m44; struct A51 m45; s m46; };
void f_cpA52(struct A52 *x, const struct A52 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA36(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA33(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; f_cpA38(&x->m24, &y->m24); x->m25 = y->m25; f_cpA41(&x->m26, &y->m26); f_cpA43(&x->m27, &y->m27); f_cpA44(&x->m28, &y->m28); x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; f_cpA49(&x->m37, &y->m37); x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; f_cpA50(&x->m42, &y->m42); x->m43 = y->m43; x->m44 = y->m44; f_cpA51(&x->m45, &y->m45); x->m46 = y->m46; };
int f_cmpA52(const struct A52 *x, const struct A52 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA36(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA33(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && f_cmpA38(&x->m24, &y->m24) && x->m25 == y->m25 && f_cmpA41(&x->m26, &y->m26) && f_cmpA43(&x->m27, &y->m27) && f_cmpA44(&x->m28, &y->m28) && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && f_cmpA49(&x->m37, &y->m37) && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && f_cmpA50(&x->m42, &y->m42) && x->m43 == y->m43 && x->m44 == y->m44 && f_cmpA51(&x->m45, &y->m45) && x->m46 == y->m46; };
DCstruct* f_touchdcstA52() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(47, sizeof(struct A52), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A52, m0), 1);
		dcStructField(st, 'c', offsetof(struct A52, m1), 1);
		dcStructField(st, 's', offsetof(struct A52, m2), 1);
		dcStructField(st, 'c', offsetof(struct A52, m3), 1);
		dcStructField(st, 'i', offsetof(struct A52, m4), 1);
		dcStructField(st, 's', offsetof(struct A52, m5), 1);
		dcStructField(st, 'p', offsetof(struct A52, m6), 1);
		dcStructField(st, 'i', offsetof(struct A52, m7), 1);
		dcStructField(st, 'd', offsetof(struct A52, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m9), 1, f_touchdcstA36());
		dcStructField(st, 'l', offsetof(struct A52, m10), 1);
		dcStructField(st, 'p', offsetof(struct A52, m11), 1);
		dcStructField(st, 'i', offsetof(struct A52, m12), 1);
		dcStructField(st, 'l', offsetof(struct A52, m13), 1);
		dcStructField(st, 'd', offsetof(struct A52, m14), 1);
		dcStructField(st, 'i', offsetof(struct A52, m15), 1);
		dcStructField(st, 'd', offsetof(struct A52, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m17), 1, f_touchdcstA33());
		dcStructField(st, 'p', offsetof(struct A52, m18), 1);
		dcStructField(st, 'f', offsetof(struct A52, m19), 1);
		dcStructField(st, 'l', offsetof(struct A52, m20), 1);
		dcStructField(st, 'd', offsetof(struct A52, m21), 1);
		dcStructField(st, 'f', offsetof(struct A52, m22), 1);
		dcStructField(st, 'i', offsetof(struct A52, m23), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m24), 1, f_touchdcstA38());
		dcStructField(st, 'c', offsetof(struct A52, m25), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m26), 1, f_touchdcstA41());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m27), 1, f_touchdcstA43());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m28), 1, f_touchdcstA44());
		dcStructField(st, 'j', offsetof(struct A52, m29), 1);
		dcStructField(st, 'l', offsetof(struct A52, m30), 1);
		dcStructField(st, 'j', offsetof(struct A52, m31), 1);
		dcStructField(st, 'l', offsetof(struct A52, m32), 1);
		dcStructField(st, 'd', offsetof(struct A52, m33), 1);
		dcStructField(st, 'c', offsetof(struct A52, m34), 1);
		dcStructField(st, 'p', offsetof(struct A52, m35), 1);
		dcStructField(st, 's', offsetof(struct A52, m36), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m37), 1, f_touchdcstA49());
		dcStructField(st, 'p', offsetof(struct A52, m38), 1);
		dcStructField(st, 'i', offsetof(struct A52, m39), 1);
		dcStructField(st, 'p', offsetof(struct A52, m40), 1);
		dcStructField(st, 'j', offsetof(struct A52, m41), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m42), 1, f_touchdcstA50());
		dcStructField(st, 'd', offsetof(struct A52, m43), 1);
		dcStructField(st, 'f', offsetof(struct A52, m44), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A52, m45), 1, f_touchdcstA51());
		dcStructField(st, 's', offsetof(struct A52, m46), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdpflilpislldsiijcpiidlcifsp} */
struct A53 { p m0; d m1; p m2; f m3; l m4; i m5; l m6; p m7; i m8; s m9; l m10; l m11; d m12; s m13; i m14; i m15; j m16; c m17; p m18; i m19; i m20; d m21; l m22; c m23; i m24; f m25; s m26; p m27; };
void f_cpA53(struct A53 *x, const struct A53 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; };
int f_cmpA53(const struct A53 *x, const struct A53 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27; };
DCstruct* f_touchdcstA53() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(28, sizeof(struct A53), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A53, m0), 1);
		dcStructField(st, 'd', offsetof(struct A53, m1), 1);
		dcStructField(st, 'p', offsetof(struct A53, m2), 1);
		dcStructField(st, 'f', offsetof(struct A53, m3), 1);
		dcStructField(st, 'l', offsetof(struct A53, m4), 1);
		dcStructField(st, 'i', offsetof(struct A53, m5), 1);
		dcStructField(st, 'l', offsetof(struct A53, m6), 1);
		dcStructField(st, 'p', offsetof(struct A53, m7), 1);
		dcStructField(st, 'i', offsetof(struct A53, m8), 1);
		dcStructField(st, 's', offsetof(struct A53, m9), 1);
		dcStructField(st, 'l', offsetof(struct A53, m10), 1);
		dcStructField(st, 'l', offsetof(struct A53, m11), 1);
		dcStructField(st, 'd', offsetof(struct A53, m12), 1);
		dcStructField(st, 's', offsetof(struct A53, m13), 1);
		dcStructField(st, 'i', offsetof(struct A53, m14), 1);
		dcStructField(st, 'i', offsetof(struct A53, m15), 1);
		dcStructField(st, 'j', offsetof(struct A53, m16), 1);
		dcStructField(st, 'c', offsetof(struct A53, m17), 1);
		dcStructField(st, 'p', offsetof(struct A53, m18), 1);
		dcStructField(st, 'i', offsetof(struct A53, m19), 1);
		dcStructField(st, 'i', offsetof(struct A53, m20), 1);
		dcStructField(st, 'd', offsetof(struct A53, m21), 1);
		dcStructField(st, 'l', offsetof(struct A53, m22), 1);
		dcStructField(st, 'c', offsetof(struct A53, m23), 1);
		dcStructField(st, 'i', offsetof(struct A53, m24), 1);
		dcStructField(st, 'f', offsetof(struct A53, m25), 1);
		dcStructField(st, 's', offsetof(struct A53, m26), 1);
		dcStructField(st, 'p', offsetof(struct A53, m27), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djsidssj} */
struct A54 { d m0; j m1; s m2; i m3; d m4; s m5; s m6; j m7; };
void f_cpA54(struct A54 *x, const struct A54 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA54(const struct A54 *x, const struct A54 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA54() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A54), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A54, m0), 1);
		dcStructField(st, 'j', offsetof(struct A54, m1), 1);
		dcStructField(st, 's', offsetof(struct A54, m2), 1);
		dcStructField(st, 'i', offsetof(struct A54, m3), 1);
		dcStructField(st, 'd', offsetof(struct A54, m4), 1);
		dcStructField(st, 's', offsetof(struct A54, m5), 1);
		dcStructField(st, 's', offsetof(struct A54, m6), 1);
		dcStructField(st, 'j', offsetof(struct A54, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjsicd} */
struct A55 { p m0; j m1; s m2; i m3; c m4; d m5; };
void f_cpA55(struct A55 *x, const struct A55 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA55(const struct A55 *x, const struct A55 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA55() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A55), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A55, m0), 1);
		dcStructField(st, 'j', offsetof(struct A55, m1), 1);
		dcStructField(st, 's', offsetof(struct A55, m2), 1);
		dcStructField(st, 'i', offsetof(struct A55, m3), 1);
		dcStructField(st, 'c', offsetof(struct A55, m4), 1);
		dcStructField(st, 'd', offsetof(struct A55, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjs} */
struct A56 { j m0; j m1; s m2; };
void f_cpA56(struct A56 *x, const struct A56 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA56(const struct A56 *x, const struct A56 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA56() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A56), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A56, m0), 1);
		dcStructField(st, 'j', offsetof(struct A56, m1), 1);
		dcStructField(st, 's', offsetof(struct A56, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cljsff} */
struct A57 { c m0; l m1; j m2; s m3; f m4; f m5; };
void f_cpA57(struct A57 *x, const struct A57 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA57(const struct A57 *x, const struct A57 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA57() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A57), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A57, m0), 1);
		dcStructField(st, 'l', offsetof(struct A57, m1), 1);
		dcStructField(st, 'j', offsetof(struct A57, m2), 1);
		dcStructField(st, 's', offsetof(struct A57, m3), 1);
		dcStructField(st, 'f', offsetof(struct A57, m4), 1);
		dcStructField(st, 'f', offsetof(struct A57, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjldjfi} */
struct A58 { s m0; j m1; l m2; d m3; j m4; f m5; i m6; };
void f_cpA58(struct A58 *x, const struct A58 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA58(const struct A58 *x, const struct A58 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA58() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A58), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A58, m0), 1);
		dcStructField(st, 'j', offsetof(struct A58, m1), 1);
		dcStructField(st, 'l', offsetof(struct A58, m2), 1);
		dcStructField(st, 'd', offsetof(struct A58, m3), 1);
		dcStructField(st, 'j', offsetof(struct A58, m4), 1);
		dcStructField(st, 'f', offsetof(struct A58, m5), 1);
		dcStructField(st, 'i', offsetof(struct A58, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfjpjf} */
struct A59 { p m0; f m1; j m2; p m3; j m4; f m5; };
void f_cpA59(struct A59 *x, const struct A59 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA59(const struct A59 *x, const struct A59 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA59() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A59), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A59, m0), 1);
		dcStructField(st, 'f', offsetof(struct A59, m1), 1);
		dcStructField(st, 'j', offsetof(struct A59, m2), 1);
		dcStructField(st, 'p', offsetof(struct A59, m3), 1);
		dcStructField(st, 'j', offsetof(struct A59, m4), 1);
		dcStructField(st, 'f', offsetof(struct A59, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{pfjpjf}sdjjdjf} */
struct A60 { l m0; struct A59 m1; s m2; d m3; j m4; j m5; d m6; j m7; f m8; };
void f_cpA60(struct A60 *x, const struct A60 *y) { x->m0 = y->m0; f_cpA59(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA60(const struct A60 *x, const struct A60 *y) { return x->m0 == y->m0 && f_cmpA59(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA60() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A60), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A60, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A60, m1), 1, f_touchdcstA59());
		dcStructField(st, 's', offsetof(struct A60, m2), 1);
		dcStructField(st, 'd', offsetof(struct A60, m3), 1);
		dcStructField(st, 'j', offsetof(struct A60, m4), 1);
		dcStructField(st, 'j', offsetof(struct A60, m5), 1);
		dcStructField(st, 'd', offsetof(struct A60, m6), 1);
		dcStructField(st, 'j', offsetof(struct A60, m7), 1);
		dcStructField(st, 'f', offsetof(struct A60, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldpdils} */
struct A61 { l m0; d m1; p m2; d m3; i m4; l m5; s m6; };
void f_cpA61(struct A61 *x, const struct A61 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA61(const struct A61 *x, const struct A61 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA61() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A61), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A61, m0), 1);
		dcStructField(st, 'd', offsetof(struct A61, m1), 1);
		dcStructField(st, 'p', offsetof(struct A61, m2), 1);
		dcStructField(st, 'd', offsetof(struct A61, m3), 1);
		dcStructField(st, 'i', offsetof(struct A61, m4), 1);
		dcStructField(st, 'l', offsetof(struct A61, m5), 1);
		dcStructField(st, 's', offsetof(struct A61, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdlcpdjlps{ldpdils}ipjc} */
struct A62 { c m0; d m1; l m2; c m3; p m4; d m5; j m6; l m7; p m8; s m9; struct A61 m10; i m11; p m12; j m13; c m14; };
void f_cpA62(struct A62 *x, const struct A62 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA61(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA62(const struct A62 *x, const struct A62 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA61(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA62() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A62), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A62, m0), 1);
		dcStructField(st, 'd', offsetof(struct A62, m1), 1);
		dcStructField(st, 'l', offsetof(struct A62, m2), 1);
		dcStructField(st, 'c', offsetof(struct A62, m3), 1);
		dcStructField(st, 'p', offsetof(struct A62, m4), 1);
		dcStructField(st, 'd', offsetof(struct A62, m5), 1);
		dcStructField(st, 'j', offsetof(struct A62, m6), 1);
		dcStructField(st, 'l', offsetof(struct A62, m7), 1);
		dcStructField(st, 'p', offsetof(struct A62, m8), 1);
		dcStructField(st, 's', offsetof(struct A62, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A62, m10), 1, f_touchdcstA61());
		dcStructField(st, 'i', offsetof(struct A62, m11), 1);
		dcStructField(st, 'p', offsetof(struct A62, m12), 1);
		dcStructField(st, 'j', offsetof(struct A62, m13), 1);
		dcStructField(st, 'c', offsetof(struct A62, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{l{pfjpjf}sdjjdjf}fds{cdlcpdjlps{ldpdils}ipjc}c} */
struct A63 { struct A60 m0; f m1; d m2; s m3; struct A62 m4; c m5; };
void f_cpA63(struct A63 *x, const struct A63 *y) { f_cpA60(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA62(&x->m4, &y->m4); x->m5 = y->m5; };
int f_cmpA63(const struct A63 *x, const struct A63 *y) { return f_cmpA60(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA62(&x->m4, &y->m4) && x->m5 == y->m5; };
DCstruct* f_touchdcstA63() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A63), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A63, m0), 1, f_touchdcstA60());
		dcStructField(st, 'f', offsetof(struct A63, m1), 1);
		dcStructField(st, 'd', offsetof(struct A63, m2), 1);
		dcStructField(st, 's', offsetof(struct A63, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A63, m4), 1, f_touchdcstA62());
		dcStructField(st, 'c', offsetof(struct A63, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjdpcijjcdlcccls} */
struct A64 { s m0; j m1; d m2; p m3; c m4; i m5; j m6; j m7; c m8; d m9; l m10; c m11; c m12; c m13; l m14; s m15; };
void f_cpA64(struct A64 *x, const struct A64 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA64(const struct A64 *x, const struct A64 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA64() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A64), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A64, m0), 1);
		dcStructField(st, 'j', offsetof(struct A64, m1), 1);
		dcStructField(st, 'd', offsetof(struct A64, m2), 1);
		dcStructField(st, 'p', offsetof(struct A64, m3), 1);
		dcStructField(st, 'c', offsetof(struct A64, m4), 1);
		dcStructField(st, 'i', offsetof(struct A64, m5), 1);
		dcStructField(st, 'j', offsetof(struct A64, m6), 1);
		dcStructField(st, 'j', offsetof(struct A64, m7), 1);
		dcStructField(st, 'c', offsetof(struct A64, m8), 1);
		dcStructField(st, 'd', offsetof(struct A64, m9), 1);
		dcStructField(st, 'l', offsetof(struct A64, m10), 1);
		dcStructField(st, 'c', offsetof(struct A64, m11), 1);
		dcStructField(st, 'c', offsetof(struct A64, m12), 1);
		dcStructField(st, 'c', offsetof(struct A64, m13), 1);
		dcStructField(st, 'l', offsetof(struct A64, m14), 1);
		dcStructField(st, 's', offsetof(struct A64, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lps{sjdpcijjcdlcccls}lcpis} */
struct A65 { l m0; p m1; s m2; struct A64 m3; l m4; c m5; p m6; i m7; s m8; };
void f_cpA65(struct A65 *x, const struct A65 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA64(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA65(const struct A65 *x, const struct A65 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA64(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA65() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A65), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A65, m0), 1);
		dcStructField(st, 'p', offsetof(struct A65, m1), 1);
		dcStructField(st, 's', offsetof(struct A65, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A65, m3), 1, f_touchdcstA64());
		dcStructField(st, 'l', offsetof(struct A65, m4), 1);
		dcStructField(st, 'c', offsetof(struct A65, m5), 1);
		dcStructField(st, 'p', offsetof(struct A65, m6), 1);
		dcStructField(st, 'i', offsetof(struct A65, m7), 1);
		dcStructField(st, 's', offsetof(struct A65, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjidliifp} */
struct A66 { j m0; j m1; i m2; d m3; l m4; i m5; i m6; f m7; p m8; };
void f_cpA66(struct A66 *x, const struct A66 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA66(const struct A66 *x, const struct A66 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA66() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A66), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A66, m0), 1);
		dcStructField(st, 'j', offsetof(struct A66, m1), 1);
		dcStructField(st, 'i', offsetof(struct A66, m2), 1);
		dcStructField(st, 'd', offsetof(struct A66, m3), 1);
		dcStructField(st, 'l', offsetof(struct A66, m4), 1);
		dcStructField(st, 'i', offsetof(struct A66, m5), 1);
		dcStructField(st, 'i', offsetof(struct A66, m6), 1);
		dcStructField(st, 'f', offsetof(struct A66, m7), 1);
		dcStructField(st, 'p', offsetof(struct A66, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdlppjc{jjidliifp}} */
struct A67 { p m0; d m1; l m2; p m3; p m4; j m5; c m6; struct A66 m7; };
void f_cpA67(struct A67 *x, const struct A67 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA66(&x->m7, &y->m7); };
int f_cmpA67(const struct A67 *x, const struct A67 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA66(&x->m7, &y->m7); };
DCstruct* f_touchdcstA67() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A67), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A67, m0), 1);
		dcStructField(st, 'd', offsetof(struct A67, m1), 1);
		dcStructField(st, 'l', offsetof(struct A67, m2), 1);
		dcStructField(st, 'p', offsetof(struct A67, m3), 1);
		dcStructField(st, 'p', offsetof(struct A67, m4), 1);
		dcStructField(st, 'j', offsetof(struct A67, m5), 1);
		dcStructField(st, 'c', offsetof(struct A67, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A67, m7), 1, f_touchdcstA66());
		dcCloseStruct(st);
	}
	return st;
};
/* {ipijpidsp} */
struct A68 { i m0; p m1; i m2; j m3; p m4; i m5; d m6; s m7; p m8; };
void f_cpA68(struct A68 *x, const struct A68 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA68(const struct A68 *x, const struct A68 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA68() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A68), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A68, m0), 1);
		dcStructField(st, 'p', offsetof(struct A68, m1), 1);
		dcStructField(st, 'i', offsetof(struct A68, m2), 1);
		dcStructField(st, 'j', offsetof(struct A68, m3), 1);
		dcStructField(st, 'p', offsetof(struct A68, m4), 1);
		dcStructField(st, 'i', offsetof(struct A68, m5), 1);
		dcStructField(st, 'd', offsetof(struct A68, m6), 1);
		dcStructField(st, 's', offsetof(struct A68, m7), 1);
		dcStructField(st, 'p', offsetof(struct A68, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plcipffp{ipijpidsp}jjf} */
struct A69 { p m0; l m1; c m2; i m3; p m4; f m5; f m6; p m7; struct A68 m8; j m9; j m10; f m11; };
void f_cpA69(struct A69 *x, const struct A69 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA68(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA69(const struct A69 *x, const struct A69 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA68(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA69() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A69), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A69, m0), 1);
		dcStructField(st, 'l', offsetof(struct A69, m1), 1);
		dcStructField(st, 'c', offsetof(struct A69, m2), 1);
		dcStructField(st, 'i', offsetof(struct A69, m3), 1);
		dcStructField(st, 'p', offsetof(struct A69, m4), 1);
		dcStructField(st, 'f', offsetof(struct A69, m5), 1);
		dcStructField(st, 'f', offsetof(struct A69, m6), 1);
		dcStructField(st, 'p', offsetof(struct A69, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A69, m8), 1, f_touchdcstA68());
		dcStructField(st, 'j', offsetof(struct A69, m9), 1);
		dcStructField(st, 'j', offsetof(struct A69, m10), 1);
		dcStructField(st, 'f', offsetof(struct A69, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijlclc} */
struct A70 { i m0; j m1; l m2; c m3; l m4; c m5; };
void f_cpA70(struct A70 *x, const struct A70 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA70(const struct A70 *x, const struct A70 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA70() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A70), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A70, m0), 1);
		dcStructField(st, 'j', offsetof(struct A70, m1), 1);
		dcStructField(st, 'l', offsetof(struct A70, m2), 1);
		dcStructField(st, 'c', offsetof(struct A70, m3), 1);
		dcStructField(st, 'l', offsetof(struct A70, m4), 1);
		dcStructField(st, 'c', offsetof(struct A70, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fd} */
struct A71 { f m0; d m1; };
void f_cpA71(struct A71 *x, const struct A71 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA71(const struct A71 *x, const struct A71 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA71() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A71), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A71, m0), 1);
		dcStructField(st, 'd', offsetof(struct A71, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlfjpsp} */
struct A72 { j m0; l m1; f m2; j m3; p m4; s m5; p m6; };
void f_cpA72(struct A72 *x, const struct A72 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA72(const struct A72 *x, const struct A72 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA72() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A72), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A72, m0), 1);
		dcStructField(st, 'l', offsetof(struct A72, m1), 1);
		dcStructField(st, 'f', offsetof(struct A72, m2), 1);
		dcStructField(st, 'j', offsetof(struct A72, m3), 1);
		dcStructField(st, 'p', offsetof(struct A72, m4), 1);
		dcStructField(st, 's', offsetof(struct A72, m5), 1);
		dcStructField(st, 'p', offsetof(struct A72, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d{jlfjpsp}ppjfpicsccj} */
struct A73 { d m0; struct A72 m1; p m2; p m3; j m4; f m5; p m6; i m7; c m8; s m9; c m10; c m11; j m12; };
void f_cpA73(struct A73 *x, const struct A73 *y) { x->m0 = y->m0; f_cpA72(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA73(const struct A73 *x, const struct A73 *y) { return x->m0 == y->m0 && f_cmpA72(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA73() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A73), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A73, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A73, m1), 1, f_touchdcstA72());
		dcStructField(st, 'p', offsetof(struct A73, m2), 1);
		dcStructField(st, 'p', offsetof(struct A73, m3), 1);
		dcStructField(st, 'j', offsetof(struct A73, m4), 1);
		dcStructField(st, 'f', offsetof(struct A73, m5), 1);
		dcStructField(st, 'p', offsetof(struct A73, m6), 1);
		dcStructField(st, 'i', offsetof(struct A73, m7), 1);
		dcStructField(st, 'c', offsetof(struct A73, m8), 1);
		dcStructField(st, 's', offsetof(struct A73, m9), 1);
		dcStructField(st, 'c', offsetof(struct A73, m10), 1);
		dcStructField(st, 'c', offsetof(struct A73, m11), 1);
		dcStructField(st, 'j', offsetof(struct A73, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cllclcii} */
struct A74 { c m0; l m1; l m2; c m3; l m4; c m5; i m6; i m7; };
void f_cpA74(struct A74 *x, const struct A74 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA74(const struct A74 *x, const struct A74 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA74() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A74), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A74, m0), 1);
		dcStructField(st, 'l', offsetof(struct A74, m1), 1);
		dcStructField(st, 'l', offsetof(struct A74, m2), 1);
		dcStructField(st, 'c', offsetof(struct A74, m3), 1);
		dcStructField(st, 'l', offsetof(struct A74, m4), 1);
		dcStructField(st, 'c', offsetof(struct A74, m5), 1);
		dcStructField(st, 'i', offsetof(struct A74, m6), 1);
		dcStructField(st, 'i', offsetof(struct A74, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsiliiscdljldf} */
struct A75 { d m0; s m1; i m2; l m3; i m4; i m5; s m6; c m7; d m8; l m9; j m10; l m11; d m12; f m13; };
void f_cpA75(struct A75 *x, const struct A75 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA75(const struct A75 *x, const struct A75 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA75() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A75), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A75, m0), 1);
		dcStructField(st, 's', offsetof(struct A75, m1), 1);
		dcStructField(st, 'i', offsetof(struct A75, m2), 1);
		dcStructField(st, 'l', offsetof(struct A75, m3), 1);
		dcStructField(st, 'i', offsetof(struct A75, m4), 1);
		dcStructField(st, 'i', offsetof(struct A75, m5), 1);
		dcStructField(st, 's', offsetof(struct A75, m6), 1);
		dcStructField(st, 'c', offsetof(struct A75, m7), 1);
		dcStructField(st, 'd', offsetof(struct A75, m8), 1);
		dcStructField(st, 'l', offsetof(struct A75, m9), 1);
		dcStructField(st, 'j', offsetof(struct A75, m10), 1);
		dcStructField(st, 'l', offsetof(struct A75, m11), 1);
		dcStructField(st, 'd', offsetof(struct A75, m12), 1);
		dcStructField(st, 'f', offsetof(struct A75, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jidpjcj} */
struct A76 { j m0; i m1; d m2; p m3; j m4; c m5; j m6; };
void f_cpA76(struct A76 *x, const struct A76 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA76(const struct A76 *x, const struct A76 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA76() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A76), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A76, m0), 1);
		dcStructField(st, 'i', offsetof(struct A76, m1), 1);
		dcStructField(st, 'd', offsetof(struct A76, m2), 1);
		dcStructField(st, 'p', offsetof(struct A76, m3), 1);
		dcStructField(st, 'j', offsetof(struct A76, m4), 1);
		dcStructField(st, 'c', offsetof(struct A76, m5), 1);
		dcStructField(st, 'j', offsetof(struct A76, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c} */
struct A77 { c m0; };
void f_cpA77(struct A77 *x, const struct A77 *y) { x->m0 = y->m0; };
int f_cmpA77(const struct A77 *x, const struct A77 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA77() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A77), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A77, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {diii} */
struct A78 { d m0; i m1; i m2; i m3; };
void f_cpA78(struct A78 *x, const struct A78 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA78(const struct A78 *x, const struct A78 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA78() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A78), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A78, m0), 1);
		dcStructField(st, 'i', offsetof(struct A78, m1), 1);
		dcStructField(st, 'i', offsetof(struct A78, m2), 1);
		dcStructField(st, 'i', offsetof(struct A78, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{diii}cijsl} */
struct A79 { struct A78 m0; c m1; i m2; j m3; s m4; l m5; };
void f_cpA79(struct A79 *x, const struct A79 *y) { f_cpA78(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA79(const struct A79 *x, const struct A79 *y) { return f_cmpA78(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA79() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A79), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A79, m0), 1, f_touchdcstA78());
		dcStructField(st, 'c', offsetof(struct A79, m1), 1);
		dcStructField(st, 'i', offsetof(struct A79, m2), 1);
		dcStructField(st, 'j', offsetof(struct A79, m3), 1);
		dcStructField(st, 's', offsetof(struct A79, m4), 1);
		dcStructField(st, 'l', offsetof(struct A79, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcilj} */
struct A80 { d m0; c m1; i m2; l m3; j m4; };
void f_cpA80(struct A80 *x, const struct A80 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA80(const struct A80 *x, const struct A80 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA80() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A80), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A80, m0), 1);
		dcStructField(st, 'c', offsetof(struct A80, m1), 1);
		dcStructField(st, 'i', offsetof(struct A80, m2), 1);
		dcStructField(st, 'l', offsetof(struct A80, m3), 1);
		dcStructField(st, 'j', offsetof(struct A80, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ps{{diii}cijsl}jiisds{dcilj}} */
struct A81 { p m0; s m1; struct A79 m2; j m3; i m4; i m5; s m6; d m7; s m8; struct A80 m9; };
void f_cpA81(struct A81 *x, const struct A81 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA79(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA80(&x->m9, &y->m9); };
int f_cmpA81(const struct A81 *x, const struct A81 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA79(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA80(&x->m9, &y->m9); };
DCstruct* f_touchdcstA81() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A81), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A81, m0), 1);
		dcStructField(st, 's', offsetof(struct A81, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A81, m2), 1, f_touchdcstA79());
		dcStructField(st, 'j', offsetof(struct A81, m3), 1);
		dcStructField(st, 'i', offsetof(struct A81, m4), 1);
		dcStructField(st, 'i', offsetof(struct A81, m5), 1);
		dcStructField(st, 's', offsetof(struct A81, m6), 1);
		dcStructField(st, 'd', offsetof(struct A81, m7), 1);
		dcStructField(st, 's', offsetof(struct A81, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A81, m9), 1, f_touchdcstA80());
		dcCloseStruct(st);
	}
	return st;
};
/* {ssplcffjdsjsjficdcjjijipid} */
struct A82 { s m0; s m1; p m2; l m3; c m4; f m5; f m6; j m7; d m8; s m9; j m10; s m11; j m12; f m13; i m14; c m15; d m16; c m17; j m18; j m19; i m20; j m21; i m22; p m23; i m24; d m25; };
void f_cpA82(struct A82 *x, const struct A82 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA82(const struct A82 *x, const struct A82 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA82() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A82), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A82, m0), 1);
		dcStructField(st, 's', offsetof(struct A82, m1), 1);
		dcStructField(st, 'p', offsetof(struct A82, m2), 1);
		dcStructField(st, 'l', offsetof(struct A82, m3), 1);
		dcStructField(st, 'c', offsetof(struct A82, m4), 1);
		dcStructField(st, 'f', offsetof(struct A82, m5), 1);
		dcStructField(st, 'f', offsetof(struct A82, m6), 1);
		dcStructField(st, 'j', offsetof(struct A82, m7), 1);
		dcStructField(st, 'd', offsetof(struct A82, m8), 1);
		dcStructField(st, 's', offsetof(struct A82, m9), 1);
		dcStructField(st, 'j', offsetof(struct A82, m10), 1);
		dcStructField(st, 's', offsetof(struct A82, m11), 1);
		dcStructField(st, 'j', offsetof(struct A82, m12), 1);
		dcStructField(st, 'f', offsetof(struct A82, m13), 1);
		dcStructField(st, 'i', offsetof(struct A82, m14), 1);
		dcStructField(st, 'c', offsetof(struct A82, m15), 1);
		dcStructField(st, 'd', offsetof(struct A82, m16), 1);
		dcStructField(st, 'c', offsetof(struct A82, m17), 1);
		dcStructField(st, 'j', offsetof(struct A82, m18), 1);
		dcStructField(st, 'j', offsetof(struct A82, m19), 1);
		dcStructField(st, 'i', offsetof(struct A82, m20), 1);
		dcStructField(st, 'j', offsetof(struct A82, m21), 1);
		dcStructField(st, 'i', offsetof(struct A82, m22), 1);
		dcStructField(st, 'p', offsetof(struct A82, m23), 1);
		dcStructField(st, 'i', offsetof(struct A82, m24), 1);
		dcStructField(st, 'd', offsetof(struct A82, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dclfllfss} */
struct A83 { d m0; c m1; l m2; f m3; l m4; l m5; f m6; s m7; s m8; };
void f_cpA83(struct A83 *x, const struct A83 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA83(const struct A83 *x, const struct A83 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA83() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A83), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A83, m0), 1);
		dcStructField(st, 'c', offsetof(struct A83, m1), 1);
		dcStructField(st, 'l', offsetof(struct A83, m2), 1);
		dcStructField(st, 'f', offsetof(struct A83, m3), 1);
		dcStructField(st, 'l', offsetof(struct A83, m4), 1);
		dcStructField(st, 'l', offsetof(struct A83, m5), 1);
		dcStructField(st, 'f', offsetof(struct A83, m6), 1);
		dcStructField(st, 's', offsetof(struct A83, m7), 1);
		dcStructField(st, 's', offsetof(struct A83, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdjdcpcjcjcclcsffd{dclfllfss}cpjd} */
struct A84 { j m0; d m1; j m2; d m3; c m4; p m5; c m6; j m7; c m8; j m9; c m10; c m11; l m12; c m13; s m14; f m15; f m16; d m17; struct A83 m18; c m19; p m20; j m21; d m22; };
void f_cpA84(struct A84 *x, const struct A84 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA83(&x->m18, &y->m18); x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA84(const struct A84 *x, const struct A84 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA83(&x->m18, &y->m18) && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA84() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A84), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A84, m0), 1);
		dcStructField(st, 'd', offsetof(struct A84, m1), 1);
		dcStructField(st, 'j', offsetof(struct A84, m2), 1);
		dcStructField(st, 'd', offsetof(struct A84, m3), 1);
		dcStructField(st, 'c', offsetof(struct A84, m4), 1);
		dcStructField(st, 'p', offsetof(struct A84, m5), 1);
		dcStructField(st, 'c', offsetof(struct A84, m6), 1);
		dcStructField(st, 'j', offsetof(struct A84, m7), 1);
		dcStructField(st, 'c', offsetof(struct A84, m8), 1);
		dcStructField(st, 'j', offsetof(struct A84, m9), 1);
		dcStructField(st, 'c', offsetof(struct A84, m10), 1);
		dcStructField(st, 'c', offsetof(struct A84, m11), 1);
		dcStructField(st, 'l', offsetof(struct A84, m12), 1);
		dcStructField(st, 'c', offsetof(struct A84, m13), 1);
		dcStructField(st, 's', offsetof(struct A84, m14), 1);
		dcStructField(st, 'f', offsetof(struct A84, m15), 1);
		dcStructField(st, 'f', offsetof(struct A84, m16), 1);
		dcStructField(st, 'd', offsetof(struct A84, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A84, m18), 1, f_touchdcstA83());
		dcStructField(st, 'c', offsetof(struct A84, m19), 1);
		dcStructField(st, 'p', offsetof(struct A84, m20), 1);
		dcStructField(st, 'j', offsetof(struct A84, m21), 1);
		dcStructField(st, 'd', offsetof(struct A84, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfp} */
struct A85 { l m0; f m1; p m2; };
void f_cpA85(struct A85 *x, const struct A85 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA85(const struct A85 *x, const struct A85 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA85() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A85), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A85, m0), 1);
		dcStructField(st, 'f', offsetof(struct A85, m1), 1);
		dcStructField(st, 'p', offsetof(struct A85, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iffcifi} */
struct A86 { i m0; f m1; f m2; c m3; i m4; f m5; i m6; };
void f_cpA86(struct A86 *x, const struct A86 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA86(const struct A86 *x, const struct A86 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA86() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A86), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A86, m0), 1);
		dcStructField(st, 'f', offsetof(struct A86, m1), 1);
		dcStructField(st, 'f', offsetof(struct A86, m2), 1);
		dcStructField(st, 'c', offsetof(struct A86, m3), 1);
		dcStructField(st, 'i', offsetof(struct A86, m4), 1);
		dcStructField(st, 'f', offsetof(struct A86, m5), 1);
		dcStructField(st, 'i', offsetof(struct A86, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lj} */
struct A87 { l m0; j m1; };
void f_cpA87(struct A87 *x, const struct A87 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA87(const struct A87 *x, const struct A87 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA87() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A87), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A87, m0), 1);
		dcStructField(st, 'j', offsetof(struct A87, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jiclfls} */
struct A88 { j m0; i m1; c m2; l m3; f m4; l m5; s m6; };
void f_cpA88(struct A88 *x, const struct A88 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA88(const struct A88 *x, const struct A88 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA88() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A88), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A88, m0), 1);
		dcStructField(st, 'i', offsetof(struct A88, m1), 1);
		dcStructField(st, 'c', offsetof(struct A88, m2), 1);
		dcStructField(st, 'l', offsetof(struct A88, m3), 1);
		dcStructField(st, 'f', offsetof(struct A88, m4), 1);
		dcStructField(st, 'l', offsetof(struct A88, m5), 1);
		dcStructField(st, 's', offsetof(struct A88, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpcjspi} */
struct A89 { l m0; p m1; c m2; j m3; s m4; p m5; i m6; };
void f_cpA89(struct A89 *x, const struct A89 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA89(const struct A89 *x, const struct A89 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA89() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A89), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A89, m0), 1);
		dcStructField(st, 'p', offsetof(struct A89, m1), 1);
		dcStructField(st, 'c', offsetof(struct A89, m2), 1);
		dcStructField(st, 'j', offsetof(struct A89, m3), 1);
		dcStructField(st, 's', offsetof(struct A89, m4), 1);
		dcStructField(st, 'p', offsetof(struct A89, m5), 1);
		dcStructField(st, 'i', offsetof(struct A89, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsspsscsj{lpcjspi}j} */
struct A90 { l m0; s m1; s m2; p m3; s m4; s m5; c m6; s m7; j m8; struct A89 m9; j m10; };
void f_cpA90(struct A90 *x, const struct A90 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA89(&x->m9, &y->m9); x->m10 = y->m10; };
int f_cmpA90(const struct A90 *x, const struct A90 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA89(&x->m9, &y->m9) && x->m10 == y->m10; };
DCstruct* f_touchdcstA90() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A90), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A90, m0), 1);
		dcStructField(st, 's', offsetof(struct A90, m1), 1);
		dcStructField(st, 's', offsetof(struct A90, m2), 1);
		dcStructField(st, 'p', offsetof(struct A90, m3), 1);
		dcStructField(st, 's', offsetof(struct A90, m4), 1);
		dcStructField(st, 's', offsetof(struct A90, m5), 1);
		dcStructField(st, 'c', offsetof(struct A90, m6), 1);
		dcStructField(st, 's', offsetof(struct A90, m7), 1);
		dcStructField(st, 'j', offsetof(struct A90, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A90, m9), 1, f_touchdcstA89());
		dcStructField(st, 'j', offsetof(struct A90, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spfliccjlspcjfcpc} */
struct A91 { s m0; p m1; f m2; l m3; i m4; c m5; c m6; j m7; l m8; s m9; p m10; c m11; j m12; f m13; c m14; p m15; c m16; };
void f_cpA91(struct A91 *x, const struct A91 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA91(const struct A91 *x, const struct A91 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA91() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A91), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A91, m0), 1);
		dcStructField(st, 'p', offsetof(struct A91, m1), 1);
		dcStructField(st, 'f', offsetof(struct A91, m2), 1);
		dcStructField(st, 'l', offsetof(struct A91, m3), 1);
		dcStructField(st, 'i', offsetof(struct A91, m4), 1);
		dcStructField(st, 'c', offsetof(struct A91, m5), 1);
		dcStructField(st, 'c', offsetof(struct A91, m6), 1);
		dcStructField(st, 'j', offsetof(struct A91, m7), 1);
		dcStructField(st, 'l', offsetof(struct A91, m8), 1);
		dcStructField(st, 's', offsetof(struct A91, m9), 1);
		dcStructField(st, 'p', offsetof(struct A91, m10), 1);
		dcStructField(st, 'c', offsetof(struct A91, m11), 1);
		dcStructField(st, 'j', offsetof(struct A91, m12), 1);
		dcStructField(st, 'f', offsetof(struct A91, m13), 1);
		dcStructField(st, 'c', offsetof(struct A91, m14), 1);
		dcStructField(st, 'p', offsetof(struct A91, m15), 1);
		dcStructField(st, 'c', offsetof(struct A91, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjlpdc} */
struct A92 { f m0; j m1; l m2; p m3; d m4; c m5; };
void f_cpA92(struct A92 *x, const struct A92 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA92(const struct A92 *x, const struct A92 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA92() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A92), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A92, m0), 1);
		dcStructField(st, 'j', offsetof(struct A92, m1), 1);
		dcStructField(st, 'l', offsetof(struct A92, m2), 1);
		dcStructField(st, 'p', offsetof(struct A92, m3), 1);
		dcStructField(st, 'd', offsetof(struct A92, m4), 1);
		dcStructField(st, 'c', offsetof(struct A92, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sppi} */
struct A93 { s m0; p m1; p m2; i m3; };
void f_cpA93(struct A93 *x, const struct A93 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA93(const struct A93 *x, const struct A93 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA93() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A93), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A93, m0), 1);
		dcStructField(st, 'p', offsetof(struct A93, m1), 1);
		dcStructField(st, 'p', offsetof(struct A93, m2), 1);
		dcStructField(st, 'i', offsetof(struct A93, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{fjlpdc}jdd{sppi}fli} */
struct A94 { l m0; struct A92 m1; j m2; d m3; d m4; struct A93 m5; f m6; l m7; i m8; };
void f_cpA94(struct A94 *x, const struct A94 *y) { x->m0 = y->m0; f_cpA92(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA93(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA94(const struct A94 *x, const struct A94 *y) { return x->m0 == y->m0 && f_cmpA92(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA93(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA94() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A94), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A94, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A94, m1), 1, f_touchdcstA92());
		dcStructField(st, 'j', offsetof(struct A94, m2), 1);
		dcStructField(st, 'd', offsetof(struct A94, m3), 1);
		dcStructField(st, 'd', offsetof(struct A94, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A94, m5), 1, f_touchdcstA93());
		dcStructField(st, 'f', offsetof(struct A94, m6), 1);
		dcStructField(st, 'l', offsetof(struct A94, m7), 1);
		dcStructField(st, 'i', offsetof(struct A94, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjsiiccf} */
struct A95 { p m0; j m1; s m2; i m3; i m4; c m5; c m6; f m7; };
void f_cpA95(struct A95 *x, const struct A95 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA95(const struct A95 *x, const struct A95 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA95() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A95), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A95, m0), 1);
		dcStructField(st, 'j', offsetof(struct A95, m1), 1);
		dcStructField(st, 's', offsetof(struct A95, m2), 1);
		dcStructField(st, 'i', offsetof(struct A95, m3), 1);
		dcStructField(st, 'i', offsetof(struct A95, m4), 1);
		dcStructField(st, 'c', offsetof(struct A95, m5), 1);
		dcStructField(st, 'c', offsetof(struct A95, m6), 1);
		dcStructField(st, 'f', offsetof(struct A95, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j} */
struct A96 { j m0; };
void f_cpA96(struct A96 *x, const struct A96 *y) { x->m0 = y->m0; };
int f_cmpA96(const struct A96 *x, const struct A96 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA96() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A96), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A96, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lp{l}} */
struct A97 { l m0; p m1; struct A11 m2; };
void f_cpA97(struct A97 *x, const struct A97 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA11(&x->m2, &y->m2); };
int f_cmpA97(const struct A97 *x, const struct A97 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA11(&x->m2, &y->m2); };
DCstruct* f_touchdcstA97() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A97), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A97, m0), 1);
		dcStructField(st, 'p', offsetof(struct A97, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A97, m2), 1, f_touchdcstA11());
		dcCloseStruct(st);
	}
	return st;
};
/* {jscdfisciplfjpjjfscffdsfccdjscclifjcsdfpic} */
struct A98 { j m0; s m1; c m2; d m3; f m4; i m5; s m6; c m7; i m8; p m9; l m10; f m11; j m12; p m13; j m14; j m15; f m16; s m17; c m18; f m19; f m20; d m21; s m22; f m23; c m24; c m25; d m26; j m27; s m28; c m29; c m30; l m31; i m32; f m33; j m34; c m35; s m36; d m37; f m38; p m39; i m40; c m41; };
void f_cpA98(struct A98 *x, const struct A98 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; };
int f_cmpA98(const struct A98 *x, const struct A98 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41; };
DCstruct* f_touchdcstA98() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(42, sizeof(struct A98), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A98, m0), 1);
		dcStructField(st, 's', offsetof(struct A98, m1), 1);
		dcStructField(st, 'c', offsetof(struct A98, m2), 1);
		dcStructField(st, 'd', offsetof(struct A98, m3), 1);
		dcStructField(st, 'f', offsetof(struct A98, m4), 1);
		dcStructField(st, 'i', offsetof(struct A98, m5), 1);
		dcStructField(st, 's', offsetof(struct A98, m6), 1);
		dcStructField(st, 'c', offsetof(struct A98, m7), 1);
		dcStructField(st, 'i', offsetof(struct A98, m8), 1);
		dcStructField(st, 'p', offsetof(struct A98, m9), 1);
		dcStructField(st, 'l', offsetof(struct A98, m10), 1);
		dcStructField(st, 'f', offsetof(struct A98, m11), 1);
		dcStructField(st, 'j', offsetof(struct A98, m12), 1);
		dcStructField(st, 'p', offsetof(struct A98, m13), 1);
		dcStructField(st, 'j', offsetof(struct A98, m14), 1);
		dcStructField(st, 'j', offsetof(struct A98, m15), 1);
		dcStructField(st, 'f', offsetof(struct A98, m16), 1);
		dcStructField(st, 's', offsetof(struct A98, m17), 1);
		dcStructField(st, 'c', offsetof(struct A98, m18), 1);
		dcStructField(st, 'f', offsetof(struct A98, m19), 1);
		dcStructField(st, 'f', offsetof(struct A98, m20), 1);
		dcStructField(st, 'd', offsetof(struct A98, m21), 1);
		dcStructField(st, 's', offsetof(struct A98, m22), 1);
		dcStructField(st, 'f', offsetof(struct A98, m23), 1);
		dcStructField(st, 'c', offsetof(struct A98, m24), 1);
		dcStructField(st, 'c', offsetof(struct A98, m25), 1);
		dcStructField(st, 'd', offsetof(struct A98, m26), 1);
		dcStructField(st, 'j', offsetof(struct A98, m27), 1);
		dcStructField(st, 's', offsetof(struct A98, m28), 1);
		dcStructField(st, 'c', offsetof(struct A98, m29), 1);
		dcStructField(st, 'c', offsetof(struct A98, m30), 1);
		dcStructField(st, 'l', offsetof(struct A98, m31), 1);
		dcStructField(st, 'i', offsetof(struct A98, m32), 1);
		dcStructField(st, 'f', offsetof(struct A98, m33), 1);
		dcStructField(st, 'j', offsetof(struct A98, m34), 1);
		dcStructField(st, 'c', offsetof(struct A98, m35), 1);
		dcStructField(st, 's', offsetof(struct A98, m36), 1);
		dcStructField(st, 'd', offsetof(struct A98, m37), 1);
		dcStructField(st, 'f', offsetof(struct A98, m38), 1);
		dcStructField(st, 'p', offsetof(struct A98, m39), 1);
		dcStructField(st, 'i', offsetof(struct A98, m40), 1);
		dcStructField(st, 'c', offsetof(struct A98, m41), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsspsjisifj} */
struct A99 { d m0; s m1; s m2; p m3; s m4; j m5; i m6; s m7; i m8; f m9; j m10; };
void f_cpA99(struct A99 *x, const struct A99 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA99(const struct A99 *x, const struct A99 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA99() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A99), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A99, m0), 1);
		dcStructField(st, 's', offsetof(struct A99, m1), 1);
		dcStructField(st, 's', offsetof(struct A99, m2), 1);
		dcStructField(st, 'p', offsetof(struct A99, m3), 1);
		dcStructField(st, 's', offsetof(struct A99, m4), 1);
		dcStructField(st, 'j', offsetof(struct A99, m5), 1);
		dcStructField(st, 'i', offsetof(struct A99, m6), 1);
		dcStructField(st, 's', offsetof(struct A99, m7), 1);
		dcStructField(st, 'i', offsetof(struct A99, m8), 1);
		dcStructField(st, 'f', offsetof(struct A99, m9), 1);
		dcStructField(st, 'j', offsetof(struct A99, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljsli} */
struct A100 { l m0; j m1; s m2; l m3; i m4; };
void f_cpA100(struct A100 *x, const struct A100 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA100(const struct A100 *x, const struct A100 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA100() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A100), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A100, m0), 1);
		dcStructField(st, 'j', offsetof(struct A100, m1), 1);
		dcStructField(st, 's', offsetof(struct A100, m2), 1);
		dcStructField(st, 'l', offsetof(struct A100, m3), 1);
		dcStructField(st, 'i', offsetof(struct A100, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpj{j}idsd} */
struct A101 { f m0; p m1; j m2; struct A96 m3; i m4; d m5; s m6; d m7; };
void f_cpA101(struct A101 *x, const struct A101 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA96(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA101(const struct A101 *x, const struct A101 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA96(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA101() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A101), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A101, m0), 1);
		dcStructField(st, 'p', offsetof(struct A101, m1), 1);
		dcStructField(st, 'j', offsetof(struct A101, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A101, m3), 1, f_touchdcstA96());
		dcStructField(st, 'i', offsetof(struct A101, m4), 1);
		dcStructField(st, 'd', offsetof(struct A101, m5), 1);
		dcStructField(st, 's', offsetof(struct A101, m6), 1);
		dcStructField(st, 'd', offsetof(struct A101, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcdc} */
struct A102 { d m0; c m1; d m2; c m3; };
void f_cpA102(struct A102 *x, const struct A102 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA102(const struct A102 *x, const struct A102 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA102() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A102), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A102, m0), 1);
		dcStructField(st, 'c', offsetof(struct A102, m1), 1);
		dcStructField(st, 'd', offsetof(struct A102, m2), 1);
		dcStructField(st, 'c', offsetof(struct A102, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppsij} */
struct A103 { p m0; p m1; s m2; i m3; j m4; };
void f_cpA103(struct A103 *x, const struct A103 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA103(const struct A103 *x, const struct A103 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA103() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A103), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A103, m0), 1);
		dcStructField(st, 'p', offsetof(struct A103, m1), 1);
		dcStructField(st, 's', offsetof(struct A103, m2), 1);
		dcStructField(st, 'i', offsetof(struct A103, m3), 1);
		dcStructField(st, 'j', offsetof(struct A103, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlpsf} */
struct A104 { j m0; l m1; p m2; s m3; f m4; };
void f_cpA104(struct A104 *x, const struct A104 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA104(const struct A104 *x, const struct A104 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA104() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A104), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A104, m0), 1);
		dcStructField(st, 'l', offsetof(struct A104, m1), 1);
		dcStructField(st, 'p', offsetof(struct A104, m2), 1);
		dcStructField(st, 's', offsetof(struct A104, m3), 1);
		dcStructField(st, 'f', offsetof(struct A104, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jldddjdlicfc} */
struct A105 { j m0; l m1; d m2; d m3; d m4; j m5; d m6; l m7; i m8; c m9; f m10; c m11; };
void f_cpA105(struct A105 *x, const struct A105 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA105(const struct A105 *x, const struct A105 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA105() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A105), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A105, m0), 1);
		dcStructField(st, 'l', offsetof(struct A105, m1), 1);
		dcStructField(st, 'd', offsetof(struct A105, m2), 1);
		dcStructField(st, 'd', offsetof(struct A105, m3), 1);
		dcStructField(st, 'd', offsetof(struct A105, m4), 1);
		dcStructField(st, 'j', offsetof(struct A105, m5), 1);
		dcStructField(st, 'd', offsetof(struct A105, m6), 1);
		dcStructField(st, 'l', offsetof(struct A105, m7), 1);
		dcStructField(st, 'i', offsetof(struct A105, m8), 1);
		dcStructField(st, 'c', offsetof(struct A105, m9), 1);
		dcStructField(st, 'f', offsetof(struct A105, m10), 1);
		dcStructField(st, 'c', offsetof(struct A105, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssfipfsp} */
struct A106 { s m0; s m1; f m2; i m3; p m4; f m5; s m6; p m7; };
void f_cpA106(struct A106 *x, const struct A106 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA106(const struct A106 *x, const struct A106 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA106() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A106), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A106, m0), 1);
		dcStructField(st, 's', offsetof(struct A106, m1), 1);
		dcStructField(st, 'f', offsetof(struct A106, m2), 1);
		dcStructField(st, 'i', offsetof(struct A106, m3), 1);
		dcStructField(st, 'p', offsetof(struct A106, m4), 1);
		dcStructField(st, 'f', offsetof(struct A106, m5), 1);
		dcStructField(st, 's', offsetof(struct A106, m6), 1);
		dcStructField(st, 'p', offsetof(struct A106, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjjssilsdill{ssfipfsp}iidiiidc} */
struct A107 { c m0; j m1; j m2; s m3; s m4; i m5; l m6; s m7; d m8; i m9; l m10; l m11; struct A106 m12; i m13; i m14; d m15; i m16; i m17; i m18; d m19; c m20; };
void f_cpA107(struct A107 *x, const struct A107 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA106(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA107(const struct A107 *x, const struct A107 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA106(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA107() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A107), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A107, m0), 1);
		dcStructField(st, 'j', offsetof(struct A107, m1), 1);
		dcStructField(st, 'j', offsetof(struct A107, m2), 1);
		dcStructField(st, 's', offsetof(struct A107, m3), 1);
		dcStructField(st, 's', offsetof(struct A107, m4), 1);
		dcStructField(st, 'i', offsetof(struct A107, m5), 1);
		dcStructField(st, 'l', offsetof(struct A107, m6), 1);
		dcStructField(st, 's', offsetof(struct A107, m7), 1);
		dcStructField(st, 'd', offsetof(struct A107, m8), 1);
		dcStructField(st, 'i', offsetof(struct A107, m9), 1);
		dcStructField(st, 'l', offsetof(struct A107, m10), 1);
		dcStructField(st, 'l', offsetof(struct A107, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A107, m12), 1, f_touchdcstA106());
		dcStructField(st, 'i', offsetof(struct A107, m13), 1);
		dcStructField(st, 'i', offsetof(struct A107, m14), 1);
		dcStructField(st, 'd', offsetof(struct A107, m15), 1);
		dcStructField(st, 'i', offsetof(struct A107, m16), 1);
		dcStructField(st, 'i', offsetof(struct A107, m17), 1);
		dcStructField(st, 'i', offsetof(struct A107, m18), 1);
		dcStructField(st, 'd', offsetof(struct A107, m19), 1);
		dcStructField(st, 'c', offsetof(struct A107, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dli} */
struct A108 { d m0; l m1; i m2; };
void f_cpA108(struct A108 *x, const struct A108 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA108(const struct A108 *x, const struct A108 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA108() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A108), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A108, m0), 1);
		dcStructField(st, 'l', offsetof(struct A108, m1), 1);
		dcStructField(st, 'i', offsetof(struct A108, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ci} */
struct A109 { c m0; i m1; };
void f_cpA109(struct A109 *x, const struct A109 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA109(const struct A109 *x, const struct A109 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA109() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A109), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A109, m0), 1);
		dcStructField(st, 'i', offsetof(struct A109, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jll{ci}} */
struct A110 { j m0; l m1; l m2; struct A109 m3; };
void f_cpA110(struct A110 *x, const struct A110 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA109(&x->m3, &y->m3); };
int f_cmpA110(const struct A110 *x, const struct A110 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA109(&x->m3, &y->m3); };
DCstruct* f_touchdcstA110() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A110), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A110, m0), 1);
		dcStructField(st, 'l', offsetof(struct A110, m1), 1);
		dcStructField(st, 'l', offsetof(struct A110, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A110, m3), 1, f_touchdcstA109());
		dcCloseStruct(st);
	}
	return st;
};
/* {plclip{d}ddspds} */
struct A111 { p m0; l m1; c m2; l m3; i m4; p m5; struct A33 m6; d m7; d m8; s m9; p m10; d m11; s m12; };
void f_cpA111(struct A111 *x, const struct A111 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA33(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA111(const struct A111 *x, const struct A111 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA33(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA111() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A111), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A111, m0), 1);
		dcStructField(st, 'l', offsetof(struct A111, m1), 1);
		dcStructField(st, 'c', offsetof(struct A111, m2), 1);
		dcStructField(st, 'l', offsetof(struct A111, m3), 1);
		dcStructField(st, 'i', offsetof(struct A111, m4), 1);
		dcStructField(st, 'p', offsetof(struct A111, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A111, m6), 1, f_touchdcstA33());
		dcStructField(st, 'd', offsetof(struct A111, m7), 1);
		dcStructField(st, 'd', offsetof(struct A111, m8), 1);
		dcStructField(st, 's', offsetof(struct A111, m9), 1);
		dcStructField(st, 'p', offsetof(struct A111, m10), 1);
		dcStructField(st, 'd', offsetof(struct A111, m11), 1);
		dcStructField(st, 's', offsetof(struct A111, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{plclip{d}ddspds}ssdi} */
struct A112 { struct A111 m0; s m1; s m2; d m3; i m4; };
void f_cpA112(struct A112 *x, const struct A112 *y) { f_cpA111(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA112(const struct A112 *x, const struct A112 *y) { return f_cmpA111(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA112() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A112), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A112, m0), 1, f_touchdcstA111());
		dcStructField(st, 's', offsetof(struct A112, m1), 1);
		dcStructField(st, 's', offsetof(struct A112, m2), 1);
		dcStructField(st, 'd', offsetof(struct A112, m3), 1);
		dcStructField(st, 'i', offsetof(struct A112, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {df} */
struct A113 { d m0; f m1; };
void f_cpA113(struct A113 *x, const struct A113 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA113(const struct A113 *x, const struct A113 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA113() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A113), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A113, m0), 1);
		dcStructField(st, 'f', offsetof(struct A113, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijsplj} */
struct A114 { i m0; j m1; s m2; p m3; l m4; j m5; };
void f_cpA114(struct A114 *x, const struct A114 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA114(const struct A114 *x, const struct A114 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA114() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A114), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A114, m0), 1);
		dcStructField(st, 'j', offsetof(struct A114, m1), 1);
		dcStructField(st, 's', offsetof(struct A114, m2), 1);
		dcStructField(st, 'p', offsetof(struct A114, m3), 1);
		dcStructField(st, 'l', offsetof(struct A114, m4), 1);
		dcStructField(st, 'j', offsetof(struct A114, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcclp} */
struct A115 { p m0; c m1; c m2; l m3; p m4; };
void f_cpA115(struct A115 *x, const struct A115 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA115(const struct A115 *x, const struct A115 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA115() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A115), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A115, m0), 1);
		dcStructField(st, 'c', offsetof(struct A115, m1), 1);
		dcStructField(st, 'c', offsetof(struct A115, m2), 1);
		dcStructField(st, 'l', offsetof(struct A115, m3), 1);
		dcStructField(st, 'p', offsetof(struct A115, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pscj{pcclp}} */
struct A116 { p m0; s m1; c m2; j m3; struct A115 m4; };
void f_cpA116(struct A116 *x, const struct A116 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA115(&x->m4, &y->m4); };
int f_cmpA116(const struct A116 *x, const struct A116 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA115(&x->m4, &y->m4); };
DCstruct* f_touchdcstA116() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A116), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A116, m0), 1);
		dcStructField(st, 's', offsetof(struct A116, m1), 1);
		dcStructField(st, 'c', offsetof(struct A116, m2), 1);
		dcStructField(st, 'j', offsetof(struct A116, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A116, m4), 1, f_touchdcstA115());
		dcCloseStruct(st);
	}
	return st;
};
/* {ijfiipsdfii} */
struct A117 { i m0; j m1; f m2; i m3; i m4; p m5; s m6; d m7; f m8; i m9; i m10; };
void f_cpA117(struct A117 *x, const struct A117 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA117(const struct A117 *x, const struct A117 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA117() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A117), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A117, m0), 1);
		dcStructField(st, 'j', offsetof(struct A117, m1), 1);
		dcStructField(st, 'f', offsetof(struct A117, m2), 1);
		dcStructField(st, 'i', offsetof(struct A117, m3), 1);
		dcStructField(st, 'i', offsetof(struct A117, m4), 1);
		dcStructField(st, 'p', offsetof(struct A117, m5), 1);
		dcStructField(st, 's', offsetof(struct A117, m6), 1);
		dcStructField(st, 'd', offsetof(struct A117, m7), 1);
		dcStructField(st, 'f', offsetof(struct A117, m8), 1);
		dcStructField(st, 'i', offsetof(struct A117, m9), 1);
		dcStructField(st, 'i', offsetof(struct A117, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idppsjsjffpjpifcpdccpcj} */
struct A118 { i m0; d m1; p m2; p m3; s m4; j m5; s m6; j m7; f m8; f m9; p m10; j m11; p m12; i m13; f m14; c m15; p m16; d m17; c m18; c m19; p m20; c m21; j m22; };
void f_cpA118(struct A118 *x, const struct A118 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA118(const struct A118 *x, const struct A118 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA118() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A118), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A118, m0), 1);
		dcStructField(st, 'd', offsetof(struct A118, m1), 1);
		dcStructField(st, 'p', offsetof(struct A118, m2), 1);
		dcStructField(st, 'p', offsetof(struct A118, m3), 1);
		dcStructField(st, 's', offsetof(struct A118, m4), 1);
		dcStructField(st, 'j', offsetof(struct A118, m5), 1);
		dcStructField(st, 's', offsetof(struct A118, m6), 1);
		dcStructField(st, 'j', offsetof(struct A118, m7), 1);
		dcStructField(st, 'f', offsetof(struct A118, m8), 1);
		dcStructField(st, 'f', offsetof(struct A118, m9), 1);
		dcStructField(st, 'p', offsetof(struct A118, m10), 1);
		dcStructField(st, 'j', offsetof(struct A118, m11), 1);
		dcStructField(st, 'p', offsetof(struct A118, m12), 1);
		dcStructField(st, 'i', offsetof(struct A118, m13), 1);
		dcStructField(st, 'f', offsetof(struct A118, m14), 1);
		dcStructField(st, 'c', offsetof(struct A118, m15), 1);
		dcStructField(st, 'p', offsetof(struct A118, m16), 1);
		dcStructField(st, 'd', offsetof(struct A118, m17), 1);
		dcStructField(st, 'c', offsetof(struct A118, m18), 1);
		dcStructField(st, 'c', offsetof(struct A118, m19), 1);
		dcStructField(st, 'p', offsetof(struct A118, m20), 1);
		dcStructField(st, 'c', offsetof(struct A118, m21), 1);
		dcStructField(st, 'j', offsetof(struct A118, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p} */
struct A119 { p m0; };
void f_cpA119(struct A119 *x, const struct A119 *y) { x->m0 = y->m0; };
int f_cmpA119(const struct A119 *x, const struct A119 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA119() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A119), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A119, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijidlfdcfdlcd} */
struct A120 { i m0; j m1; i m2; d m3; l m4; f m5; d m6; c m7; f m8; d m9; l m10; c m11; d m12; };
void f_cpA120(struct A120 *x, const struct A120 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA120(const struct A120 *x, const struct A120 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA120() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A120), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A120, m0), 1);
		dcStructField(st, 'j', offsetof(struct A120, m1), 1);
		dcStructField(st, 'i', offsetof(struct A120, m2), 1);
		dcStructField(st, 'd', offsetof(struct A120, m3), 1);
		dcStructField(st, 'l', offsetof(struct A120, m4), 1);
		dcStructField(st, 'f', offsetof(struct A120, m5), 1);
		dcStructField(st, 'd', offsetof(struct A120, m6), 1);
		dcStructField(st, 'c', offsetof(struct A120, m7), 1);
		dcStructField(st, 'f', offsetof(struct A120, m8), 1);
		dcStructField(st, 'd', offsetof(struct A120, m9), 1);
		dcStructField(st, 'l', offsetof(struct A120, m10), 1);
		dcStructField(st, 'c', offsetof(struct A120, m11), 1);
		dcStructField(st, 'd', offsetof(struct A120, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cc} */
struct A121 { c m0; c m1; };
void f_cpA121(struct A121 *x, const struct A121 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA121(const struct A121 *x, const struct A121 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA121() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A121), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A121, m0), 1);
		dcStructField(st, 'c', offsetof(struct A121, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pj{ijidlfdcfdlcd}dc{cc}slj} */
struct A122 { p m0; j m1; struct A120 m2; d m3; c m4; struct A121 m5; s m6; l m7; j m8; };
void f_cpA122(struct A122 *x, const struct A122 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA120(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA121(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA122(const struct A122 *x, const struct A122 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA120(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA121(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA122() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A122), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A122, m0), 1);
		dcStructField(st, 'j', offsetof(struct A122, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A122, m2), 1, f_touchdcstA120());
		dcStructField(st, 'd', offsetof(struct A122, m3), 1);
		dcStructField(st, 'c', offsetof(struct A122, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A122, m5), 1, f_touchdcstA121());
		dcStructField(st, 's', offsetof(struct A122, m6), 1);
		dcStructField(st, 'l', offsetof(struct A122, m7), 1);
		dcStructField(st, 'j', offsetof(struct A122, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jp} */
struct A123 { j m0; p m1; };
void f_cpA123(struct A123 *x, const struct A123 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA123(const struct A123 *x, const struct A123 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA123() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A123), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A123, m0), 1);
		dcStructField(st, 'p', offsetof(struct A123, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfjjcccijssjd} */
struct A124 { s m0; f m1; j m2; j m3; c m4; c m5; c m6; i m7; j m8; s m9; s m10; j m11; d m12; };
void f_cpA124(struct A124 *x, const struct A124 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA124(const struct A124 *x, const struct A124 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA124() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A124), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A124, m0), 1);
		dcStructField(st, 'f', offsetof(struct A124, m1), 1);
		dcStructField(st, 'j', offsetof(struct A124, m2), 1);
		dcStructField(st, 'j', offsetof(struct A124, m3), 1);
		dcStructField(st, 'c', offsetof(struct A124, m4), 1);
		dcStructField(st, 'c', offsetof(struct A124, m5), 1);
		dcStructField(st, 'c', offsetof(struct A124, m6), 1);
		dcStructField(st, 'i', offsetof(struct A124, m7), 1);
		dcStructField(st, 'j', offsetof(struct A124, m8), 1);
		dcStructField(st, 's', offsetof(struct A124, m9), 1);
		dcStructField(st, 's', offsetof(struct A124, m10), 1);
		dcStructField(st, 'j', offsetof(struct A124, m11), 1);
		dcStructField(st, 'd', offsetof(struct A124, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldccsls} */
struct A125 { l m0; d m1; c m2; c m3; s m4; l m5; s m6; };
void f_cpA125(struct A125 *x, const struct A125 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA125(const struct A125 *x, const struct A125 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA125() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A125), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A125, m0), 1);
		dcStructField(st, 'd', offsetof(struct A125, m1), 1);
		dcStructField(st, 'c', offsetof(struct A125, m2), 1);
		dcStructField(st, 'c', offsetof(struct A125, m3), 1);
		dcStructField(st, 's', offsetof(struct A125, m4), 1);
		dcStructField(st, 'l', offsetof(struct A125, m5), 1);
		dcStructField(st, 's', offsetof(struct A125, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djl} */
struct A126 { d m0; j m1; l m2; };
void f_cpA126(struct A126 *x, const struct A126 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA126(const struct A126 *x, const struct A126 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA126() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A126), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A126, m0), 1);
		dcStructField(st, 'j', offsetof(struct A126, m1), 1);
		dcStructField(st, 'l', offsetof(struct A126, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsifjjcliidpsf} */
struct A127 { f m0; s m1; i m2; f m3; j m4; j m5; c m6; l m7; i m8; i m9; d m10; p m11; s m12; f m13; };
void f_cpA127(struct A127 *x, const struct A127 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA127(const struct A127 *x, const struct A127 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA127() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A127), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A127, m0), 1);
		dcStructField(st, 's', offsetof(struct A127, m1), 1);
		dcStructField(st, 'i', offsetof(struct A127, m2), 1);
		dcStructField(st, 'f', offsetof(struct A127, m3), 1);
		dcStructField(st, 'j', offsetof(struct A127, m4), 1);
		dcStructField(st, 'j', offsetof(struct A127, m5), 1);
		dcStructField(st, 'c', offsetof(struct A127, m6), 1);
		dcStructField(st, 'l', offsetof(struct A127, m7), 1);
		dcStructField(st, 'i', offsetof(struct A127, m8), 1);
		dcStructField(st, 'i', offsetof(struct A127, m9), 1);
		dcStructField(st, 'd', offsetof(struct A127, m10), 1);
		dcStructField(st, 'p', offsetof(struct A127, m11), 1);
		dcStructField(st, 's', offsetof(struct A127, m12), 1);
		dcStructField(st, 'f', offsetof(struct A127, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dflipfcfdfissjjdc} */
struct A128 { d m0; f m1; l m2; i m3; p m4; f m5; c m6; f m7; d m8; f m9; i m10; s m11; s m12; j m13; j m14; d m15; c m16; };
void f_cpA128(struct A128 *x, const struct A128 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA128(const struct A128 *x, const struct A128 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA128() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A128), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A128, m0), 1);
		dcStructField(st, 'f', offsetof(struct A128, m1), 1);
		dcStructField(st, 'l', offsetof(struct A128, m2), 1);
		dcStructField(st, 'i', offsetof(struct A128, m3), 1);
		dcStructField(st, 'p', offsetof(struct A128, m4), 1);
		dcStructField(st, 'f', offsetof(struct A128, m5), 1);
		dcStructField(st, 'c', offsetof(struct A128, m6), 1);
		dcStructField(st, 'f', offsetof(struct A128, m7), 1);
		dcStructField(st, 'd', offsetof(struct A128, m8), 1);
		dcStructField(st, 'f', offsetof(struct A128, m9), 1);
		dcStructField(st, 'i', offsetof(struct A128, m10), 1);
		dcStructField(st, 's', offsetof(struct A128, m11), 1);
		dcStructField(st, 's', offsetof(struct A128, m12), 1);
		dcStructField(st, 'j', offsetof(struct A128, m13), 1);
		dcStructField(st, 'j', offsetof(struct A128, m14), 1);
		dcStructField(st, 'd', offsetof(struct A128, m15), 1);
		dcStructField(st, 'c', offsetof(struct A128, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifssd} */
struct A129 { i m0; f m1; s m2; s m3; d m4; };
void f_cpA129(struct A129 *x, const struct A129 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA129(const struct A129 *x, const struct A129 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA129() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A129), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A129, m0), 1);
		dcStructField(st, 'f', offsetof(struct A129, m1), 1);
		dcStructField(st, 's', offsetof(struct A129, m2), 1);
		dcStructField(st, 's', offsetof(struct A129, m3), 1);
		dcStructField(st, 'd', offsetof(struct A129, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icdjjdfflsccsj} */
struct A130 { i m0; c m1; d m2; j m3; j m4; d m5; f m6; f m7; l m8; s m9; c m10; c m11; s m12; j m13; };
void f_cpA130(struct A130 *x, const struct A130 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA130(const struct A130 *x, const struct A130 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA130() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A130), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A130, m0), 1);
		dcStructField(st, 'c', offsetof(struct A130, m1), 1);
		dcStructField(st, 'd', offsetof(struct A130, m2), 1);
		dcStructField(st, 'j', offsetof(struct A130, m3), 1);
		dcStructField(st, 'j', offsetof(struct A130, m4), 1);
		dcStructField(st, 'd', offsetof(struct A130, m5), 1);
		dcStructField(st, 'f', offsetof(struct A130, m6), 1);
		dcStructField(st, 'f', offsetof(struct A130, m7), 1);
		dcStructField(st, 'l', offsetof(struct A130, m8), 1);
		dcStructField(st, 's', offsetof(struct A130, m9), 1);
		dcStructField(st, 'c', offsetof(struct A130, m10), 1);
		dcStructField(st, 'c', offsetof(struct A130, m11), 1);
		dcStructField(st, 's', offsetof(struct A130, m12), 1);
		dcStructField(st, 'j', offsetof(struct A130, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfdld} */
struct A131 { s m0; f m1; d m2; l m3; d m4; };
void f_cpA131(struct A131 *x, const struct A131 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA131(const struct A131 *x, const struct A131 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA131() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A131), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A131, m0), 1);
		dcStructField(st, 'f', offsetof(struct A131, m1), 1);
		dcStructField(st, 'd', offsetof(struct A131, m2), 1);
		dcStructField(st, 'l', offsetof(struct A131, m3), 1);
		dcStructField(st, 'd', offsetof(struct A131, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjllc{sfdld}dpi} */
struct A132 { s m0; j m1; l m2; l m3; c m4; struct A131 m5; d m6; p m7; i m8; };
void f_cpA132(struct A132 *x, const struct A132 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA131(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA132(const struct A132 *x, const struct A132 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA131(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA132() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A132), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A132, m0), 1);
		dcStructField(st, 'j', offsetof(struct A132, m1), 1);
		dcStructField(st, 'l', offsetof(struct A132, m2), 1);
		dcStructField(st, 'l', offsetof(struct A132, m3), 1);
		dcStructField(st, 'c', offsetof(struct A132, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A132, m5), 1, f_touchdcstA131());
		dcStructField(st, 'd', offsetof(struct A132, m6), 1);
		dcStructField(st, 'p', offsetof(struct A132, m7), 1);
		dcStructField(st, 'i', offsetof(struct A132, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcipdp} */
struct A133 { d m0; c m1; i m2; p m3; d m4; p m5; };
void f_cpA133(struct A133 *x, const struct A133 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA133(const struct A133 *x, const struct A133 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA133() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A133), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A133, m0), 1);
		dcStructField(st, 'c', offsetof(struct A133, m1), 1);
		dcStructField(st, 'i', offsetof(struct A133, m2), 1);
		dcStructField(st, 'p', offsetof(struct A133, m3), 1);
		dcStructField(st, 'd', offsetof(struct A133, m4), 1);
		dcStructField(st, 'p', offsetof(struct A133, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjipfjj} */
struct A134 { c m0; j m1; i m2; p m3; f m4; j m5; j m6; };
void f_cpA134(struct A134 *x, const struct A134 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA134(const struct A134 *x, const struct A134 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA134() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A134), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A134, m0), 1);
		dcStructField(st, 'j', offsetof(struct A134, m1), 1);
		dcStructField(st, 'i', offsetof(struct A134, m2), 1);
		dcStructField(st, 'p', offsetof(struct A134, m3), 1);
		dcStructField(st, 'f', offsetof(struct A134, m4), 1);
		dcStructField(st, 'j', offsetof(struct A134, m5), 1);
		dcStructField(st, 'j', offsetof(struct A134, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjpsj} */
struct A135 { j m0; j m1; p m2; s m3; j m4; };
void f_cpA135(struct A135 *x, const struct A135 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA135(const struct A135 *x, const struct A135 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA135() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A135), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A135, m0), 1);
		dcStructField(st, 'j', offsetof(struct A135, m1), 1);
		dcStructField(st, 'p', offsetof(struct A135, m2), 1);
		dcStructField(st, 's', offsetof(struct A135, m3), 1);
		dcStructField(st, 'j', offsetof(struct A135, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdilcdjsddccsdjjslilddpsf} */
struct A136 { p m0; d m1; i m2; l m3; c m4; d m5; j m6; s m7; d m8; d m9; c m10; c m11; s m12; d m13; j m14; j m15; s m16; l m17; i m18; l m19; d m20; d m21; p m22; s m23; f m24; };
void f_cpA136(struct A136 *x, const struct A136 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA136(const struct A136 *x, const struct A136 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA136() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A136), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A136, m0), 1);
		dcStructField(st, 'd', offsetof(struct A136, m1), 1);
		dcStructField(st, 'i', offsetof(struct A136, m2), 1);
		dcStructField(st, 'l', offsetof(struct A136, m3), 1);
		dcStructField(st, 'c', offsetof(struct A136, m4), 1);
		dcStructField(st, 'd', offsetof(struct A136, m5), 1);
		dcStructField(st, 'j', offsetof(struct A136, m6), 1);
		dcStructField(st, 's', offsetof(struct A136, m7), 1);
		dcStructField(st, 'd', offsetof(struct A136, m8), 1);
		dcStructField(st, 'd', offsetof(struct A136, m9), 1);
		dcStructField(st, 'c', offsetof(struct A136, m10), 1);
		dcStructField(st, 'c', offsetof(struct A136, m11), 1);
		dcStructField(st, 's', offsetof(struct A136, m12), 1);
		dcStructField(st, 'd', offsetof(struct A136, m13), 1);
		dcStructField(st, 'j', offsetof(struct A136, m14), 1);
		dcStructField(st, 'j', offsetof(struct A136, m15), 1);
		dcStructField(st, 's', offsetof(struct A136, m16), 1);
		dcStructField(st, 'l', offsetof(struct A136, m17), 1);
		dcStructField(st, 'i', offsetof(struct A136, m18), 1);
		dcStructField(st, 'l', offsetof(struct A136, m19), 1);
		dcStructField(st, 'd', offsetof(struct A136, m20), 1);
		dcStructField(st, 'd', offsetof(struct A136, m21), 1);
		dcStructField(st, 'p', offsetof(struct A136, m22), 1);
		dcStructField(st, 's', offsetof(struct A136, m23), 1);
		dcStructField(st, 'f', offsetof(struct A136, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jilc{jjpsj}j{pdilcdjsddccsdjjslilddpsf}} */
struct A137 { j m0; i m1; l m2; c m3; struct A135 m4; j m5; struct A136 m6; };
void f_cpA137(struct A137 *x, const struct A137 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA135(&x->m4, &y->m4); x->m5 = y->m5; f_cpA136(&x->m6, &y->m6); };
int f_cmpA137(const struct A137 *x, const struct A137 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA135(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA136(&x->m6, &y->m6); };
DCstruct* f_touchdcstA137() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A137), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A137, m0), 1);
		dcStructField(st, 'i', offsetof(struct A137, m1), 1);
		dcStructField(st, 'l', offsetof(struct A137, m2), 1);
		dcStructField(st, 'c', offsetof(struct A137, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A137, m4), 1, f_touchdcstA135());
		dcStructField(st, 'j', offsetof(struct A137, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A137, m6), 1, f_touchdcstA136());
		dcCloseStruct(st);
	}
	return st;
};
/* {fjlis{i}cjlscifisdf{dcipdp}if{cjipfjj}jljdfjcjfscic{jilc{jjpsj}j{pdilcdjsddccsdjjslilddpsf}}ifidf} */
struct A138 { f m0; j m1; l m2; i m3; s m4; struct A2 m5; c m6; j m7; l m8; s m9; c m10; i m11; f m12; i m13; s m14; d m15; f m16; struct A133 m17; i m18; f m19; struct A134 m20; j m21; l m22; j m23; d m24; f m25; j m26; c m27; j m28; f m29; s m30; c m31; i m32; c m33; struct A137 m34; i m35; f m36; i m37; d m38; f m39; };
void f_cpA138(struct A138 *x, const struct A138 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA2(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA133(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; f_cpA134(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; f_cpA137(&x->m34, &y->m34); x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; };
int f_cmpA138(const struct A138 *x, const struct A138 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA2(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA133(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA134(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && f_cmpA137(&x->m34, &y->m34) && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39; };
DCstruct* f_touchdcstA138() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(40, sizeof(struct A138), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A138, m0), 1);
		dcStructField(st, 'j', offsetof(struct A138, m1), 1);
		dcStructField(st, 'l', offsetof(struct A138, m2), 1);
		dcStructField(st, 'i', offsetof(struct A138, m3), 1);
		dcStructField(st, 's', offsetof(struct A138, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A138, m5), 1, f_touchdcstA2());
		dcStructField(st, 'c', offsetof(struct A138, m6), 1);
		dcStructField(st, 'j', offsetof(struct A138, m7), 1);
		dcStructField(st, 'l', offsetof(struct A138, m8), 1);
		dcStructField(st, 's', offsetof(struct A138, m9), 1);
		dcStructField(st, 'c', offsetof(struct A138, m10), 1);
		dcStructField(st, 'i', offsetof(struct A138, m11), 1);
		dcStructField(st, 'f', offsetof(struct A138, m12), 1);
		dcStructField(st, 'i', offsetof(struct A138, m13), 1);
		dcStructField(st, 's', offsetof(struct A138, m14), 1);
		dcStructField(st, 'd', offsetof(struct A138, m15), 1);
		dcStructField(st, 'f', offsetof(struct A138, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A138, m17), 1, f_touchdcstA133());
		dcStructField(st, 'i', offsetof(struct A138, m18), 1);
		dcStructField(st, 'f', offsetof(struct A138, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A138, m20), 1, f_touchdcstA134());
		dcStructField(st, 'j', offsetof(struct A138, m21), 1);
		dcStructField(st, 'l', offsetof(struct A138, m22), 1);
		dcStructField(st, 'j', offsetof(struct A138, m23), 1);
		dcStructField(st, 'd', offsetof(struct A138, m24), 1);
		dcStructField(st, 'f', offsetof(struct A138, m25), 1);
		dcStructField(st, 'j', offsetof(struct A138, m26), 1);
		dcStructField(st, 'c', offsetof(struct A138, m27), 1);
		dcStructField(st, 'j', offsetof(struct A138, m28), 1);
		dcStructField(st, 'f', offsetof(struct A138, m29), 1);
		dcStructField(st, 's', offsetof(struct A138, m30), 1);
		dcStructField(st, 'c', offsetof(struct A138, m31), 1);
		dcStructField(st, 'i', offsetof(struct A138, m32), 1);
		dcStructField(st, 'c', offsetof(struct A138, m33), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A138, m34), 1, f_touchdcstA137());
		dcStructField(st, 'i', offsetof(struct A138, m35), 1);
		dcStructField(st, 'f', offsetof(struct A138, m36), 1);
		dcStructField(st, 'i', offsetof(struct A138, m37), 1);
		dcStructField(st, 'd', offsetof(struct A138, m38), 1);
		dcStructField(st, 'f', offsetof(struct A138, m39), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fijjslf} */
struct A139 { f m0; i m1; j m2; j m3; s m4; l m5; f m6; };
void f_cpA139(struct A139 *x, const struct A139 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA139(const struct A139 *x, const struct A139 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA139() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A139), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A139, m0), 1);
		dcStructField(st, 'i', offsetof(struct A139, m1), 1);
		dcStructField(st, 'j', offsetof(struct A139, m2), 1);
		dcStructField(st, 'j', offsetof(struct A139, m3), 1);
		dcStructField(st, 's', offsetof(struct A139, m4), 1);
		dcStructField(st, 'l', offsetof(struct A139, m5), 1);
		dcStructField(st, 'f', offsetof(struct A139, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lcp} */
struct A140 { l m0; c m1; p m2; };
void f_cpA140(struct A140 *x, const struct A140 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA140(const struct A140 *x, const struct A140 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA140() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A140), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A140, m0), 1);
		dcStructField(st, 'c', offsetof(struct A140, m1), 1);
		dcStructField(st, 'p', offsetof(struct A140, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilss} */
struct A141 { i m0; l m1; s m2; s m3; };
void f_cpA141(struct A141 *x, const struct A141 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA141(const struct A141 *x, const struct A141 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA141() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A141), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A141, m0), 1);
		dcStructField(st, 'l', offsetof(struct A141, m1), 1);
		dcStructField(st, 's', offsetof(struct A141, m2), 1);
		dcStructField(st, 's', offsetof(struct A141, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fidscispcsjsdpjsfp} */
struct A142 { f m0; i m1; d m2; s m3; c m4; i m5; s m6; p m7; c m8; s m9; j m10; s m11; d m12; p m13; j m14; s m15; f m16; p m17; };
void f_cpA142(struct A142 *x, const struct A142 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA142(const struct A142 *x, const struct A142 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA142() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A142), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A142, m0), 1);
		dcStructField(st, 'i', offsetof(struct A142, m1), 1);
		dcStructField(st, 'd', offsetof(struct A142, m2), 1);
		dcStructField(st, 's', offsetof(struct A142, m3), 1);
		dcStructField(st, 'c', offsetof(struct A142, m4), 1);
		dcStructField(st, 'i', offsetof(struct A142, m5), 1);
		dcStructField(st, 's', offsetof(struct A142, m6), 1);
		dcStructField(st, 'p', offsetof(struct A142, m7), 1);
		dcStructField(st, 'c', offsetof(struct A142, m8), 1);
		dcStructField(st, 's', offsetof(struct A142, m9), 1);
		dcStructField(st, 'j', offsetof(struct A142, m10), 1);
		dcStructField(st, 's', offsetof(struct A142, m11), 1);
		dcStructField(st, 'd', offsetof(struct A142, m12), 1);
		dcStructField(st, 'p', offsetof(struct A142, m13), 1);
		dcStructField(st, 'j', offsetof(struct A142, m14), 1);
		dcStructField(st, 's', offsetof(struct A142, m15), 1);
		dcStructField(st, 'f', offsetof(struct A142, m16), 1);
		dcStructField(st, 'p', offsetof(struct A142, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipsccpdddpddcjsisi} */
struct A143 { i m0; p m1; s m2; c m3; c m4; p m5; d m6; d m7; d m8; p m9; d m10; d m11; c m12; j m13; s m14; i m15; s m16; i m17; };
void f_cpA143(struct A143 *x, const struct A143 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA143(const struct A143 *x, const struct A143 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA143() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A143), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A143, m0), 1);
		dcStructField(st, 'p', offsetof(struct A143, m1), 1);
		dcStructField(st, 's', offsetof(struct A143, m2), 1);
		dcStructField(st, 'c', offsetof(struct A143, m3), 1);
		dcStructField(st, 'c', offsetof(struct A143, m4), 1);
		dcStructField(st, 'p', offsetof(struct A143, m5), 1);
		dcStructField(st, 'd', offsetof(struct A143, m6), 1);
		dcStructField(st, 'd', offsetof(struct A143, m7), 1);
		dcStructField(st, 'd', offsetof(struct A143, m8), 1);
		dcStructField(st, 'p', offsetof(struct A143, m9), 1);
		dcStructField(st, 'd', offsetof(struct A143, m10), 1);
		dcStructField(st, 'd', offsetof(struct A143, m11), 1);
		dcStructField(st, 'c', offsetof(struct A143, m12), 1);
		dcStructField(st, 'j', offsetof(struct A143, m13), 1);
		dcStructField(st, 's', offsetof(struct A143, m14), 1);
		dcStructField(st, 'i', offsetof(struct A143, m15), 1);
		dcStructField(st, 's', offsetof(struct A143, m16), 1);
		dcStructField(st, 'i', offsetof(struct A143, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pj{fidscispcsjsdpjsfp}ll{ipsccpdddpddcjsisi}dfsjsc{f}csscsf} */
struct A144 { p m0; j m1; struct A142 m2; l m3; l m4; struct A143 m5; d m6; f m7; s m8; j m9; s m10; c m11; struct A28 m12; c m13; s m14; s m15; c m16; s m17; f m18; };
void f_cpA144(struct A144 *x, const struct A144 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA142(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA143(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA28(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA144(const struct A144 *x, const struct A144 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA142(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA143(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA28(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA144() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A144), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A144, m0), 1);
		dcStructField(st, 'j', offsetof(struct A144, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A144, m2), 1, f_touchdcstA142());
		dcStructField(st, 'l', offsetof(struct A144, m3), 1);
		dcStructField(st, 'l', offsetof(struct A144, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A144, m5), 1, f_touchdcstA143());
		dcStructField(st, 'd', offsetof(struct A144, m6), 1);
		dcStructField(st, 'f', offsetof(struct A144, m7), 1);
		dcStructField(st, 's', offsetof(struct A144, m8), 1);
		dcStructField(st, 'j', offsetof(struct A144, m9), 1);
		dcStructField(st, 's', offsetof(struct A144, m10), 1);
		dcStructField(st, 'c', offsetof(struct A144, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A144, m12), 1, f_touchdcstA28());
		dcStructField(st, 'c', offsetof(struct A144, m13), 1);
		dcStructField(st, 's', offsetof(struct A144, m14), 1);
		dcStructField(st, 's', offsetof(struct A144, m15), 1);
		dcStructField(st, 'c', offsetof(struct A144, m16), 1);
		dcStructField(st, 's', offsetof(struct A144, m17), 1);
		dcStructField(st, 'f', offsetof(struct A144, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ci{pj{fidscispcsjsdpjsfp}ll{ipsccpdddpddcjsisi}dfsjsc{f}csscsf}} */
struct A145 { c m0; i m1; struct A144 m2; };
void f_cpA145(struct A145 *x, const struct A145 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA144(&x->m2, &y->m2); };
int f_cmpA145(const struct A145 *x, const struct A145 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA144(&x->m2, &y->m2); };
DCstruct* f_touchdcstA145() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A145), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A145, m0), 1);
		dcStructField(st, 'i', offsetof(struct A145, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A145, m2), 1, f_touchdcstA144());
		dcCloseStruct(st);
	}
	return st;
};
/* {psjdscjilpiisiiijilcijl} */
struct A146 { p m0; s m1; j m2; d m3; s m4; c m5; j m6; i m7; l m8; p m9; i m10; i m11; s m12; i m13; i m14; i m15; j m16; i m17; l m18; c m19; i m20; j m21; l m22; };
void f_cpA146(struct A146 *x, const struct A146 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA146(const struct A146 *x, const struct A146 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA146() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A146), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A146, m0), 1);
		dcStructField(st, 's', offsetof(struct A146, m1), 1);
		dcStructField(st, 'j', offsetof(struct A146, m2), 1);
		dcStructField(st, 'd', offsetof(struct A146, m3), 1);
		dcStructField(st, 's', offsetof(struct A146, m4), 1);
		dcStructField(st, 'c', offsetof(struct A146, m5), 1);
		dcStructField(st, 'j', offsetof(struct A146, m6), 1);
		dcStructField(st, 'i', offsetof(struct A146, m7), 1);
		dcStructField(st, 'l', offsetof(struct A146, m8), 1);
		dcStructField(st, 'p', offsetof(struct A146, m9), 1);
		dcStructField(st, 'i', offsetof(struct A146, m10), 1);
		dcStructField(st, 'i', offsetof(struct A146, m11), 1);
		dcStructField(st, 's', offsetof(struct A146, m12), 1);
		dcStructField(st, 'i', offsetof(struct A146, m13), 1);
		dcStructField(st, 'i', offsetof(struct A146, m14), 1);
		dcStructField(st, 'i', offsetof(struct A146, m15), 1);
		dcStructField(st, 'j', offsetof(struct A146, m16), 1);
		dcStructField(st, 'i', offsetof(struct A146, m17), 1);
		dcStructField(st, 'l', offsetof(struct A146, m18), 1);
		dcStructField(st, 'c', offsetof(struct A146, m19), 1);
		dcStructField(st, 'i', offsetof(struct A146, m20), 1);
		dcStructField(st, 'j', offsetof(struct A146, m21), 1);
		dcStructField(st, 'l', offsetof(struct A146, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lscjjplfjpdddsicljifff} */
struct A147 { l m0; s m1; c m2; j m3; j m4; p m5; l m6; f m7; j m8; p m9; d m10; d m11; d m12; s m13; i m14; c m15; l m16; j m17; i m18; f m19; f m20; f m21; };
void f_cpA147(struct A147 *x, const struct A147 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA147(const struct A147 *x, const struct A147 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA147() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A147), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A147, m0), 1);
		dcStructField(st, 's', offsetof(struct A147, m1), 1);
		dcStructField(st, 'c', offsetof(struct A147, m2), 1);
		dcStructField(st, 'j', offsetof(struct A147, m3), 1);
		dcStructField(st, 'j', offsetof(struct A147, m4), 1);
		dcStructField(st, 'p', offsetof(struct A147, m5), 1);
		dcStructField(st, 'l', offsetof(struct A147, m6), 1);
		dcStructField(st, 'f', offsetof(struct A147, m7), 1);
		dcStructField(st, 'j', offsetof(struct A147, m8), 1);
		dcStructField(st, 'p', offsetof(struct A147, m9), 1);
		dcStructField(st, 'd', offsetof(struct A147, m10), 1);
		dcStructField(st, 'd', offsetof(struct A147, m11), 1);
		dcStructField(st, 'd', offsetof(struct A147, m12), 1);
		dcStructField(st, 's', offsetof(struct A147, m13), 1);
		dcStructField(st, 'i', offsetof(struct A147, m14), 1);
		dcStructField(st, 'c', offsetof(struct A147, m15), 1);
		dcStructField(st, 'l', offsetof(struct A147, m16), 1);
		dcStructField(st, 'j', offsetof(struct A147, m17), 1);
		dcStructField(st, 'i', offsetof(struct A147, m18), 1);
		dcStructField(st, 'f', offsetof(struct A147, m19), 1);
		dcStructField(st, 'f', offsetof(struct A147, m20), 1);
		dcStructField(st, 'f', offsetof(struct A147, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lisssfdfdipffdllildl} */
struct A148 { l m0; i m1; s m2; s m3; s m4; f m5; d m6; f m7; d m8; i m9; p m10; f m11; f m12; d m13; l m14; l m15; i m16; l m17; d m18; l m19; };
void f_cpA148(struct A148 *x, const struct A148 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA148(const struct A148 *x, const struct A148 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA148() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A148), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A148, m0), 1);
		dcStructField(st, 'i', offsetof(struct A148, m1), 1);
		dcStructField(st, 's', offsetof(struct A148, m2), 1);
		dcStructField(st, 's', offsetof(struct A148, m3), 1);
		dcStructField(st, 's', offsetof(struct A148, m4), 1);
		dcStructField(st, 'f', offsetof(struct A148, m5), 1);
		dcStructField(st, 'd', offsetof(struct A148, m6), 1);
		dcStructField(st, 'f', offsetof(struct A148, m7), 1);
		dcStructField(st, 'd', offsetof(struct A148, m8), 1);
		dcStructField(st, 'i', offsetof(struct A148, m9), 1);
		dcStructField(st, 'p', offsetof(struct A148, m10), 1);
		dcStructField(st, 'f', offsetof(struct A148, m11), 1);
		dcStructField(st, 'f', offsetof(struct A148, m12), 1);
		dcStructField(st, 'd', offsetof(struct A148, m13), 1);
		dcStructField(st, 'l', offsetof(struct A148, m14), 1);
		dcStructField(st, 'l', offsetof(struct A148, m15), 1);
		dcStructField(st, 'i', offsetof(struct A148, m16), 1);
		dcStructField(st, 'l', offsetof(struct A148, m17), 1);
		dcStructField(st, 'd', offsetof(struct A148, m18), 1);
		dcStructField(st, 'l', offsetof(struct A148, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {piil} */
struct A149 { p m0; i m1; i m2; l m3; };
void f_cpA149(struct A149 *x, const struct A149 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA149(const struct A149 *x, const struct A149 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA149() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A149), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A149, m0), 1);
		dcStructField(st, 'i', offsetof(struct A149, m1), 1);
		dcStructField(st, 'i', offsetof(struct A149, m2), 1);
		dcStructField(st, 'l', offsetof(struct A149, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cl} */
struct A150 { c m0; l m1; };
void f_cpA150(struct A150 *x, const struct A150 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA150(const struct A150 *x, const struct A150 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA150() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A150), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A150, m0), 1);
		dcStructField(st, 'l', offsetof(struct A150, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djc} */
struct A151 { d m0; j m1; c m2; };
void f_cpA151(struct A151 *x, const struct A151 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA151(const struct A151 *x, const struct A151 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA151() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A151), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A151, m0), 1);
		dcStructField(st, 'j', offsetof(struct A151, m1), 1);
		dcStructField(st, 'c', offsetof(struct A151, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjjsllilsiljicscs{djc}pfcl} */
struct A152 { f m0; j m1; j m2; s m3; l m4; l m5; i m6; l m7; s m8; i m9; l m10; j m11; i m12; c m13; s m14; c m15; s m16; struct A151 m17; p m18; f m19; c m20; l m21; };
void f_cpA152(struct A152 *x, const struct A152 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA151(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA152(const struct A152 *x, const struct A152 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA151(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA152() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A152), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A152, m0), 1);
		dcStructField(st, 'j', offsetof(struct A152, m1), 1);
		dcStructField(st, 'j', offsetof(struct A152, m2), 1);
		dcStructField(st, 's', offsetof(struct A152, m3), 1);
		dcStructField(st, 'l', offsetof(struct A152, m4), 1);
		dcStructField(st, 'l', offsetof(struct A152, m5), 1);
		dcStructField(st, 'i', offsetof(struct A152, m6), 1);
		dcStructField(st, 'l', offsetof(struct A152, m7), 1);
		dcStructField(st, 's', offsetof(struct A152, m8), 1);
		dcStructField(st, 'i', offsetof(struct A152, m9), 1);
		dcStructField(st, 'l', offsetof(struct A152, m10), 1);
		dcStructField(st, 'j', offsetof(struct A152, m11), 1);
		dcStructField(st, 'i', offsetof(struct A152, m12), 1);
		dcStructField(st, 'c', offsetof(struct A152, m13), 1);
		dcStructField(st, 's', offsetof(struct A152, m14), 1);
		dcStructField(st, 'c', offsetof(struct A152, m15), 1);
		dcStructField(st, 's', offsetof(struct A152, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A152, m17), 1, f_touchdcstA151());
		dcStructField(st, 'p', offsetof(struct A152, m18), 1);
		dcStructField(st, 'f', offsetof(struct A152, m19), 1);
		dcStructField(st, 'c', offsetof(struct A152, m20), 1);
		dcStructField(st, 'l', offsetof(struct A152, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fc} */
struct A153 { f m0; c m1; };
void f_cpA153(struct A153 *x, const struct A153 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA153(const struct A153 *x, const struct A153 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA153() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A153), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A153, m0), 1);
		dcStructField(st, 'c', offsetof(struct A153, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jflfjfidipi} */
struct A154 { j m0; f m1; l m2; f m3; j m4; f m5; i m6; d m7; i m8; p m9; i m10; };
void f_cpA154(struct A154 *x, const struct A154 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA154(const struct A154 *x, const struct A154 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA154() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A154), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A154, m0), 1);
		dcStructField(st, 'f', offsetof(struct A154, m1), 1);
		dcStructField(st, 'l', offsetof(struct A154, m2), 1);
		dcStructField(st, 'f', offsetof(struct A154, m3), 1);
		dcStructField(st, 'j', offsetof(struct A154, m4), 1);
		dcStructField(st, 'f', offsetof(struct A154, m5), 1);
		dcStructField(st, 'i', offsetof(struct A154, m6), 1);
		dcStructField(st, 'd', offsetof(struct A154, m7), 1);
		dcStructField(st, 'i', offsetof(struct A154, m8), 1);
		dcStructField(st, 'p', offsetof(struct A154, m9), 1);
		dcStructField(st, 'i', offsetof(struct A154, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdiiljs} */
struct A155 { j m0; d m1; i m2; i m3; l m4; j m5; s m6; };
void f_cpA155(struct A155 *x, const struct A155 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA155(const struct A155 *x, const struct A155 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA155() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A155), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A155, m0), 1);
		dcStructField(st, 'd', offsetof(struct A155, m1), 1);
		dcStructField(st, 'i', offsetof(struct A155, m2), 1);
		dcStructField(st, 'i', offsetof(struct A155, m3), 1);
		dcStructField(st, 'l', offsetof(struct A155, m4), 1);
		dcStructField(st, 'j', offsetof(struct A155, m5), 1);
		dcStructField(st, 's', offsetof(struct A155, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ll{fc}jf{jflfjfidipi}sdlcpj{jdiiljs}} */
struct A156 { l m0; l m1; struct A153 m2; j m3; f m4; struct A154 m5; s m6; d m7; l m8; c m9; p m10; j m11; struct A155 m12; };
void f_cpA156(struct A156 *x, const struct A156 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA153(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA154(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA155(&x->m12, &y->m12); };
int f_cmpA156(const struct A156 *x, const struct A156 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA153(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA154(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA155(&x->m12, &y->m12); };
DCstruct* f_touchdcstA156() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A156), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A156, m0), 1);
		dcStructField(st, 'l', offsetof(struct A156, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A156, m2), 1, f_touchdcstA153());
		dcStructField(st, 'j', offsetof(struct A156, m3), 1);
		dcStructField(st, 'f', offsetof(struct A156, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A156, m5), 1, f_touchdcstA154());
		dcStructField(st, 's', offsetof(struct A156, m6), 1);
		dcStructField(st, 'd', offsetof(struct A156, m7), 1);
		dcStructField(st, 'l', offsetof(struct A156, m8), 1);
		dcStructField(st, 'c', offsetof(struct A156, m9), 1);
		dcStructField(st, 'p', offsetof(struct A156, m10), 1);
		dcStructField(st, 'j', offsetof(struct A156, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A156, m12), 1, f_touchdcstA155());
		dcCloseStruct(st);
	}
	return st;
};
/* {d{ll{fc}jf{jflfjfidipi}sdlcpj{jdiiljs}}spj} */
struct A157 { d m0; struct A156 m1; s m2; p m3; j m4; };
void f_cpA157(struct A157 *x, const struct A157 *y) { x->m0 = y->m0; f_cpA156(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA157(const struct A157 *x, const struct A157 *y) { return x->m0 == y->m0 && f_cmpA156(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA157() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A157), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A157, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A157, m1), 1, f_touchdcstA156());
		dcStructField(st, 's', offsetof(struct A157, m2), 1);
		dcStructField(st, 'p', offsetof(struct A157, m3), 1);
		dcStructField(st, 'j', offsetof(struct A157, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sp} */
struct A158 { s m0; p m1; };
void f_cpA158(struct A158 *x, const struct A158 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA158(const struct A158 *x, const struct A158 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA158() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A158), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A158, m0), 1);
		dcStructField(st, 'p', offsetof(struct A158, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdid} */
struct A159 { f m0; d m1; i m2; d m3; };
void f_cpA159(struct A159 *x, const struct A159 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA159(const struct A159 *x, const struct A159 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA159() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A159), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A159, m0), 1);
		dcStructField(st, 'd', offsetof(struct A159, m1), 1);
		dcStructField(st, 'i', offsetof(struct A159, m2), 1);
		dcStructField(st, 'd', offsetof(struct A159, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipccsdfssc} */
struct A160 { i m0; p m1; c m2; c m3; s m4; d m5; f m6; s m7; s m8; c m9; };
void f_cpA160(struct A160 *x, const struct A160 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA160(const struct A160 *x, const struct A160 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA160() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A160), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A160, m0), 1);
		dcStructField(st, 'p', offsetof(struct A160, m1), 1);
		dcStructField(st, 'c', offsetof(struct A160, m2), 1);
		dcStructField(st, 'c', offsetof(struct A160, m3), 1);
		dcStructField(st, 's', offsetof(struct A160, m4), 1);
		dcStructField(st, 'd', offsetof(struct A160, m5), 1);
		dcStructField(st, 'f', offsetof(struct A160, m6), 1);
		dcStructField(st, 's', offsetof(struct A160, m7), 1);
		dcStructField(st, 's', offsetof(struct A160, m8), 1);
		dcStructField(st, 'c', offsetof(struct A160, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsccjlcjpcd} */
struct A161 { l m0; s m1; c m2; c m3; j m4; l m5; c m6; j m7; p m8; c m9; d m10; };
void f_cpA161(struct A161 *x, const struct A161 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA161(const struct A161 *x, const struct A161 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA161() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A161), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A161, m0), 1);
		dcStructField(st, 's', offsetof(struct A161, m1), 1);
		dcStructField(st, 'c', offsetof(struct A161, m2), 1);
		dcStructField(st, 'c', offsetof(struct A161, m3), 1);
		dcStructField(st, 'j', offsetof(struct A161, m4), 1);
		dcStructField(st, 'l', offsetof(struct A161, m5), 1);
		dcStructField(st, 'c', offsetof(struct A161, m6), 1);
		dcStructField(st, 'j', offsetof(struct A161, m7), 1);
		dcStructField(st, 'p', offsetof(struct A161, m8), 1);
		dcStructField(st, 'c', offsetof(struct A161, m9), 1);
		dcStructField(st, 'd', offsetof(struct A161, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfcjj{fdid}ddpcpjsjissil{ipccsdfssc}cddildcsicdfic{lsccjlcjpcd}cd} */
struct A162 { d m0; f m1; c m2; j m3; j m4; struct A159 m5; d m6; d m7; p m8; c m9; p m10; j m11; s m12; j m13; i m14; s m15; s m16; i m17; l m18; struct A160 m19; c m20; d m21; d m22; i m23; l m24; d m25; c m26; s m27; i m28; c m29; d m30; f m31; i m32; c m33; struct A161 m34; c m35; d m36; };
void f_cpA162(struct A162 *x, const struct A162 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA159(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA160(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; f_cpA161(&x->m34, &y->m34); x->m35 = y->m35; x->m36 = y->m36; };
int f_cmpA162(const struct A162 *x, const struct A162 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA159(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA160(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && f_cmpA161(&x->m34, &y->m34) && x->m35 == y->m35 && x->m36 == y->m36; };
DCstruct* f_touchdcstA162() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(37, sizeof(struct A162), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A162, m0), 1);
		dcStructField(st, 'f', offsetof(struct A162, m1), 1);
		dcStructField(st, 'c', offsetof(struct A162, m2), 1);
		dcStructField(st, 'j', offsetof(struct A162, m3), 1);
		dcStructField(st, 'j', offsetof(struct A162, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A162, m5), 1, f_touchdcstA159());
		dcStructField(st, 'd', offsetof(struct A162, m6), 1);
		dcStructField(st, 'd', offsetof(struct A162, m7), 1);
		dcStructField(st, 'p', offsetof(struct A162, m8), 1);
		dcStructField(st, 'c', offsetof(struct A162, m9), 1);
		dcStructField(st, 'p', offsetof(struct A162, m10), 1);
		dcStructField(st, 'j', offsetof(struct A162, m11), 1);
		dcStructField(st, 's', offsetof(struct A162, m12), 1);
		dcStructField(st, 'j', offsetof(struct A162, m13), 1);
		dcStructField(st, 'i', offsetof(struct A162, m14), 1);
		dcStructField(st, 's', offsetof(struct A162, m15), 1);
		dcStructField(st, 's', offsetof(struct A162, m16), 1);
		dcStructField(st, 'i', offsetof(struct A162, m17), 1);
		dcStructField(st, 'l', offsetof(struct A162, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A162, m19), 1, f_touchdcstA160());
		dcStructField(st, 'c', offsetof(struct A162, m20), 1);
		dcStructField(st, 'd', offsetof(struct A162, m21), 1);
		dcStructField(st, 'd', offsetof(struct A162, m22), 1);
		dcStructField(st, 'i', offsetof(struct A162, m23), 1);
		dcStructField(st, 'l', offsetof(struct A162, m24), 1);
		dcStructField(st, 'd', offsetof(struct A162, m25), 1);
		dcStructField(st, 'c', offsetof(struct A162, m26), 1);
		dcStructField(st, 's', offsetof(struct A162, m27), 1);
		dcStructField(st, 'i', offsetof(struct A162, m28), 1);
		dcStructField(st, 'c', offsetof(struct A162, m29), 1);
		dcStructField(st, 'd', offsetof(struct A162, m30), 1);
		dcStructField(st, 'f', offsetof(struct A162, m31), 1);
		dcStructField(st, 'i', offsetof(struct A162, m32), 1);
		dcStructField(st, 'c', offsetof(struct A162, m33), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A162, m34), 1, f_touchdcstA161());
		dcStructField(st, 'c', offsetof(struct A162, m35), 1);
		dcStructField(st, 'd', offsetof(struct A162, m36), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sji} */
struct A163 { s m0; j m1; i m2; };
void f_cpA163(struct A163 *x, const struct A163 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA163(const struct A163 *x, const struct A163 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA163() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A163), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A163, m0), 1);
		dcStructField(st, 'j', offsetof(struct A163, m1), 1);
		dcStructField(st, 'i', offsetof(struct A163, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{sji}pllf} */
struct A164 { p m0; struct A163 m1; p m2; l m3; l m4; f m5; };
void f_cpA164(struct A164 *x, const struct A164 *y) { x->m0 = y->m0; f_cpA163(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA164(const struct A164 *x, const struct A164 *y) { return x->m0 == y->m0 && f_cmpA163(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA164() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A164), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A164, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A164, m1), 1, f_touchdcstA163());
		dcStructField(st, 'p', offsetof(struct A164, m2), 1);
		dcStructField(st, 'l', offsetof(struct A164, m3), 1);
		dcStructField(st, 'l', offsetof(struct A164, m4), 1);
		dcStructField(st, 'f', offsetof(struct A164, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jslppfjdddfsjljfjpp} */
struct A165 { j m0; s m1; l m2; p m3; p m4; f m5; j m6; d m7; d m8; d m9; f m10; s m11; j m12; l m13; j m14; f m15; j m16; p m17; p m18; };
void f_cpA165(struct A165 *x, const struct A165 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA165(const struct A165 *x, const struct A165 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA165() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A165), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A165, m0), 1);
		dcStructField(st, 's', offsetof(struct A165, m1), 1);
		dcStructField(st, 'l', offsetof(struct A165, m2), 1);
		dcStructField(st, 'p', offsetof(struct A165, m3), 1);
		dcStructField(st, 'p', offsetof(struct A165, m4), 1);
		dcStructField(st, 'f', offsetof(struct A165, m5), 1);
		dcStructField(st, 'j', offsetof(struct A165, m6), 1);
		dcStructField(st, 'd', offsetof(struct A165, m7), 1);
		dcStructField(st, 'd', offsetof(struct A165, m8), 1);
		dcStructField(st, 'd', offsetof(struct A165, m9), 1);
		dcStructField(st, 'f', offsetof(struct A165, m10), 1);
		dcStructField(st, 's', offsetof(struct A165, m11), 1);
		dcStructField(st, 'j', offsetof(struct A165, m12), 1);
		dcStructField(st, 'l', offsetof(struct A165, m13), 1);
		dcStructField(st, 'j', offsetof(struct A165, m14), 1);
		dcStructField(st, 'f', offsetof(struct A165, m15), 1);
		dcStructField(st, 'j', offsetof(struct A165, m16), 1);
		dcStructField(st, 'p', offsetof(struct A165, m17), 1);
		dcStructField(st, 'p', offsetof(struct A165, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dl{jslppfjdddfsjljfjpp}c} */
struct A166 { d m0; l m1; struct A165 m2; c m3; };
void f_cpA166(struct A166 *x, const struct A166 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA165(&x->m2, &y->m2); x->m3 = y->m3; };
int f_cmpA166(const struct A166 *x, const struct A166 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA165(&x->m2, &y->m2) && x->m3 == y->m3; };
DCstruct* f_touchdcstA166() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A166), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A166, m0), 1);
		dcStructField(st, 'l', offsetof(struct A166, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A166, m2), 1, f_touchdcstA165());
		dcStructField(st, 'c', offsetof(struct A166, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cs} */
struct A167 { c m0; s m1; };
void f_cpA167(struct A167 *x, const struct A167 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA167(const struct A167 *x, const struct A167 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA167() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A167), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A167, m0), 1);
		dcStructField(st, 's', offsetof(struct A167, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lljlpdflplj} */
struct A168 { l m0; l m1; j m2; l m3; p m4; d m5; f m6; l m7; p m8; l m9; j m10; };
void f_cpA168(struct A168 *x, const struct A168 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA168(const struct A168 *x, const struct A168 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA168() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A168), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A168, m0), 1);
		dcStructField(st, 'l', offsetof(struct A168, m1), 1);
		dcStructField(st, 'j', offsetof(struct A168, m2), 1);
		dcStructField(st, 'l', offsetof(struct A168, m3), 1);
		dcStructField(st, 'p', offsetof(struct A168, m4), 1);
		dcStructField(st, 'd', offsetof(struct A168, m5), 1);
		dcStructField(st, 'f', offsetof(struct A168, m6), 1);
		dcStructField(st, 'l', offsetof(struct A168, m7), 1);
		dcStructField(st, 'p', offsetof(struct A168, m8), 1);
		dcStructField(st, 'l', offsetof(struct A168, m9), 1);
		dcStructField(st, 'j', offsetof(struct A168, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lissj} */
struct A169 { l m0; i m1; s m2; s m3; j m4; };
void f_cpA169(struct A169 *x, const struct A169 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA169(const struct A169 *x, const struct A169 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA169() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A169), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A169, m0), 1);
		dcStructField(st, 'i', offsetof(struct A169, m1), 1);
		dcStructField(st, 's', offsetof(struct A169, m2), 1);
		dcStructField(st, 's', offsetof(struct A169, m3), 1);
		dcStructField(st, 'j', offsetof(struct A169, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{lissj}pjscli} */
struct A170 { struct A169 m0; p m1; j m2; s m3; c m4; l m5; i m6; };
void f_cpA170(struct A170 *x, const struct A170 *y) { f_cpA169(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA170(const struct A170 *x, const struct A170 *y) { return f_cmpA169(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA170() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A170), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A170, m0), 1, f_touchdcstA169());
		dcStructField(st, 'p', offsetof(struct A170, m1), 1);
		dcStructField(st, 'j', offsetof(struct A170, m2), 1);
		dcStructField(st, 's', offsetof(struct A170, m3), 1);
		dcStructField(st, 'c', offsetof(struct A170, m4), 1);
		dcStructField(st, 'l', offsetof(struct A170, m5), 1);
		dcStructField(st, 'i', offsetof(struct A170, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {licf} */
struct A171 { l m0; i m1; c m2; f m3; };
void f_cpA171(struct A171 *x, const struct A171 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA171(const struct A171 *x, const struct A171 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA171() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A171), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A171, m0), 1);
		dcStructField(st, 'i', offsetof(struct A171, m1), 1);
		dcStructField(st, 'c', offsetof(struct A171, m2), 1);
		dcStructField(st, 'f', offsetof(struct A171, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppdifpjddis} */
struct A172 { p m0; p m1; d m2; i m3; f m4; p m5; j m6; d m7; d m8; i m9; s m10; };
void f_cpA172(struct A172 *x, const struct A172 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA172(const struct A172 *x, const struct A172 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA172() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A172), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A172, m0), 1);
		dcStructField(st, 'p', offsetof(struct A172, m1), 1);
		dcStructField(st, 'd', offsetof(struct A172, m2), 1);
		dcStructField(st, 'i', offsetof(struct A172, m3), 1);
		dcStructField(st, 'f', offsetof(struct A172, m4), 1);
		dcStructField(st, 'p', offsetof(struct A172, m5), 1);
		dcStructField(st, 'j', offsetof(struct A172, m6), 1);
		dcStructField(st, 'd', offsetof(struct A172, m7), 1);
		dcStructField(st, 'd', offsetof(struct A172, m8), 1);
		dcStructField(st, 'i', offsetof(struct A172, m9), 1);
		dcStructField(st, 's', offsetof(struct A172, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{licf}csicpijjfifd{ppdifpjddis}csfcidiijlffs} */
struct A173 { struct A171 m0; c m1; s m2; i m3; c m4; p m5; i m6; j m7; j m8; f m9; i m10; f m11; d m12; struct A172 m13; c m14; s m15; f m16; c m17; i m18; d m19; i m20; i m21; j m22; l m23; f m24; f m25; s m26; };
void f_cpA173(struct A173 *x, const struct A173 *y) { f_cpA171(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA172(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA173(const struct A173 *x, const struct A173 *y) { return f_cmpA171(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA172(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA173() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(struct A173), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A173, m0), 1, f_touchdcstA171());
		dcStructField(st, 'c', offsetof(struct A173, m1), 1);
		dcStructField(st, 's', offsetof(struct A173, m2), 1);
		dcStructField(st, 'i', offsetof(struct A173, m3), 1);
		dcStructField(st, 'c', offsetof(struct A173, m4), 1);
		dcStructField(st, 'p', offsetof(struct A173, m5), 1);
		dcStructField(st, 'i', offsetof(struct A173, m6), 1);
		dcStructField(st, 'j', offsetof(struct A173, m7), 1);
		dcStructField(st, 'j', offsetof(struct A173, m8), 1);
		dcStructField(st, 'f', offsetof(struct A173, m9), 1);
		dcStructField(st, 'i', offsetof(struct A173, m10), 1);
		dcStructField(st, 'f', offsetof(struct A173, m11), 1);
		dcStructField(st, 'd', offsetof(struct A173, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A173, m13), 1, f_touchdcstA172());
		dcStructField(st, 'c', offsetof(struct A173, m14), 1);
		dcStructField(st, 's', offsetof(struct A173, m15), 1);
		dcStructField(st, 'f', offsetof(struct A173, m16), 1);
		dcStructField(st, 'c', offsetof(struct A173, m17), 1);
		dcStructField(st, 'i', offsetof(struct A173, m18), 1);
		dcStructField(st, 'd', offsetof(struct A173, m19), 1);
		dcStructField(st, 'i', offsetof(struct A173, m20), 1);
		dcStructField(st, 'i', offsetof(struct A173, m21), 1);
		dcStructField(st, 'j', offsetof(struct A173, m22), 1);
		dcStructField(st, 'l', offsetof(struct A173, m23), 1);
		dcStructField(st, 'f', offsetof(struct A173, m24), 1);
		dcStructField(st, 'f', offsetof(struct A173, m25), 1);
		dcStructField(st, 's', offsetof(struct A173, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfi{{licf}csicpijjfifd{ppdifpjddis}csfcidiijlffs}j} */
struct A174 { p m0; f m1; i m2; struct A173 m3; j m4; };
void f_cpA174(struct A174 *x, const struct A174 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA173(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA174(const struct A174 *x, const struct A174 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA173(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA174() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A174), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A174, m0), 1);
		dcStructField(st, 'f', offsetof(struct A174, m1), 1);
		dcStructField(st, 'i', offsetof(struct A174, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A174, m3), 1, f_touchdcstA173());
		dcStructField(st, 'j', offsetof(struct A174, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlsflsd} */
struct A175 { j m0; l m1; s m2; f m3; l m4; s m5; d m6; };
void f_cpA175(struct A175 *x, const struct A175 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA175(const struct A175 *x, const struct A175 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA175() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A175), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A175, m0), 1);
		dcStructField(st, 'l', offsetof(struct A175, m1), 1);
		dcStructField(st, 's', offsetof(struct A175, m2), 1);
		dcStructField(st, 'f', offsetof(struct A175, m3), 1);
		dcStructField(st, 'l', offsetof(struct A175, m4), 1);
		dcStructField(st, 's', offsetof(struct A175, m5), 1);
		dcStructField(st, 'd', offsetof(struct A175, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jisj} */
struct A176 { j m0; i m1; s m2; j m3; };
void f_cpA176(struct A176 *x, const struct A176 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA176(const struct A176 *x, const struct A176 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA176() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A176), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A176, m0), 1);
		dcStructField(st, 'i', offsetof(struct A176, m1), 1);
		dcStructField(st, 's', offsetof(struct A176, m2), 1);
		dcStructField(st, 'j', offsetof(struct A176, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpf} */
struct A177 { d m0; p m1; f m2; };
void f_cpA177(struct A177 *x, const struct A177 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA177(const struct A177 *x, const struct A177 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA177() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A177), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A177, m0), 1);
		dcStructField(st, 'p', offsetof(struct A177, m1), 1);
		dcStructField(st, 'f', offsetof(struct A177, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {id} */
struct A178 { i m0; d m1; };
void f_cpA178(struct A178 *x, const struct A178 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA178(const struct A178 *x, const struct A178 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA178() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A178), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A178, m0), 1);
		dcStructField(st, 'd', offsetof(struct A178, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfpp} */
struct A179 { d m0; f m1; p m2; p m3; };
void f_cpA179(struct A179 *x, const struct A179 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA179(const struct A179 *x, const struct A179 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA179() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A179), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A179, m0), 1);
		dcStructField(st, 'f', offsetof(struct A179, m1), 1);
		dcStructField(st, 'p', offsetof(struct A179, m2), 1);
		dcStructField(st, 'p', offsetof(struct A179, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfipjjc} */
struct A180 { c m0; f m1; i m2; p m3; j m4; j m5; c m6; };
void f_cpA180(struct A180 *x, const struct A180 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA180(const struct A180 *x, const struct A180 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA180() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A180), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A180, m0), 1);
		dcStructField(st, 'f', offsetof(struct A180, m1), 1);
		dcStructField(st, 'i', offsetof(struct A180, m2), 1);
		dcStructField(st, 'p', offsetof(struct A180, m3), 1);
		dcStructField(st, 'j', offsetof(struct A180, m4), 1);
		dcStructField(st, 'j', offsetof(struct A180, m5), 1);
		dcStructField(st, 'c', offsetof(struct A180, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{cfipjjc}pp} */
struct A181 { struct A180 m0; p m1; p m2; };
void f_cpA181(struct A181 *x, const struct A181 *y) { f_cpA180(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA181(const struct A181 *x, const struct A181 *y) { return f_cmpA180(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA181() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A181), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A181, m0), 1, f_touchdcstA180());
		dcStructField(st, 'p', offsetof(struct A181, m1), 1);
		dcStructField(st, 'p', offsetof(struct A181, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slppfpfjpcccpjiss} */
struct A182 { s m0; l m1; p m2; p m3; f m4; p m5; f m6; j m7; p m8; c m9; c m10; c m11; p m12; j m13; i m14; s m15; s m16; };
void f_cpA182(struct A182 *x, const struct A182 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA182(const struct A182 *x, const struct A182 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA182() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A182), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A182, m0), 1);
		dcStructField(st, 'l', offsetof(struct A182, m1), 1);
		dcStructField(st, 'p', offsetof(struct A182, m2), 1);
		dcStructField(st, 'p', offsetof(struct A182, m3), 1);
		dcStructField(st, 'f', offsetof(struct A182, m4), 1);
		dcStructField(st, 'p', offsetof(struct A182, m5), 1);
		dcStructField(st, 'f', offsetof(struct A182, m6), 1);
		dcStructField(st, 'j', offsetof(struct A182, m7), 1);
		dcStructField(st, 'p', offsetof(struct A182, m8), 1);
		dcStructField(st, 'c', offsetof(struct A182, m9), 1);
		dcStructField(st, 'c', offsetof(struct A182, m10), 1);
		dcStructField(st, 'c', offsetof(struct A182, m11), 1);
		dcStructField(st, 'p', offsetof(struct A182, m12), 1);
		dcStructField(st, 'j', offsetof(struct A182, m13), 1);
		dcStructField(st, 'i', offsetof(struct A182, m14), 1);
		dcStructField(st, 's', offsetof(struct A182, m15), 1);
		dcStructField(st, 's', offsetof(struct A182, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clpfdsldspipdlfdfsj} */
struct A183 { c m0; l m1; p m2; f m3; d m4; s m5; l m6; d m7; s m8; p m9; i m10; p m11; d m12; l m13; f m14; d m15; f m16; s m17; j m18; };
void f_cpA183(struct A183 *x, const struct A183 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA183(const struct A183 *x, const struct A183 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA183() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A183), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A183, m0), 1);
		dcStructField(st, 'l', offsetof(struct A183, m1), 1);
		dcStructField(st, 'p', offsetof(struct A183, m2), 1);
		dcStructField(st, 'f', offsetof(struct A183, m3), 1);
		dcStructField(st, 'd', offsetof(struct A183, m4), 1);
		dcStructField(st, 's', offsetof(struct A183, m5), 1);
		dcStructField(st, 'l', offsetof(struct A183, m6), 1);
		dcStructField(st, 'd', offsetof(struct A183, m7), 1);
		dcStructField(st, 's', offsetof(struct A183, m8), 1);
		dcStructField(st, 'p', offsetof(struct A183, m9), 1);
		dcStructField(st, 'i', offsetof(struct A183, m10), 1);
		dcStructField(st, 'p', offsetof(struct A183, m11), 1);
		dcStructField(st, 'd', offsetof(struct A183, m12), 1);
		dcStructField(st, 'l', offsetof(struct A183, m13), 1);
		dcStructField(st, 'f', offsetof(struct A183, m14), 1);
		dcStructField(st, 'd', offsetof(struct A183, m15), 1);
		dcStructField(st, 'f', offsetof(struct A183, m16), 1);
		dcStructField(st, 's', offsetof(struct A183, m17), 1);
		dcStructField(st, 'j', offsetof(struct A183, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cisp} */
struct A184 { c m0; i m1; s m2; p m3; };
void f_cpA184(struct A184 *x, const struct A184 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA184(const struct A184 *x, const struct A184 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA184() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A184), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A184, m0), 1);
		dcStructField(st, 'i', offsetof(struct A184, m1), 1);
		dcStructField(st, 's', offsetof(struct A184, m2), 1);
		dcStructField(st, 'p', offsetof(struct A184, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{cisp}jcjdilp} */
struct A185 { struct A184 m0; j m1; c m2; j m3; d m4; i m5; l m6; p m7; };
void f_cpA185(struct A185 *x, const struct A185 *y) { f_cpA184(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA185(const struct A185 *x, const struct A185 *y) { return f_cmpA184(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA185() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A185), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A185, m0), 1, f_touchdcstA184());
		dcStructField(st, 'j', offsetof(struct A185, m1), 1);
		dcStructField(st, 'c', offsetof(struct A185, m2), 1);
		dcStructField(st, 'j', offsetof(struct A185, m3), 1);
		dcStructField(st, 'd', offsetof(struct A185, m4), 1);
		dcStructField(st, 'i', offsetof(struct A185, m5), 1);
		dcStructField(st, 'l', offsetof(struct A185, m6), 1);
		dcStructField(st, 'p', offsetof(struct A185, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{l}sljspdjfccii{{cisp}jcjdilp}ic} */
struct A186 { struct A11 m0; s m1; l m2; j m3; s m4; p m5; d m6; j m7; f m8; c m9; c m10; i m11; i m12; struct A185 m13; i m14; c m15; };
void f_cpA186(struct A186 *x, const struct A186 *y) { f_cpA11(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA185(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA186(const struct A186 *x, const struct A186 *y) { return f_cmpA11(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA185(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA186() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A186), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A186, m0), 1, f_touchdcstA11());
		dcStructField(st, 's', offsetof(struct A186, m1), 1);
		dcStructField(st, 'l', offsetof(struct A186, m2), 1);
		dcStructField(st, 'j', offsetof(struct A186, m3), 1);
		dcStructField(st, 's', offsetof(struct A186, m4), 1);
		dcStructField(st, 'p', offsetof(struct A186, m5), 1);
		dcStructField(st, 'd', offsetof(struct A186, m6), 1);
		dcStructField(st, 'j', offsetof(struct A186, m7), 1);
		dcStructField(st, 'f', offsetof(struct A186, m8), 1);
		dcStructField(st, 'c', offsetof(struct A186, m9), 1);
		dcStructField(st, 'c', offsetof(struct A186, m10), 1);
		dcStructField(st, 'i', offsetof(struct A186, m11), 1);
		dcStructField(st, 'i', offsetof(struct A186, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A186, m13), 1, f_touchdcstA185());
		dcStructField(st, 'i', offsetof(struct A186, m14), 1);
		dcStructField(st, 'c', offsetof(struct A186, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fljidjsdffsfpjdsfcjf} */
struct A187 { f m0; l m1; j m2; i m3; d m4; j m5; s m6; d m7; f m8; f m9; s m10; f m11; p m12; j m13; d m14; s m15; f m16; c m17; j m18; f m19; };
void f_cpA187(struct A187 *x, const struct A187 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA187(const struct A187 *x, const struct A187 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA187() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A187), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A187, m0), 1);
		dcStructField(st, 'l', offsetof(struct A187, m1), 1);
		dcStructField(st, 'j', offsetof(struct A187, m2), 1);
		dcStructField(st, 'i', offsetof(struct A187, m3), 1);
		dcStructField(st, 'd', offsetof(struct A187, m4), 1);
		dcStructField(st, 'j', offsetof(struct A187, m5), 1);
		dcStructField(st, 's', offsetof(struct A187, m6), 1);
		dcStructField(st, 'd', offsetof(struct A187, m7), 1);
		dcStructField(st, 'f', offsetof(struct A187, m8), 1);
		dcStructField(st, 'f', offsetof(struct A187, m9), 1);
		dcStructField(st, 's', offsetof(struct A187, m10), 1);
		dcStructField(st, 'f', offsetof(struct A187, m11), 1);
		dcStructField(st, 'p', offsetof(struct A187, m12), 1);
		dcStructField(st, 'j', offsetof(struct A187, m13), 1);
		dcStructField(st, 'd', offsetof(struct A187, m14), 1);
		dcStructField(st, 's', offsetof(struct A187, m15), 1);
		dcStructField(st, 'f', offsetof(struct A187, m16), 1);
		dcStructField(st, 'c', offsetof(struct A187, m17), 1);
		dcStructField(st, 'j', offsetof(struct A187, m18), 1);
		dcStructField(st, 'f', offsetof(struct A187, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccpji} */
struct A188 { c m0; c m1; p m2; j m3; i m4; };
void f_cpA188(struct A188 *x, const struct A188 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA188(const struct A188 *x, const struct A188 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA188() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A188), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A188, m0), 1);
		dcStructField(st, 'c', offsetof(struct A188, m1), 1);
		dcStructField(st, 'p', offsetof(struct A188, m2), 1);
		dcStructField(st, 'j', offsetof(struct A188, m3), 1);
		dcStructField(st, 'i', offsetof(struct A188, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdcfcsdjjlcdjlipfji} */
struct A189 { j m0; d m1; c m2; f m3; c m4; s m5; d m6; j m7; j m8; l m9; c m10; d m11; j m12; l m13; i m14; p m15; f m16; j m17; i m18; };
void f_cpA189(struct A189 *x, const struct A189 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA189(const struct A189 *x, const struct A189 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA189() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A189), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A189, m0), 1);
		dcStructField(st, 'd', offsetof(struct A189, m1), 1);
		dcStructField(st, 'c', offsetof(struct A189, m2), 1);
		dcStructField(st, 'f', offsetof(struct A189, m3), 1);
		dcStructField(st, 'c', offsetof(struct A189, m4), 1);
		dcStructField(st, 's', offsetof(struct A189, m5), 1);
		dcStructField(st, 'd', offsetof(struct A189, m6), 1);
		dcStructField(st, 'j', offsetof(struct A189, m7), 1);
		dcStructField(st, 'j', offsetof(struct A189, m8), 1);
		dcStructField(st, 'l', offsetof(struct A189, m9), 1);
		dcStructField(st, 'c', offsetof(struct A189, m10), 1);
		dcStructField(st, 'd', offsetof(struct A189, m11), 1);
		dcStructField(st, 'j', offsetof(struct A189, m12), 1);
		dcStructField(st, 'l', offsetof(struct A189, m13), 1);
		dcStructField(st, 'i', offsetof(struct A189, m14), 1);
		dcStructField(st, 'p', offsetof(struct A189, m15), 1);
		dcStructField(st, 'f', offsetof(struct A189, m16), 1);
		dcStructField(st, 'j', offsetof(struct A189, m17), 1);
		dcStructField(st, 'i', offsetof(struct A189, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjlff{jdcfcsdjjlcdjlipfji}csijld} */
struct A190 { j m0; j m1; l m2; f m3; f m4; struct A189 m5; c m6; s m7; i m8; j m9; l m10; d m11; };
void f_cpA190(struct A190 *x, const struct A190 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA189(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA190(const struct A190 *x, const struct A190 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA189(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA190() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A190), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A190, m0), 1);
		dcStructField(st, 'j', offsetof(struct A190, m1), 1);
		dcStructField(st, 'l', offsetof(struct A190, m2), 1);
		dcStructField(st, 'f', offsetof(struct A190, m3), 1);
		dcStructField(st, 'f', offsetof(struct A190, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A190, m5), 1, f_touchdcstA189());
		dcStructField(st, 'c', offsetof(struct A190, m6), 1);
		dcStructField(st, 's', offsetof(struct A190, m7), 1);
		dcStructField(st, 'i', offsetof(struct A190, m8), 1);
		dcStructField(st, 'j', offsetof(struct A190, m9), 1);
		dcStructField(st, 'l', offsetof(struct A190, m10), 1);
		dcStructField(st, 'd', offsetof(struct A190, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {disics} */
struct A191 { d m0; i m1; s m2; i m3; c m4; s m5; };
void f_cpA191(struct A191 *x, const struct A191 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA191(const struct A191 *x, const struct A191 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA191() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A191), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A191, m0), 1);
		dcStructField(st, 'i', offsetof(struct A191, m1), 1);
		dcStructField(st, 's', offsetof(struct A191, m2), 1);
		dcStructField(st, 'i', offsetof(struct A191, m3), 1);
		dcStructField(st, 'c', offsetof(struct A191, m4), 1);
		dcStructField(st, 's', offsetof(struct A191, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djsli} */
struct A192 { d m0; j m1; s m2; l m3; i m4; };
void f_cpA192(struct A192 *x, const struct A192 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA192(const struct A192 *x, const struct A192 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA192() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A192), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A192, m0), 1);
		dcStructField(st, 'j', offsetof(struct A192, m1), 1);
		dcStructField(st, 's', offsetof(struct A192, m2), 1);
		dcStructField(st, 'l', offsetof(struct A192, m3), 1);
		dcStructField(st, 'i', offsetof(struct A192, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cffi{djsli}cic} */
struct A193 { c m0; f m1; f m2; i m3; struct A192 m4; c m5; i m6; c m7; };
void f_cpA193(struct A193 *x, const struct A193 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA192(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA193(const struct A193 *x, const struct A193 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA192(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA193() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A193), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A193, m0), 1);
		dcStructField(st, 'f', offsetof(struct A193, m1), 1);
		dcStructField(st, 'f', offsetof(struct A193, m2), 1);
		dcStructField(st, 'i', offsetof(struct A193, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A193, m4), 1, f_touchdcstA192());
		dcStructField(st, 'c', offsetof(struct A193, m5), 1);
		dcStructField(st, 'i', offsetof(struct A193, m6), 1);
		dcStructField(st, 'c', offsetof(struct A193, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldipl} */
struct A194 { l m0; d m1; i m2; p m3; l m4; };
void f_cpA194(struct A194 *x, const struct A194 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA194(const struct A194 *x, const struct A194 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA194() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A194), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A194, m0), 1);
		dcStructField(st, 'd', offsetof(struct A194, m1), 1);
		dcStructField(st, 'i', offsetof(struct A194, m2), 1);
		dcStructField(st, 'p', offsetof(struct A194, m3), 1);
		dcStructField(st, 'l', offsetof(struct A194, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fss} */
struct A195 { f m0; s m1; s m2; };
void f_cpA195(struct A195 *x, const struct A195 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA195(const struct A195 *x, const struct A195 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA195() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A195), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A195, m0), 1);
		dcStructField(st, 's', offsetof(struct A195, m1), 1);
		dcStructField(st, 's', offsetof(struct A195, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clcc{fss}sfs} */
struct A196 { c m0; l m1; c m2; c m3; struct A195 m4; s m5; f m6; s m7; };
void f_cpA196(struct A196 *x, const struct A196 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA195(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA196(const struct A196 *x, const struct A196 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA195(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA196() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A196), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A196, m0), 1);
		dcStructField(st, 'l', offsetof(struct A196, m1), 1);
		dcStructField(st, 'c', offsetof(struct A196, m2), 1);
		dcStructField(st, 'c', offsetof(struct A196, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A196, m4), 1, f_touchdcstA195());
		dcStructField(st, 's', offsetof(struct A196, m5), 1);
		dcStructField(st, 'f', offsetof(struct A196, m6), 1);
		dcStructField(st, 's', offsetof(struct A196, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idci} */
struct A197 { i m0; d m1; c m2; i m3; };
void f_cpA197(struct A197 *x, const struct A197 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA197(const struct A197 *x, const struct A197 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA197() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A197), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A197, m0), 1);
		dcStructField(st, 'd', offsetof(struct A197, m1), 1);
		dcStructField(st, 'c', offsetof(struct A197, m2), 1);
		dcStructField(st, 'i', offsetof(struct A197, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iccisplfcpcdpdfpc} */
struct A198 { i m0; c m1; c m2; i m3; s m4; p m5; l m6; f m7; c m8; p m9; c m10; d m11; p m12; d m13; f m14; p m15; c m16; };
void f_cpA198(struct A198 *x, const struct A198 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA198(const struct A198 *x, const struct A198 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA198() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A198), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A198, m0), 1);
		dcStructField(st, 'c', offsetof(struct A198, m1), 1);
		dcStructField(st, 'c', offsetof(struct A198, m2), 1);
		dcStructField(st, 'i', offsetof(struct A198, m3), 1);
		dcStructField(st, 's', offsetof(struct A198, m4), 1);
		dcStructField(st, 'p', offsetof(struct A198, m5), 1);
		dcStructField(st, 'l', offsetof(struct A198, m6), 1);
		dcStructField(st, 'f', offsetof(struct A198, m7), 1);
		dcStructField(st, 'c', offsetof(struct A198, m8), 1);
		dcStructField(st, 'p', offsetof(struct A198, m9), 1);
		dcStructField(st, 'c', offsetof(struct A198, m10), 1);
		dcStructField(st, 'd', offsetof(struct A198, m11), 1);
		dcStructField(st, 'p', offsetof(struct A198, m12), 1);
		dcStructField(st, 'd', offsetof(struct A198, m13), 1);
		dcStructField(st, 'f', offsetof(struct A198, m14), 1);
		dcStructField(st, 'p', offsetof(struct A198, m15), 1);
		dcStructField(st, 'c', offsetof(struct A198, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dscs{j}} */
struct A199 { d m0; s m1; c m2; s m3; struct A96 m4; };
void f_cpA199(struct A199 *x, const struct A199 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA96(&x->m4, &y->m4); };
int f_cmpA199(const struct A199 *x, const struct A199 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA96(&x->m4, &y->m4); };
DCstruct* f_touchdcstA199() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A199), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A199, m0), 1);
		dcStructField(st, 's', offsetof(struct A199, m1), 1);
		dcStructField(st, 'c', offsetof(struct A199, m2), 1);
		dcStructField(st, 's', offsetof(struct A199, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A199, m4), 1, f_touchdcstA96());
		dcCloseStruct(st);
	}
	return st;
};
/* {fdfcijllcpidjlfcfdilcsjpdifjcjsfj} */
struct A200 { f m0; d m1; f m2; c m3; i m4; j m5; l m6; l m7; c m8; p m9; i m10; d m11; j m12; l m13; f m14; c m15; f m16; d m17; i m18; l m19; c m20; s m21; j m22; p m23; d m24; i m25; f m26; j m27; c m28; j m29; s m30; f m31; j m32; };
void f_cpA200(struct A200 *x, const struct A200 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; };
int f_cmpA200(const struct A200 *x, const struct A200 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32; };
DCstruct* f_touchdcstA200() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(33, sizeof(struct A200), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A200, m0), 1);
		dcStructField(st, 'd', offsetof(struct A200, m1), 1);
		dcStructField(st, 'f', offsetof(struct A200, m2), 1);
		dcStructField(st, 'c', offsetof(struct A200, m3), 1);
		dcStructField(st, 'i', offsetof(struct A200, m4), 1);
		dcStructField(st, 'j', offsetof(struct A200, m5), 1);
		dcStructField(st, 'l', offsetof(struct A200, m6), 1);
		dcStructField(st, 'l', offsetof(struct A200, m7), 1);
		dcStructField(st, 'c', offsetof(struct A200, m8), 1);
		dcStructField(st, 'p', offsetof(struct A200, m9), 1);
		dcStructField(st, 'i', offsetof(struct A200, m10), 1);
		dcStructField(st, 'd', offsetof(struct A200, m11), 1);
		dcStructField(st, 'j', offsetof(struct A200, m12), 1);
		dcStructField(st, 'l', offsetof(struct A200, m13), 1);
		dcStructField(st, 'f', offsetof(struct A200, m14), 1);
		dcStructField(st, 'c', offsetof(struct A200, m15), 1);
		dcStructField(st, 'f', offsetof(struct A200, m16), 1);
		dcStructField(st, 'd', offsetof(struct A200, m17), 1);
		dcStructField(st, 'i', offsetof(struct A200, m18), 1);
		dcStructField(st, 'l', offsetof(struct A200, m19), 1);
		dcStructField(st, 'c', offsetof(struct A200, m20), 1);
		dcStructField(st, 's', offsetof(struct A200, m21), 1);
		dcStructField(st, 'j', offsetof(struct A200, m22), 1);
		dcStructField(st, 'p', offsetof(struct A200, m23), 1);
		dcStructField(st, 'd', offsetof(struct A200, m24), 1);
		dcStructField(st, 'i', offsetof(struct A200, m25), 1);
		dcStructField(st, 'f', offsetof(struct A200, m26), 1);
		dcStructField(st, 'j', offsetof(struct A200, m27), 1);
		dcStructField(st, 'c', offsetof(struct A200, m28), 1);
		dcStructField(st, 'j', offsetof(struct A200, m29), 1);
		dcStructField(st, 's', offsetof(struct A200, m30), 1);
		dcStructField(st, 'f', offsetof(struct A200, m31), 1);
		dcStructField(st, 'j', offsetof(struct A200, m32), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cf{fdfcijllcpidjlfcfdilcsjpdifjcjsfj}ppi} */
struct A201 { c m0; f m1; struct A200 m2; p m3; p m4; i m5; };
void f_cpA201(struct A201 *x, const struct A201 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA200(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA201(const struct A201 *x, const struct A201 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA200(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA201() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A201), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A201, m0), 1);
		dcStructField(st, 'f', offsetof(struct A201, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A201, m2), 1, f_touchdcstA200());
		dcStructField(st, 'p', offsetof(struct A201, m3), 1);
		dcStructField(st, 'p', offsetof(struct A201, m4), 1);
		dcStructField(st, 'i', offsetof(struct A201, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {di{dscs{j}}pf{cf{fdfcijllcpidjlfcfdilcsjpdifjcjsfj}ppi}} */
struct A202 { d m0; i m1; struct A199 m2; p m3; f m4; struct A201 m5; };
void f_cpA202(struct A202 *x, const struct A202 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA199(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA201(&x->m5, &y->m5); };
int f_cmpA202(const struct A202 *x, const struct A202 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA199(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA201(&x->m5, &y->m5); };
DCstruct* f_touchdcstA202() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A202), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A202, m0), 1);
		dcStructField(st, 'i', offsetof(struct A202, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A202, m2), 1, f_touchdcstA199());
		dcStructField(st, 'p', offsetof(struct A202, m3), 1);
		dcStructField(st, 'f', offsetof(struct A202, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A202, m5), 1, f_touchdcstA201());
		dcCloseStruct(st);
	}
	return st;
};
/* {slfcpflfljiiicippssjidddpc} */
struct A203 { s m0; l m1; f m2; c m3; p m4; f m5; l m6; f m7; l m8; j m9; i m10; i m11; i m12; c m13; i m14; p m15; p m16; s m17; s m18; j m19; i m20; d m21; d m22; d m23; p m24; c m25; };
void f_cpA203(struct A203 *x, const struct A203 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA203(const struct A203 *x, const struct A203 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA203() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A203), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A203, m0), 1);
		dcStructField(st, 'l', offsetof(struct A203, m1), 1);
		dcStructField(st, 'f', offsetof(struct A203, m2), 1);
		dcStructField(st, 'c', offsetof(struct A203, m3), 1);
		dcStructField(st, 'p', offsetof(struct A203, m4), 1);
		dcStructField(st, 'f', offsetof(struct A203, m5), 1);
		dcStructField(st, 'l', offsetof(struct A203, m6), 1);
		dcStructField(st, 'f', offsetof(struct A203, m7), 1);
		dcStructField(st, 'l', offsetof(struct A203, m8), 1);
		dcStructField(st, 'j', offsetof(struct A203, m9), 1);
		dcStructField(st, 'i', offsetof(struct A203, m10), 1);
		dcStructField(st, 'i', offsetof(struct A203, m11), 1);
		dcStructField(st, 'i', offsetof(struct A203, m12), 1);
		dcStructField(st, 'c', offsetof(struct A203, m13), 1);
		dcStructField(st, 'i', offsetof(struct A203, m14), 1);
		dcStructField(st, 'p', offsetof(struct A203, m15), 1);
		dcStructField(st, 'p', offsetof(struct A203, m16), 1);
		dcStructField(st, 's', offsetof(struct A203, m17), 1);
		dcStructField(st, 's', offsetof(struct A203, m18), 1);
		dcStructField(st, 'j', offsetof(struct A203, m19), 1);
		dcStructField(st, 'i', offsetof(struct A203, m20), 1);
		dcStructField(st, 'd', offsetof(struct A203, m21), 1);
		dcStructField(st, 'd', offsetof(struct A203, m22), 1);
		dcStructField(st, 'd', offsetof(struct A203, m23), 1);
		dcStructField(st, 'p', offsetof(struct A203, m24), 1);
		dcStructField(st, 'c', offsetof(struct A203, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijccj} */
struct A204 { i m0; j m1; c m2; c m3; j m4; };
void f_cpA204(struct A204 *x, const struct A204 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA204(const struct A204 *x, const struct A204 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA204() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A204), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A204, m0), 1);
		dcStructField(st, 'j', offsetof(struct A204, m1), 1);
		dcStructField(st, 'c', offsetof(struct A204, m2), 1);
		dcStructField(st, 'c', offsetof(struct A204, m3), 1);
		dcStructField(st, 'j', offsetof(struct A204, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ld} */
struct A205 { l m0; d m1; };
void f_cpA205(struct A205 *x, const struct A205 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA205(const struct A205 *x, const struct A205 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA205() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A205), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A205, m0), 1);
		dcStructField(st, 'd', offsetof(struct A205, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cffsjcpjsdlcldfifll} */
struct A206 { c m0; f m1; f m2; s m3; j m4; c m5; p m6; j m7; s m8; d m9; l m10; c m11; l m12; d m13; f m14; i m15; f m16; l m17; l m18; };
void f_cpA206(struct A206 *x, const struct A206 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA206(const struct A206 *x, const struct A206 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA206() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A206), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A206, m0), 1);
		dcStructField(st, 'f', offsetof(struct A206, m1), 1);
		dcStructField(st, 'f', offsetof(struct A206, m2), 1);
		dcStructField(st, 's', offsetof(struct A206, m3), 1);
		dcStructField(st, 'j', offsetof(struct A206, m4), 1);
		dcStructField(st, 'c', offsetof(struct A206, m5), 1);
		dcStructField(st, 'p', offsetof(struct A206, m6), 1);
		dcStructField(st, 'j', offsetof(struct A206, m7), 1);
		dcStructField(st, 's', offsetof(struct A206, m8), 1);
		dcStructField(st, 'd', offsetof(struct A206, m9), 1);
		dcStructField(st, 'l', offsetof(struct A206, m10), 1);
		dcStructField(st, 'c', offsetof(struct A206, m11), 1);
		dcStructField(st, 'l', offsetof(struct A206, m12), 1);
		dcStructField(st, 'd', offsetof(struct A206, m13), 1);
		dcStructField(st, 'f', offsetof(struct A206, m14), 1);
		dcStructField(st, 'i', offsetof(struct A206, m15), 1);
		dcStructField(st, 'f', offsetof(struct A206, m16), 1);
		dcStructField(st, 'l', offsetof(struct A206, m17), 1);
		dcStructField(st, 'l', offsetof(struct A206, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjfsi} */
struct A207 { p m0; j m1; f m2; s m3; i m4; };
void f_cpA207(struct A207 *x, const struct A207 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA207(const struct A207 *x, const struct A207 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA207() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A207), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A207, m0), 1);
		dcStructField(st, 'j', offsetof(struct A207, m1), 1);
		dcStructField(st, 'f', offsetof(struct A207, m2), 1);
		dcStructField(st, 's', offsetof(struct A207, m3), 1);
		dcStructField(st, 'i', offsetof(struct A207, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{c}sffiiil{pjfsi}sicfjf} */
struct A208 { struct A77 m0; s m1; f m2; f m3; i m4; i m5; i m6; l m7; struct A207 m8; s m9; i m10; c m11; f m12; j m13; f m14; };
void f_cpA208(struct A208 *x, const struct A208 *y) { f_cpA77(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA207(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA208(const struct A208 *x, const struct A208 *y) { return f_cmpA77(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA207(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA208() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A208), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A208, m0), 1, f_touchdcstA77());
		dcStructField(st, 's', offsetof(struct A208, m1), 1);
		dcStructField(st, 'f', offsetof(struct A208, m2), 1);
		dcStructField(st, 'f', offsetof(struct A208, m3), 1);
		dcStructField(st, 'i', offsetof(struct A208, m4), 1);
		dcStructField(st, 'i', offsetof(struct A208, m5), 1);
		dcStructField(st, 'i', offsetof(struct A208, m6), 1);
		dcStructField(st, 'l', offsetof(struct A208, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A208, m8), 1, f_touchdcstA207());
		dcStructField(st, 's', offsetof(struct A208, m9), 1);
		dcStructField(st, 'i', offsetof(struct A208, m10), 1);
		dcStructField(st, 'c', offsetof(struct A208, m11), 1);
		dcStructField(st, 'f', offsetof(struct A208, m12), 1);
		dcStructField(st, 'j', offsetof(struct A208, m13), 1);
		dcStructField(st, 'f', offsetof(struct A208, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcsljisfcdi} */
struct A209 { j m0; c m1; s m2; l m3; j m4; i m5; s m6; f m7; c m8; d m9; i m10; };
void f_cpA209(struct A209 *x, const struct A209 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA209(const struct A209 *x, const struct A209 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA209() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A209), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A209, m0), 1);
		dcStructField(st, 'c', offsetof(struct A209, m1), 1);
		dcStructField(st, 's', offsetof(struct A209, m2), 1);
		dcStructField(st, 'l', offsetof(struct A209, m3), 1);
		dcStructField(st, 'j', offsetof(struct A209, m4), 1);
		dcStructField(st, 'i', offsetof(struct A209, m5), 1);
		dcStructField(st, 's', offsetof(struct A209, m6), 1);
		dcStructField(st, 'f', offsetof(struct A209, m7), 1);
		dcStructField(st, 'c', offsetof(struct A209, m8), 1);
		dcStructField(st, 'd', offsetof(struct A209, m9), 1);
		dcStructField(st, 'i', offsetof(struct A209, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsjjllspsljsjsscdicidjfc} */
struct A210 { l m0; s m1; j m2; j m3; l m4; l m5; s m6; p m7; s m8; l m9; j m10; s m11; j m12; s m13; s m14; c m15; d m16; i m17; c m18; i m19; d m20; j m21; f m22; c m23; };
void f_cpA210(struct A210 *x, const struct A210 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA210(const struct A210 *x, const struct A210 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA210() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A210), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A210, m0), 1);
		dcStructField(st, 's', offsetof(struct A210, m1), 1);
		dcStructField(st, 'j', offsetof(struct A210, m2), 1);
		dcStructField(st, 'j', offsetof(struct A210, m3), 1);
		dcStructField(st, 'l', offsetof(struct A210, m4), 1);
		dcStructField(st, 'l', offsetof(struct A210, m5), 1);
		dcStructField(st, 's', offsetof(struct A210, m6), 1);
		dcStructField(st, 'p', offsetof(struct A210, m7), 1);
		dcStructField(st, 's', offsetof(struct A210, m8), 1);
		dcStructField(st, 'l', offsetof(struct A210, m9), 1);
		dcStructField(st, 'j', offsetof(struct A210, m10), 1);
		dcStructField(st, 's', offsetof(struct A210, m11), 1);
		dcStructField(st, 'j', offsetof(struct A210, m12), 1);
		dcStructField(st, 's', offsetof(struct A210, m13), 1);
		dcStructField(st, 's', offsetof(struct A210, m14), 1);
		dcStructField(st, 'c', offsetof(struct A210, m15), 1);
		dcStructField(st, 'd', offsetof(struct A210, m16), 1);
		dcStructField(st, 'i', offsetof(struct A210, m17), 1);
		dcStructField(st, 'c', offsetof(struct A210, m18), 1);
		dcStructField(st, 'i', offsetof(struct A210, m19), 1);
		dcStructField(st, 'd', offsetof(struct A210, m20), 1);
		dcStructField(st, 'j', offsetof(struct A210, m21), 1);
		dcStructField(st, 'f', offsetof(struct A210, m22), 1);
		dcStructField(st, 'c', offsetof(struct A210, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lc{lsjjllspsljsjsscdicidjfc}fjlsp} */
struct A211 { l m0; c m1; struct A210 m2; f m3; j m4; l m5; s m6; p m7; };
void f_cpA211(struct A211 *x, const struct A211 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA210(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA211(const struct A211 *x, const struct A211 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA210(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA211() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A211), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A211, m0), 1);
		dcStructField(st, 'c', offsetof(struct A211, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A211, m2), 1, f_touchdcstA210());
		dcStructField(st, 'f', offsetof(struct A211, m3), 1);
		dcStructField(st, 'j', offsetof(struct A211, m4), 1);
		dcStructField(st, 'l', offsetof(struct A211, m5), 1);
		dcStructField(st, 's', offsetof(struct A211, m6), 1);
		dcStructField(st, 'p', offsetof(struct A211, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sipisl} */
struct A212 { s m0; i m1; p m2; i m3; s m4; l m5; };
void f_cpA212(struct A212 *x, const struct A212 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA212(const struct A212 *x, const struct A212 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA212() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A212), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A212, m0), 1);
		dcStructField(st, 'i', offsetof(struct A212, m1), 1);
		dcStructField(st, 'p', offsetof(struct A212, m2), 1);
		dcStructField(st, 'i', offsetof(struct A212, m3), 1);
		dcStructField(st, 's', offsetof(struct A212, m4), 1);
		dcStructField(st, 'l', offsetof(struct A212, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j{sipisl}ddp} */
struct A213 { j m0; struct A212 m1; d m2; d m3; p m4; };
void f_cpA213(struct A213 *x, const struct A213 *y) { x->m0 = y->m0; f_cpA212(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA213(const struct A213 *x, const struct A213 *y) { return x->m0 == y->m0 && f_cmpA212(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA213() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A213), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A213, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A213, m1), 1, f_touchdcstA212());
		dcStructField(st, 'd', offsetof(struct A213, m2), 1);
		dcStructField(st, 'd', offsetof(struct A213, m3), 1);
		dcStructField(st, 'p', offsetof(struct A213, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jljfiijflcff} */
struct A214 { j m0; l m1; j m2; f m3; i m4; i m5; j m6; f m7; l m8; c m9; f m10; f m11; };
void f_cpA214(struct A214 *x, const struct A214 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA214(const struct A214 *x, const struct A214 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA214() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A214), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A214, m0), 1);
		dcStructField(st, 'l', offsetof(struct A214, m1), 1);
		dcStructField(st, 'j', offsetof(struct A214, m2), 1);
		dcStructField(st, 'f', offsetof(struct A214, m3), 1);
		dcStructField(st, 'i', offsetof(struct A214, m4), 1);
		dcStructField(st, 'i', offsetof(struct A214, m5), 1);
		dcStructField(st, 'j', offsetof(struct A214, m6), 1);
		dcStructField(st, 'f', offsetof(struct A214, m7), 1);
		dcStructField(st, 'l', offsetof(struct A214, m8), 1);
		dcStructField(st, 'c', offsetof(struct A214, m9), 1);
		dcStructField(st, 'f', offsetof(struct A214, m10), 1);
		dcStructField(st, 'f', offsetof(struct A214, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dl} */
struct A215 { d m0; l m1; };
void f_cpA215(struct A215 *x, const struct A215 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA215(const struct A215 *x, const struct A215 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA215() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A215), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A215, m0), 1);
		dcStructField(st, 'l', offsetof(struct A215, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pplcfcdpcipcjicsldsf} */
struct A216 { p m0; p m1; l m2; c m3; f m4; c m5; d m6; p m7; c m8; i m9; p m10; c m11; j m12; i m13; c m14; s m15; l m16; d m17; s m18; f m19; };
void f_cpA216(struct A216 *x, const struct A216 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA216(const struct A216 *x, const struct A216 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA216() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A216), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A216, m0), 1);
		dcStructField(st, 'p', offsetof(struct A216, m1), 1);
		dcStructField(st, 'l', offsetof(struct A216, m2), 1);
		dcStructField(st, 'c', offsetof(struct A216, m3), 1);
		dcStructField(st, 'f', offsetof(struct A216, m4), 1);
		dcStructField(st, 'c', offsetof(struct A216, m5), 1);
		dcStructField(st, 'd', offsetof(struct A216, m6), 1);
		dcStructField(st, 'p', offsetof(struct A216, m7), 1);
		dcStructField(st, 'c', offsetof(struct A216, m8), 1);
		dcStructField(st, 'i', offsetof(struct A216, m9), 1);
		dcStructField(st, 'p', offsetof(struct A216, m10), 1);
		dcStructField(st, 'c', offsetof(struct A216, m11), 1);
		dcStructField(st, 'j', offsetof(struct A216, m12), 1);
		dcStructField(st, 'i', offsetof(struct A216, m13), 1);
		dcStructField(st, 'c', offsetof(struct A216, m14), 1);
		dcStructField(st, 's', offsetof(struct A216, m15), 1);
		dcStructField(st, 'l', offsetof(struct A216, m16), 1);
		dcStructField(st, 'd', offsetof(struct A216, m17), 1);
		dcStructField(st, 's', offsetof(struct A216, m18), 1);
		dcStructField(st, 'f', offsetof(struct A216, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{jljfiijflcff}pc{dl}dplfjisiccppjs{pplcfcdpcipcjicsldsf}ld} */
struct A217 { struct A214 m0; p m1; c m2; struct A215 m3; d m4; p m5; l m6; f m7; j m8; i m9; s m10; i m11; c m12; c m13; p m14; p m15; j m16; s m17; struct A216 m18; l m19; d m20; };
void f_cpA217(struct A217 *x, const struct A217 *y) { f_cpA214(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA215(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA216(&x->m18, &y->m18); x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA217(const struct A217 *x, const struct A217 *y) { return f_cmpA214(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA215(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA216(&x->m18, &y->m18) && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA217() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A217), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A217, m0), 1, f_touchdcstA214());
		dcStructField(st, 'p', offsetof(struct A217, m1), 1);
		dcStructField(st, 'c', offsetof(struct A217, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A217, m3), 1, f_touchdcstA215());
		dcStructField(st, 'd', offsetof(struct A217, m4), 1);
		dcStructField(st, 'p', offsetof(struct A217, m5), 1);
		dcStructField(st, 'l', offsetof(struct A217, m6), 1);
		dcStructField(st, 'f', offsetof(struct A217, m7), 1);
		dcStructField(st, 'j', offsetof(struct A217, m8), 1);
		dcStructField(st, 'i', offsetof(struct A217, m9), 1);
		dcStructField(st, 's', offsetof(struct A217, m10), 1);
		dcStructField(st, 'i', offsetof(struct A217, m11), 1);
		dcStructField(st, 'c', offsetof(struct A217, m12), 1);
		dcStructField(st, 'c', offsetof(struct A217, m13), 1);
		dcStructField(st, 'p', offsetof(struct A217, m14), 1);
		dcStructField(st, 'p', offsetof(struct A217, m15), 1);
		dcStructField(st, 'j', offsetof(struct A217, m16), 1);
		dcStructField(st, 's', offsetof(struct A217, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A217, m18), 1, f_touchdcstA216());
		dcStructField(st, 'l', offsetof(struct A217, m19), 1);
		dcStructField(st, 'd', offsetof(struct A217, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jifci{j{sipisl}ddp}{{jljfiijflcff}pc{dl}dplfjisiccppjs{pplcfcdpcipcjicsldsf}ld}} */
struct A218 { j m0; i m1; f m2; c m3; i m4; struct A213 m5; struct A217 m6; };
void f_cpA218(struct A218 *x, const struct A218 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA213(&x->m5, &y->m5); f_cpA217(&x->m6, &y->m6); };
int f_cmpA218(const struct A218 *x, const struct A218 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA213(&x->m5, &y->m5) && f_cmpA217(&x->m6, &y->m6); };
DCstruct* f_touchdcstA218() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A218), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A218, m0), 1);
		dcStructField(st, 'i', offsetof(struct A218, m1), 1);
		dcStructField(st, 'f', offsetof(struct A218, m2), 1);
		dcStructField(st, 'c', offsetof(struct A218, m3), 1);
		dcStructField(st, 'i', offsetof(struct A218, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A218, m5), 1, f_touchdcstA213());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A218, m6), 1, f_touchdcstA217());
		dcCloseStruct(st);
	}
	return st;
};
/* {fjpdcpidlscdjsf} */
struct A219 { f m0; j m1; p m2; d m3; c m4; p m5; i m6; d m7; l m8; s m9; c m10; d m11; j m12; s m13; f m14; };
void f_cpA219(struct A219 *x, const struct A219 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA219(const struct A219 *x, const struct A219 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA219() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A219), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A219, m0), 1);
		dcStructField(st, 'j', offsetof(struct A219, m1), 1);
		dcStructField(st, 'p', offsetof(struct A219, m2), 1);
		dcStructField(st, 'd', offsetof(struct A219, m3), 1);
		dcStructField(st, 'c', offsetof(struct A219, m4), 1);
		dcStructField(st, 'p', offsetof(struct A219, m5), 1);
		dcStructField(st, 'i', offsetof(struct A219, m6), 1);
		dcStructField(st, 'd', offsetof(struct A219, m7), 1);
		dcStructField(st, 'l', offsetof(struct A219, m8), 1);
		dcStructField(st, 's', offsetof(struct A219, m9), 1);
		dcStructField(st, 'c', offsetof(struct A219, m10), 1);
		dcStructField(st, 'd', offsetof(struct A219, m11), 1);
		dcStructField(st, 'j', offsetof(struct A219, m12), 1);
		dcStructField(st, 's', offsetof(struct A219, m13), 1);
		dcStructField(st, 'f', offsetof(struct A219, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpii} */
struct A220 { c m0; p m1; i m2; i m3; };
void f_cpA220(struct A220 *x, const struct A220 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA220(const struct A220 *x, const struct A220 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA220() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A220), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A220, m0), 1);
		dcStructField(st, 'p', offsetof(struct A220, m1), 1);
		dcStructField(st, 'i', offsetof(struct A220, m2), 1);
		dcStructField(st, 'i', offsetof(struct A220, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lc} */
struct A221 { l m0; c m1; };
void f_cpA221(struct A221 *x, const struct A221 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA221(const struct A221 *x, const struct A221 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA221() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A221), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A221, m0), 1);
		dcStructField(st, 'c', offsetof(struct A221, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpdds} */
struct A222 { d m0; p m1; d m2; d m3; s m4; };
void f_cpA222(struct A222 *x, const struct A222 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA222(const struct A222 *x, const struct A222 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA222() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A222), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A222, m0), 1);
		dcStructField(st, 'p', offsetof(struct A222, m1), 1);
		dcStructField(st, 'd', offsetof(struct A222, m2), 1);
		dcStructField(st, 'd', offsetof(struct A222, m3), 1);
		dcStructField(st, 's', offsetof(struct A222, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fjpdcpidlscdjsf}fpjiss{cpii}dspcdjcipdfd{lc}ccfpl{dpdds}fj} */
struct A223 { struct A219 m0; f m1; p m2; j m3; i m4; s m5; s m6; struct A220 m7; d m8; s m9; p m10; c m11; d m12; j m13; c m14; i m15; p m16; d m17; f m18; d m19; struct A221 m20; c m21; c m22; f m23; p m24; l m25; struct A222 m26; f m27; j m28; };
void f_cpA223(struct A223 *x, const struct A223 *y) { f_cpA219(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA220(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA221(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; f_cpA222(&x->m26, &y->m26); x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA223(const struct A223 *x, const struct A223 *y) { return f_cmpA219(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA220(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA221(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && f_cmpA222(&x->m26, &y->m26) && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA223() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(struct A223), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A223, m0), 1, f_touchdcstA219());
		dcStructField(st, 'f', offsetof(struct A223, m1), 1);
		dcStructField(st, 'p', offsetof(struct A223, m2), 1);
		dcStructField(st, 'j', offsetof(struct A223, m3), 1);
		dcStructField(st, 'i', offsetof(struct A223, m4), 1);
		dcStructField(st, 's', offsetof(struct A223, m5), 1);
		dcStructField(st, 's', offsetof(struct A223, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A223, m7), 1, f_touchdcstA220());
		dcStructField(st, 'd', offsetof(struct A223, m8), 1);
		dcStructField(st, 's', offsetof(struct A223, m9), 1);
		dcStructField(st, 'p', offsetof(struct A223, m10), 1);
		dcStructField(st, 'c', offsetof(struct A223, m11), 1);
		dcStructField(st, 'd', offsetof(struct A223, m12), 1);
		dcStructField(st, 'j', offsetof(struct A223, m13), 1);
		dcStructField(st, 'c', offsetof(struct A223, m14), 1);
		dcStructField(st, 'i', offsetof(struct A223, m15), 1);
		dcStructField(st, 'p', offsetof(struct A223, m16), 1);
		dcStructField(st, 'd', offsetof(struct A223, m17), 1);
		dcStructField(st, 'f', offsetof(struct A223, m18), 1);
		dcStructField(st, 'd', offsetof(struct A223, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A223, m20), 1, f_touchdcstA221());
		dcStructField(st, 'c', offsetof(struct A223, m21), 1);
		dcStructField(st, 'c', offsetof(struct A223, m22), 1);
		dcStructField(st, 'f', offsetof(struct A223, m23), 1);
		dcStructField(st, 'p', offsetof(struct A223, m24), 1);
		dcStructField(st, 'l', offsetof(struct A223, m25), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A223, m26), 1, f_touchdcstA222());
		dcStructField(st, 'f', offsetof(struct A223, m27), 1);
		dcStructField(st, 'j', offsetof(struct A223, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d{{fjpdcpidlscdjsf}fpjiss{cpii}dspcdjcipdfd{lc}ccfpl{dpdds}fj}jppji} */
struct A224 { d m0; struct A223 m1; j m2; p m3; p m4; j m5; i m6; };
void f_cpA224(struct A224 *x, const struct A224 *y) { x->m0 = y->m0; f_cpA223(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA224(const struct A224 *x, const struct A224 *y) { return x->m0 == y->m0 && f_cmpA223(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA224() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A224), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A224, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A224, m1), 1, f_touchdcstA223());
		dcStructField(st, 'j', offsetof(struct A224, m2), 1);
		dcStructField(st, 'p', offsetof(struct A224, m3), 1);
		dcStructField(st, 'p', offsetof(struct A224, m4), 1);
		dcStructField(st, 'j', offsetof(struct A224, m5), 1);
		dcStructField(st, 'i', offsetof(struct A224, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idddcljijllslfdljjcjifcpffpfs} */
struct A225 { i m0; d m1; d m2; d m3; c m4; l m5; j m6; i m7; j m8; l m9; l m10; s m11; l m12; f m13; d m14; l m15; j m16; j m17; c m18; j m19; i m20; f m21; c m22; p m23; f m24; f m25; p m26; f m27; s m28; };
void f_cpA225(struct A225 *x, const struct A225 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA225(const struct A225 *x, const struct A225 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA225() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(struct A225), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A225, m0), 1);
		dcStructField(st, 'd', offsetof(struct A225, m1), 1);
		dcStructField(st, 'd', offsetof(struct A225, m2), 1);
		dcStructField(st, 'd', offsetof(struct A225, m3), 1);
		dcStructField(st, 'c', offsetof(struct A225, m4), 1);
		dcStructField(st, 'l', offsetof(struct A225, m5), 1);
		dcStructField(st, 'j', offsetof(struct A225, m6), 1);
		dcStructField(st, 'i', offsetof(struct A225, m7), 1);
		dcStructField(st, 'j', offsetof(struct A225, m8), 1);
		dcStructField(st, 'l', offsetof(struct A225, m9), 1);
		dcStructField(st, 'l', offsetof(struct A225, m10), 1);
		dcStructField(st, 's', offsetof(struct A225, m11), 1);
		dcStructField(st, 'l', offsetof(struct A225, m12), 1);
		dcStructField(st, 'f', offsetof(struct A225, m13), 1);
		dcStructField(st, 'd', offsetof(struct A225, m14), 1);
		dcStructField(st, 'l', offsetof(struct A225, m15), 1);
		dcStructField(st, 'j', offsetof(struct A225, m16), 1);
		dcStructField(st, 'j', offsetof(struct A225, m17), 1);
		dcStructField(st, 'c', offsetof(struct A225, m18), 1);
		dcStructField(st, 'j', offsetof(struct A225, m19), 1);
		dcStructField(st, 'i', offsetof(struct A225, m20), 1);
		dcStructField(st, 'f', offsetof(struct A225, m21), 1);
		dcStructField(st, 'c', offsetof(struct A225, m22), 1);
		dcStructField(st, 'p', offsetof(struct A225, m23), 1);
		dcStructField(st, 'f', offsetof(struct A225, m24), 1);
		dcStructField(st, 'f', offsetof(struct A225, m25), 1);
		dcStructField(st, 'p', offsetof(struct A225, m26), 1);
		dcStructField(st, 'f', offsetof(struct A225, m27), 1);
		dcStructField(st, 's', offsetof(struct A225, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fji{idddcljijllslfdljjcjifcpffpfs}} */
struct A226 { f m0; j m1; i m2; struct A225 m3; };
void f_cpA226(struct A226 *x, const struct A226 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA225(&x->m3, &y->m3); };
int f_cmpA226(const struct A226 *x, const struct A226 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA225(&x->m3, &y->m3); };
DCstruct* f_touchdcstA226() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A226), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A226, m0), 1);
		dcStructField(st, 'j', offsetof(struct A226, m1), 1);
		dcStructField(st, 'i', offsetof(struct A226, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A226, m3), 1, f_touchdcstA225());
		dcCloseStruct(st);
	}
	return st;
};
/* {jjfssjdc} */
struct A227 { j m0; j m1; f m2; s m3; s m4; j m5; d m6; c m7; };
void f_cpA227(struct A227 *x, const struct A227 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA227(const struct A227 *x, const struct A227 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA227() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A227), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A227, m0), 1);
		dcStructField(st, 'j', offsetof(struct A227, m1), 1);
		dcStructField(st, 'f', offsetof(struct A227, m2), 1);
		dcStructField(st, 's', offsetof(struct A227, m3), 1);
		dcStructField(st, 's', offsetof(struct A227, m4), 1);
		dcStructField(st, 'j', offsetof(struct A227, m5), 1);
		dcStructField(st, 'd', offsetof(struct A227, m6), 1);
		dcStructField(st, 'c', offsetof(struct A227, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iid{jjfssjdc}f} */
struct A228 { i m0; i m1; d m2; struct A227 m3; f m4; };
void f_cpA228(struct A228 *x, const struct A228 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA227(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA228(const struct A228 *x, const struct A228 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA227(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA228() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A228), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A228, m0), 1);
		dcStructField(st, 'i', offsetof(struct A228, m1), 1);
		dcStructField(st, 'd', offsetof(struct A228, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A228, m3), 1, f_touchdcstA227());
		dcStructField(st, 'f', offsetof(struct A228, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ji} */
struct A229 { j m0; i m1; };
void f_cpA229(struct A229 *x, const struct A229 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA229(const struct A229 *x, const struct A229 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA229() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A229), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A229, m0), 1);
		dcStructField(st, 'i', offsetof(struct A229, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cccpiiicppdddsplspsslclf} */
struct A230 { c m0; c m1; c m2; p m3; i m4; i m5; i m6; c m7; p m8; p m9; d m10; d m11; d m12; s m13; p m14; l m15; s m16; p m17; s m18; s m19; l m20; c m21; l m22; f m23; };
void f_cpA230(struct A230 *x, const struct A230 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA230(const struct A230 *x, const struct A230 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA230() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A230), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A230, m0), 1);
		dcStructField(st, 'c', offsetof(struct A230, m1), 1);
		dcStructField(st, 'c', offsetof(struct A230, m2), 1);
		dcStructField(st, 'p', offsetof(struct A230, m3), 1);
		dcStructField(st, 'i', offsetof(struct A230, m4), 1);
		dcStructField(st, 'i', offsetof(struct A230, m5), 1);
		dcStructField(st, 'i', offsetof(struct A230, m6), 1);
		dcStructField(st, 'c', offsetof(struct A230, m7), 1);
		dcStructField(st, 'p', offsetof(struct A230, m8), 1);
		dcStructField(st, 'p', offsetof(struct A230, m9), 1);
		dcStructField(st, 'd', offsetof(struct A230, m10), 1);
		dcStructField(st, 'd', offsetof(struct A230, m11), 1);
		dcStructField(st, 'd', offsetof(struct A230, m12), 1);
		dcStructField(st, 's', offsetof(struct A230, m13), 1);
		dcStructField(st, 'p', offsetof(struct A230, m14), 1);
		dcStructField(st, 'l', offsetof(struct A230, m15), 1);
		dcStructField(st, 's', offsetof(struct A230, m16), 1);
		dcStructField(st, 'p', offsetof(struct A230, m17), 1);
		dcStructField(st, 's', offsetof(struct A230, m18), 1);
		dcStructField(st, 's', offsetof(struct A230, m19), 1);
		dcStructField(st, 'l', offsetof(struct A230, m20), 1);
		dcStructField(st, 'c', offsetof(struct A230, m21), 1);
		dcStructField(st, 'l', offsetof(struct A230, m22), 1);
		dcStructField(st, 'f', offsetof(struct A230, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpfjpc} */
struct A231 { j m0; p m1; f m2; j m3; p m4; c m5; };
void f_cpA231(struct A231 *x, const struct A231 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA231(const struct A231 *x, const struct A231 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA231() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A231), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A231, m0), 1);
		dcStructField(st, 'p', offsetof(struct A231, m1), 1);
		dcStructField(st, 'f', offsetof(struct A231, m2), 1);
		dcStructField(st, 'j', offsetof(struct A231, m3), 1);
		dcStructField(st, 'p', offsetof(struct A231, m4), 1);
		dcStructField(st, 'c', offsetof(struct A231, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jd{jpfjpc}jfpf} */
struct A232 { j m0; d m1; struct A231 m2; j m3; f m4; p m5; f m6; };
void f_cpA232(struct A232 *x, const struct A232 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA231(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA232(const struct A232 *x, const struct A232 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA231(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA232() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A232), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A232, m0), 1);
		dcStructField(st, 'd', offsetof(struct A232, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A232, m2), 1, f_touchdcstA231());
		dcStructField(st, 'j', offsetof(struct A232, m3), 1);
		dcStructField(st, 'f', offsetof(struct A232, m4), 1);
		dcStructField(st, 'p', offsetof(struct A232, m5), 1);
		dcStructField(st, 'f', offsetof(struct A232, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{f}silcfs} */
struct A233 { struct A28 m0; s m1; i m2; l m3; c m4; f m5; s m6; };
void f_cpA233(struct A233 *x, const struct A233 *y) { f_cpA28(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA233(const struct A233 *x, const struct A233 *y) { return f_cmpA28(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA233() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A233), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A233, m0), 1, f_touchdcstA28());
		dcStructField(st, 's', offsetof(struct A233, m1), 1);
		dcStructField(st, 'i', offsetof(struct A233, m2), 1);
		dcStructField(st, 'l', offsetof(struct A233, m3), 1);
		dcStructField(st, 'c', offsetof(struct A233, m4), 1);
		dcStructField(st, 'f', offsetof(struct A233, m5), 1);
		dcStructField(st, 's', offsetof(struct A233, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcipl{jd{jpfjpc}jfpf}csffpccc{{f}silcfs}} */
struct A234 { f m0; c m1; i m2; p m3; l m4; struct A232 m5; c m6; s m7; f m8; f m9; p m10; c m11; c m12; c m13; struct A233 m14; };
void f_cpA234(struct A234 *x, const struct A234 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA232(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA233(&x->m14, &y->m14); };
int f_cmpA234(const struct A234 *x, const struct A234 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA232(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA233(&x->m14, &y->m14); };
DCstruct* f_touchdcstA234() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A234), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A234, m0), 1);
		dcStructField(st, 'c', offsetof(struct A234, m1), 1);
		dcStructField(st, 'i', offsetof(struct A234, m2), 1);
		dcStructField(st, 'p', offsetof(struct A234, m3), 1);
		dcStructField(st, 'l', offsetof(struct A234, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A234, m5), 1, f_touchdcstA232());
		dcStructField(st, 'c', offsetof(struct A234, m6), 1);
		dcStructField(st, 's', offsetof(struct A234, m7), 1);
		dcStructField(st, 'f', offsetof(struct A234, m8), 1);
		dcStructField(st, 'f', offsetof(struct A234, m9), 1);
		dcStructField(st, 'p', offsetof(struct A234, m10), 1);
		dcStructField(st, 'c', offsetof(struct A234, m11), 1);
		dcStructField(st, 'c', offsetof(struct A234, m12), 1);
		dcStructField(st, 'c', offsetof(struct A234, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A234, m14), 1, f_touchdcstA233());
		dcCloseStruct(st);
	}
	return st;
};
/* {cdjdfpcsffippcsdid} */
struct A235 { c m0; d m1; j m2; d m3; f m4; p m5; c m6; s m7; f m8; f m9; i m10; p m11; p m12; c m13; s m14; d m15; i m16; d m17; };
void f_cpA235(struct A235 *x, const struct A235 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA235(const struct A235 *x, const struct A235 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA235() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A235), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A235, m0), 1);
		dcStructField(st, 'd', offsetof(struct A235, m1), 1);
		dcStructField(st, 'j', offsetof(struct A235, m2), 1);
		dcStructField(st, 'd', offsetof(struct A235, m3), 1);
		dcStructField(st, 'f', offsetof(struct A235, m4), 1);
		dcStructField(st, 'p', offsetof(struct A235, m5), 1);
		dcStructField(st, 'c', offsetof(struct A235, m6), 1);
		dcStructField(st, 's', offsetof(struct A235, m7), 1);
		dcStructField(st, 'f', offsetof(struct A235, m8), 1);
		dcStructField(st, 'f', offsetof(struct A235, m9), 1);
		dcStructField(st, 'i', offsetof(struct A235, m10), 1);
		dcStructField(st, 'p', offsetof(struct A235, m11), 1);
		dcStructField(st, 'p', offsetof(struct A235, m12), 1);
		dcStructField(st, 'c', offsetof(struct A235, m13), 1);
		dcStructField(st, 's', offsetof(struct A235, m14), 1);
		dcStructField(st, 'd', offsetof(struct A235, m15), 1);
		dcStructField(st, 'i', offsetof(struct A235, m16), 1);
		dcStructField(st, 'd', offsetof(struct A235, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dif} */
struct A236 { d m0; i m1; f m2; };
void f_cpA236(struct A236 *x, const struct A236 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA236(const struct A236 *x, const struct A236 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA236() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A236), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A236, m0), 1);
		dcStructField(st, 'i', offsetof(struct A236, m1), 1);
		dcStructField(st, 'f', offsetof(struct A236, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdl} */
struct A237 { p m0; d m1; l m2; };
void f_cpA237(struct A237 *x, const struct A237 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA237(const struct A237 *x, const struct A237 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA237() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A237), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A237, m0), 1);
		dcStructField(st, 'd', offsetof(struct A237, m1), 1);
		dcStructField(st, 'l', offsetof(struct A237, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{pdl}psijfcflijj} */
struct A238 { struct A237 m0; p m1; s m2; i m3; j m4; f m5; c m6; f m7; l m8; i m9; j m10; j m11; };
void f_cpA238(struct A238 *x, const struct A238 *y) { f_cpA237(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA238(const struct A238 *x, const struct A238 *y) { return f_cmpA237(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA238() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A238), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A238, m0), 1, f_touchdcstA237());
		dcStructField(st, 'p', offsetof(struct A238, m1), 1);
		dcStructField(st, 's', offsetof(struct A238, m2), 1);
		dcStructField(st, 'i', offsetof(struct A238, m3), 1);
		dcStructField(st, 'j', offsetof(struct A238, m4), 1);
		dcStructField(st, 'f', offsetof(struct A238, m5), 1);
		dcStructField(st, 'c', offsetof(struct A238, m6), 1);
		dcStructField(st, 'f', offsetof(struct A238, m7), 1);
		dcStructField(st, 'l', offsetof(struct A238, m8), 1);
		dcStructField(st, 'i', offsetof(struct A238, m9), 1);
		dcStructField(st, 'j', offsetof(struct A238, m10), 1);
		dcStructField(st, 'j', offsetof(struct A238, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dplcf} */
struct A239 { d m0; p m1; l m2; c m3; f m4; };
void f_cpA239(struct A239 *x, const struct A239 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA239(const struct A239 *x, const struct A239 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA239() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A239), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A239, m0), 1);
		dcStructField(st, 'p', offsetof(struct A239, m1), 1);
		dcStructField(st, 'l', offsetof(struct A239, m2), 1);
		dcStructField(st, 'c', offsetof(struct A239, m3), 1);
		dcStructField(st, 'f', offsetof(struct A239, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{dplcf}cfl} */
struct A240 { struct A239 m0; c m1; f m2; l m3; };
void f_cpA240(struct A240 *x, const struct A240 *y) { f_cpA239(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA240(const struct A240 *x, const struct A240 *y) { return f_cmpA239(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA240() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A240), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A240, m0), 1, f_touchdcstA239());
		dcStructField(st, 'c', offsetof(struct A240, m1), 1);
		dcStructField(st, 'f', offsetof(struct A240, m2), 1);
		dcStructField(st, 'l', offsetof(struct A240, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sifscscd} */
struct A241 { s m0; i m1; f m2; s m3; c m4; s m5; c m6; d m7; };
void f_cpA241(struct A241 *x, const struct A241 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA241(const struct A241 *x, const struct A241 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA241() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A241), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A241, m0), 1);
		dcStructField(st, 'i', offsetof(struct A241, m1), 1);
		dcStructField(st, 'f', offsetof(struct A241, m2), 1);
		dcStructField(st, 's', offsetof(struct A241, m3), 1);
		dcStructField(st, 'c', offsetof(struct A241, m4), 1);
		dcStructField(st, 's', offsetof(struct A241, m5), 1);
		dcStructField(st, 'c', offsetof(struct A241, m6), 1);
		dcStructField(st, 'd', offsetof(struct A241, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lldcc} */
struct A242 { l m0; l m1; d m2; c m3; c m4; };
void f_cpA242(struct A242 *x, const struct A242 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA242(const struct A242 *x, const struct A242 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA242() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A242), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A242, m0), 1);
		dcStructField(st, 'l', offsetof(struct A242, m1), 1);
		dcStructField(st, 'd', offsetof(struct A242, m2), 1);
		dcStructField(st, 'c', offsetof(struct A242, m3), 1);
		dcStructField(st, 'c', offsetof(struct A242, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfdpispdis} */
struct A243 { j m0; f m1; d m2; p m3; i m4; s m5; p m6; d m7; i m8; s m9; };
void f_cpA243(struct A243 *x, const struct A243 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA243(const struct A243 *x, const struct A243 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA243() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A243), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A243, m0), 1);
		dcStructField(st, 'f', offsetof(struct A243, m1), 1);
		dcStructField(st, 'd', offsetof(struct A243, m2), 1);
		dcStructField(st, 'p', offsetof(struct A243, m3), 1);
		dcStructField(st, 'i', offsetof(struct A243, m4), 1);
		dcStructField(st, 's', offsetof(struct A243, m5), 1);
		dcStructField(st, 'p', offsetof(struct A243, m6), 1);
		dcStructField(st, 'd', offsetof(struct A243, m7), 1);
		dcStructField(st, 'i', offsetof(struct A243, m8), 1);
		dcStructField(st, 's', offsetof(struct A243, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cld} */
struct A244 { c m0; l m1; d m2; };
void f_cpA244(struct A244 *x, const struct A244 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA244(const struct A244 *x, const struct A244 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA244() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A244), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A244, m0), 1);
		dcStructField(st, 'l', offsetof(struct A244, m1), 1);
		dcStructField(st, 'd', offsetof(struct A244, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flipdiff} */
struct A245 { f m0; l m1; i m2; p m3; d m4; i m5; f m6; f m7; };
void f_cpA245(struct A245 *x, const struct A245 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA245(const struct A245 *x, const struct A245 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA245() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A245), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A245, m0), 1);
		dcStructField(st, 'l', offsetof(struct A245, m1), 1);
		dcStructField(st, 'i', offsetof(struct A245, m2), 1);
		dcStructField(st, 'p', offsetof(struct A245, m3), 1);
		dcStructField(st, 'd', offsetof(struct A245, m4), 1);
		dcStructField(st, 'i', offsetof(struct A245, m5), 1);
		dcStructField(st, 'f', offsetof(struct A245, m6), 1);
		dcStructField(st, 'f', offsetof(struct A245, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sppicp} */
struct A246 { s m0; p m1; p m2; i m3; c m4; p m5; };
void f_cpA246(struct A246 *x, const struct A246 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA246(const struct A246 *x, const struct A246 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA246() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A246), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A246, m0), 1);
		dcStructField(st, 'p', offsetof(struct A246, m1), 1);
		dcStructField(st, 'p', offsetof(struct A246, m2), 1);
		dcStructField(st, 'i', offsetof(struct A246, m3), 1);
		dcStructField(st, 'c', offsetof(struct A246, m4), 1);
		dcStructField(st, 'p', offsetof(struct A246, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dilppcslcjlpcfsiddi} */
struct A247 { d m0; i m1; l m2; p m3; p m4; c m5; s m6; l m7; c m8; j m9; l m10; p m11; c m12; f m13; s m14; i m15; d m16; d m17; i m18; };
void f_cpA247(struct A247 *x, const struct A247 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA247(const struct A247 *x, const struct A247 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA247() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A247), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A247, m0), 1);
		dcStructField(st, 'i', offsetof(struct A247, m1), 1);
		dcStructField(st, 'l', offsetof(struct A247, m2), 1);
		dcStructField(st, 'p', offsetof(struct A247, m3), 1);
		dcStructField(st, 'p', offsetof(struct A247, m4), 1);
		dcStructField(st, 'c', offsetof(struct A247, m5), 1);
		dcStructField(st, 's', offsetof(struct A247, m6), 1);
		dcStructField(st, 'l', offsetof(struct A247, m7), 1);
		dcStructField(st, 'c', offsetof(struct A247, m8), 1);
		dcStructField(st, 'j', offsetof(struct A247, m9), 1);
		dcStructField(st, 'l', offsetof(struct A247, m10), 1);
		dcStructField(st, 'p', offsetof(struct A247, m11), 1);
		dcStructField(st, 'c', offsetof(struct A247, m12), 1);
		dcStructField(st, 'f', offsetof(struct A247, m13), 1);
		dcStructField(st, 's', offsetof(struct A247, m14), 1);
		dcStructField(st, 'i', offsetof(struct A247, m15), 1);
		dcStructField(st, 'd', offsetof(struct A247, m16), 1);
		dcStructField(st, 'd', offsetof(struct A247, m17), 1);
		dcStructField(st, 'i', offsetof(struct A247, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ds} */
struct A248 { d m0; s m1; };
void f_cpA248(struct A248 *x, const struct A248 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA248(const struct A248 *x, const struct A248 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA248() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A248), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A248, m0), 1);
		dcStructField(st, 's', offsetof(struct A248, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfl} */
struct A249 { j m0; f m1; l m2; };
void f_cpA249(struct A249 *x, const struct A249 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA249(const struct A249 *x, const struct A249 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA249() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A249), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A249, m0), 1);
		dcStructField(st, 'f', offsetof(struct A249, m1), 1);
		dcStructField(st, 'l', offsetof(struct A249, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsi{flipdiff}sc{sppicp}sif{s}iiic{dilppcslcjlpcfsiddi}{ds}jsci{jfl}dfjd} */
struct A250 { l m0; s m1; i m2; struct A245 m3; s m4; c m5; struct A246 m6; s m7; i m8; f m9; struct A27 m10; i m11; i m12; i m13; c m14; struct A247 m15; struct A248 m16; j m17; s m18; c m19; i m20; struct A249 m21; d m22; f m23; j m24; d m25; };
void f_cpA250(struct A250 *x, const struct A250 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA245(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA246(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA27(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA247(&x->m15, &y->m15); f_cpA248(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; f_cpA249(&x->m21, &y->m21); x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA250(const struct A250 *x, const struct A250 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA245(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA246(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA27(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA247(&x->m15, &y->m15) && f_cmpA248(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && f_cmpA249(&x->m21, &y->m21) && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA250() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A250), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A250, m0), 1);
		dcStructField(st, 's', offsetof(struct A250, m1), 1);
		dcStructField(st, 'i', offsetof(struct A250, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A250, m3), 1, f_touchdcstA245());
		dcStructField(st, 's', offsetof(struct A250, m4), 1);
		dcStructField(st, 'c', offsetof(struct A250, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A250, m6), 1, f_touchdcstA246());
		dcStructField(st, 's', offsetof(struct A250, m7), 1);
		dcStructField(st, 'i', offsetof(struct A250, m8), 1);
		dcStructField(st, 'f', offsetof(struct A250, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A250, m10), 1, f_touchdcstA27());
		dcStructField(st, 'i', offsetof(struct A250, m11), 1);
		dcStructField(st, 'i', offsetof(struct A250, m12), 1);
		dcStructField(st, 'i', offsetof(struct A250, m13), 1);
		dcStructField(st, 'c', offsetof(struct A250, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A250, m15), 1, f_touchdcstA247());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A250, m16), 1, f_touchdcstA248());
		dcStructField(st, 'j', offsetof(struct A250, m17), 1);
		dcStructField(st, 's', offsetof(struct A250, m18), 1);
		dcStructField(st, 'c', offsetof(struct A250, m19), 1);
		dcStructField(st, 'i', offsetof(struct A250, m20), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A250, m21), 1, f_touchdcstA249());
		dcStructField(st, 'd', offsetof(struct A250, m22), 1);
		dcStructField(st, 'f', offsetof(struct A250, m23), 1);
		dcStructField(st, 'j', offsetof(struct A250, m24), 1);
		dcStructField(st, 'd', offsetof(struct A250, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfscjj} */
struct A251 { j m0; f m1; s m2; c m3; j m4; j m5; };
void f_cpA251(struct A251 *x, const struct A251 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA251(const struct A251 *x, const struct A251 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA251() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A251), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A251, m0), 1);
		dcStructField(st, 'f', offsetof(struct A251, m1), 1);
		dcStructField(st, 's', offsetof(struct A251, m2), 1);
		dcStructField(st, 'c', offsetof(struct A251, m3), 1);
		dcStructField(st, 'j', offsetof(struct A251, m4), 1);
		dcStructField(st, 'j', offsetof(struct A251, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{jfscjj}isfjcfdsd} */
struct A252 { p m0; struct A251 m1; i m2; s m3; f m4; j m5; c m6; f m7; d m8; s m9; d m10; };
void f_cpA252(struct A252 *x, const struct A252 *y) { x->m0 = y->m0; f_cpA251(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA252(const struct A252 *x, const struct A252 *y) { return x->m0 == y->m0 && f_cmpA251(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA252() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A252), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A252, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A252, m1), 1, f_touchdcstA251());
		dcStructField(st, 'i', offsetof(struct A252, m2), 1);
		dcStructField(st, 's', offsetof(struct A252, m3), 1);
		dcStructField(st, 'f', offsetof(struct A252, m4), 1);
		dcStructField(st, 'j', offsetof(struct A252, m5), 1);
		dcStructField(st, 'c', offsetof(struct A252, m6), 1);
		dcStructField(st, 'f', offsetof(struct A252, m7), 1);
		dcStructField(st, 'd', offsetof(struct A252, m8), 1);
		dcStructField(st, 's', offsetof(struct A252, m9), 1);
		dcStructField(st, 'd', offsetof(struct A252, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfpiscildscj} */
struct A253 { s m0; f m1; p m2; i m3; s m4; c m5; i m6; l m7; d m8; s m9; c m10; j m11; };
void f_cpA253(struct A253 *x, const struct A253 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA253(const struct A253 *x, const struct A253 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA253() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A253), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A253, m0), 1);
		dcStructField(st, 'f', offsetof(struct A253, m1), 1);
		dcStructField(st, 'p', offsetof(struct A253, m2), 1);
		dcStructField(st, 'i', offsetof(struct A253, m3), 1);
		dcStructField(st, 's', offsetof(struct A253, m4), 1);
		dcStructField(st, 'c', offsetof(struct A253, m5), 1);
		dcStructField(st, 'i', offsetof(struct A253, m6), 1);
		dcStructField(st, 'l', offsetof(struct A253, m7), 1);
		dcStructField(st, 'd', offsetof(struct A253, m8), 1);
		dcStructField(st, 's', offsetof(struct A253, m9), 1);
		dcStructField(st, 'c', offsetof(struct A253, m10), 1);
		dcStructField(st, 'j', offsetof(struct A253, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pclpcpfi{sfpiscildscj}dd} */
struct A254 { p m0; c m1; l m2; p m3; c m4; p m5; f m6; i m7; struct A253 m8; d m9; d m10; };
void f_cpA254(struct A254 *x, const struct A254 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA253(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA254(const struct A254 *x, const struct A254 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA253(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA254() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A254), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A254, m0), 1);
		dcStructField(st, 'c', offsetof(struct A254, m1), 1);
		dcStructField(st, 'l', offsetof(struct A254, m2), 1);
		dcStructField(st, 'p', offsetof(struct A254, m3), 1);
		dcStructField(st, 'c', offsetof(struct A254, m4), 1);
		dcStructField(st, 'p', offsetof(struct A254, m5), 1);
		dcStructField(st, 'f', offsetof(struct A254, m6), 1);
		dcStructField(st, 'i', offsetof(struct A254, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A254, m8), 1, f_touchdcstA253());
		dcStructField(st, 'd', offsetof(struct A254, m9), 1);
		dcStructField(st, 'd', offsetof(struct A254, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csjccfsff} */
struct A255 { c m0; s m1; j m2; c m3; c m4; f m5; s m6; f m7; f m8; };
void f_cpA255(struct A255 *x, const struct A255 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA255(const struct A255 *x, const struct A255 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA255() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A255), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A255, m0), 1);
		dcStructField(st, 's', offsetof(struct A255, m1), 1);
		dcStructField(st, 'j', offsetof(struct A255, m2), 1);
		dcStructField(st, 'c', offsetof(struct A255, m3), 1);
		dcStructField(st, 'c', offsetof(struct A255, m4), 1);
		dcStructField(st, 'f', offsetof(struct A255, m5), 1);
		dcStructField(st, 's', offsetof(struct A255, m6), 1);
		dcStructField(st, 'f', offsetof(struct A255, m7), 1);
		dcStructField(st, 'f', offsetof(struct A255, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ls} */
struct A256 { l m0; s m1; };
void f_cpA256(struct A256 *x, const struct A256 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA256(const struct A256 *x, const struct A256 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA256() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A256), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A256, m0), 1);
		dcStructField(st, 's', offsetof(struct A256, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsfpdd} */
struct A257 { f m0; s m1; f m2; p m3; d m4; d m5; };
void f_cpA257(struct A257 *x, const struct A257 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA257(const struct A257 *x, const struct A257 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA257() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A257), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A257, m0), 1);
		dcStructField(st, 's', offsetof(struct A257, m1), 1);
		dcStructField(st, 'f', offsetof(struct A257, m2), 1);
		dcStructField(st, 'p', offsetof(struct A257, m3), 1);
		dcStructField(st, 'd', offsetof(struct A257, m4), 1);
		dcStructField(st, 'd', offsetof(struct A257, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ildddsssfi} */
struct A258 { i m0; l m1; d m2; d m3; d m4; s m5; s m6; s m7; f m8; i m9; };
void f_cpA258(struct A258 *x, const struct A258 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA258(const struct A258 *x, const struct A258 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA258() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A258), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A258, m0), 1);
		dcStructField(st, 'l', offsetof(struct A258, m1), 1);
		dcStructField(st, 'd', offsetof(struct A258, m2), 1);
		dcStructField(st, 'd', offsetof(struct A258, m3), 1);
		dcStructField(st, 'd', offsetof(struct A258, m4), 1);
		dcStructField(st, 's', offsetof(struct A258, m5), 1);
		dcStructField(st, 's', offsetof(struct A258, m6), 1);
		dcStructField(st, 's', offsetof(struct A258, m7), 1);
		dcStructField(st, 'f', offsetof(struct A258, m8), 1);
		dcStructField(st, 'i', offsetof(struct A258, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fsfpdd}j{ildddsssfi}p} */
struct A259 { struct A257 m0; j m1; struct A258 m2; p m3; };
void f_cpA259(struct A259 *x, const struct A259 *y) { f_cpA257(&x->m0, &y->m0); x->m1 = y->m1; f_cpA258(&x->m2, &y->m2); x->m3 = y->m3; };
int f_cmpA259(const struct A259 *x, const struct A259 *y) { return f_cmpA257(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA258(&x->m2, &y->m2) && x->m3 == y->m3; };
DCstruct* f_touchdcstA259() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A259), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A259, m0), 1, f_touchdcstA257());
		dcStructField(st, 'j', offsetof(struct A259, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A259, m2), 1, f_touchdcstA258());
		dcStructField(st, 'p', offsetof(struct A259, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcp} */
struct A260 { f m0; c m1; p m2; };
void f_cpA260(struct A260 *x, const struct A260 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA260(const struct A260 *x, const struct A260 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA260() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A260), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A260, m0), 1);
		dcStructField(st, 'c', offsetof(struct A260, m1), 1);
		dcStructField(st, 'p', offsetof(struct A260, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfldicl} */
struct A261 { j m0; f m1; l m2; d m3; i m4; c m5; l m6; };
void f_cpA261(struct A261 *x, const struct A261 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA261(const struct A261 *x, const struct A261 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA261() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A261), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A261, m0), 1);
		dcStructField(st, 'f', offsetof(struct A261, m1), 1);
		dcStructField(st, 'l', offsetof(struct A261, m2), 1);
		dcStructField(st, 'd', offsetof(struct A261, m3), 1);
		dcStructField(st, 'i', offsetof(struct A261, m4), 1);
		dcStructField(st, 'c', offsetof(struct A261, m5), 1);
		dcStructField(st, 'l', offsetof(struct A261, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cicfjdsisfc} */
struct A262 { c m0; i m1; c m2; f m3; j m4; d m5; s m6; i m7; s m8; f m9; c m10; };
void f_cpA262(struct A262 *x, const struct A262 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA262(const struct A262 *x, const struct A262 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA262() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A262), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A262, m0), 1);
		dcStructField(st, 'i', offsetof(struct A262, m1), 1);
		dcStructField(st, 'c', offsetof(struct A262, m2), 1);
		dcStructField(st, 'f', offsetof(struct A262, m3), 1);
		dcStructField(st, 'j', offsetof(struct A262, m4), 1);
		dcStructField(st, 'd', offsetof(struct A262, m5), 1);
		dcStructField(st, 's', offsetof(struct A262, m6), 1);
		dcStructField(st, 'i', offsetof(struct A262, m7), 1);
		dcStructField(st, 's', offsetof(struct A262, m8), 1);
		dcStructField(st, 'f', offsetof(struct A262, m9), 1);
		dcStructField(st, 'c', offsetof(struct A262, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfcjilclfisdsipp} */
struct A263 { j m0; f m1; c m2; j m3; i m4; l m5; c m6; l m7; f m8; i m9; s m10; d m11; s m12; i m13; p m14; p m15; };
void f_cpA263(struct A263 *x, const struct A263 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA263(const struct A263 *x, const struct A263 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA263() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A263), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A263, m0), 1);
		dcStructField(st, 'f', offsetof(struct A263, m1), 1);
		dcStructField(st, 'c', offsetof(struct A263, m2), 1);
		dcStructField(st, 'j', offsetof(struct A263, m3), 1);
		dcStructField(st, 'i', offsetof(struct A263, m4), 1);
		dcStructField(st, 'l', offsetof(struct A263, m5), 1);
		dcStructField(st, 'c', offsetof(struct A263, m6), 1);
		dcStructField(st, 'l', offsetof(struct A263, m7), 1);
		dcStructField(st, 'f', offsetof(struct A263, m8), 1);
		dcStructField(st, 'i', offsetof(struct A263, m9), 1);
		dcStructField(st, 's', offsetof(struct A263, m10), 1);
		dcStructField(st, 'd', offsetof(struct A263, m11), 1);
		dcStructField(st, 's', offsetof(struct A263, m12), 1);
		dcStructField(st, 'i', offsetof(struct A263, m13), 1);
		dcStructField(st, 'p', offsetof(struct A263, m14), 1);
		dcStructField(st, 'p', offsetof(struct A263, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pi{cicfjdsisfc}cdldclscljlfccppf{jfcjilclfisdsipp}p} */
struct A264 { p m0; i m1; struct A262 m2; c m3; d m4; l m5; d m6; c m7; l m8; s m9; c m10; l m11; j m12; l m13; f m14; c m15; c m16; p m17; p m18; f m19; struct A263 m20; p m21; };
void f_cpA264(struct A264 *x, const struct A264 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA262(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA263(&x->m20, &y->m20); x->m21 = y->m21; };
int f_cmpA264(const struct A264 *x, const struct A264 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA262(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA263(&x->m20, &y->m20) && x->m21 == y->m21; };
DCstruct* f_touchdcstA264() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A264), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A264, m0), 1);
		dcStructField(st, 'i', offsetof(struct A264, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A264, m2), 1, f_touchdcstA262());
		dcStructField(st, 'c', offsetof(struct A264, m3), 1);
		dcStructField(st, 'd', offsetof(struct A264, m4), 1);
		dcStructField(st, 'l', offsetof(struct A264, m5), 1);
		dcStructField(st, 'd', offsetof(struct A264, m6), 1);
		dcStructField(st, 'c', offsetof(struct A264, m7), 1);
		dcStructField(st, 'l', offsetof(struct A264, m8), 1);
		dcStructField(st, 's', offsetof(struct A264, m9), 1);
		dcStructField(st, 'c', offsetof(struct A264, m10), 1);
		dcStructField(st, 'l', offsetof(struct A264, m11), 1);
		dcStructField(st, 'j', offsetof(struct A264, m12), 1);
		dcStructField(st, 'l', offsetof(struct A264, m13), 1);
		dcStructField(st, 'f', offsetof(struct A264, m14), 1);
		dcStructField(st, 'c', offsetof(struct A264, m15), 1);
		dcStructField(st, 'c', offsetof(struct A264, m16), 1);
		dcStructField(st, 'p', offsetof(struct A264, m17), 1);
		dcStructField(st, 'p', offsetof(struct A264, m18), 1);
		dcStructField(st, 'f', offsetof(struct A264, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A264, m20), 1, f_touchdcstA263());
		dcStructField(st, 'p', offsetof(struct A264, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jl} */
struct A265 { j m0; l m1; };
void f_cpA265(struct A265 *x, const struct A265 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA265(const struct A265 *x, const struct A265 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA265() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A265), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A265, m0), 1);
		dcStructField(st, 'l', offsetof(struct A265, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jijis} */
struct A266 { j m0; i m1; j m2; i m3; s m4; };
void f_cpA266(struct A266 *x, const struct A266 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA266(const struct A266 *x, const struct A266 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA266() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A266), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A266, m0), 1);
		dcStructField(st, 'i', offsetof(struct A266, m1), 1);
		dcStructField(st, 'j', offsetof(struct A266, m2), 1);
		dcStructField(st, 'i', offsetof(struct A266, m3), 1);
		dcStructField(st, 's', offsetof(struct A266, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dspiflp} */
struct A267 { d m0; s m1; p m2; i m3; f m4; l m5; p m6; };
void f_cpA267(struct A267 *x, const struct A267 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA267(const struct A267 *x, const struct A267 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA267() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A267), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A267, m0), 1);
		dcStructField(st, 's', offsetof(struct A267, m1), 1);
		dcStructField(st, 'p', offsetof(struct A267, m2), 1);
		dcStructField(st, 'i', offsetof(struct A267, m3), 1);
		dcStructField(st, 'f', offsetof(struct A267, m4), 1);
		dcStructField(st, 'l', offsetof(struct A267, m5), 1);
		dcStructField(st, 'p', offsetof(struct A267, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plijdllplsfs} */
struct A268 { p m0; l m1; i m2; j m3; d m4; l m5; l m6; p m7; l m8; s m9; f m10; s m11; };
void f_cpA268(struct A268 *x, const struct A268 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA268(const struct A268 *x, const struct A268 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA268() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A268), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A268, m0), 1);
		dcStructField(st, 'l', offsetof(struct A268, m1), 1);
		dcStructField(st, 'i', offsetof(struct A268, m2), 1);
		dcStructField(st, 'j', offsetof(struct A268, m3), 1);
		dcStructField(st, 'd', offsetof(struct A268, m4), 1);
		dcStructField(st, 'l', offsetof(struct A268, m5), 1);
		dcStructField(st, 'l', offsetof(struct A268, m6), 1);
		dcStructField(st, 'p', offsetof(struct A268, m7), 1);
		dcStructField(st, 'l', offsetof(struct A268, m8), 1);
		dcStructField(st, 's', offsetof(struct A268, m9), 1);
		dcStructField(st, 'f', offsetof(struct A268, m10), 1);
		dcStructField(st, 's', offsetof(struct A268, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isdip} */
struct A269 { i m0; s m1; d m2; i m3; p m4; };
void f_cpA269(struct A269 *x, const struct A269 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA269(const struct A269 *x, const struct A269 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA269() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A269), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A269, m0), 1);
		dcStructField(st, 's', offsetof(struct A269, m1), 1);
		dcStructField(st, 'd', offsetof(struct A269, m2), 1);
		dcStructField(st, 'i', offsetof(struct A269, m3), 1);
		dcStructField(st, 'p', offsetof(struct A269, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfjld} */
struct A270 { l m0; f m1; j m2; l m3; d m4; };
void f_cpA270(struct A270 *x, const struct A270 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA270(const struct A270 *x, const struct A270 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA270() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A270), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A270, m0), 1);
		dcStructField(st, 'f', offsetof(struct A270, m1), 1);
		dcStructField(st, 'j', offsetof(struct A270, m2), 1);
		dcStructField(st, 'l', offsetof(struct A270, m3), 1);
		dcStructField(st, 'd', offsetof(struct A270, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jllcdfdfis} */
struct A271 { j m0; l m1; l m2; c m3; d m4; f m5; d m6; f m7; i m8; s m9; };
void f_cpA271(struct A271 *x, const struct A271 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA271(const struct A271 *x, const struct A271 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA271() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A271), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A271, m0), 1);
		dcStructField(st, 'l', offsetof(struct A271, m1), 1);
		dcStructField(st, 'l', offsetof(struct A271, m2), 1);
		dcStructField(st, 'c', offsetof(struct A271, m3), 1);
		dcStructField(st, 'd', offsetof(struct A271, m4), 1);
		dcStructField(st, 'f', offsetof(struct A271, m5), 1);
		dcStructField(st, 'd', offsetof(struct A271, m6), 1);
		dcStructField(st, 'f', offsetof(struct A271, m7), 1);
		dcStructField(st, 'i', offsetof(struct A271, m8), 1);
		dcStructField(st, 's', offsetof(struct A271, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {siipjpjclc} */
struct A272 { s m0; i m1; i m2; p m3; j m4; p m5; j m6; c m7; l m8; c m9; };
void f_cpA272(struct A272 *x, const struct A272 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA272(const struct A272 *x, const struct A272 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA272() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A272), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A272, m0), 1);
		dcStructField(st, 'i', offsetof(struct A272, m1), 1);
		dcStructField(st, 'i', offsetof(struct A272, m2), 1);
		dcStructField(st, 'p', offsetof(struct A272, m3), 1);
		dcStructField(st, 'j', offsetof(struct A272, m4), 1);
		dcStructField(st, 'p', offsetof(struct A272, m5), 1);
		dcStructField(st, 'j', offsetof(struct A272, m6), 1);
		dcStructField(st, 'c', offsetof(struct A272, m7), 1);
		dcStructField(st, 'l', offsetof(struct A272, m8), 1);
		dcStructField(st, 'c', offsetof(struct A272, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilpfcsddflcdlpfpjjifjjdjs} */
struct A273 { i m0; l m1; p m2; f m3; c m4; s m5; d m6; d m7; f m8; l m9; c m10; d m11; l m12; p m13; f m14; p m15; j m16; j m17; i m18; f m19; j m20; j m21; d m22; j m23; s m24; };
void f_cpA273(struct A273 *x, const struct A273 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA273(const struct A273 *x, const struct A273 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA273() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A273), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A273, m0), 1);
		dcStructField(st, 'l', offsetof(struct A273, m1), 1);
		dcStructField(st, 'p', offsetof(struct A273, m2), 1);
		dcStructField(st, 'f', offsetof(struct A273, m3), 1);
		dcStructField(st, 'c', offsetof(struct A273, m4), 1);
		dcStructField(st, 's', offsetof(struct A273, m5), 1);
		dcStructField(st, 'd', offsetof(struct A273, m6), 1);
		dcStructField(st, 'd', offsetof(struct A273, m7), 1);
		dcStructField(st, 'f', offsetof(struct A273, m8), 1);
		dcStructField(st, 'l', offsetof(struct A273, m9), 1);
		dcStructField(st, 'c', offsetof(struct A273, m10), 1);
		dcStructField(st, 'd', offsetof(struct A273, m11), 1);
		dcStructField(st, 'l', offsetof(struct A273, m12), 1);
		dcStructField(st, 'p', offsetof(struct A273, m13), 1);
		dcStructField(st, 'f', offsetof(struct A273, m14), 1);
		dcStructField(st, 'p', offsetof(struct A273, m15), 1);
		dcStructField(st, 'j', offsetof(struct A273, m16), 1);
		dcStructField(st, 'j', offsetof(struct A273, m17), 1);
		dcStructField(st, 'i', offsetof(struct A273, m18), 1);
		dcStructField(st, 'f', offsetof(struct A273, m19), 1);
		dcStructField(st, 'j', offsetof(struct A273, m20), 1);
		dcStructField(st, 'j', offsetof(struct A273, m21), 1);
		dcStructField(st, 'd', offsetof(struct A273, m22), 1);
		dcStructField(st, 'j', offsetof(struct A273, m23), 1);
		dcStructField(st, 's', offsetof(struct A273, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ll} */
struct A274 { l m0; l m1; };
void f_cpA274(struct A274 *x, const struct A274 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA274(const struct A274 *x, const struct A274 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA274() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A274), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A274, m0), 1);
		dcStructField(st, 'l', offsetof(struct A274, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddfsjjfsicll} */
struct A275 { d m0; d m1; f m2; s m3; j m4; j m5; f m6; s m7; i m8; c m9; l m10; l m11; };
void f_cpA275(struct A275 *x, const struct A275 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA275(const struct A275 *x, const struct A275 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA275() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A275), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A275, m0), 1);
		dcStructField(st, 'd', offsetof(struct A275, m1), 1);
		dcStructField(st, 'f', offsetof(struct A275, m2), 1);
		dcStructField(st, 's', offsetof(struct A275, m3), 1);
		dcStructField(st, 'j', offsetof(struct A275, m4), 1);
		dcStructField(st, 'j', offsetof(struct A275, m5), 1);
		dcStructField(st, 'f', offsetof(struct A275, m6), 1);
		dcStructField(st, 's', offsetof(struct A275, m7), 1);
		dcStructField(st, 'i', offsetof(struct A275, m8), 1);
		dcStructField(st, 'c', offsetof(struct A275, m9), 1);
		dcStructField(st, 'l', offsetof(struct A275, m10), 1);
		dcStructField(st, 'l', offsetof(struct A275, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isljciipfi} */
struct A276 { i m0; s m1; l m2; j m3; c m4; i m5; i m6; p m7; f m8; i m9; };
void f_cpA276(struct A276 *x, const struct A276 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA276(const struct A276 *x, const struct A276 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA276() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A276), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A276, m0), 1);
		dcStructField(st, 's', offsetof(struct A276, m1), 1);
		dcStructField(st, 'l', offsetof(struct A276, m2), 1);
		dcStructField(st, 'j', offsetof(struct A276, m3), 1);
		dcStructField(st, 'c', offsetof(struct A276, m4), 1);
		dcStructField(st, 'i', offsetof(struct A276, m5), 1);
		dcStructField(st, 'i', offsetof(struct A276, m6), 1);
		dcStructField(st, 'p', offsetof(struct A276, m7), 1);
		dcStructField(st, 'f', offsetof(struct A276, m8), 1);
		dcStructField(st, 'i', offsetof(struct A276, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i{jllcdfdfis}p{siipjpjclc}{ilpfcsddflcdlpfpjjifjjdjs}sfl{ll}iid{ddfsjjfsicll}s{isljciipfi}} */
struct A277 { i m0; struct A271 m1; p m2; struct A272 m3; struct A273 m4; s m5; f m6; l m7; struct A274 m8; i m9; i m10; d m11; struct A275 m12; s m13; struct A276 m14; };
void f_cpA277(struct A277 *x, const struct A277 *y) { x->m0 = y->m0; f_cpA271(&x->m1, &y->m1); x->m2 = y->m2; f_cpA272(&x->m3, &y->m3); f_cpA273(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA274(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA275(&x->m12, &y->m12); x->m13 = y->m13; f_cpA276(&x->m14, &y->m14); };
int f_cmpA277(const struct A277 *x, const struct A277 *y) { return x->m0 == y->m0 && f_cmpA271(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA272(&x->m3, &y->m3) && f_cmpA273(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA274(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA275(&x->m12, &y->m12) && x->m13 == y->m13 && f_cmpA276(&x->m14, &y->m14); };
DCstruct* f_touchdcstA277() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A277), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A277, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A277, m1), 1, f_touchdcstA271());
		dcStructField(st, 'p', offsetof(struct A277, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A277, m3), 1, f_touchdcstA272());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A277, m4), 1, f_touchdcstA273());
		dcStructField(st, 's', offsetof(struct A277, m5), 1);
		dcStructField(st, 'f', offsetof(struct A277, m6), 1);
		dcStructField(st, 'l', offsetof(struct A277, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A277, m8), 1, f_touchdcstA274());
		dcStructField(st, 'i', offsetof(struct A277, m9), 1);
		dcStructField(st, 'i', offsetof(struct A277, m10), 1);
		dcStructField(st, 'd', offsetof(struct A277, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A277, m12), 1, f_touchdcstA275());
		dcStructField(st, 's', offsetof(struct A277, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A277, m14), 1, f_touchdcstA276());
		dcCloseStruct(st);
	}
	return st;
};
/* {fdjcpdc} */
struct A278 { f m0; d m1; j m2; c m3; p m4; d m5; c m6; };
void f_cpA278(struct A278 *x, const struct A278 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA278(const struct A278 *x, const struct A278 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA278() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A278), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A278, m0), 1);
		dcStructField(st, 'd', offsetof(struct A278, m1), 1);
		dcStructField(st, 'j', offsetof(struct A278, m2), 1);
		dcStructField(st, 'c', offsetof(struct A278, m3), 1);
		dcStructField(st, 'p', offsetof(struct A278, m4), 1);
		dcStructField(st, 'd', offsetof(struct A278, m5), 1);
		dcStructField(st, 'c', offsetof(struct A278, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpi} */
struct A279 { d m0; p m1; i m2; };
void f_cpA279(struct A279 *x, const struct A279 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA279(const struct A279 *x, const struct A279 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA279() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A279), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A279, m0), 1);
		dcStructField(st, 'p', offsetof(struct A279, m1), 1);
		dcStructField(st, 'i', offsetof(struct A279, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdlfpijsiilccsi} */
struct A280 { f m0; d m1; l m2; f m3; p m4; i m5; j m6; s m7; i m8; i m9; l m10; c m11; c m12; s m13; i m14; };
void f_cpA280(struct A280 *x, const struct A280 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA280(const struct A280 *x, const struct A280 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA280() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A280), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A280, m0), 1);
		dcStructField(st, 'd', offsetof(struct A280, m1), 1);
		dcStructField(st, 'l', offsetof(struct A280, m2), 1);
		dcStructField(st, 'f', offsetof(struct A280, m3), 1);
		dcStructField(st, 'p', offsetof(struct A280, m4), 1);
		dcStructField(st, 'i', offsetof(struct A280, m5), 1);
		dcStructField(st, 'j', offsetof(struct A280, m6), 1);
		dcStructField(st, 's', offsetof(struct A280, m7), 1);
		dcStructField(st, 'i', offsetof(struct A280, m8), 1);
		dcStructField(st, 'i', offsetof(struct A280, m9), 1);
		dcStructField(st, 'l', offsetof(struct A280, m10), 1);
		dcStructField(st, 'c', offsetof(struct A280, m11), 1);
		dcStructField(st, 'c', offsetof(struct A280, m12), 1);
		dcStructField(st, 's', offsetof(struct A280, m13), 1);
		dcStructField(st, 'i', offsetof(struct A280, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcdi} */
struct A281 { d m0; c m1; d m2; i m3; };
void f_cpA281(struct A281 *x, const struct A281 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA281(const struct A281 *x, const struct A281 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA281() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A281), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A281, m0), 1);
		dcStructField(st, 'c', offsetof(struct A281, m1), 1);
		dcStructField(st, 'd', offsetof(struct A281, m2), 1);
		dcStructField(st, 'i', offsetof(struct A281, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djpspljijjffs} */
struct A282 { d m0; j m1; p m2; s m3; p m4; l m5; j m6; i m7; j m8; j m9; f m10; f m11; s m12; };
void f_cpA282(struct A282 *x, const struct A282 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA282(const struct A282 *x, const struct A282 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA282() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A282), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A282, m0), 1);
		dcStructField(st, 'j', offsetof(struct A282, m1), 1);
		dcStructField(st, 'p', offsetof(struct A282, m2), 1);
		dcStructField(st, 's', offsetof(struct A282, m3), 1);
		dcStructField(st, 'p', offsetof(struct A282, m4), 1);
		dcStructField(st, 'l', offsetof(struct A282, m5), 1);
		dcStructField(st, 'j', offsetof(struct A282, m6), 1);
		dcStructField(st, 'i', offsetof(struct A282, m7), 1);
		dcStructField(st, 'j', offsetof(struct A282, m8), 1);
		dcStructField(st, 'j', offsetof(struct A282, m9), 1);
		dcStructField(st, 'f', offsetof(struct A282, m10), 1);
		dcStructField(st, 'f', offsetof(struct A282, m11), 1);
		dcStructField(st, 's', offsetof(struct A282, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fclcdcsdidjssdl} */
struct A283 { f m0; c m1; l m2; c m3; d m4; c m5; s m6; d m7; i m8; d m9; j m10; s m11; s m12; d m13; l m14; };
void f_cpA283(struct A283 *x, const struct A283 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA283(const struct A283 *x, const struct A283 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA283() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A283), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A283, m0), 1);
		dcStructField(st, 'c', offsetof(struct A283, m1), 1);
		dcStructField(st, 'l', offsetof(struct A283, m2), 1);
		dcStructField(st, 'c', offsetof(struct A283, m3), 1);
		dcStructField(st, 'd', offsetof(struct A283, m4), 1);
		dcStructField(st, 'c', offsetof(struct A283, m5), 1);
		dcStructField(st, 's', offsetof(struct A283, m6), 1);
		dcStructField(st, 'd', offsetof(struct A283, m7), 1);
		dcStructField(st, 'i', offsetof(struct A283, m8), 1);
		dcStructField(st, 'd', offsetof(struct A283, m9), 1);
		dcStructField(st, 'j', offsetof(struct A283, m10), 1);
		dcStructField(st, 's', offsetof(struct A283, m11), 1);
		dcStructField(st, 's', offsetof(struct A283, m12), 1);
		dcStructField(st, 'd', offsetof(struct A283, m13), 1);
		dcStructField(st, 'l', offsetof(struct A283, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sscisd} */
struct A284 { s m0; s m1; c m2; i m3; s m4; d m5; };
void f_cpA284(struct A284 *x, const struct A284 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA284(const struct A284 *x, const struct A284 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA284() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A284), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A284, m0), 1);
		dcStructField(st, 's', offsetof(struct A284, m1), 1);
		dcStructField(st, 'c', offsetof(struct A284, m2), 1);
		dcStructField(st, 'i', offsetof(struct A284, m3), 1);
		dcStructField(st, 's', offsetof(struct A284, m4), 1);
		dcStructField(st, 'd', offsetof(struct A284, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pd} */
struct A285 { p m0; d m1; };
void f_cpA285(struct A285 *x, const struct A285 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA285(const struct A285 *x, const struct A285 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA285() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A285), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A285, m0), 1);
		dcStructField(st, 'd', offsetof(struct A285, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{pd}ldiiiddi} */
struct A286 { p m0; struct A285 m1; l m2; d m3; i m4; i m5; i m6; d m7; d m8; i m9; };
void f_cpA286(struct A286 *x, const struct A286 *y) { x->m0 = y->m0; f_cpA285(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA286(const struct A286 *x, const struct A286 *y) { return x->m0 == y->m0 && f_cmpA285(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA286() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A286), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A286, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A286, m1), 1, f_touchdcstA285());
		dcStructField(st, 'l', offsetof(struct A286, m2), 1);
		dcStructField(st, 'd', offsetof(struct A286, m3), 1);
		dcStructField(st, 'i', offsetof(struct A286, m4), 1);
		dcStructField(st, 'i', offsetof(struct A286, m5), 1);
		dcStructField(st, 'i', offsetof(struct A286, m6), 1);
		dcStructField(st, 'd', offsetof(struct A286, m7), 1);
		dcStructField(st, 'd', offsetof(struct A286, m8), 1);
		dcStructField(st, 'i', offsetof(struct A286, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfp} */
struct A287 { p m0; f m1; p m2; };
void f_cpA287(struct A287 *x, const struct A287 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA287(const struct A287 *x, const struct A287 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA287() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A287), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A287, m0), 1);
		dcStructField(st, 'f', offsetof(struct A287, m1), 1);
		dcStructField(st, 'p', offsetof(struct A287, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {liissldljpd} */
struct A288 { l m0; i m1; i m2; s m3; s m4; l m5; d m6; l m7; j m8; p m9; d m10; };
void f_cpA288(struct A288 *x, const struct A288 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA288(const struct A288 *x, const struct A288 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA288() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A288), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A288, m0), 1);
		dcStructField(st, 'i', offsetof(struct A288, m1), 1);
		dcStructField(st, 'i', offsetof(struct A288, m2), 1);
		dcStructField(st, 's', offsetof(struct A288, m3), 1);
		dcStructField(st, 's', offsetof(struct A288, m4), 1);
		dcStructField(st, 'l', offsetof(struct A288, m5), 1);
		dcStructField(st, 'd', offsetof(struct A288, m6), 1);
		dcStructField(st, 'l', offsetof(struct A288, m7), 1);
		dcStructField(st, 'j', offsetof(struct A288, m8), 1);
		dcStructField(st, 'p', offsetof(struct A288, m9), 1);
		dcStructField(st, 'd', offsetof(struct A288, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsspl{liissldljpd}dcscl} */
struct A289 { l m0; s m1; s m2; p m3; l m4; struct A288 m5; d m6; c m7; s m8; c m9; l m10; };
void f_cpA289(struct A289 *x, const struct A289 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA288(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA289(const struct A289 *x, const struct A289 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA288(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA289() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A289), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A289, m0), 1);
		dcStructField(st, 's', offsetof(struct A289, m1), 1);
		dcStructField(st, 's', offsetof(struct A289, m2), 1);
		dcStructField(st, 'p', offsetof(struct A289, m3), 1);
		dcStructField(st, 'l', offsetof(struct A289, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A289, m5), 1, f_touchdcstA288());
		dcStructField(st, 'd', offsetof(struct A289, m6), 1);
		dcStructField(st, 'c', offsetof(struct A289, m7), 1);
		dcStructField(st, 's', offsetof(struct A289, m8), 1);
		dcStructField(st, 'c', offsetof(struct A289, m9), 1);
		dcStructField(st, 'l', offsetof(struct A289, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfsiijld{pfp}{lsspl{liissldljpd}dcscl}} */
struct A290 { j m0; f m1; s m2; i m3; i m4; j m5; l m6; d m7; struct A287 m8; struct A289 m9; };
void f_cpA290(struct A290 *x, const struct A290 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA287(&x->m8, &y->m8); f_cpA289(&x->m9, &y->m9); };
int f_cmpA290(const struct A290 *x, const struct A290 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA287(&x->m8, &y->m8) && f_cmpA289(&x->m9, &y->m9); };
DCstruct* f_touchdcstA290() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A290), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A290, m0), 1);
		dcStructField(st, 'f', offsetof(struct A290, m1), 1);
		dcStructField(st, 's', offsetof(struct A290, m2), 1);
		dcStructField(st, 'i', offsetof(struct A290, m3), 1);
		dcStructField(st, 'i', offsetof(struct A290, m4), 1);
		dcStructField(st, 'j', offsetof(struct A290, m5), 1);
		dcStructField(st, 'l', offsetof(struct A290, m6), 1);
		dcStructField(st, 'd', offsetof(struct A290, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A290, m8), 1, f_touchdcstA287());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A290, m9), 1, f_touchdcstA289());
		dcCloseStruct(st);
	}
	return st;
};
/* {pl} */
struct A291 { p m0; l m1; };
void f_cpA291(struct A291 *x, const struct A291 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA291(const struct A291 *x, const struct A291 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA291() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A291), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A291, m0), 1);
		dcStructField(st, 'l', offsetof(struct A291, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cddciicsfsfpdfjssspsld} */
struct A292 { c m0; d m1; d m2; c m3; i m4; i m5; c m6; s m7; f m8; s m9; f m10; p m11; d m12; f m13; j m14; s m15; s m16; s m17; p m18; s m19; l m20; d m21; };
void f_cpA292(struct A292 *x, const struct A292 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA292(const struct A292 *x, const struct A292 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA292() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A292), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A292, m0), 1);
		dcStructField(st, 'd', offsetof(struct A292, m1), 1);
		dcStructField(st, 'd', offsetof(struct A292, m2), 1);
		dcStructField(st, 'c', offsetof(struct A292, m3), 1);
		dcStructField(st, 'i', offsetof(struct A292, m4), 1);
		dcStructField(st, 'i', offsetof(struct A292, m5), 1);
		dcStructField(st, 'c', offsetof(struct A292, m6), 1);
		dcStructField(st, 's', offsetof(struct A292, m7), 1);
		dcStructField(st, 'f', offsetof(struct A292, m8), 1);
		dcStructField(st, 's', offsetof(struct A292, m9), 1);
		dcStructField(st, 'f', offsetof(struct A292, m10), 1);
		dcStructField(st, 'p', offsetof(struct A292, m11), 1);
		dcStructField(st, 'd', offsetof(struct A292, m12), 1);
		dcStructField(st, 'f', offsetof(struct A292, m13), 1);
		dcStructField(st, 'j', offsetof(struct A292, m14), 1);
		dcStructField(st, 's', offsetof(struct A292, m15), 1);
		dcStructField(st, 's', offsetof(struct A292, m16), 1);
		dcStructField(st, 's', offsetof(struct A292, m17), 1);
		dcStructField(st, 'p', offsetof(struct A292, m18), 1);
		dcStructField(st, 's', offsetof(struct A292, m19), 1);
		dcStructField(st, 'l', offsetof(struct A292, m20), 1);
		dcStructField(st, 'd', offsetof(struct A292, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfdj} */
struct A293 { p m0; f m1; d m2; j m3; };
void f_cpA293(struct A293 *x, const struct A293 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA293(const struct A293 *x, const struct A293 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA293() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A293), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A293, m0), 1);
		dcStructField(st, 'f', offsetof(struct A293, m1), 1);
		dcStructField(st, 'd', offsetof(struct A293, m2), 1);
		dcStructField(st, 'j', offsetof(struct A293, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{pfdj}} */
struct A294 { struct A293 m0; };
void f_cpA294(struct A294 *x, const struct A294 *y) { f_cpA293(&x->m0, &y->m0); };
int f_cmpA294(const struct A294 *x, const struct A294 *y) { return f_cmpA293(&x->m0, &y->m0); };
DCstruct* f_touchdcstA294() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A294), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A294, m0), 1, f_touchdcstA293());
		dcCloseStruct(st);
	}
	return st;
};
/* {ijfdcfpcdjscpplcspisfcliccdssc} */
struct A295 { i m0; j m1; f m2; d m3; c m4; f m5; p m6; c m7; d m8; j m9; s m10; c m11; p m12; p m13; l m14; c m15; s m16; p m17; i m18; s m19; f m20; c m21; l m22; i m23; c m24; c m25; d m26; s m27; s m28; c m29; };
void f_cpA295(struct A295 *x, const struct A295 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA295(const struct A295 *x, const struct A295 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA295() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A295), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A295, m0), 1);
		dcStructField(st, 'j', offsetof(struct A295, m1), 1);
		dcStructField(st, 'f', offsetof(struct A295, m2), 1);
		dcStructField(st, 'd', offsetof(struct A295, m3), 1);
		dcStructField(st, 'c', offsetof(struct A295, m4), 1);
		dcStructField(st, 'f', offsetof(struct A295, m5), 1);
		dcStructField(st, 'p', offsetof(struct A295, m6), 1);
		dcStructField(st, 'c', offsetof(struct A295, m7), 1);
		dcStructField(st, 'd', offsetof(struct A295, m8), 1);
		dcStructField(st, 'j', offsetof(struct A295, m9), 1);
		dcStructField(st, 's', offsetof(struct A295, m10), 1);
		dcStructField(st, 'c', offsetof(struct A295, m11), 1);
		dcStructField(st, 'p', offsetof(struct A295, m12), 1);
		dcStructField(st, 'p', offsetof(struct A295, m13), 1);
		dcStructField(st, 'l', offsetof(struct A295, m14), 1);
		dcStructField(st, 'c', offsetof(struct A295, m15), 1);
		dcStructField(st, 's', offsetof(struct A295, m16), 1);
		dcStructField(st, 'p', offsetof(struct A295, m17), 1);
		dcStructField(st, 'i', offsetof(struct A295, m18), 1);
		dcStructField(st, 's', offsetof(struct A295, m19), 1);
		dcStructField(st, 'f', offsetof(struct A295, m20), 1);
		dcStructField(st, 'c', offsetof(struct A295, m21), 1);
		dcStructField(st, 'l', offsetof(struct A295, m22), 1);
		dcStructField(st, 'i', offsetof(struct A295, m23), 1);
		dcStructField(st, 'c', offsetof(struct A295, m24), 1);
		dcStructField(st, 'c', offsetof(struct A295, m25), 1);
		dcStructField(st, 'd', offsetof(struct A295, m26), 1);
		dcStructField(st, 's', offsetof(struct A295, m27), 1);
		dcStructField(st, 's', offsetof(struct A295, m28), 1);
		dcStructField(st, 'c', offsetof(struct A295, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdsisjjpfcicsdjfcplccj{ijfdcfpcdjscpplcspisfcliccdssc}jjfcljfps} */
struct A296 { s m0; d m1; s m2; i m3; s m4; j m5; j m6; p m7; f m8; c m9; i m10; c m11; s m12; d m13; j m14; f m15; c m16; p m17; l m18; c m19; c m20; j m21; struct A295 m22; j m23; j m24; f m25; c m26; l m27; j m28; f m29; p m30; s m31; };
void f_cpA296(struct A296 *x, const struct A296 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; f_cpA295(&x->m22, &y->m22); x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; };
int f_cmpA296(const struct A296 *x, const struct A296 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && f_cmpA295(&x->m22, &y->m22) && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31; };
DCstruct* f_touchdcstA296() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(32, sizeof(struct A296), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A296, m0), 1);
		dcStructField(st, 'd', offsetof(struct A296, m1), 1);
		dcStructField(st, 's', offsetof(struct A296, m2), 1);
		dcStructField(st, 'i', offsetof(struct A296, m3), 1);
		dcStructField(st, 's', offsetof(struct A296, m4), 1);
		dcStructField(st, 'j', offsetof(struct A296, m5), 1);
		dcStructField(st, 'j', offsetof(struct A296, m6), 1);
		dcStructField(st, 'p', offsetof(struct A296, m7), 1);
		dcStructField(st, 'f', offsetof(struct A296, m8), 1);
		dcStructField(st, 'c', offsetof(struct A296, m9), 1);
		dcStructField(st, 'i', offsetof(struct A296, m10), 1);
		dcStructField(st, 'c', offsetof(struct A296, m11), 1);
		dcStructField(st, 's', offsetof(struct A296, m12), 1);
		dcStructField(st, 'd', offsetof(struct A296, m13), 1);
		dcStructField(st, 'j', offsetof(struct A296, m14), 1);
		dcStructField(st, 'f', offsetof(struct A296, m15), 1);
		dcStructField(st, 'c', offsetof(struct A296, m16), 1);
		dcStructField(st, 'p', offsetof(struct A296, m17), 1);
		dcStructField(st, 'l', offsetof(struct A296, m18), 1);
		dcStructField(st, 'c', offsetof(struct A296, m19), 1);
		dcStructField(st, 'c', offsetof(struct A296, m20), 1);
		dcStructField(st, 'j', offsetof(struct A296, m21), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A296, m22), 1, f_touchdcstA295());
		dcStructField(st, 'j', offsetof(struct A296, m23), 1);
		dcStructField(st, 'j', offsetof(struct A296, m24), 1);
		dcStructField(st, 'f', offsetof(struct A296, m25), 1);
		dcStructField(st, 'c', offsetof(struct A296, m26), 1);
		dcStructField(st, 'l', offsetof(struct A296, m27), 1);
		dcStructField(st, 'j', offsetof(struct A296, m28), 1);
		dcStructField(st, 'f', offsetof(struct A296, m29), 1);
		dcStructField(st, 'p', offsetof(struct A296, m30), 1);
		dcStructField(st, 's', offsetof(struct A296, m31), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psl} */
struct A297 { p m0; s m1; l m2; };
void f_cpA297(struct A297 *x, const struct A297 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA297(const struct A297 *x, const struct A297 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA297() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A297), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A297, m0), 1);
		dcStructField(st, 's', offsetof(struct A297, m1), 1);
		dcStructField(st, 'l', offsetof(struct A297, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fddicpscfslds} */
struct A298 { f m0; d m1; d m2; i m3; c m4; p m5; s m6; c m7; f m8; s m9; l m10; d m11; s m12; };
void f_cpA298(struct A298 *x, const struct A298 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA298(const struct A298 *x, const struct A298 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA298() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A298), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A298, m0), 1);
		dcStructField(st, 'd', offsetof(struct A298, m1), 1);
		dcStructField(st, 'd', offsetof(struct A298, m2), 1);
		dcStructField(st, 'i', offsetof(struct A298, m3), 1);
		dcStructField(st, 'c', offsetof(struct A298, m4), 1);
		dcStructField(st, 'p', offsetof(struct A298, m5), 1);
		dcStructField(st, 's', offsetof(struct A298, m6), 1);
		dcStructField(st, 'c', offsetof(struct A298, m7), 1);
		dcStructField(st, 'f', offsetof(struct A298, m8), 1);
		dcStructField(st, 's', offsetof(struct A298, m9), 1);
		dcStructField(st, 'l', offsetof(struct A298, m10), 1);
		dcStructField(st, 'd', offsetof(struct A298, m11), 1);
		dcStructField(st, 's', offsetof(struct A298, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lipsc{psl}j{fddicpscfslds}d} */
struct A299 { l m0; i m1; p m2; s m3; c m4; struct A297 m5; j m6; struct A298 m7; d m8; };
void f_cpA299(struct A299 *x, const struct A299 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA297(&x->m5, &y->m5); x->m6 = y->m6; f_cpA298(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA299(const struct A299 *x, const struct A299 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA297(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA298(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA299() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A299), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A299, m0), 1);
		dcStructField(st, 'i', offsetof(struct A299, m1), 1);
		dcStructField(st, 'p', offsetof(struct A299, m2), 1);
		dcStructField(st, 's', offsetof(struct A299, m3), 1);
		dcStructField(st, 'c', offsetof(struct A299, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A299, m5), 1, f_touchdcstA297());
		dcStructField(st, 'j', offsetof(struct A299, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A299, m7), 1, f_touchdcstA298());
		dcStructField(st, 'd', offsetof(struct A299, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccjscpcdp{lipsc{psl}j{fddicpscfslds}d}lpjdspdcc} */
struct A300 { c m0; c m1; j m2; s m3; c m4; p m5; c m6; d m7; p m8; struct A299 m9; l m10; p m11; j m12; d m13; s m14; p m15; d m16; c m17; c m18; };
void f_cpA300(struct A300 *x, const struct A300 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA299(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA300(const struct A300 *x, const struct A300 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA299(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA300() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A300), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A300, m0), 1);
		dcStructField(st, 'c', offsetof(struct A300, m1), 1);
		dcStructField(st, 'j', offsetof(struct A300, m2), 1);
		dcStructField(st, 's', offsetof(struct A300, m3), 1);
		dcStructField(st, 'c', offsetof(struct A300, m4), 1);
		dcStructField(st, 'p', offsetof(struct A300, m5), 1);
		dcStructField(st, 'c', offsetof(struct A300, m6), 1);
		dcStructField(st, 'd', offsetof(struct A300, m7), 1);
		dcStructField(st, 'p', offsetof(struct A300, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A300, m9), 1, f_touchdcstA299());
		dcStructField(st, 'l', offsetof(struct A300, m10), 1);
		dcStructField(st, 'p', offsetof(struct A300, m11), 1);
		dcStructField(st, 'j', offsetof(struct A300, m12), 1);
		dcStructField(st, 'd', offsetof(struct A300, m13), 1);
		dcStructField(st, 's', offsetof(struct A300, m14), 1);
		dcStructField(st, 'p', offsetof(struct A300, m15), 1);
		dcStructField(st, 'd', offsetof(struct A300, m16), 1);
		dcStructField(st, 'c', offsetof(struct A300, m17), 1);
		dcStructField(st, 'c', offsetof(struct A300, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {did} */
struct A301 { d m0; i m1; d m2; };
void f_cpA301(struct A301 *x, const struct A301 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA301(const struct A301 *x, const struct A301 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA301() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A301), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A301, m0), 1);
		dcStructField(st, 'i', offsetof(struct A301, m1), 1);
		dcStructField(st, 'd', offsetof(struct A301, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfjjdcppcffjljfdjsl} */
struct A302 { s m0; f m1; j m2; j m3; d m4; c m5; p m6; p m7; c m8; f m9; f m10; j m11; l m12; j m13; f m14; d m15; j m16; s m17; l m18; };
void f_cpA302(struct A302 *x, const struct A302 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA302(const struct A302 *x, const struct A302 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA302() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A302), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A302, m0), 1);
		dcStructField(st, 'f', offsetof(struct A302, m1), 1);
		dcStructField(st, 'j', offsetof(struct A302, m2), 1);
		dcStructField(st, 'j', offsetof(struct A302, m3), 1);
		dcStructField(st, 'd', offsetof(struct A302, m4), 1);
		dcStructField(st, 'c', offsetof(struct A302, m5), 1);
		dcStructField(st, 'p', offsetof(struct A302, m6), 1);
		dcStructField(st, 'p', offsetof(struct A302, m7), 1);
		dcStructField(st, 'c', offsetof(struct A302, m8), 1);
		dcStructField(st, 'f', offsetof(struct A302, m9), 1);
		dcStructField(st, 'f', offsetof(struct A302, m10), 1);
		dcStructField(st, 'j', offsetof(struct A302, m11), 1);
		dcStructField(st, 'l', offsetof(struct A302, m12), 1);
		dcStructField(st, 'j', offsetof(struct A302, m13), 1);
		dcStructField(st, 'f', offsetof(struct A302, m14), 1);
		dcStructField(st, 'd', offsetof(struct A302, m15), 1);
		dcStructField(st, 'j', offsetof(struct A302, m16), 1);
		dcStructField(st, 's', offsetof(struct A302, m17), 1);
		dcStructField(st, 'l', offsetof(struct A302, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccsjs} */
struct A303 { c m0; c m1; s m2; j m3; s m4; };
void f_cpA303(struct A303 *x, const struct A303 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA303(const struct A303 *x, const struct A303 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA303() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A303), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A303, m0), 1);
		dcStructField(st, 'c', offsetof(struct A303, m1), 1);
		dcStructField(st, 's', offsetof(struct A303, m2), 1);
		dcStructField(st, 'j', offsetof(struct A303, m3), 1);
		dcStructField(st, 's', offsetof(struct A303, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifsjsfpi} */
struct A304 { i m0; f m1; s m2; j m3; s m4; f m5; p m6; i m7; };
void f_cpA304(struct A304 *x, const struct A304 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA304(const struct A304 *x, const struct A304 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA304() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A304), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A304, m0), 1);
		dcStructField(st, 'f', offsetof(struct A304, m1), 1);
		dcStructField(st, 's', offsetof(struct A304, m2), 1);
		dcStructField(st, 'j', offsetof(struct A304, m3), 1);
		dcStructField(st, 's', offsetof(struct A304, m4), 1);
		dcStructField(st, 'f', offsetof(struct A304, m5), 1);
		dcStructField(st, 'p', offsetof(struct A304, m6), 1);
		dcStructField(st, 'i', offsetof(struct A304, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sccf} */
struct A305 { s m0; c m1; c m2; f m3; };
void f_cpA305(struct A305 *x, const struct A305 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA305(const struct A305 *x, const struct A305 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA305() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A305), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A305, m0), 1);
		dcStructField(st, 'c', offsetof(struct A305, m1), 1);
		dcStructField(st, 'c', offsetof(struct A305, m2), 1);
		dcStructField(st, 'f', offsetof(struct A305, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfppdficlillccpisjplsdpilpjidcipfiicjdjdilddf} */
struct A306 { l m0; f m1; p m2; p m3; d m4; f m5; i m6; c m7; l m8; i m9; l m10; l m11; c m12; c m13; p m14; i m15; s m16; j m17; p m18; l m19; s m20; d m21; p m22; i m23; l m24; p m25; j m26; i m27; d m28; c m29; i m30; p m31; f m32; i m33; i m34; c m35; j m36; d m37; j m38; d m39; i m40; l m41; d m42; d m43; f m44; };
void f_cpA306(struct A306 *x, const struct A306 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; x->m42 = y->m42; x->m43 = y->m43; x->m44 = y->m44; };
int f_cmpA306(const struct A306 *x, const struct A306 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && x->m42 == y->m42 && x->m43 == y->m43 && x->m44 == y->m44; };
DCstruct* f_touchdcstA306() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(45, sizeof(struct A306), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A306, m0), 1);
		dcStructField(st, 'f', offsetof(struct A306, m1), 1);
		dcStructField(st, 'p', offsetof(struct A306, m2), 1);
		dcStructField(st, 'p', offsetof(struct A306, m3), 1);
		dcStructField(st, 'd', offsetof(struct A306, m4), 1);
		dcStructField(st, 'f', offsetof(struct A306, m5), 1);
		dcStructField(st, 'i', offsetof(struct A306, m6), 1);
		dcStructField(st, 'c', offsetof(struct A306, m7), 1);
		dcStructField(st, 'l', offsetof(struct A306, m8), 1);
		dcStructField(st, 'i', offsetof(struct A306, m9), 1);
		dcStructField(st, 'l', offsetof(struct A306, m10), 1);
		dcStructField(st, 'l', offsetof(struct A306, m11), 1);
		dcStructField(st, 'c', offsetof(struct A306, m12), 1);
		dcStructField(st, 'c', offsetof(struct A306, m13), 1);
		dcStructField(st, 'p', offsetof(struct A306, m14), 1);
		dcStructField(st, 'i', offsetof(struct A306, m15), 1);
		dcStructField(st, 's', offsetof(struct A306, m16), 1);
		dcStructField(st, 'j', offsetof(struct A306, m17), 1);
		dcStructField(st, 'p', offsetof(struct A306, m18), 1);
		dcStructField(st, 'l', offsetof(struct A306, m19), 1);
		dcStructField(st, 's', offsetof(struct A306, m20), 1);
		dcStructField(st, 'd', offsetof(struct A306, m21), 1);
		dcStructField(st, 'p', offsetof(struct A306, m22), 1);
		dcStructField(st, 'i', offsetof(struct A306, m23), 1);
		dcStructField(st, 'l', offsetof(struct A306, m24), 1);
		dcStructField(st, 'p', offsetof(struct A306, m25), 1);
		dcStructField(st, 'j', offsetof(struct A306, m26), 1);
		dcStructField(st, 'i', offsetof(struct A306, m27), 1);
		dcStructField(st, 'd', offsetof(struct A306, m28), 1);
		dcStructField(st, 'c', offsetof(struct A306, m29), 1);
		dcStructField(st, 'i', offsetof(struct A306, m30), 1);
		dcStructField(st, 'p', offsetof(struct A306, m31), 1);
		dcStructField(st, 'f', offsetof(struct A306, m32), 1);
		dcStructField(st, 'i', offsetof(struct A306, m33), 1);
		dcStructField(st, 'i', offsetof(struct A306, m34), 1);
		dcStructField(st, 'c', offsetof(struct A306, m35), 1);
		dcStructField(st, 'j', offsetof(struct A306, m36), 1);
		dcStructField(st, 'd', offsetof(struct A306, m37), 1);
		dcStructField(st, 'j', offsetof(struct A306, m38), 1);
		dcStructField(st, 'd', offsetof(struct A306, m39), 1);
		dcStructField(st, 'i', offsetof(struct A306, m40), 1);
		dcStructField(st, 'l', offsetof(struct A306, m41), 1);
		dcStructField(st, 'd', offsetof(struct A306, m42), 1);
		dcStructField(st, 'd', offsetof(struct A306, m43), 1);
		dcStructField(st, 'f', offsetof(struct A306, m44), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j{sccf}sdip{lfppdficlillccpisjplsdpilpjidcipfiicjdjdilddf}cili} */
struct A307 { j m0; struct A305 m1; s m2; d m3; i m4; p m5; struct A306 m6; c m7; i m8; l m9; i m10; };
void f_cpA307(struct A307 *x, const struct A307 *y) { x->m0 = y->m0; f_cpA305(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA306(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA307(const struct A307 *x, const struct A307 *y) { return x->m0 == y->m0 && f_cmpA305(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA306(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA307() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A307), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A307, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A307, m1), 1, f_touchdcstA305());
		dcStructField(st, 's', offsetof(struct A307, m2), 1);
		dcStructField(st, 'd', offsetof(struct A307, m3), 1);
		dcStructField(st, 'i', offsetof(struct A307, m4), 1);
		dcStructField(st, 'p', offsetof(struct A307, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A307, m6), 1, f_touchdcstA306());
		dcStructField(st, 'c', offsetof(struct A307, m7), 1);
		dcStructField(st, 'i', offsetof(struct A307, m8), 1);
		dcStructField(st, 'l', offsetof(struct A307, m9), 1);
		dcStructField(st, 'i', offsetof(struct A307, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsijijjic} */
struct A308 { l m0; s m1; i m2; j m3; i m4; j m5; j m6; i m7; c m8; };
void f_cpA308(struct A308 *x, const struct A308 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA308(const struct A308 *x, const struct A308 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA308() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A308), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A308, m0), 1);
		dcStructField(st, 's', offsetof(struct A308, m1), 1);
		dcStructField(st, 'i', offsetof(struct A308, m2), 1);
		dcStructField(st, 'j', offsetof(struct A308, m3), 1);
		dcStructField(st, 'i', offsetof(struct A308, m4), 1);
		dcStructField(st, 'j', offsetof(struct A308, m5), 1);
		dcStructField(st, 'j', offsetof(struct A308, m6), 1);
		dcStructField(st, 'i', offsetof(struct A308, m7), 1);
		dcStructField(st, 'c', offsetof(struct A308, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idfcfcdlp} */
struct A309 { i m0; d m1; f m2; c m3; f m4; c m5; d m6; l m7; p m8; };
void f_cpA309(struct A309 *x, const struct A309 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA309(const struct A309 *x, const struct A309 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA309() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A309), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A309, m0), 1);
		dcStructField(st, 'd', offsetof(struct A309, m1), 1);
		dcStructField(st, 'f', offsetof(struct A309, m2), 1);
		dcStructField(st, 'c', offsetof(struct A309, m3), 1);
		dcStructField(st, 'f', offsetof(struct A309, m4), 1);
		dcStructField(st, 'c', offsetof(struct A309, m5), 1);
		dcStructField(st, 'd', offsetof(struct A309, m6), 1);
		dcStructField(st, 'l', offsetof(struct A309, m7), 1);
		dcStructField(st, 'p', offsetof(struct A309, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssilsifppc} */
struct A310 { s m0; s m1; i m2; l m3; s m4; i m5; f m6; p m7; p m8; c m9; };
void f_cpA310(struct A310 *x, const struct A310 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA310(const struct A310 *x, const struct A310 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA310() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A310), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A310, m0), 1);
		dcStructField(st, 's', offsetof(struct A310, m1), 1);
		dcStructField(st, 'i', offsetof(struct A310, m2), 1);
		dcStructField(st, 'l', offsetof(struct A310, m3), 1);
		dcStructField(st, 's', offsetof(struct A310, m4), 1);
		dcStructField(st, 'i', offsetof(struct A310, m5), 1);
		dcStructField(st, 'f', offsetof(struct A310, m6), 1);
		dcStructField(st, 'p', offsetof(struct A310, m7), 1);
		dcStructField(st, 'p', offsetof(struct A310, m8), 1);
		dcStructField(st, 'c', offsetof(struct A310, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilcpi{idfcfcdlp}d{ssilsifppc}p} */
struct A311 { i m0; l m1; c m2; p m3; i m4; struct A309 m5; d m6; struct A310 m7; p m8; };
void f_cpA311(struct A311 *x, const struct A311 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA309(&x->m5, &y->m5); x->m6 = y->m6; f_cpA310(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA311(const struct A311 *x, const struct A311 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA309(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA310(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA311() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A311), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A311, m0), 1);
		dcStructField(st, 'l', offsetof(struct A311, m1), 1);
		dcStructField(st, 'c', offsetof(struct A311, m2), 1);
		dcStructField(st, 'p', offsetof(struct A311, m3), 1);
		dcStructField(st, 'i', offsetof(struct A311, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A311, m5), 1, f_touchdcstA309());
		dcStructField(st, 'd', offsetof(struct A311, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A311, m7), 1, f_touchdcstA310());
		dcStructField(st, 'p', offsetof(struct A311, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ld{lsijijjic}iljljc{ilcpi{idfcfcdlp}d{ssilsifppc}p}sccdi} */
struct A312 { l m0; d m1; struct A308 m2; i m3; l m4; j m5; l m6; j m7; c m8; struct A311 m9; s m10; c m11; c m12; d m13; i m14; };
void f_cpA312(struct A312 *x, const struct A312 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA308(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA311(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA312(const struct A312 *x, const struct A312 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA308(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA311(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA312() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A312), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A312, m0), 1);
		dcStructField(st, 'd', offsetof(struct A312, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A312, m2), 1, f_touchdcstA308());
		dcStructField(st, 'i', offsetof(struct A312, m3), 1);
		dcStructField(st, 'l', offsetof(struct A312, m4), 1);
		dcStructField(st, 'j', offsetof(struct A312, m5), 1);
		dcStructField(st, 'l', offsetof(struct A312, m6), 1);
		dcStructField(st, 'j', offsetof(struct A312, m7), 1);
		dcStructField(st, 'c', offsetof(struct A312, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A312, m9), 1, f_touchdcstA311());
		dcStructField(st, 's', offsetof(struct A312, m10), 1);
		dcStructField(st, 'c', offsetof(struct A312, m11), 1);
		dcStructField(st, 'c', offsetof(struct A312, m12), 1);
		dcStructField(st, 'd', offsetof(struct A312, m13), 1);
		dcStructField(st, 'i', offsetof(struct A312, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isc} */
struct A313 { i m0; s m1; c m2; };
void f_cpA313(struct A313 *x, const struct A313 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA313(const struct A313 *x, const struct A313 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA313() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A313), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A313, m0), 1);
		dcStructField(st, 's', offsetof(struct A313, m1), 1);
		dcStructField(st, 'c', offsetof(struct A313, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jscp} */
struct A314 { j m0; s m1; c m2; p m3; };
void f_cpA314(struct A314 *x, const struct A314 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA314(const struct A314 *x, const struct A314 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA314() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A314), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A314, m0), 1);
		dcStructField(st, 's', offsetof(struct A314, m1), 1);
		dcStructField(st, 'c', offsetof(struct A314, m2), 1);
		dcStructField(st, 'p', offsetof(struct A314, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddj} */
struct A315 { d m0; d m1; j m2; };
void f_cpA315(struct A315 *x, const struct A315 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA315(const struct A315 *x, const struct A315 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA315() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A315), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A315, m0), 1);
		dcStructField(st, 'd', offsetof(struct A315, m1), 1);
		dcStructField(st, 'j', offsetof(struct A315, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfdcf} */
struct A316 { p m0; f m1; d m2; c m3; f m4; };
void f_cpA316(struct A316 *x, const struct A316 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA316(const struct A316 *x, const struct A316 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA316() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A316), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A316, m0), 1);
		dcStructField(st, 'f', offsetof(struct A316, m1), 1);
		dcStructField(st, 'd', offsetof(struct A316, m2), 1);
		dcStructField(st, 'c', offsetof(struct A316, m3), 1);
		dcStructField(st, 'f', offsetof(struct A316, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlfdf} */
struct A317 { j m0; l m1; f m2; d m3; f m4; };
void f_cpA317(struct A317 *x, const struct A317 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA317(const struct A317 *x, const struct A317 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA317() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A317), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A317, m0), 1);
		dcStructField(st, 'l', offsetof(struct A317, m1), 1);
		dcStructField(st, 'f', offsetof(struct A317, m2), 1);
		dcStructField(st, 'd', offsetof(struct A317, m3), 1);
		dcStructField(st, 'f', offsetof(struct A317, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdpidiijidfdljfddipl} */
struct A318 { p m0; d m1; p m2; i m3; d m4; i m5; i m6; j m7; i m8; d m9; f m10; d m11; l m12; j m13; f m14; d m15; d m16; i m17; p m18; l m19; };
void f_cpA318(struct A318 *x, const struct A318 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA318(const struct A318 *x, const struct A318 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA318() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A318), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A318, m0), 1);
		dcStructField(st, 'd', offsetof(struct A318, m1), 1);
		dcStructField(st, 'p', offsetof(struct A318, m2), 1);
		dcStructField(st, 'i', offsetof(struct A318, m3), 1);
		dcStructField(st, 'd', offsetof(struct A318, m4), 1);
		dcStructField(st, 'i', offsetof(struct A318, m5), 1);
		dcStructField(st, 'i', offsetof(struct A318, m6), 1);
		dcStructField(st, 'j', offsetof(struct A318, m7), 1);
		dcStructField(st, 'i', offsetof(struct A318, m8), 1);
		dcStructField(st, 'd', offsetof(struct A318, m9), 1);
		dcStructField(st, 'f', offsetof(struct A318, m10), 1);
		dcStructField(st, 'd', offsetof(struct A318, m11), 1);
		dcStructField(st, 'l', offsetof(struct A318, m12), 1);
		dcStructField(st, 'j', offsetof(struct A318, m13), 1);
		dcStructField(st, 'f', offsetof(struct A318, m14), 1);
		dcStructField(st, 'd', offsetof(struct A318, m15), 1);
		dcStructField(st, 'd', offsetof(struct A318, m16), 1);
		dcStructField(st, 'i', offsetof(struct A318, m17), 1);
		dcStructField(st, 'p', offsetof(struct A318, m18), 1);
		dcStructField(st, 'l', offsetof(struct A318, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcsppljjisfs{pfdcf}pcljpff{jlfdf}islppffs{pdpidiijidfdljfddipl}pdscifd} */
struct A319 { j m0; c m1; s m2; p m3; p m4; l m5; j m6; j m7; i m8; s m9; f m10; s m11; struct A316 m12; p m13; c m14; l m15; j m16; p m17; f m18; f m19; struct A317 m20; i m21; s m22; l m23; p m24; p m25; f m26; f m27; s m28; struct A318 m29; p m30; d m31; s m32; c m33; i m34; f m35; d m36; };
void f_cpA319(struct A319 *x, const struct A319 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA316(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA317(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; f_cpA318(&x->m29, &y->m29); x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; };
int f_cmpA319(const struct A319 *x, const struct A319 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA316(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA317(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && f_cmpA318(&x->m29, &y->m29) && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36; };
DCstruct* f_touchdcstA319() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(37, sizeof(struct A319), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A319, m0), 1);
		dcStructField(st, 'c', offsetof(struct A319, m1), 1);
		dcStructField(st, 's', offsetof(struct A319, m2), 1);
		dcStructField(st, 'p', offsetof(struct A319, m3), 1);
		dcStructField(st, 'p', offsetof(struct A319, m4), 1);
		dcStructField(st, 'l', offsetof(struct A319, m5), 1);
		dcStructField(st, 'j', offsetof(struct A319, m6), 1);
		dcStructField(st, 'j', offsetof(struct A319, m7), 1);
		dcStructField(st, 'i', offsetof(struct A319, m8), 1);
		dcStructField(st, 's', offsetof(struct A319, m9), 1);
		dcStructField(st, 'f', offsetof(struct A319, m10), 1);
		dcStructField(st, 's', offsetof(struct A319, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A319, m12), 1, f_touchdcstA316());
		dcStructField(st, 'p', offsetof(struct A319, m13), 1);
		dcStructField(st, 'c', offsetof(struct A319, m14), 1);
		dcStructField(st, 'l', offsetof(struct A319, m15), 1);
		dcStructField(st, 'j', offsetof(struct A319, m16), 1);
		dcStructField(st, 'p', offsetof(struct A319, m17), 1);
		dcStructField(st, 'f', offsetof(struct A319, m18), 1);
		dcStructField(st, 'f', offsetof(struct A319, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A319, m20), 1, f_touchdcstA317());
		dcStructField(st, 'i', offsetof(struct A319, m21), 1);
		dcStructField(st, 's', offsetof(struct A319, m22), 1);
		dcStructField(st, 'l', offsetof(struct A319, m23), 1);
		dcStructField(st, 'p', offsetof(struct A319, m24), 1);
		dcStructField(st, 'p', offsetof(struct A319, m25), 1);
		dcStructField(st, 'f', offsetof(struct A319, m26), 1);
		dcStructField(st, 'f', offsetof(struct A319, m27), 1);
		dcStructField(st, 's', offsetof(struct A319, m28), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A319, m29), 1, f_touchdcstA318());
		dcStructField(st, 'p', offsetof(struct A319, m30), 1);
		dcStructField(st, 'd', offsetof(struct A319, m31), 1);
		dcStructField(st, 's', offsetof(struct A319, m32), 1);
		dcStructField(st, 'c', offsetof(struct A319, m33), 1);
		dcStructField(st, 'i', offsetof(struct A319, m34), 1);
		dcStructField(st, 'f', offsetof(struct A319, m35), 1);
		dcStructField(st, 'd', offsetof(struct A319, m36), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilcpfdilsfcjjljcplcsdd} */
struct A320 { i m0; l m1; c m2; p m3; f m4; d m5; i m6; l m7; s m8; f m9; c m10; j m11; j m12; l m13; j m14; c m15; p m16; l m17; c m18; s m19; d m20; d m21; };
void f_cpA320(struct A320 *x, const struct A320 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA320(const struct A320 *x, const struct A320 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA320() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A320), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A320, m0), 1);
		dcStructField(st, 'l', offsetof(struct A320, m1), 1);
		dcStructField(st, 'c', offsetof(struct A320, m2), 1);
		dcStructField(st, 'p', offsetof(struct A320, m3), 1);
		dcStructField(st, 'f', offsetof(struct A320, m4), 1);
		dcStructField(st, 'd', offsetof(struct A320, m5), 1);
		dcStructField(st, 'i', offsetof(struct A320, m6), 1);
		dcStructField(st, 'l', offsetof(struct A320, m7), 1);
		dcStructField(st, 's', offsetof(struct A320, m8), 1);
		dcStructField(st, 'f', offsetof(struct A320, m9), 1);
		dcStructField(st, 'c', offsetof(struct A320, m10), 1);
		dcStructField(st, 'j', offsetof(struct A320, m11), 1);
		dcStructField(st, 'j', offsetof(struct A320, m12), 1);
		dcStructField(st, 'l', offsetof(struct A320, m13), 1);
		dcStructField(st, 'j', offsetof(struct A320, m14), 1);
		dcStructField(st, 'c', offsetof(struct A320, m15), 1);
		dcStructField(st, 'p', offsetof(struct A320, m16), 1);
		dcStructField(st, 'l', offsetof(struct A320, m17), 1);
		dcStructField(st, 'c', offsetof(struct A320, m18), 1);
		dcStructField(st, 's', offsetof(struct A320, m19), 1);
		dcStructField(st, 'd', offsetof(struct A320, m20), 1);
		dcStructField(st, 'd', offsetof(struct A320, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pps{ilcpfdilsfcjjljcplcsdd}jjlpsd} */
struct A321 { p m0; p m1; s m2; struct A320 m3; j m4; j m5; l m6; p m7; s m8; d m9; };
void f_cpA321(struct A321 *x, const struct A321 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA320(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA321(const struct A321 *x, const struct A321 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA320(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA321() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A321), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A321, m0), 1);
		dcStructField(st, 'p', offsetof(struct A321, m1), 1);
		dcStructField(st, 's', offsetof(struct A321, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A321, m3), 1, f_touchdcstA320());
		dcStructField(st, 'j', offsetof(struct A321, m4), 1);
		dcStructField(st, 'j', offsetof(struct A321, m5), 1);
		dcStructField(st, 'l', offsetof(struct A321, m6), 1);
		dcStructField(st, 'p', offsetof(struct A321, m7), 1);
		dcStructField(st, 's', offsetof(struct A321, m8), 1);
		dcStructField(st, 'd', offsetof(struct A321, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jsdffp} */
struct A322 { j m0; s m1; d m2; f m3; f m4; p m5; };
void f_cpA322(struct A322 *x, const struct A322 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA322(const struct A322 *x, const struct A322 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA322() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A322), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A322, m0), 1);
		dcStructField(st, 's', offsetof(struct A322, m1), 1);
		dcStructField(st, 'd', offsetof(struct A322, m2), 1);
		dcStructField(st, 'f', offsetof(struct A322, m3), 1);
		dcStructField(st, 'f', offsetof(struct A322, m4), 1);
		dcStructField(st, 'p', offsetof(struct A322, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsjflicp} */
struct A323 { f m0; s m1; j m2; f m3; l m4; i m5; c m6; p m7; };
void f_cpA323(struct A323 *x, const struct A323 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA323(const struct A323 *x, const struct A323 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA323() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A323), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A323, m0), 1);
		dcStructField(st, 's', offsetof(struct A323, m1), 1);
		dcStructField(st, 'j', offsetof(struct A323, m2), 1);
		dcStructField(st, 'f', offsetof(struct A323, m3), 1);
		dcStructField(st, 'l', offsetof(struct A323, m4), 1);
		dcStructField(st, 'i', offsetof(struct A323, m5), 1);
		dcStructField(st, 'c', offsetof(struct A323, m6), 1);
		dcStructField(st, 'p', offsetof(struct A323, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iplifsjdcj} */
struct A324 { i m0; p m1; l m2; i m3; f m4; s m5; j m6; d m7; c m8; j m9; };
void f_cpA324(struct A324 *x, const struct A324 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA324(const struct A324 *x, const struct A324 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA324() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A324), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A324, m0), 1);
		dcStructField(st, 'p', offsetof(struct A324, m1), 1);
		dcStructField(st, 'l', offsetof(struct A324, m2), 1);
		dcStructField(st, 'i', offsetof(struct A324, m3), 1);
		dcStructField(st, 'f', offsetof(struct A324, m4), 1);
		dcStructField(st, 's', offsetof(struct A324, m5), 1);
		dcStructField(st, 'j', offsetof(struct A324, m6), 1);
		dcStructField(st, 'd', offsetof(struct A324, m7), 1);
		dcStructField(st, 'c', offsetof(struct A324, m8), 1);
		dcStructField(st, 'j', offsetof(struct A324, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dp} */
struct A325 { d m0; p m1; };
void f_cpA325(struct A325 *x, const struct A325 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA325(const struct A325 *x, const struct A325 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA325() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A325), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A325, m0), 1);
		dcStructField(st, 'p', offsetof(struct A325, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdffd} */
struct A326 { s m0; d m1; f m2; f m3; d m4; };
void f_cpA326(struct A326 *x, const struct A326 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA326(const struct A326 *x, const struct A326 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA326() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A326), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A326, m0), 1);
		dcStructField(st, 'd', offsetof(struct A326, m1), 1);
		dcStructField(st, 'f', offsetof(struct A326, m2), 1);
		dcStructField(st, 'f', offsetof(struct A326, m3), 1);
		dcStructField(st, 'd', offsetof(struct A326, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ciiipdsjjcfdfcjl} */
struct A327 { c m0; i m1; i m2; i m3; p m4; d m5; s m6; j m7; j m8; c m9; f m10; d m11; f m12; c m13; j m14; l m15; };
void f_cpA327(struct A327 *x, const struct A327 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA327(const struct A327 *x, const struct A327 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA327() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A327), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A327, m0), 1);
		dcStructField(st, 'i', offsetof(struct A327, m1), 1);
		dcStructField(st, 'i', offsetof(struct A327, m2), 1);
		dcStructField(st, 'i', offsetof(struct A327, m3), 1);
		dcStructField(st, 'p', offsetof(struct A327, m4), 1);
		dcStructField(st, 'd', offsetof(struct A327, m5), 1);
		dcStructField(st, 's', offsetof(struct A327, m6), 1);
		dcStructField(st, 'j', offsetof(struct A327, m7), 1);
		dcStructField(st, 'j', offsetof(struct A327, m8), 1);
		dcStructField(st, 'c', offsetof(struct A327, m9), 1);
		dcStructField(st, 'f', offsetof(struct A327, m10), 1);
		dcStructField(st, 'd', offsetof(struct A327, m11), 1);
		dcStructField(st, 'f', offsetof(struct A327, m12), 1);
		dcStructField(st, 'c', offsetof(struct A327, m13), 1);
		dcStructField(st, 'j', offsetof(struct A327, m14), 1);
		dcStructField(st, 'l', offsetof(struct A327, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcsdjifjpsj} */
struct A328 { p m0; c m1; s m2; d m3; j m4; i m5; f m6; j m7; p m8; s m9; j m10; };
void f_cpA328(struct A328 *x, const struct A328 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA328(const struct A328 *x, const struct A328 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA328() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A328), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A328, m0), 1);
		dcStructField(st, 'c', offsetof(struct A328, m1), 1);
		dcStructField(st, 's', offsetof(struct A328, m2), 1);
		dcStructField(st, 'd', offsetof(struct A328, m3), 1);
		dcStructField(st, 'j', offsetof(struct A328, m4), 1);
		dcStructField(st, 'i', offsetof(struct A328, m5), 1);
		dcStructField(st, 'f', offsetof(struct A328, m6), 1);
		dcStructField(st, 'j', offsetof(struct A328, m7), 1);
		dcStructField(st, 'p', offsetof(struct A328, m8), 1);
		dcStructField(st, 's', offsetof(struct A328, m9), 1);
		dcStructField(st, 'j', offsetof(struct A328, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfcp{fsjflicp}{iplifsjdcj}{dp}jlpiidp{sdffd}iiic{ciiipdsjjcfdfcjl}lids{pcsdjifjpsj}} */
struct A329 { l m0; f m1; c m2; p m3; struct A323 m4; struct A324 m5; struct A325 m6; j m7; l m8; p m9; i m10; i m11; d m12; p m13; struct A326 m14; i m15; i m16; i m17; c m18; struct A327 m19; l m20; i m21; d m22; s m23; struct A328 m24; };
void f_cpA329(struct A329 *x, const struct A329 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA323(&x->m4, &y->m4); f_cpA324(&x->m5, &y->m5); f_cpA325(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA326(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA327(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; f_cpA328(&x->m24, &y->m24); };
int f_cmpA329(const struct A329 *x, const struct A329 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA323(&x->m4, &y->m4) && f_cmpA324(&x->m5, &y->m5) && f_cmpA325(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA326(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA327(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && f_cmpA328(&x->m24, &y->m24); };
DCstruct* f_touchdcstA329() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A329), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A329, m0), 1);
		dcStructField(st, 'f', offsetof(struct A329, m1), 1);
		dcStructField(st, 'c', offsetof(struct A329, m2), 1);
		dcStructField(st, 'p', offsetof(struct A329, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A329, m4), 1, f_touchdcstA323());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A329, m5), 1, f_touchdcstA324());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A329, m6), 1, f_touchdcstA325());
		dcStructField(st, 'j', offsetof(struct A329, m7), 1);
		dcStructField(st, 'l', offsetof(struct A329, m8), 1);
		dcStructField(st, 'p', offsetof(struct A329, m9), 1);
		dcStructField(st, 'i', offsetof(struct A329, m10), 1);
		dcStructField(st, 'i', offsetof(struct A329, m11), 1);
		dcStructField(st, 'd', offsetof(struct A329, m12), 1);
		dcStructField(st, 'p', offsetof(struct A329, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A329, m14), 1, f_touchdcstA326());
		dcStructField(st, 'i', offsetof(struct A329, m15), 1);
		dcStructField(st, 'i', offsetof(struct A329, m16), 1);
		dcStructField(st, 'i', offsetof(struct A329, m17), 1);
		dcStructField(st, 'c', offsetof(struct A329, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A329, m19), 1, f_touchdcstA327());
		dcStructField(st, 'l', offsetof(struct A329, m20), 1);
		dcStructField(st, 'i', offsetof(struct A329, m21), 1);
		dcStructField(st, 'd', offsetof(struct A329, m22), 1);
		dcStructField(st, 's', offsetof(struct A329, m23), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A329, m24), 1, f_touchdcstA328());
		dcCloseStruct(st);
	}
	return st;
};
/* {s{lfcp{fsjflicp}{iplifsjdcj}{dp}jlpiidp{sdffd}iiic{ciiipdsjjcfdfcjl}lids{pcsdjifjpsj}}ficjcficcf} */
struct A330 { s m0; struct A329 m1; f m2; i m3; c m4; j m5; c m6; f m7; i m8; c m9; c m10; f m11; };
void f_cpA330(struct A330 *x, const struct A330 *y) { x->m0 = y->m0; f_cpA329(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA330(const struct A330 *x, const struct A330 *y) { return x->m0 == y->m0 && f_cmpA329(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA330() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A330), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A330, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A330, m1), 1, f_touchdcstA329());
		dcStructField(st, 'f', offsetof(struct A330, m2), 1);
		dcStructField(st, 'i', offsetof(struct A330, m3), 1);
		dcStructField(st, 'c', offsetof(struct A330, m4), 1);
		dcStructField(st, 'j', offsetof(struct A330, m5), 1);
		dcStructField(st, 'c', offsetof(struct A330, m6), 1);
		dcStructField(st, 'f', offsetof(struct A330, m7), 1);
		dcStructField(st, 'i', offsetof(struct A330, m8), 1);
		dcStructField(st, 'c', offsetof(struct A330, m9), 1);
		dcStructField(st, 'c', offsetof(struct A330, m10), 1);
		dcStructField(st, 'f', offsetof(struct A330, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppff} */
struct A331 { p m0; p m1; f m2; f m3; };
void f_cpA331(struct A331 *x, const struct A331 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA331(const struct A331 *x, const struct A331 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA331() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A331), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A331, m0), 1);
		dcStructField(st, 'p', offsetof(struct A331, m1), 1);
		dcStructField(st, 'f', offsetof(struct A331, m2), 1);
		dcStructField(st, 'f', offsetof(struct A331, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjfcsjllp} */
struct A332 { j m0; j m1; f m2; c m3; s m4; j m5; l m6; l m7; p m8; };
void f_cpA332(struct A332 *x, const struct A332 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA332(const struct A332 *x, const struct A332 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA332() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A332), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A332, m0), 1);
		dcStructField(st, 'j', offsetof(struct A332, m1), 1);
		dcStructField(st, 'f', offsetof(struct A332, m2), 1);
		dcStructField(st, 'c', offsetof(struct A332, m3), 1);
		dcStructField(st, 's', offsetof(struct A332, m4), 1);
		dcStructField(st, 'j', offsetof(struct A332, m5), 1);
		dcStructField(st, 'l', offsetof(struct A332, m6), 1);
		dcStructField(st, 'l', offsetof(struct A332, m7), 1);
		dcStructField(st, 'p', offsetof(struct A332, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsc} */
struct A333 { f m0; s m1; c m2; };
void f_cpA333(struct A333 *x, const struct A333 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA333(const struct A333 *x, const struct A333 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA333() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A333), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A333, m0), 1);
		dcStructField(st, 's', offsetof(struct A333, m1), 1);
		dcStructField(st, 'c', offsetof(struct A333, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iij} */
struct A334 { i m0; i m1; j m2; };
void f_cpA334(struct A334 *x, const struct A334 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA334(const struct A334 *x, const struct A334 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA334() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A334), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A334, m0), 1);
		dcStructField(st, 'i', offsetof(struct A334, m1), 1);
		dcStructField(st, 'j', offsetof(struct A334, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {s{iij}jf} */
struct A335 { s m0; struct A334 m1; j m2; f m3; };
void f_cpA335(struct A335 *x, const struct A335 *y) { x->m0 = y->m0; f_cpA334(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA335(const struct A335 *x, const struct A335 *y) { return x->m0 == y->m0 && f_cmpA334(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA335() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A335), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A335, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A335, m1), 1, f_touchdcstA334());
		dcStructField(st, 'j', offsetof(struct A335, m2), 1);
		dcStructField(st, 'f', offsetof(struct A335, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djllicjpfissjslicd} */
struct A336 { d m0; j m1; l m2; l m3; i m4; c m5; j m6; p m7; f m8; i m9; s m10; s m11; j m12; s m13; l m14; i m15; c m16; d m17; };
void f_cpA336(struct A336 *x, const struct A336 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA336(const struct A336 *x, const struct A336 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA336() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A336), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A336, m0), 1);
		dcStructField(st, 'j', offsetof(struct A336, m1), 1);
		dcStructField(st, 'l', offsetof(struct A336, m2), 1);
		dcStructField(st, 'l', offsetof(struct A336, m3), 1);
		dcStructField(st, 'i', offsetof(struct A336, m4), 1);
		dcStructField(st, 'c', offsetof(struct A336, m5), 1);
		dcStructField(st, 'j', offsetof(struct A336, m6), 1);
		dcStructField(st, 'p', offsetof(struct A336, m7), 1);
		dcStructField(st, 'f', offsetof(struct A336, m8), 1);
		dcStructField(st, 'i', offsetof(struct A336, m9), 1);
		dcStructField(st, 's', offsetof(struct A336, m10), 1);
		dcStructField(st, 's', offsetof(struct A336, m11), 1);
		dcStructField(st, 'j', offsetof(struct A336, m12), 1);
		dcStructField(st, 's', offsetof(struct A336, m13), 1);
		dcStructField(st, 'l', offsetof(struct A336, m14), 1);
		dcStructField(st, 'i', offsetof(struct A336, m15), 1);
		dcStructField(st, 'c', offsetof(struct A336, m16), 1);
		dcStructField(st, 'd', offsetof(struct A336, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icfpcjdcc} */
struct A337 { i m0; c m1; f m2; p m3; c m4; j m5; d m6; c m7; c m8; };
void f_cpA337(struct A337 *x, const struct A337 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA337(const struct A337 *x, const struct A337 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA337() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A337), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A337, m0), 1);
		dcStructField(st, 'c', offsetof(struct A337, m1), 1);
		dcStructField(st, 'f', offsetof(struct A337, m2), 1);
		dcStructField(st, 'p', offsetof(struct A337, m3), 1);
		dcStructField(st, 'c', offsetof(struct A337, m4), 1);
		dcStructField(st, 'j', offsetof(struct A337, m5), 1);
		dcStructField(st, 'd', offsetof(struct A337, m6), 1);
		dcStructField(st, 'c', offsetof(struct A337, m7), 1);
		dcStructField(st, 'c', offsetof(struct A337, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpsllpp} */
struct A338 { d m0; p m1; s m2; l m3; l m4; p m5; p m6; };
void f_cpA338(struct A338 *x, const struct A338 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA338(const struct A338 *x, const struct A338 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA338() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A338), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A338, m0), 1);
		dcStructField(st, 'p', offsetof(struct A338, m1), 1);
		dcStructField(st, 's', offsetof(struct A338, m2), 1);
		dcStructField(st, 'l', offsetof(struct A338, m3), 1);
		dcStructField(st, 'l', offsetof(struct A338, m4), 1);
		dcStructField(st, 'p', offsetof(struct A338, m5), 1);
		dcStructField(st, 'p', offsetof(struct A338, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsljcp} */
struct A339 { d m0; s m1; l m2; j m3; c m4; p m5; };
void f_cpA339(struct A339 *x, const struct A339 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA339(const struct A339 *x, const struct A339 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA339() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A339), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A339, m0), 1);
		dcStructField(st, 's', offsetof(struct A339, m1), 1);
		dcStructField(st, 'l', offsetof(struct A339, m2), 1);
		dcStructField(st, 'j', offsetof(struct A339, m3), 1);
		dcStructField(st, 'c', offsetof(struct A339, m4), 1);
		dcStructField(st, 'p', offsetof(struct A339, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcpdc{dpsllpp}idl{dsljcp}pf} */
struct A340 { p m0; c m1; p m2; d m3; c m4; struct A338 m5; i m6; d m7; l m8; struct A339 m9; p m10; f m11; };
void f_cpA340(struct A340 *x, const struct A340 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA338(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA339(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA340(const struct A340 *x, const struct A340 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA338(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA339(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA340() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A340), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A340, m0), 1);
		dcStructField(st, 'c', offsetof(struct A340, m1), 1);
		dcStructField(st, 'p', offsetof(struct A340, m2), 1);
		dcStructField(st, 'd', offsetof(struct A340, m3), 1);
		dcStructField(st, 'c', offsetof(struct A340, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A340, m5), 1, f_touchdcstA338());
		dcStructField(st, 'i', offsetof(struct A340, m6), 1);
		dcStructField(st, 'd', offsetof(struct A340, m7), 1);
		dcStructField(st, 'l', offsetof(struct A340, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A340, m9), 1, f_touchdcstA339());
		dcStructField(st, 'p', offsetof(struct A340, m10), 1);
		dcStructField(st, 'f', offsetof(struct A340, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {if} */
struct A341 { i m0; f m1; };
void f_cpA341(struct A341 *x, const struct A341 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA341(const struct A341 *x, const struct A341 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA341() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A341), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A341, m0), 1);
		dcStructField(st, 'f', offsetof(struct A341, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpjslf} */
struct A342 { l m0; p m1; j m2; s m3; l m4; f m5; };
void f_cpA342(struct A342 *x, const struct A342 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA342(const struct A342 *x, const struct A342 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA342() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A342), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A342, m0), 1);
		dcStructField(st, 'p', offsetof(struct A342, m1), 1);
		dcStructField(st, 'j', offsetof(struct A342, m2), 1);
		dcStructField(st, 's', offsetof(struct A342, m3), 1);
		dcStructField(st, 'l', offsetof(struct A342, m4), 1);
		dcStructField(st, 'f', offsetof(struct A342, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fp} */
struct A343 { f m0; p m1; };
void f_cpA343(struct A343 *x, const struct A343 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA343(const struct A343 *x, const struct A343 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA343() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A343), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A343, m0), 1);
		dcStructField(st, 'p', offsetof(struct A343, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdfpfill{i}jcpp} */
struct A344 { j m0; d m1; f m2; p m3; f m4; i m5; l m6; l m7; struct A2 m8; j m9; c m10; p m11; p m12; };
void f_cpA344(struct A344 *x, const struct A344 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA2(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA344(const struct A344 *x, const struct A344 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA2(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA344() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A344), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A344, m0), 1);
		dcStructField(st, 'd', offsetof(struct A344, m1), 1);
		dcStructField(st, 'f', offsetof(struct A344, m2), 1);
		dcStructField(st, 'p', offsetof(struct A344, m3), 1);
		dcStructField(st, 'f', offsetof(struct A344, m4), 1);
		dcStructField(st, 'i', offsetof(struct A344, m5), 1);
		dcStructField(st, 'l', offsetof(struct A344, m6), 1);
		dcStructField(st, 'l', offsetof(struct A344, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A344, m8), 1, f_touchdcstA2());
		dcStructField(st, 'j', offsetof(struct A344, m9), 1);
		dcStructField(st, 'c', offsetof(struct A344, m10), 1);
		dcStructField(st, 'p', offsetof(struct A344, m11), 1);
		dcStructField(st, 'p', offsetof(struct A344, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpfjdi} */
struct A345 { c m0; p m1; f m2; j m3; d m4; i m5; };
void f_cpA345(struct A345 *x, const struct A345 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA345(const struct A345 *x, const struct A345 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA345() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A345), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A345, m0), 1);
		dcStructField(st, 'p', offsetof(struct A345, m1), 1);
		dcStructField(st, 'f', offsetof(struct A345, m2), 1);
		dcStructField(st, 'j', offsetof(struct A345, m3), 1);
		dcStructField(st, 'd', offsetof(struct A345, m4), 1);
		dcStructField(st, 'i', offsetof(struct A345, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdp} */
struct A346 { f m0; d m1; p m2; };
void f_cpA346(struct A346 *x, const struct A346 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA346(const struct A346 *x, const struct A346 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA346() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A346), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A346, m0), 1);
		dcStructField(st, 'd', offsetof(struct A346, m1), 1);
		dcStructField(st, 'p', offsetof(struct A346, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fdp}} */
struct A347 { struct A346 m0; };
void f_cpA347(struct A347 *x, const struct A347 *y) { f_cpA346(&x->m0, &y->m0); };
int f_cmpA347(const struct A347 *x, const struct A347 *y) { return f_cmpA346(&x->m0, &y->m0); };
DCstruct* f_touchdcstA347() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A347), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A347, m0), 1, f_touchdcstA346());
		dcCloseStruct(st);
	}
	return st;
};
/* {jlpjdclifl} */
struct A348 { j m0; l m1; p m2; j m3; d m4; c m5; l m6; i m7; f m8; l m9; };
void f_cpA348(struct A348 *x, const struct A348 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA348(const struct A348 *x, const struct A348 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA348() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A348), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A348, m0), 1);
		dcStructField(st, 'l', offsetof(struct A348, m1), 1);
		dcStructField(st, 'p', offsetof(struct A348, m2), 1);
		dcStructField(st, 'j', offsetof(struct A348, m3), 1);
		dcStructField(st, 'd', offsetof(struct A348, m4), 1);
		dcStructField(st, 'c', offsetof(struct A348, m5), 1);
		dcStructField(st, 'l', offsetof(struct A348, m6), 1);
		dcStructField(st, 'i', offsetof(struct A348, m7), 1);
		dcStructField(st, 'f', offsetof(struct A348, m8), 1);
		dcStructField(st, 'l', offsetof(struct A348, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijjs} */
struct A349 { i m0; j m1; j m2; s m3; };
void f_cpA349(struct A349 *x, const struct A349 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA349(const struct A349 *x, const struct A349 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA349() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A349), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A349, m0), 1);
		dcStructField(st, 'j', offsetof(struct A349, m1), 1);
		dcStructField(st, 'j', offsetof(struct A349, m2), 1);
		dcStructField(st, 's', offsetof(struct A349, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfflijiis} */
struct A350 { p m0; f m1; f m2; l m3; i m4; j m5; i m6; i m7; s m8; };
void f_cpA350(struct A350 *x, const struct A350 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA350(const struct A350 *x, const struct A350 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA350() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A350), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A350, m0), 1);
		dcStructField(st, 'f', offsetof(struct A350, m1), 1);
		dcStructField(st, 'f', offsetof(struct A350, m2), 1);
		dcStructField(st, 'l', offsetof(struct A350, m3), 1);
		dcStructField(st, 'i', offsetof(struct A350, m4), 1);
		dcStructField(st, 'j', offsetof(struct A350, m5), 1);
		dcStructField(st, 'i', offsetof(struct A350, m6), 1);
		dcStructField(st, 'i', offsetof(struct A350, m7), 1);
		dcStructField(st, 's', offsetof(struct A350, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpldldidldlfisjdjd} */
struct A351 { d m0; p m1; l m2; d m3; l m4; d m5; i m6; d m7; l m8; d m9; l m10; f m11; i m12; s m13; j m14; d m15; j m16; d m17; };
void f_cpA351(struct A351 *x, const struct A351 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA351(const struct A351 *x, const struct A351 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA351() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A351), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A351, m0), 1);
		dcStructField(st, 'p', offsetof(struct A351, m1), 1);
		dcStructField(st, 'l', offsetof(struct A351, m2), 1);
		dcStructField(st, 'd', offsetof(struct A351, m3), 1);
		dcStructField(st, 'l', offsetof(struct A351, m4), 1);
		dcStructField(st, 'd', offsetof(struct A351, m5), 1);
		dcStructField(st, 'i', offsetof(struct A351, m6), 1);
		dcStructField(st, 'd', offsetof(struct A351, m7), 1);
		dcStructField(st, 'l', offsetof(struct A351, m8), 1);
		dcStructField(st, 'd', offsetof(struct A351, m9), 1);
		dcStructField(st, 'l', offsetof(struct A351, m10), 1);
		dcStructField(st, 'f', offsetof(struct A351, m11), 1);
		dcStructField(st, 'i', offsetof(struct A351, m12), 1);
		dcStructField(st, 's', offsetof(struct A351, m13), 1);
		dcStructField(st, 'j', offsetof(struct A351, m14), 1);
		dcStructField(st, 'd', offsetof(struct A351, m15), 1);
		dcStructField(st, 'j', offsetof(struct A351, m16), 1);
		dcStructField(st, 'd', offsetof(struct A351, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ll{dpldldidldlfisjdjd}f} */
struct A352 { l m0; l m1; struct A351 m2; f m3; };
void f_cpA352(struct A352 *x, const struct A352 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA351(&x->m2, &y->m2); x->m3 = y->m3; };
int f_cmpA352(const struct A352 *x, const struct A352 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA351(&x->m2, &y->m2) && x->m3 == y->m3; };
DCstruct* f_touchdcstA352() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A352), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A352, m0), 1);
		dcStructField(st, 'l', offsetof(struct A352, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A352, m2), 1, f_touchdcstA351());
		dcStructField(st, 'f', offsetof(struct A352, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfd} */
struct A353 { l m0; f m1; d m2; };
void f_cpA353(struct A353 *x, const struct A353 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA353(const struct A353 *x, const struct A353 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA353() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A353), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A353, m0), 1);
		dcStructField(st, 'f', offsetof(struct A353, m1), 1);
		dcStructField(st, 'd', offsetof(struct A353, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffcip{pfflijiis}dd{ll{dpldldidldlfisjdjd}f}{lfd}sfffslc} */
struct A354 { f m0; f m1; c m2; i m3; p m4; struct A350 m5; d m6; d m7; struct A352 m8; struct A353 m9; s m10; f m11; f m12; f m13; s m14; l m15; c m16; };
void f_cpA354(struct A354 *x, const struct A354 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA350(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; f_cpA352(&x->m8, &y->m8); f_cpA353(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA354(const struct A354 *x, const struct A354 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA350(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA352(&x->m8, &y->m8) && f_cmpA353(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA354() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A354), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A354, m0), 1);
		dcStructField(st, 'f', offsetof(struct A354, m1), 1);
		dcStructField(st, 'c', offsetof(struct A354, m2), 1);
		dcStructField(st, 'i', offsetof(struct A354, m3), 1);
		dcStructField(st, 'p', offsetof(struct A354, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A354, m5), 1, f_touchdcstA350());
		dcStructField(st, 'd', offsetof(struct A354, m6), 1);
		dcStructField(st, 'd', offsetof(struct A354, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A354, m8), 1, f_touchdcstA352());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A354, m9), 1, f_touchdcstA353());
		dcStructField(st, 's', offsetof(struct A354, m10), 1);
		dcStructField(st, 'f', offsetof(struct A354, m11), 1);
		dcStructField(st, 'f', offsetof(struct A354, m12), 1);
		dcStructField(st, 'f', offsetof(struct A354, m13), 1);
		dcStructField(st, 's', offsetof(struct A354, m14), 1);
		dcStructField(st, 'l', offsetof(struct A354, m15), 1);
		dcStructField(st, 'c', offsetof(struct A354, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scdfcdpssidfjpfjdfcicljspljllljpicjjd} */
struct A355 { s m0; c m1; d m2; f m3; c m4; d m5; p m6; s m7; s m8; i m9; d m10; f m11; j m12; p m13; f m14; j m15; d m16; f m17; c m18; i m19; c m20; l m21; j m22; s m23; p m24; l m25; j m26; l m27; l m28; l m29; j m30; p m31; i m32; c m33; j m34; j m35; d m36; };
void f_cpA355(struct A355 *x, const struct A355 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; };
int f_cmpA355(const struct A355 *x, const struct A355 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36; };
DCstruct* f_touchdcstA355() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(37, sizeof(struct A355), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A355, m0), 1);
		dcStructField(st, 'c', offsetof(struct A355, m1), 1);
		dcStructField(st, 'd', offsetof(struct A355, m2), 1);
		dcStructField(st, 'f', offsetof(struct A355, m3), 1);
		dcStructField(st, 'c', offsetof(struct A355, m4), 1);
		dcStructField(st, 'd', offsetof(struct A355, m5), 1);
		dcStructField(st, 'p', offsetof(struct A355, m6), 1);
		dcStructField(st, 's', offsetof(struct A355, m7), 1);
		dcStructField(st, 's', offsetof(struct A355, m8), 1);
		dcStructField(st, 'i', offsetof(struct A355, m9), 1);
		dcStructField(st, 'd', offsetof(struct A355, m10), 1);
		dcStructField(st, 'f', offsetof(struct A355, m11), 1);
		dcStructField(st, 'j', offsetof(struct A355, m12), 1);
		dcStructField(st, 'p', offsetof(struct A355, m13), 1);
		dcStructField(st, 'f', offsetof(struct A355, m14), 1);
		dcStructField(st, 'j', offsetof(struct A355, m15), 1);
		dcStructField(st, 'd', offsetof(struct A355, m16), 1);
		dcStructField(st, 'f', offsetof(struct A355, m17), 1);
		dcStructField(st, 'c', offsetof(struct A355, m18), 1);
		dcStructField(st, 'i', offsetof(struct A355, m19), 1);
		dcStructField(st, 'c', offsetof(struct A355, m20), 1);
		dcStructField(st, 'l', offsetof(struct A355, m21), 1);
		dcStructField(st, 'j', offsetof(struct A355, m22), 1);
		dcStructField(st, 's', offsetof(struct A355, m23), 1);
		dcStructField(st, 'p', offsetof(struct A355, m24), 1);
		dcStructField(st, 'l', offsetof(struct A355, m25), 1);
		dcStructField(st, 'j', offsetof(struct A355, m26), 1);
		dcStructField(st, 'l', offsetof(struct A355, m27), 1);
		dcStructField(st, 'l', offsetof(struct A355, m28), 1);
		dcStructField(st, 'l', offsetof(struct A355, m29), 1);
		dcStructField(st, 'j', offsetof(struct A355, m30), 1);
		dcStructField(st, 'p', offsetof(struct A355, m31), 1);
		dcStructField(st, 'i', offsetof(struct A355, m32), 1);
		dcStructField(st, 'c', offsetof(struct A355, m33), 1);
		dcStructField(st, 'j', offsetof(struct A355, m34), 1);
		dcStructField(st, 'j', offsetof(struct A355, m35), 1);
		dcStructField(st, 'd', offsetof(struct A355, m36), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dilifcdcsjplscjj} */
struct A356 { d m0; i m1; l m2; i m3; f m4; c m5; d m6; c m7; s m8; j m9; p m10; l m11; s m12; c m13; j m14; j m15; };
void f_cpA356(struct A356 *x, const struct A356 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA356(const struct A356 *x, const struct A356 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA356() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A356), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A356, m0), 1);
		dcStructField(st, 'i', offsetof(struct A356, m1), 1);
		dcStructField(st, 'l', offsetof(struct A356, m2), 1);
		dcStructField(st, 'i', offsetof(struct A356, m3), 1);
		dcStructField(st, 'f', offsetof(struct A356, m4), 1);
		dcStructField(st, 'c', offsetof(struct A356, m5), 1);
		dcStructField(st, 'd', offsetof(struct A356, m6), 1);
		dcStructField(st, 'c', offsetof(struct A356, m7), 1);
		dcStructField(st, 's', offsetof(struct A356, m8), 1);
		dcStructField(st, 'j', offsetof(struct A356, m9), 1);
		dcStructField(st, 'p', offsetof(struct A356, m10), 1);
		dcStructField(st, 'l', offsetof(struct A356, m11), 1);
		dcStructField(st, 's', offsetof(struct A356, m12), 1);
		dcStructField(st, 'c', offsetof(struct A356, m13), 1);
		dcStructField(st, 'j', offsetof(struct A356, m14), 1);
		dcStructField(st, 'j', offsetof(struct A356, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lp} */
struct A357 { l m0; p m1; };
void f_cpA357(struct A357 *x, const struct A357 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA357(const struct A357 *x, const struct A357 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA357() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A357), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A357, m0), 1);
		dcStructField(st, 'p', offsetof(struct A357, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dclc} */
struct A358 { d m0; c m1; l m2; c m3; };
void f_cpA358(struct A358 *x, const struct A358 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA358(const struct A358 *x, const struct A358 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA358() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A358), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A358, m0), 1);
		dcStructField(st, 'c', offsetof(struct A358, m1), 1);
		dcStructField(st, 'l', offsetof(struct A358, m2), 1);
		dcStructField(st, 'c', offsetof(struct A358, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {is} */
struct A359 { i m0; s m1; };
void f_cpA359(struct A359 *x, const struct A359 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA359(const struct A359 *x, const struct A359 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA359() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A359), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A359, m0), 1);
		dcStructField(st, 's', offsetof(struct A359, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcdf} */
struct A360 { d m0; c m1; d m2; f m3; };
void f_cpA360(struct A360 *x, const struct A360 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA360(const struct A360 *x, const struct A360 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA360() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A360), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A360, m0), 1);
		dcStructField(st, 'c', offsetof(struct A360, m1), 1);
		dcStructField(st, 'd', offsetof(struct A360, m2), 1);
		dcStructField(st, 'f', offsetof(struct A360, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ics} */
struct A361 { i m0; c m1; s m2; };
void f_cpA361(struct A361 *x, const struct A361 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA361(const struct A361 *x, const struct A361 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA361() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A361), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A361, m0), 1);
		dcStructField(st, 'c', offsetof(struct A361, m1), 1);
		dcStructField(st, 's', offsetof(struct A361, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sl} */
struct A362 { s m0; l m1; };
void f_cpA362(struct A362 *x, const struct A362 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA362(const struct A362 *x, const struct A362 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA362() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A362), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A362, m0), 1);
		dcStructField(st, 'l', offsetof(struct A362, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jclpjifsip} */
struct A363 { j m0; c m1; l m2; p m3; j m4; i m5; f m6; s m7; i m8; p m9; };
void f_cpA363(struct A363 *x, const struct A363 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA363(const struct A363 *x, const struct A363 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA363() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A363), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A363, m0), 1);
		dcStructField(st, 'c', offsetof(struct A363, m1), 1);
		dcStructField(st, 'l', offsetof(struct A363, m2), 1);
		dcStructField(st, 'p', offsetof(struct A363, m3), 1);
		dcStructField(st, 'j', offsetof(struct A363, m4), 1);
		dcStructField(st, 'i', offsetof(struct A363, m5), 1);
		dcStructField(st, 'f', offsetof(struct A363, m6), 1);
		dcStructField(st, 's', offsetof(struct A363, m7), 1);
		dcStructField(st, 'i', offsetof(struct A363, m8), 1);
		dcStructField(st, 'p', offsetof(struct A363, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fldjdjpsilcpllsdd} */
struct A364 { f m0; l m1; d m2; j m3; d m4; j m5; p m6; s m7; i m8; l m9; c m10; p m11; l m12; l m13; s m14; d m15; d m16; };
void f_cpA364(struct A364 *x, const struct A364 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA364(const struct A364 *x, const struct A364 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA364() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A364), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A364, m0), 1);
		dcStructField(st, 'l', offsetof(struct A364, m1), 1);
		dcStructField(st, 'd', offsetof(struct A364, m2), 1);
		dcStructField(st, 'j', offsetof(struct A364, m3), 1);
		dcStructField(st, 'd', offsetof(struct A364, m4), 1);
		dcStructField(st, 'j', offsetof(struct A364, m5), 1);
		dcStructField(st, 'p', offsetof(struct A364, m6), 1);
		dcStructField(st, 's', offsetof(struct A364, m7), 1);
		dcStructField(st, 'i', offsetof(struct A364, m8), 1);
		dcStructField(st, 'l', offsetof(struct A364, m9), 1);
		dcStructField(st, 'c', offsetof(struct A364, m10), 1);
		dcStructField(st, 'p', offsetof(struct A364, m11), 1);
		dcStructField(st, 'l', offsetof(struct A364, m12), 1);
		dcStructField(st, 'l', offsetof(struct A364, m13), 1);
		dcStructField(st, 's', offsetof(struct A364, m14), 1);
		dcStructField(st, 'd', offsetof(struct A364, m15), 1);
		dcStructField(st, 'd', offsetof(struct A364, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjfdfcips} */
struct A365 { j m0; j m1; f m2; d m3; f m4; c m5; i m6; p m7; s m8; };
void f_cpA365(struct A365 *x, const struct A365 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA365(const struct A365 *x, const struct A365 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA365() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A365), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A365, m0), 1);
		dcStructField(st, 'j', offsetof(struct A365, m1), 1);
		dcStructField(st, 'f', offsetof(struct A365, m2), 1);
		dcStructField(st, 'd', offsetof(struct A365, m3), 1);
		dcStructField(st, 'f', offsetof(struct A365, m4), 1);
		dcStructField(st, 'c', offsetof(struct A365, m5), 1);
		dcStructField(st, 'i', offsetof(struct A365, m6), 1);
		dcStructField(st, 'p', offsetof(struct A365, m7), 1);
		dcStructField(st, 's', offsetof(struct A365, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlslfdpsj{jjfdfcips}pidfjdspc} */
struct A366 { d m0; l m1; s m2; l m3; f m4; d m5; p m6; s m7; j m8; struct A365 m9; p m10; i m11; d m12; f m13; j m14; d m15; s m16; p m17; c m18; };
void f_cpA366(struct A366 *x, const struct A366 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA365(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA366(const struct A366 *x, const struct A366 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA365(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA366() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A366), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A366, m0), 1);
		dcStructField(st, 'l', offsetof(struct A366, m1), 1);
		dcStructField(st, 's', offsetof(struct A366, m2), 1);
		dcStructField(st, 'l', offsetof(struct A366, m3), 1);
		dcStructField(st, 'f', offsetof(struct A366, m4), 1);
		dcStructField(st, 'd', offsetof(struct A366, m5), 1);
		dcStructField(st, 'p', offsetof(struct A366, m6), 1);
		dcStructField(st, 's', offsetof(struct A366, m7), 1);
		dcStructField(st, 'j', offsetof(struct A366, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A366, m9), 1, f_touchdcstA365());
		dcStructField(st, 'p', offsetof(struct A366, m10), 1);
		dcStructField(st, 'i', offsetof(struct A366, m11), 1);
		dcStructField(st, 'd', offsetof(struct A366, m12), 1);
		dcStructField(st, 'f', offsetof(struct A366, m13), 1);
		dcStructField(st, 'j', offsetof(struct A366, m14), 1);
		dcStructField(st, 'd', offsetof(struct A366, m15), 1);
		dcStructField(st, 's', offsetof(struct A366, m16), 1);
		dcStructField(st, 'p', offsetof(struct A366, m17), 1);
		dcStructField(st, 'c', offsetof(struct A366, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slplcdlp} */
struct A367 { s m0; l m1; p m2; l m3; c m4; d m5; l m6; p m7; };
void f_cpA367(struct A367 *x, const struct A367 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA367(const struct A367 *x, const struct A367 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA367() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A367), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A367, m0), 1);
		dcStructField(st, 'l', offsetof(struct A367, m1), 1);
		dcStructField(st, 'p', offsetof(struct A367, m2), 1);
		dcStructField(st, 'l', offsetof(struct A367, m3), 1);
		dcStructField(st, 'c', offsetof(struct A367, m4), 1);
		dcStructField(st, 'd', offsetof(struct A367, m5), 1);
		dcStructField(st, 'l', offsetof(struct A367, m6), 1);
		dcStructField(st, 'p', offsetof(struct A367, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sffp} */
struct A368 { s m0; f m1; f m2; p m3; };
void f_cpA368(struct A368 *x, const struct A368 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA368(const struct A368 *x, const struct A368 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA368() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A368), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A368, m0), 1);
		dcStructField(st, 'f', offsetof(struct A368, m1), 1);
		dcStructField(st, 'f', offsetof(struct A368, m2), 1);
		dcStructField(st, 'p', offsetof(struct A368, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifpdcj} */
struct A369 { i m0; f m1; p m2; d m3; c m4; j m5; };
void f_cpA369(struct A369 *x, const struct A369 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA369(const struct A369 *x, const struct A369 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA369() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A369), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A369, m0), 1);
		dcStructField(st, 'f', offsetof(struct A369, m1), 1);
		dcStructField(st, 'p', offsetof(struct A369, m2), 1);
		dcStructField(st, 'd', offsetof(struct A369, m3), 1);
		dcStructField(st, 'c', offsetof(struct A369, m4), 1);
		dcStructField(st, 'j', offsetof(struct A369, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjl} */
struct A370 { c m0; j m1; l m2; };
void f_cpA370(struct A370 *x, const struct A370 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA370(const struct A370 *x, const struct A370 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA370() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A370), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A370, m0), 1);
		dcStructField(st, 'j', offsetof(struct A370, m1), 1);
		dcStructField(st, 'l', offsetof(struct A370, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipsjdcdcfiddpdcp} */
struct A371 { i m0; p m1; s m2; j m3; d m4; c m5; d m6; c m7; f m8; i m9; d m10; d m11; p m12; d m13; c m14; p m15; };
void f_cpA371(struct A371 *x, const struct A371 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA371(const struct A371 *x, const struct A371 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA371() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A371), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A371, m0), 1);
		dcStructField(st, 'p', offsetof(struct A371, m1), 1);
		dcStructField(st, 's', offsetof(struct A371, m2), 1);
		dcStructField(st, 'j', offsetof(struct A371, m3), 1);
		dcStructField(st, 'd', offsetof(struct A371, m4), 1);
		dcStructField(st, 'c', offsetof(struct A371, m5), 1);
		dcStructField(st, 'd', offsetof(struct A371, m6), 1);
		dcStructField(st, 'c', offsetof(struct A371, m7), 1);
		dcStructField(st, 'f', offsetof(struct A371, m8), 1);
		dcStructField(st, 'i', offsetof(struct A371, m9), 1);
		dcStructField(st, 'd', offsetof(struct A371, m10), 1);
		dcStructField(st, 'd', offsetof(struct A371, m11), 1);
		dcStructField(st, 'p', offsetof(struct A371, m12), 1);
		dcStructField(st, 'd', offsetof(struct A371, m13), 1);
		dcStructField(st, 'c', offsetof(struct A371, m14), 1);
		dcStructField(st, 'p', offsetof(struct A371, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cffp} */
struct A372 { c m0; f m1; f m2; p m3; };
void f_cpA372(struct A372 *x, const struct A372 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA372(const struct A372 *x, const struct A372 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA372() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A372), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A372, m0), 1);
		dcStructField(st, 'f', offsetof(struct A372, m1), 1);
		dcStructField(st, 'f', offsetof(struct A372, m2), 1);
		dcStructField(st, 'p', offsetof(struct A372, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jf{cjl}{ipsjdcdcfiddpdcp}{cffp}ijcpslp} */
struct A373 { j m0; f m1; struct A370 m2; struct A371 m3; struct A372 m4; i m5; j m6; c m7; p m8; s m9; l m10; p m11; };
void f_cpA373(struct A373 *x, const struct A373 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA370(&x->m2, &y->m2); f_cpA371(&x->m3, &y->m3); f_cpA372(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA373(const struct A373 *x, const struct A373 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA370(&x->m2, &y->m2) && f_cmpA371(&x->m3, &y->m3) && f_cmpA372(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA373() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A373), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A373, m0), 1);
		dcStructField(st, 'f', offsetof(struct A373, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A373, m2), 1, f_touchdcstA370());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A373, m3), 1, f_touchdcstA371());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A373, m4), 1, f_touchdcstA372());
		dcStructField(st, 'i', offsetof(struct A373, m5), 1);
		dcStructField(st, 'j', offsetof(struct A373, m6), 1);
		dcStructField(st, 'c', offsetof(struct A373, m7), 1);
		dcStructField(st, 'p', offsetof(struct A373, m8), 1);
		dcStructField(st, 's', offsetof(struct A373, m9), 1);
		dcStructField(st, 'l', offsetof(struct A373, m10), 1);
		dcStructField(st, 'p', offsetof(struct A373, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlscflf} */
struct A374 { j m0; l m1; s m2; c m3; f m4; l m5; f m6; };
void f_cpA374(struct A374 *x, const struct A374 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA374(const struct A374 *x, const struct A374 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA374() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A374), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A374, m0), 1);
		dcStructField(st, 'l', offsetof(struct A374, m1), 1);
		dcStructField(st, 's', offsetof(struct A374, m2), 1);
		dcStructField(st, 'c', offsetof(struct A374, m3), 1);
		dcStructField(st, 'f', offsetof(struct A374, m4), 1);
		dcStructField(st, 'l', offsetof(struct A374, m5), 1);
		dcStructField(st, 'f', offsetof(struct A374, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ss{fp}ic} */
struct A375 { s m0; s m1; struct A343 m2; i m3; c m4; };
void f_cpA375(struct A375 *x, const struct A375 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA343(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA375(const struct A375 *x, const struct A375 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA343(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA375() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A375), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A375, m0), 1);
		dcStructField(st, 's', offsetof(struct A375, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A375, m2), 1, f_touchdcstA343());
		dcStructField(st, 'i', offsetof(struct A375, m3), 1);
		dcStructField(st, 'c', offsetof(struct A375, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lld} */
struct A376 { l m0; l m1; d m2; };
void f_cpA376(struct A376 *x, const struct A376 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA376(const struct A376 *x, const struct A376 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA376() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A376), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A376, m0), 1);
		dcStructField(st, 'l', offsetof(struct A376, m1), 1);
		dcStructField(st, 'd', offsetof(struct A376, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{s}{lld}ipjljdppfsspjspc} */
struct A377 { struct A27 m0; struct A376 m1; i m2; p m3; j m4; l m5; j m6; d m7; p m8; p m9; f m10; s m11; s m12; p m13; j m14; s m15; p m16; c m17; };
void f_cpA377(struct A377 *x, const struct A377 *y) { f_cpA27(&x->m0, &y->m0); f_cpA376(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA377(const struct A377 *x, const struct A377 *y) { return f_cmpA27(&x->m0, &y->m0) && f_cmpA376(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA377() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A377), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A377, m0), 1, f_touchdcstA27());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A377, m1), 1, f_touchdcstA376());
		dcStructField(st, 'i', offsetof(struct A377, m2), 1);
		dcStructField(st, 'p', offsetof(struct A377, m3), 1);
		dcStructField(st, 'j', offsetof(struct A377, m4), 1);
		dcStructField(st, 'l', offsetof(struct A377, m5), 1);
		dcStructField(st, 'j', offsetof(struct A377, m6), 1);
		dcStructField(st, 'd', offsetof(struct A377, m7), 1);
		dcStructField(st, 'p', offsetof(struct A377, m8), 1);
		dcStructField(st, 'p', offsetof(struct A377, m9), 1);
		dcStructField(st, 'f', offsetof(struct A377, m10), 1);
		dcStructField(st, 's', offsetof(struct A377, m11), 1);
		dcStructField(st, 's', offsetof(struct A377, m12), 1);
		dcStructField(st, 'p', offsetof(struct A377, m13), 1);
		dcStructField(st, 'j', offsetof(struct A377, m14), 1);
		dcStructField(st, 's', offsetof(struct A377, m15), 1);
		dcStructField(st, 'p', offsetof(struct A377, m16), 1);
		dcStructField(st, 'c', offsetof(struct A377, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lf{{s}{lld}ipjljdppfsspjspc}jcl} */
struct A378 { l m0; f m1; struct A377 m2; j m3; c m4; l m5; };
void f_cpA378(struct A378 *x, const struct A378 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA377(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA378(const struct A378 *x, const struct A378 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA377(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA378() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A378), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A378, m0), 1);
		dcStructField(st, 'f', offsetof(struct A378, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A378, m2), 1, f_touchdcstA377());
		dcStructField(st, 'j', offsetof(struct A378, m3), 1);
		dcStructField(st, 'c', offsetof(struct A378, m4), 1);
		dcStructField(st, 'l', offsetof(struct A378, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sccipijpidjdi} */
struct A379 { s m0; c m1; c m2; i m3; p m4; i m5; j m6; p m7; i m8; d m9; j m10; d m11; i m12; };
void f_cpA379(struct A379 *x, const struct A379 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA379(const struct A379 *x, const struct A379 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA379() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A379), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A379, m0), 1);
		dcStructField(st, 'c', offsetof(struct A379, m1), 1);
		dcStructField(st, 'c', offsetof(struct A379, m2), 1);
		dcStructField(st, 'i', offsetof(struct A379, m3), 1);
		dcStructField(st, 'p', offsetof(struct A379, m4), 1);
		dcStructField(st, 'i', offsetof(struct A379, m5), 1);
		dcStructField(st, 'j', offsetof(struct A379, m6), 1);
		dcStructField(st, 'p', offsetof(struct A379, m7), 1);
		dcStructField(st, 'i', offsetof(struct A379, m8), 1);
		dcStructField(st, 'd', offsetof(struct A379, m9), 1);
		dcStructField(st, 'j', offsetof(struct A379, m10), 1);
		dcStructField(st, 'd', offsetof(struct A379, m11), 1);
		dcStructField(st, 'i', offsetof(struct A379, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jispcipjdjpffsjlfflpccfcsclp} */
struct A380 { j m0; i m1; s m2; p m3; c m4; i m5; p m6; j m7; d m8; j m9; p m10; f m11; f m12; s m13; j m14; l m15; f m16; f m17; l m18; p m19; c m20; c m21; f m22; c m23; s m24; c m25; l m26; p m27; };
void f_cpA380(struct A380 *x, const struct A380 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; };
int f_cmpA380(const struct A380 *x, const struct A380 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27; };
DCstruct* f_touchdcstA380() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(28, sizeof(struct A380), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A380, m0), 1);
		dcStructField(st, 'i', offsetof(struct A380, m1), 1);
		dcStructField(st, 's', offsetof(struct A380, m2), 1);
		dcStructField(st, 'p', offsetof(struct A380, m3), 1);
		dcStructField(st, 'c', offsetof(struct A380, m4), 1);
		dcStructField(st, 'i', offsetof(struct A380, m5), 1);
		dcStructField(st, 'p', offsetof(struct A380, m6), 1);
		dcStructField(st, 'j', offsetof(struct A380, m7), 1);
		dcStructField(st, 'd', offsetof(struct A380, m8), 1);
		dcStructField(st, 'j', offsetof(struct A380, m9), 1);
		dcStructField(st, 'p', offsetof(struct A380, m10), 1);
		dcStructField(st, 'f', offsetof(struct A380, m11), 1);
		dcStructField(st, 'f', offsetof(struct A380, m12), 1);
		dcStructField(st, 's', offsetof(struct A380, m13), 1);
		dcStructField(st, 'j', offsetof(struct A380, m14), 1);
		dcStructField(st, 'l', offsetof(struct A380, m15), 1);
		dcStructField(st, 'f', offsetof(struct A380, m16), 1);
		dcStructField(st, 'f', offsetof(struct A380, m17), 1);
		dcStructField(st, 'l', offsetof(struct A380, m18), 1);
		dcStructField(st, 'p', offsetof(struct A380, m19), 1);
		dcStructField(st, 'c', offsetof(struct A380, m20), 1);
		dcStructField(st, 'c', offsetof(struct A380, m21), 1);
		dcStructField(st, 'f', offsetof(struct A380, m22), 1);
		dcStructField(st, 'c', offsetof(struct A380, m23), 1);
		dcStructField(st, 's', offsetof(struct A380, m24), 1);
		dcStructField(st, 'c', offsetof(struct A380, m25), 1);
		dcStructField(st, 'l', offsetof(struct A380, m26), 1);
		dcStructField(st, 'p', offsetof(struct A380, m27), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsldj} */
struct A381 { d m0; s m1; l m2; d m3; j m4; };
void f_cpA381(struct A381 *x, const struct A381 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA381(const struct A381 *x, const struct A381 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA381() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A381), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A381, m0), 1);
		dcStructField(st, 's', offsetof(struct A381, m1), 1);
		dcStructField(st, 'l', offsetof(struct A381, m2), 1);
		dcStructField(st, 'd', offsetof(struct A381, m3), 1);
		dcStructField(st, 'j', offsetof(struct A381, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdfdjjis} */
struct A382 { s m0; d m1; f m2; d m3; j m4; j m5; i m6; s m7; };
void f_cpA382(struct A382 *x, const struct A382 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA382(const struct A382 *x, const struct A382 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA382() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A382), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A382, m0), 1);
		dcStructField(st, 'd', offsetof(struct A382, m1), 1);
		dcStructField(st, 'f', offsetof(struct A382, m2), 1);
		dcStructField(st, 'd', offsetof(struct A382, m3), 1);
		dcStructField(st, 'j', offsetof(struct A382, m4), 1);
		dcStructField(st, 'j', offsetof(struct A382, m5), 1);
		dcStructField(st, 'i', offsetof(struct A382, m6), 1);
		dcStructField(st, 's', offsetof(struct A382, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifcj} */
struct A383 { i m0; f m1; c m2; j m3; };
void f_cpA383(struct A383 *x, const struct A383 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA383(const struct A383 *x, const struct A383 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA383() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A383), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A383, m0), 1);
		dcStructField(st, 'f', offsetof(struct A383, m1), 1);
		dcStructField(st, 'c', offsetof(struct A383, m2), 1);
		dcStructField(st, 'j', offsetof(struct A383, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pipcjljj{jispcipjdjpffsjlfflpccfcsclp}{dsldj}scjfdcdfliicd{sdfdjjis}f{ifcj}fccldld} */
struct A384 { p m0; i m1; p m2; c m3; j m4; l m5; j m6; j m7; struct A380 m8; struct A381 m9; s m10; c m11; j m12; f m13; d m14; c m15; d m16; f m17; l m18; i m19; i m20; c m21; d m22; struct A382 m23; f m24; struct A383 m25; f m26; c m27; c m28; l m29; d m30; l m31; d m32; };
void f_cpA384(struct A384 *x, const struct A384 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA380(&x->m8, &y->m8); f_cpA381(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; f_cpA382(&x->m23, &y->m23); x->m24 = y->m24; f_cpA383(&x->m25, &y->m25); x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; };
int f_cmpA384(const struct A384 *x, const struct A384 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA380(&x->m8, &y->m8) && f_cmpA381(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && f_cmpA382(&x->m23, &y->m23) && x->m24 == y->m24 && f_cmpA383(&x->m25, &y->m25) && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32; };
DCstruct* f_touchdcstA384() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(33, sizeof(struct A384), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A384, m0), 1);
		dcStructField(st, 'i', offsetof(struct A384, m1), 1);
		dcStructField(st, 'p', offsetof(struct A384, m2), 1);
		dcStructField(st, 'c', offsetof(struct A384, m3), 1);
		dcStructField(st, 'j', offsetof(struct A384, m4), 1);
		dcStructField(st, 'l', offsetof(struct A384, m5), 1);
		dcStructField(st, 'j', offsetof(struct A384, m6), 1);
		dcStructField(st, 'j', offsetof(struct A384, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A384, m8), 1, f_touchdcstA380());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A384, m9), 1, f_touchdcstA381());
		dcStructField(st, 's', offsetof(struct A384, m10), 1);
		dcStructField(st, 'c', offsetof(struct A384, m11), 1);
		dcStructField(st, 'j', offsetof(struct A384, m12), 1);
		dcStructField(st, 'f', offsetof(struct A384, m13), 1);
		dcStructField(st, 'd', offsetof(struct A384, m14), 1);
		dcStructField(st, 'c', offsetof(struct A384, m15), 1);
		dcStructField(st, 'd', offsetof(struct A384, m16), 1);
		dcStructField(st, 'f', offsetof(struct A384, m17), 1);
		dcStructField(st, 'l', offsetof(struct A384, m18), 1);
		dcStructField(st, 'i', offsetof(struct A384, m19), 1);
		dcStructField(st, 'i', offsetof(struct A384, m20), 1);
		dcStructField(st, 'c', offsetof(struct A384, m21), 1);
		dcStructField(st, 'd', offsetof(struct A384, m22), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A384, m23), 1, f_touchdcstA382());
		dcStructField(st, 'f', offsetof(struct A384, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A384, m25), 1, f_touchdcstA383());
		dcStructField(st, 'f', offsetof(struct A384, m26), 1);
		dcStructField(st, 'c', offsetof(struct A384, m27), 1);
		dcStructField(st, 'c', offsetof(struct A384, m28), 1);
		dcStructField(st, 'l', offsetof(struct A384, m29), 1);
		dcStructField(st, 'd', offsetof(struct A384, m30), 1);
		dcStructField(st, 'l', offsetof(struct A384, m31), 1);
		dcStructField(st, 'd', offsetof(struct A384, m32), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cscpss} */
struct A385 { c m0; s m1; c m2; p m3; s m4; s m5; };
void f_cpA385(struct A385 *x, const struct A385 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA385(const struct A385 *x, const struct A385 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA385() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A385), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A385, m0), 1);
		dcStructField(st, 's', offsetof(struct A385, m1), 1);
		dcStructField(st, 'c', offsetof(struct A385, m2), 1);
		dcStructField(st, 'p', offsetof(struct A385, m3), 1);
		dcStructField(st, 's', offsetof(struct A385, m4), 1);
		dcStructField(st, 's', offsetof(struct A385, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjsljcffipfpfijlslpdpcffslidscpiijpflssslcl} */
struct A386 { s m0; j m1; s m2; l m3; j m4; c m5; f m6; f m7; i m8; p m9; f m10; p m11; f m12; i m13; j m14; l m15; s m16; l m17; p m18; d m19; p m20; c m21; f m22; f m23; s m24; l m25; i m26; d m27; s m28; c m29; p m30; i m31; i m32; j m33; p m34; f m35; l m36; s m37; s m38; s m39; l m40; c m41; l m42; };
void f_cpA386(struct A386 *x, const struct A386 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; x->m42 = y->m42; };
int f_cmpA386(const struct A386 *x, const struct A386 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && x->m42 == y->m42; };
DCstruct* f_touchdcstA386() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(43, sizeof(struct A386), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A386, m0), 1);
		dcStructField(st, 'j', offsetof(struct A386, m1), 1);
		dcStructField(st, 's', offsetof(struct A386, m2), 1);
		dcStructField(st, 'l', offsetof(struct A386, m3), 1);
		dcStructField(st, 'j', offsetof(struct A386, m4), 1);
		dcStructField(st, 'c', offsetof(struct A386, m5), 1);
		dcStructField(st, 'f', offsetof(struct A386, m6), 1);
		dcStructField(st, 'f', offsetof(struct A386, m7), 1);
		dcStructField(st, 'i', offsetof(struct A386, m8), 1);
		dcStructField(st, 'p', offsetof(struct A386, m9), 1);
		dcStructField(st, 'f', offsetof(struct A386, m10), 1);
		dcStructField(st, 'p', offsetof(struct A386, m11), 1);
		dcStructField(st, 'f', offsetof(struct A386, m12), 1);
		dcStructField(st, 'i', offsetof(struct A386, m13), 1);
		dcStructField(st, 'j', offsetof(struct A386, m14), 1);
		dcStructField(st, 'l', offsetof(struct A386, m15), 1);
		dcStructField(st, 's', offsetof(struct A386, m16), 1);
		dcStructField(st, 'l', offsetof(struct A386, m17), 1);
		dcStructField(st, 'p', offsetof(struct A386, m18), 1);
		dcStructField(st, 'd', offsetof(struct A386, m19), 1);
		dcStructField(st, 'p', offsetof(struct A386, m20), 1);
		dcStructField(st, 'c', offsetof(struct A386, m21), 1);
		dcStructField(st, 'f', offsetof(struct A386, m22), 1);
		dcStructField(st, 'f', offsetof(struct A386, m23), 1);
		dcStructField(st, 's', offsetof(struct A386, m24), 1);
		dcStructField(st, 'l', offsetof(struct A386, m25), 1);
		dcStructField(st, 'i', offsetof(struct A386, m26), 1);
		dcStructField(st, 'd', offsetof(struct A386, m27), 1);
		dcStructField(st, 's', offsetof(struct A386, m28), 1);
		dcStructField(st, 'c', offsetof(struct A386, m29), 1);
		dcStructField(st, 'p', offsetof(struct A386, m30), 1);
		dcStructField(st, 'i', offsetof(struct A386, m31), 1);
		dcStructField(st, 'i', offsetof(struct A386, m32), 1);
		dcStructField(st, 'j', offsetof(struct A386, m33), 1);
		dcStructField(st, 'p', offsetof(struct A386, m34), 1);
		dcStructField(st, 'f', offsetof(struct A386, m35), 1);
		dcStructField(st, 'l', offsetof(struct A386, m36), 1);
		dcStructField(st, 's', offsetof(struct A386, m37), 1);
		dcStructField(st, 's', offsetof(struct A386, m38), 1);
		dcStructField(st, 's', offsetof(struct A386, m39), 1);
		dcStructField(st, 'l', offsetof(struct A386, m40), 1);
		dcStructField(st, 'c', offsetof(struct A386, m41), 1);
		dcStructField(st, 'l', offsetof(struct A386, m42), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pd{sjsljcffipfpfijlslpdpcffslidscpiijpflssslcl}s} */
struct A387 { p m0; d m1; struct A386 m2; s m3; };
void f_cpA387(struct A387 *x, const struct A387 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA386(&x->m2, &y->m2); x->m3 = y->m3; };
int f_cmpA387(const struct A387 *x, const struct A387 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA386(&x->m2, &y->m2) && x->m3 == y->m3; };
DCstruct* f_touchdcstA387() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A387), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A387, m0), 1);
		dcStructField(st, 'd', offsetof(struct A387, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A387, m2), 1, f_touchdcstA386());
		dcStructField(st, 's', offsetof(struct A387, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {discspscpjdfcj} */
struct A388 { d m0; i m1; s m2; c m3; s m4; p m5; s m6; c m7; p m8; j m9; d m10; f m11; c m12; j m13; };
void f_cpA388(struct A388 *x, const struct A388 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA388(const struct A388 *x, const struct A388 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA388() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A388), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A388, m0), 1);
		dcStructField(st, 'i', offsetof(struct A388, m1), 1);
		dcStructField(st, 's', offsetof(struct A388, m2), 1);
		dcStructField(st, 'c', offsetof(struct A388, m3), 1);
		dcStructField(st, 's', offsetof(struct A388, m4), 1);
		dcStructField(st, 'p', offsetof(struct A388, m5), 1);
		dcStructField(st, 's', offsetof(struct A388, m6), 1);
		dcStructField(st, 'c', offsetof(struct A388, m7), 1);
		dcStructField(st, 'p', offsetof(struct A388, m8), 1);
		dcStructField(st, 'j', offsetof(struct A388, m9), 1);
		dcStructField(st, 'd', offsetof(struct A388, m10), 1);
		dcStructField(st, 'f', offsetof(struct A388, m11), 1);
		dcStructField(st, 'c', offsetof(struct A388, m12), 1);
		dcStructField(st, 'j', offsetof(struct A388, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcpfsfljsflf} */
struct A389 { j m0; c m1; p m2; f m3; s m4; f m5; l m6; j m7; s m8; f m9; l m10; f m11; };
void f_cpA389(struct A389 *x, const struct A389 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA389(const struct A389 *x, const struct A389 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA389() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A389), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A389, m0), 1);
		dcStructField(st, 'c', offsetof(struct A389, m1), 1);
		dcStructField(st, 'p', offsetof(struct A389, m2), 1);
		dcStructField(st, 'f', offsetof(struct A389, m3), 1);
		dcStructField(st, 's', offsetof(struct A389, m4), 1);
		dcStructField(st, 'f', offsetof(struct A389, m5), 1);
		dcStructField(st, 'l', offsetof(struct A389, m6), 1);
		dcStructField(st, 'j', offsetof(struct A389, m7), 1);
		dcStructField(st, 's', offsetof(struct A389, m8), 1);
		dcStructField(st, 'f', offsetof(struct A389, m9), 1);
		dcStructField(st, 'l', offsetof(struct A389, m10), 1);
		dcStructField(st, 'f', offsetof(struct A389, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcp} */
struct A390 { d m0; c m1; p m2; };
void f_cpA390(struct A390 *x, const struct A390 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA390(const struct A390 *x, const struct A390 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA390() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A390), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A390, m0), 1);
		dcStructField(st, 'c', offsetof(struct A390, m1), 1);
		dcStructField(st, 'p', offsetof(struct A390, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldfjisj} */
struct A391 { l m0; d m1; f m2; j m3; i m4; s m5; j m6; };
void f_cpA391(struct A391 *x, const struct A391 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA391(const struct A391 *x, const struct A391 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA391() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A391), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A391, m0), 1);
		dcStructField(st, 'd', offsetof(struct A391, m1), 1);
		dcStructField(st, 'f', offsetof(struct A391, m2), 1);
		dcStructField(st, 'j', offsetof(struct A391, m3), 1);
		dcStructField(st, 'i', offsetof(struct A391, m4), 1);
		dcStructField(st, 's', offsetof(struct A391, m5), 1);
		dcStructField(st, 'j', offsetof(struct A391, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fss{ldfjisj}fd} */
struct A392 { f m0; s m1; s m2; struct A391 m3; f m4; d m5; };
void f_cpA392(struct A392 *x, const struct A392 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA391(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA392(const struct A392 *x, const struct A392 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA391(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA392() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A392), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A392, m0), 1);
		dcStructField(st, 's', offsetof(struct A392, m1), 1);
		dcStructField(st, 's', offsetof(struct A392, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A392, m3), 1, f_touchdcstA391());
		dcStructField(st, 'f', offsetof(struct A392, m4), 1);
		dcStructField(st, 'd', offsetof(struct A392, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfplfflfc} */
struct A393 { s m0; f m1; p m2; l m3; f m4; f m5; l m6; f m7; c m8; };
void f_cpA393(struct A393 *x, const struct A393 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA393(const struct A393 *x, const struct A393 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA393() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A393), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A393, m0), 1);
		dcStructField(st, 'f', offsetof(struct A393, m1), 1);
		dcStructField(st, 'p', offsetof(struct A393, m2), 1);
		dcStructField(st, 'l', offsetof(struct A393, m3), 1);
		dcStructField(st, 'f', offsetof(struct A393, m4), 1);
		dcStructField(st, 'f', offsetof(struct A393, m5), 1);
		dcStructField(st, 'l', offsetof(struct A393, m6), 1);
		dcStructField(st, 'f', offsetof(struct A393, m7), 1);
		dcStructField(st, 'c', offsetof(struct A393, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djid} */
struct A394 { d m0; j m1; i m2; d m3; };
void f_cpA394(struct A394 *x, const struct A394 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA394(const struct A394 *x, const struct A394 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA394() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A394), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A394, m0), 1);
		dcStructField(st, 'j', offsetof(struct A394, m1), 1);
		dcStructField(st, 'i', offsetof(struct A394, m2), 1);
		dcStructField(st, 'd', offsetof(struct A394, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lic} */
struct A395 { l m0; i m1; c m2; };
void f_cpA395(struct A395 *x, const struct A395 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA395(const struct A395 *x, const struct A395 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA395() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A395), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A395, m0), 1);
		dcStructField(st, 'i', offsetof(struct A395, m1), 1);
		dcStructField(st, 'c', offsetof(struct A395, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cclci} */
struct A396 { c m0; c m1; l m2; c m3; i m4; };
void f_cpA396(struct A396 *x, const struct A396 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA396(const struct A396 *x, const struct A396 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA396() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A396), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A396, m0), 1);
		dcStructField(st, 'c', offsetof(struct A396, m1), 1);
		dcStructField(st, 'l', offsetof(struct A396, m2), 1);
		dcStructField(st, 'c', offsetof(struct A396, m3), 1);
		dcStructField(st, 'i', offsetof(struct A396, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pp} */
struct A397 { p m0; p m1; };
void f_cpA397(struct A397 *x, const struct A397 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA397(const struct A397 *x, const struct A397 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA397() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A397), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A397, m0), 1);
		dcStructField(st, 'p', offsetof(struct A397, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idfpi} */
struct A398 { i m0; d m1; f m2; p m3; i m4; };
void f_cpA398(struct A398 *x, const struct A398 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA398(const struct A398 *x, const struct A398 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA398() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A398), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A398, m0), 1);
		dcStructField(st, 'd', offsetof(struct A398, m1), 1);
		dcStructField(st, 'f', offsetof(struct A398, m2), 1);
		dcStructField(st, 'p', offsetof(struct A398, m3), 1);
		dcStructField(st, 'i', offsetof(struct A398, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfjl} */
struct A399 { s m0; f m1; j m2; l m3; };
void f_cpA399(struct A399 *x, const struct A399 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA399(const struct A399 *x, const struct A399 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA399() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A399), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A399, m0), 1);
		dcStructField(st, 'f', offsetof(struct A399, m1), 1);
		dcStructField(st, 'j', offsetof(struct A399, m2), 1);
		dcStructField(st, 'l', offsetof(struct A399, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {si} */
struct A400 { s m0; i m1; };
void f_cpA400(struct A400 *x, const struct A400 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA400(const struct A400 *x, const struct A400 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA400() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A400), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A400, m0), 1);
		dcStructField(st, 'i', offsetof(struct A400, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpldi} */
struct A401 { f m0; p m1; l m2; d m3; i m4; };
void f_cpA401(struct A401 *x, const struct A401 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA401(const struct A401 *x, const struct A401 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA401() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A401), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A401, m0), 1);
		dcStructField(st, 'p', offsetof(struct A401, m1), 1);
		dcStructField(st, 'l', offsetof(struct A401, m2), 1);
		dcStructField(st, 'd', offsetof(struct A401, m3), 1);
		dcStructField(st, 'i', offsetof(struct A401, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcfssls} */
struct A402 { j m0; c m1; f m2; s m3; s m4; l m5; s m6; };
void f_cpA402(struct A402 *x, const struct A402 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA402(const struct A402 *x, const struct A402 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA402() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A402), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A402, m0), 1);
		dcStructField(st, 'c', offsetof(struct A402, m1), 1);
		dcStructField(st, 'f', offsetof(struct A402, m2), 1);
		dcStructField(st, 's', offsetof(struct A402, m3), 1);
		dcStructField(st, 's', offsetof(struct A402, m4), 1);
		dcStructField(st, 'l', offsetof(struct A402, m5), 1);
		dcStructField(st, 's', offsetof(struct A402, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dicsjsdj} */
struct A403 { d m0; i m1; c m2; s m3; j m4; s m5; d m6; j m7; };
void f_cpA403(struct A403 *x, const struct A403 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA403(const struct A403 *x, const struct A403 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA403() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A403), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A403, m0), 1);
		dcStructField(st, 'i', offsetof(struct A403, m1), 1);
		dcStructField(st, 'c', offsetof(struct A403, m2), 1);
		dcStructField(st, 's', offsetof(struct A403, m3), 1);
		dcStructField(st, 'j', offsetof(struct A403, m4), 1);
		dcStructField(st, 's', offsetof(struct A403, m5), 1);
		dcStructField(st, 'd', offsetof(struct A403, m6), 1);
		dcStructField(st, 'j', offsetof(struct A403, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpdffjdfspifll} */
struct A404 { j m0; p m1; d m2; f m3; f m4; j m5; d m6; f m7; s m8; p m9; i m10; f m11; l m12; l m13; };
void f_cpA404(struct A404 *x, const struct A404 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA404(const struct A404 *x, const struct A404 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA404() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A404), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A404, m0), 1);
		dcStructField(st, 'p', offsetof(struct A404, m1), 1);
		dcStructField(st, 'd', offsetof(struct A404, m2), 1);
		dcStructField(st, 'f', offsetof(struct A404, m3), 1);
		dcStructField(st, 'f', offsetof(struct A404, m4), 1);
		dcStructField(st, 'j', offsetof(struct A404, m5), 1);
		dcStructField(st, 'd', offsetof(struct A404, m6), 1);
		dcStructField(st, 'f', offsetof(struct A404, m7), 1);
		dcStructField(st, 's', offsetof(struct A404, m8), 1);
		dcStructField(st, 'p', offsetof(struct A404, m9), 1);
		dcStructField(st, 'i', offsetof(struct A404, m10), 1);
		dcStructField(st, 'f', offsetof(struct A404, m11), 1);
		dcStructField(st, 'l', offsetof(struct A404, m12), 1);
		dcStructField(st, 'l', offsetof(struct A404, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scd{jpdffjdfspifll}ifsjippslj} */
struct A405 { s m0; c m1; d m2; struct A404 m3; i m4; f m5; s m6; j m7; i m8; p m9; p m10; s m11; l m12; j m13; };
void f_cpA405(struct A405 *x, const struct A405 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA404(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA405(const struct A405 *x, const struct A405 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA404(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA405() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A405), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A405, m0), 1);
		dcStructField(st, 'c', offsetof(struct A405, m1), 1);
		dcStructField(st, 'd', offsetof(struct A405, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A405, m3), 1, f_touchdcstA404());
		dcStructField(st, 'i', offsetof(struct A405, m4), 1);
		dcStructField(st, 'f', offsetof(struct A405, m5), 1);
		dcStructField(st, 's', offsetof(struct A405, m6), 1);
		dcStructField(st, 'j', offsetof(struct A405, m7), 1);
		dcStructField(st, 'i', offsetof(struct A405, m8), 1);
		dcStructField(st, 'p', offsetof(struct A405, m9), 1);
		dcStructField(st, 'p', offsetof(struct A405, m10), 1);
		dcStructField(st, 's', offsetof(struct A405, m11), 1);
		dcStructField(st, 'l', offsetof(struct A405, m12), 1);
		dcStructField(st, 'j', offsetof(struct A405, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcdiiil{d}dcf} */
struct A406 { p m0; c m1; d m2; i m3; i m4; i m5; l m6; struct A33 m7; d m8; c m9; f m10; };
void f_cpA406(struct A406 *x, const struct A406 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA33(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA406(const struct A406 *x, const struct A406 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA33(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA406() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A406), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A406, m0), 1);
		dcStructField(st, 'c', offsetof(struct A406, m1), 1);
		dcStructField(st, 'd', offsetof(struct A406, m2), 1);
		dcStructField(st, 'i', offsetof(struct A406, m3), 1);
		dcStructField(st, 'i', offsetof(struct A406, m4), 1);
		dcStructField(st, 'i', offsetof(struct A406, m5), 1);
		dcStructField(st, 'l', offsetof(struct A406, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A406, m7), 1, f_touchdcstA33());
		dcStructField(st, 'd', offsetof(struct A406, m8), 1);
		dcStructField(st, 'c', offsetof(struct A406, m9), 1);
		dcStructField(st, 'f', offsetof(struct A406, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pc} */
struct A407 { p m0; c m1; };
void f_cpA407(struct A407 *x, const struct A407 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA407(const struct A407 *x, const struct A407 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA407() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A407), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A407, m0), 1);
		dcStructField(st, 'c', offsetof(struct A407, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{scd{jpdffjdfspifll}ifsjippslj}flfldsij{pcdiiil{d}dcf}l{pc}} */
struct A408 { struct A405 m0; f m1; l m2; f m3; l m4; d m5; s m6; i m7; j m8; struct A406 m9; l m10; struct A407 m11; };
void f_cpA408(struct A408 *x, const struct A408 *y) { f_cpA405(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA406(&x->m9, &y->m9); x->m10 = y->m10; f_cpA407(&x->m11, &y->m11); };
int f_cmpA408(const struct A408 *x, const struct A408 *y) { return f_cmpA405(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA406(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA407(&x->m11, &y->m11); };
DCstruct* f_touchdcstA408() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A408), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A408, m0), 1, f_touchdcstA405());
		dcStructField(st, 'f', offsetof(struct A408, m1), 1);
		dcStructField(st, 'l', offsetof(struct A408, m2), 1);
		dcStructField(st, 'f', offsetof(struct A408, m3), 1);
		dcStructField(st, 'l', offsetof(struct A408, m4), 1);
		dcStructField(st, 'd', offsetof(struct A408, m5), 1);
		dcStructField(st, 's', offsetof(struct A408, m6), 1);
		dcStructField(st, 'i', offsetof(struct A408, m7), 1);
		dcStructField(st, 'j', offsetof(struct A408, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A408, m9), 1, f_touchdcstA406());
		dcStructField(st, 'l', offsetof(struct A408, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A408, m11), 1, f_touchdcstA407());
		dcCloseStruct(st);
	}
	return st;
};
/* {idid} */
struct A409 { i m0; d m1; i m2; d m3; };
void f_cpA409(struct A409 *x, const struct A409 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA409(const struct A409 *x, const struct A409 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA409() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A409), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A409, m0), 1);
		dcStructField(st, 'd', offsetof(struct A409, m1), 1);
		dcStructField(st, 'i', offsetof(struct A409, m2), 1);
		dcStructField(st, 'd', offsetof(struct A409, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpclpsfdf} */
struct A410 { f m0; p m1; c m2; l m3; p m4; s m5; f m6; d m7; f m8; };
void f_cpA410(struct A410 *x, const struct A410 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA410(const struct A410 *x, const struct A410 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA410() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A410), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A410, m0), 1);
		dcStructField(st, 'p', offsetof(struct A410, m1), 1);
		dcStructField(st, 'c', offsetof(struct A410, m2), 1);
		dcStructField(st, 'l', offsetof(struct A410, m3), 1);
		dcStructField(st, 'p', offsetof(struct A410, m4), 1);
		dcStructField(st, 's', offsetof(struct A410, m5), 1);
		dcStructField(st, 'f', offsetof(struct A410, m6), 1);
		dcStructField(st, 'd', offsetof(struct A410, m7), 1);
		dcStructField(st, 'f', offsetof(struct A410, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fpclpsfdf}} */
struct A411 { struct A410 m0; };
void f_cpA411(struct A411 *x, const struct A411 *y) { f_cpA410(&x->m0, &y->m0); };
int f_cmpA411(const struct A411 *x, const struct A411 *y) { return f_cmpA410(&x->m0, &y->m0); };
DCstruct* f_touchdcstA411() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A411), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A411, m0), 1, f_touchdcstA410());
		dcCloseStruct(st);
	}
	return st;
};
/* {pljljijid{{fpclpsfdf}}lciij} */
struct A412 { p m0; l m1; j m2; l m3; j m4; i m5; j m6; i m7; d m8; struct A411 m9; l m10; c m11; i m12; i m13; j m14; };
void f_cpA412(struct A412 *x, const struct A412 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA411(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA412(const struct A412 *x, const struct A412 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA411(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA412() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A412), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A412, m0), 1);
		dcStructField(st, 'l', offsetof(struct A412, m1), 1);
		dcStructField(st, 'j', offsetof(struct A412, m2), 1);
		dcStructField(st, 'l', offsetof(struct A412, m3), 1);
		dcStructField(st, 'j', offsetof(struct A412, m4), 1);
		dcStructField(st, 'i', offsetof(struct A412, m5), 1);
		dcStructField(st, 'j', offsetof(struct A412, m6), 1);
		dcStructField(st, 'i', offsetof(struct A412, m7), 1);
		dcStructField(st, 'd', offsetof(struct A412, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A412, m9), 1, f_touchdcstA411());
		dcStructField(st, 'l', offsetof(struct A412, m10), 1);
		dcStructField(st, 'c', offsetof(struct A412, m11), 1);
		dcStructField(st, 'i', offsetof(struct A412, m12), 1);
		dcStructField(st, 'i', offsetof(struct A412, m13), 1);
		dcStructField(st, 'j', offsetof(struct A412, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iji} */
struct A413 { i m0; j m1; i m2; };
void f_cpA413(struct A413 *x, const struct A413 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA413(const struct A413 *x, const struct A413 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA413() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A413), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A413, m0), 1);
		dcStructField(st, 'j', offsetof(struct A413, m1), 1);
		dcStructField(st, 'i', offsetof(struct A413, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlpdiclpsfp} */
struct A414 { d m0; l m1; p m2; d m3; i m4; c m5; l m6; p m7; s m8; f m9; p m10; };
void f_cpA414(struct A414 *x, const struct A414 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA414(const struct A414 *x, const struct A414 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA414() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A414), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A414, m0), 1);
		dcStructField(st, 'l', offsetof(struct A414, m1), 1);
		dcStructField(st, 'p', offsetof(struct A414, m2), 1);
		dcStructField(st, 'd', offsetof(struct A414, m3), 1);
		dcStructField(st, 'i', offsetof(struct A414, m4), 1);
		dcStructField(st, 'c', offsetof(struct A414, m5), 1);
		dcStructField(st, 'l', offsetof(struct A414, m6), 1);
		dcStructField(st, 'p', offsetof(struct A414, m7), 1);
		dcStructField(st, 's', offsetof(struct A414, m8), 1);
		dcStructField(st, 'f', offsetof(struct A414, m9), 1);
		dcStructField(st, 'p', offsetof(struct A414, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fllpsicf} */
struct A415 { f m0; l m1; l m2; p m3; s m4; i m5; c m6; f m7; };
void f_cpA415(struct A415 *x, const struct A415 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA415(const struct A415 *x, const struct A415 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA415() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A415), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A415, m0), 1);
		dcStructField(st, 'l', offsetof(struct A415, m1), 1);
		dcStructField(st, 'l', offsetof(struct A415, m2), 1);
		dcStructField(st, 'p', offsetof(struct A415, m3), 1);
		dcStructField(st, 's', offsetof(struct A415, m4), 1);
		dcStructField(st, 'i', offsetof(struct A415, m5), 1);
		dcStructField(st, 'c', offsetof(struct A415, m6), 1);
		dcStructField(st, 'f', offsetof(struct A415, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pipsssjcpi} */
struct A416 { p m0; i m1; p m2; s m3; s m4; s m5; j m6; c m7; p m8; i m9; };
void f_cpA416(struct A416 *x, const struct A416 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA416(const struct A416 *x, const struct A416 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA416() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A416), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A416, m0), 1);
		dcStructField(st, 'i', offsetof(struct A416, m1), 1);
		dcStructField(st, 'p', offsetof(struct A416, m2), 1);
		dcStructField(st, 's', offsetof(struct A416, m3), 1);
		dcStructField(st, 's', offsetof(struct A416, m4), 1);
		dcStructField(st, 's', offsetof(struct A416, m5), 1);
		dcStructField(st, 'j', offsetof(struct A416, m6), 1);
		dcStructField(st, 'c', offsetof(struct A416, m7), 1);
		dcStructField(st, 'p', offsetof(struct A416, m8), 1);
		dcStructField(st, 'i', offsetof(struct A416, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdljsdlppjdl} */
struct A417 { c m0; d m1; l m2; j m3; s m4; d m5; l m6; p m7; p m8; j m9; d m10; l m11; };
void f_cpA417(struct A417 *x, const struct A417 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA417(const struct A417 *x, const struct A417 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA417() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A417), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A417, m0), 1);
		dcStructField(st, 'd', offsetof(struct A417, m1), 1);
		dcStructField(st, 'l', offsetof(struct A417, m2), 1);
		dcStructField(st, 'j', offsetof(struct A417, m3), 1);
		dcStructField(st, 's', offsetof(struct A417, m4), 1);
		dcStructField(st, 'd', offsetof(struct A417, m5), 1);
		dcStructField(st, 'l', offsetof(struct A417, m6), 1);
		dcStructField(st, 'p', offsetof(struct A417, m7), 1);
		dcStructField(st, 'p', offsetof(struct A417, m8), 1);
		dcStructField(st, 'j', offsetof(struct A417, m9), 1);
		dcStructField(st, 'd', offsetof(struct A417, m10), 1);
		dcStructField(st, 'l', offsetof(struct A417, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsi{pipsssjcpi}ls{cdljsdlppjdl}} */
struct A418 { f m0; s m1; i m2; struct A416 m3; l m4; s m5; struct A417 m6; };
void f_cpA418(struct A418 *x, const struct A418 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA416(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA417(&x->m6, &y->m6); };
int f_cmpA418(const struct A418 *x, const struct A418 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA416(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA417(&x->m6, &y->m6); };
DCstruct* f_touchdcstA418() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A418), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A418, m0), 1);
		dcStructField(st, 's', offsetof(struct A418, m1), 1);
		dcStructField(st, 'i', offsetof(struct A418, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A418, m3), 1, f_touchdcstA416());
		dcStructField(st, 'l', offsetof(struct A418, m4), 1);
		dcStructField(st, 's', offsetof(struct A418, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A418, m6), 1, f_touchdcstA417());
		dcCloseStruct(st);
	}
	return st;
};
/* {s{fsi{pipsssjcpi}ls{cdljsdlppjdl}}ddlpccfss} */
struct A419 { s m0; struct A418 m1; d m2; d m3; l m4; p m5; c m6; c m7; f m8; s m9; s m10; };
void f_cpA419(struct A419 *x, const struct A419 *y) { x->m0 = y->m0; f_cpA418(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA419(const struct A419 *x, const struct A419 *y) { return x->m0 == y->m0 && f_cmpA418(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA419() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A419), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A419, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A419, m1), 1, f_touchdcstA418());
		dcStructField(st, 'd', offsetof(struct A419, m2), 1);
		dcStructField(st, 'd', offsetof(struct A419, m3), 1);
		dcStructField(st, 'l', offsetof(struct A419, m4), 1);
		dcStructField(st, 'p', offsetof(struct A419, m5), 1);
		dcStructField(st, 'c', offsetof(struct A419, m6), 1);
		dcStructField(st, 'c', offsetof(struct A419, m7), 1);
		dcStructField(st, 'f', offsetof(struct A419, m8), 1);
		dcStructField(st, 's', offsetof(struct A419, m9), 1);
		dcStructField(st, 's', offsetof(struct A419, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpdsjcfilfipsjfjp} */
struct A420 { j m0; p m1; d m2; s m3; j m4; c m5; f m6; i m7; l m8; f m9; i m10; p m11; s m12; j m13; f m14; j m15; p m16; };
void f_cpA420(struct A420 *x, const struct A420 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA420(const struct A420 *x, const struct A420 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA420() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A420), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A420, m0), 1);
		dcStructField(st, 'p', offsetof(struct A420, m1), 1);
		dcStructField(st, 'd', offsetof(struct A420, m2), 1);
		dcStructField(st, 's', offsetof(struct A420, m3), 1);
		dcStructField(st, 'j', offsetof(struct A420, m4), 1);
		dcStructField(st, 'c', offsetof(struct A420, m5), 1);
		dcStructField(st, 'f', offsetof(struct A420, m6), 1);
		dcStructField(st, 'i', offsetof(struct A420, m7), 1);
		dcStructField(st, 'l', offsetof(struct A420, m8), 1);
		dcStructField(st, 'f', offsetof(struct A420, m9), 1);
		dcStructField(st, 'i', offsetof(struct A420, m10), 1);
		dcStructField(st, 'p', offsetof(struct A420, m11), 1);
		dcStructField(st, 's', offsetof(struct A420, m12), 1);
		dcStructField(st, 'j', offsetof(struct A420, m13), 1);
		dcStructField(st, 'f', offsetof(struct A420, m14), 1);
		dcStructField(st, 'j', offsetof(struct A420, m15), 1);
		dcStructField(st, 'p', offsetof(struct A420, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djci{jpdsjcfilfipsjfjp}pc} */
struct A421 { d m0; j m1; c m2; i m3; struct A420 m4; p m5; c m6; };
void f_cpA421(struct A421 *x, const struct A421 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA420(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA421(const struct A421 *x, const struct A421 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA420(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA421() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A421), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A421, m0), 1);
		dcStructField(st, 'j', offsetof(struct A421, m1), 1);
		dcStructField(st, 'c', offsetof(struct A421, m2), 1);
		dcStructField(st, 'i', offsetof(struct A421, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A421, m4), 1, f_touchdcstA420());
		dcStructField(st, 'p', offsetof(struct A421, m5), 1);
		dcStructField(st, 'c', offsetof(struct A421, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifiipcccpcssijslclds{djci{jpdsjcfilfipsjfjp}pc}} */
struct A422 { i m0; f m1; i m2; i m3; p m4; c m5; c m6; c m7; p m8; c m9; s m10; s m11; i m12; j m13; s m14; l m15; c m16; l m17; d m18; s m19; struct A421 m20; };
void f_cpA422(struct A422 *x, const struct A422 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA421(&x->m20, &y->m20); };
int f_cmpA422(const struct A422 *x, const struct A422 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA421(&x->m20, &y->m20); };
DCstruct* f_touchdcstA422() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A422), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A422, m0), 1);
		dcStructField(st, 'f', offsetof(struct A422, m1), 1);
		dcStructField(st, 'i', offsetof(struct A422, m2), 1);
		dcStructField(st, 'i', offsetof(struct A422, m3), 1);
		dcStructField(st, 'p', offsetof(struct A422, m4), 1);
		dcStructField(st, 'c', offsetof(struct A422, m5), 1);
		dcStructField(st, 'c', offsetof(struct A422, m6), 1);
		dcStructField(st, 'c', offsetof(struct A422, m7), 1);
		dcStructField(st, 'p', offsetof(struct A422, m8), 1);
		dcStructField(st, 'c', offsetof(struct A422, m9), 1);
		dcStructField(st, 's', offsetof(struct A422, m10), 1);
		dcStructField(st, 's', offsetof(struct A422, m11), 1);
		dcStructField(st, 'i', offsetof(struct A422, m12), 1);
		dcStructField(st, 'j', offsetof(struct A422, m13), 1);
		dcStructField(st, 's', offsetof(struct A422, m14), 1);
		dcStructField(st, 'l', offsetof(struct A422, m15), 1);
		dcStructField(st, 'c', offsetof(struct A422, m16), 1);
		dcStructField(st, 'l', offsetof(struct A422, m17), 1);
		dcStructField(st, 'd', offsetof(struct A422, m18), 1);
		dcStructField(st, 's', offsetof(struct A422, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A422, m20), 1, f_touchdcstA421());
		dcCloseStruct(st);
	}
	return st;
};
/* {dj} */
struct A423 { d m0; j m1; };
void f_cpA423(struct A423 *x, const struct A423 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA423(const struct A423 *x, const struct A423 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA423() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A423), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A423, m0), 1);
		dcStructField(st, 'j', offsetof(struct A423, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llil{dj}fccdlfcpicscl} */
struct A424 { l m0; l m1; i m2; l m3; struct A423 m4; f m5; c m6; c m7; d m8; l m9; f m10; c m11; p m12; i m13; c m14; s m15; c m16; l m17; };
void f_cpA424(struct A424 *x, const struct A424 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA423(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA424(const struct A424 *x, const struct A424 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA423(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA424() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A424), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A424, m0), 1);
		dcStructField(st, 'l', offsetof(struct A424, m1), 1);
		dcStructField(st, 'i', offsetof(struct A424, m2), 1);
		dcStructField(st, 'l', offsetof(struct A424, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A424, m4), 1, f_touchdcstA423());
		dcStructField(st, 'f', offsetof(struct A424, m5), 1);
		dcStructField(st, 'c', offsetof(struct A424, m6), 1);
		dcStructField(st, 'c', offsetof(struct A424, m7), 1);
		dcStructField(st, 'd', offsetof(struct A424, m8), 1);
		dcStructField(st, 'l', offsetof(struct A424, m9), 1);
		dcStructField(st, 'f', offsetof(struct A424, m10), 1);
		dcStructField(st, 'c', offsetof(struct A424, m11), 1);
		dcStructField(st, 'p', offsetof(struct A424, m12), 1);
		dcStructField(st, 'i', offsetof(struct A424, m13), 1);
		dcStructField(st, 'c', offsetof(struct A424, m14), 1);
		dcStructField(st, 's', offsetof(struct A424, m15), 1);
		dcStructField(st, 'c', offsetof(struct A424, m16), 1);
		dcStructField(st, 'l', offsetof(struct A424, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sj} */
struct A425 { s m0; j m1; };
void f_cpA425(struct A425 *x, const struct A425 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA425(const struct A425 *x, const struct A425 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA425() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A425), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A425, m0), 1);
		dcStructField(st, 'j', offsetof(struct A425, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sc} */
struct A426 { s m0; c m1; };
void f_cpA426(struct A426 *x, const struct A426 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA426(const struct A426 *x, const struct A426 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA426() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A426), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A426, m0), 1);
		dcStructField(st, 'c', offsetof(struct A426, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffipcsii} */
struct A427 { f m0; f m1; i m2; p m3; c m4; s m5; i m6; i m7; };
void f_cpA427(struct A427 *x, const struct A427 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA427(const struct A427 *x, const struct A427 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA427() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A427), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A427, m0), 1);
		dcStructField(st, 'f', offsetof(struct A427, m1), 1);
		dcStructField(st, 'i', offsetof(struct A427, m2), 1);
		dcStructField(st, 'p', offsetof(struct A427, m3), 1);
		dcStructField(st, 'c', offsetof(struct A427, m4), 1);
		dcStructField(st, 's', offsetof(struct A427, m5), 1);
		dcStructField(st, 'i', offsetof(struct A427, m6), 1);
		dcStructField(st, 'i', offsetof(struct A427, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clddpdcc} */
struct A428 { c m0; l m1; d m2; d m3; p m4; d m5; c m6; c m7; };
void f_cpA428(struct A428 *x, const struct A428 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA428(const struct A428 *x, const struct A428 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA428() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A428), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A428, m0), 1);
		dcStructField(st, 'l', offsetof(struct A428, m1), 1);
		dcStructField(st, 'd', offsetof(struct A428, m2), 1);
		dcStructField(st, 'd', offsetof(struct A428, m3), 1);
		dcStructField(st, 'p', offsetof(struct A428, m4), 1);
		dcStructField(st, 'd', offsetof(struct A428, m5), 1);
		dcStructField(st, 'c', offsetof(struct A428, m6), 1);
		dcStructField(st, 'c', offsetof(struct A428, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffd} */
struct A429 { f m0; f m1; d m2; };
void f_cpA429(struct A429 *x, const struct A429 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA429(const struct A429 *x, const struct A429 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA429() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A429), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A429, m0), 1);
		dcStructField(st, 'f', offsetof(struct A429, m1), 1);
		dcStructField(st, 'd', offsetof(struct A429, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjpplp} */
struct A430 { c m0; j m1; p m2; p m3; l m4; p m5; };
void f_cpA430(struct A430 *x, const struct A430 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA430(const struct A430 *x, const struct A430 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA430() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A430), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A430, m0), 1);
		dcStructField(st, 'j', offsetof(struct A430, m1), 1);
		dcStructField(st, 'p', offsetof(struct A430, m2), 1);
		dcStructField(st, 'p', offsetof(struct A430, m3), 1);
		dcStructField(st, 'l', offsetof(struct A430, m4), 1);
		dcStructField(st, 'p', offsetof(struct A430, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pddd} */
struct A431 { p m0; d m1; d m2; d m3; };
void f_cpA431(struct A431 *x, const struct A431 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA431(const struct A431 *x, const struct A431 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA431() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A431), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A431, m0), 1);
		dcStructField(st, 'd', offsetof(struct A431, m1), 1);
		dcStructField(st, 'd', offsetof(struct A431, m2), 1);
		dcStructField(st, 'd', offsetof(struct A431, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfcljpl} */
struct A432 { d m0; f m1; c m2; l m3; j m4; p m5; l m6; };
void f_cpA432(struct A432 *x, const struct A432 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA432(const struct A432 *x, const struct A432 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA432() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A432), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A432, m0), 1);
		dcStructField(st, 'f', offsetof(struct A432, m1), 1);
		dcStructField(st, 'c', offsetof(struct A432, m2), 1);
		dcStructField(st, 'l', offsetof(struct A432, m3), 1);
		dcStructField(st, 'j', offsetof(struct A432, m4), 1);
		dcStructField(st, 'p', offsetof(struct A432, m5), 1);
		dcStructField(st, 'l', offsetof(struct A432, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpf} */
struct A433 { j m0; p m1; f m2; };
void f_cpA433(struct A433 *x, const struct A433 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA433(const struct A433 *x, const struct A433 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA433() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A433), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A433, m0), 1);
		dcStructField(st, 'p', offsetof(struct A433, m1), 1);
		dcStructField(st, 'f', offsetof(struct A433, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpji} */
struct A434 { j m0; p m1; j m2; i m3; };
void f_cpA434(struct A434 *x, const struct A434 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA434(const struct A434 *x, const struct A434 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA434() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A434), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A434, m0), 1);
		dcStructField(st, 'p', offsetof(struct A434, m1), 1);
		dcStructField(st, 'j', offsetof(struct A434, m2), 1);
		dcStructField(st, 'i', offsetof(struct A434, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icffpcpjfsljicldlfss} */
struct A435 { i m0; c m1; f m2; f m3; p m4; c m5; p m6; j m7; f m8; s m9; l m10; j m11; i m12; c m13; l m14; d m15; l m16; f m17; s m18; s m19; };
void f_cpA435(struct A435 *x, const struct A435 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA435(const struct A435 *x, const struct A435 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA435() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A435), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A435, m0), 1);
		dcStructField(st, 'c', offsetof(struct A435, m1), 1);
		dcStructField(st, 'f', offsetof(struct A435, m2), 1);
		dcStructField(st, 'f', offsetof(struct A435, m3), 1);
		dcStructField(st, 'p', offsetof(struct A435, m4), 1);
		dcStructField(st, 'c', offsetof(struct A435, m5), 1);
		dcStructField(st, 'p', offsetof(struct A435, m6), 1);
		dcStructField(st, 'j', offsetof(struct A435, m7), 1);
		dcStructField(st, 'f', offsetof(struct A435, m8), 1);
		dcStructField(st, 's', offsetof(struct A435, m9), 1);
		dcStructField(st, 'l', offsetof(struct A435, m10), 1);
		dcStructField(st, 'j', offsetof(struct A435, m11), 1);
		dcStructField(st, 'i', offsetof(struct A435, m12), 1);
		dcStructField(st, 'c', offsetof(struct A435, m13), 1);
		dcStructField(st, 'l', offsetof(struct A435, m14), 1);
		dcStructField(st, 'd', offsetof(struct A435, m15), 1);
		dcStructField(st, 'l', offsetof(struct A435, m16), 1);
		dcStructField(st, 'f', offsetof(struct A435, m17), 1);
		dcStructField(st, 's', offsetof(struct A435, m18), 1);
		dcStructField(st, 's', offsetof(struct A435, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{jpf}ppjidscjcdcsijffidid{jpji}idpsdsfcljildisdjjcccj{icffpcpjfsljicldlfss}j} */
struct A436 { l m0; struct A433 m1; p m2; p m3; j m4; i m5; d m6; s m7; c m8; j m9; c m10; d m11; c m12; s m13; i m14; j m15; f m16; f m17; i m18; d m19; i m20; d m21; struct A434 m22; i m23; d m24; p m25; s m26; d m27; s m28; f m29; c m30; l m31; j m32; i m33; l m34; d m35; i m36; s m37; d m38; j m39; j m40; c m41; c m42; c m43; j m44; struct A435 m45; j m46; };
void f_cpA436(struct A436 *x, const struct A436 *y) { x->m0 = y->m0; f_cpA433(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; f_cpA434(&x->m22, &y->m22); x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; x->m42 = y->m42; x->m43 = y->m43; x->m44 = y->m44; f_cpA435(&x->m45, &y->m45); x->m46 = y->m46; };
int f_cmpA436(const struct A436 *x, const struct A436 *y) { return x->m0 == y->m0 && f_cmpA433(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && f_cmpA434(&x->m22, &y->m22) && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && x->m42 == y->m42 && x->m43 == y->m43 && x->m44 == y->m44 && f_cmpA435(&x->m45, &y->m45) && x->m46 == y->m46; };
DCstruct* f_touchdcstA436() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(47, sizeof(struct A436), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A436, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A436, m1), 1, f_touchdcstA433());
		dcStructField(st, 'p', offsetof(struct A436, m2), 1);
		dcStructField(st, 'p', offsetof(struct A436, m3), 1);
		dcStructField(st, 'j', offsetof(struct A436, m4), 1);
		dcStructField(st, 'i', offsetof(struct A436, m5), 1);
		dcStructField(st, 'd', offsetof(struct A436, m6), 1);
		dcStructField(st, 's', offsetof(struct A436, m7), 1);
		dcStructField(st, 'c', offsetof(struct A436, m8), 1);
		dcStructField(st, 'j', offsetof(struct A436, m9), 1);
		dcStructField(st, 'c', offsetof(struct A436, m10), 1);
		dcStructField(st, 'd', offsetof(struct A436, m11), 1);
		dcStructField(st, 'c', offsetof(struct A436, m12), 1);
		dcStructField(st, 's', offsetof(struct A436, m13), 1);
		dcStructField(st, 'i', offsetof(struct A436, m14), 1);
		dcStructField(st, 'j', offsetof(struct A436, m15), 1);
		dcStructField(st, 'f', offsetof(struct A436, m16), 1);
		dcStructField(st, 'f', offsetof(struct A436, m17), 1);
		dcStructField(st, 'i', offsetof(struct A436, m18), 1);
		dcStructField(st, 'd', offsetof(struct A436, m19), 1);
		dcStructField(st, 'i', offsetof(struct A436, m20), 1);
		dcStructField(st, 'd', offsetof(struct A436, m21), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A436, m22), 1, f_touchdcstA434());
		dcStructField(st, 'i', offsetof(struct A436, m23), 1);
		dcStructField(st, 'd', offsetof(struct A436, m24), 1);
		dcStructField(st, 'p', offsetof(struct A436, m25), 1);
		dcStructField(st, 's', offsetof(struct A436, m26), 1);
		dcStructField(st, 'd', offsetof(struct A436, m27), 1);
		dcStructField(st, 's', offsetof(struct A436, m28), 1);
		dcStructField(st, 'f', offsetof(struct A436, m29), 1);
		dcStructField(st, 'c', offsetof(struct A436, m30), 1);
		dcStructField(st, 'l', offsetof(struct A436, m31), 1);
		dcStructField(st, 'j', offsetof(struct A436, m32), 1);
		dcStructField(st, 'i', offsetof(struct A436, m33), 1);
		dcStructField(st, 'l', offsetof(struct A436, m34), 1);
		dcStructField(st, 'd', offsetof(struct A436, m35), 1);
		dcStructField(st, 'i', offsetof(struct A436, m36), 1);
		dcStructField(st, 's', offsetof(struct A436, m37), 1);
		dcStructField(st, 'd', offsetof(struct A436, m38), 1);
		dcStructField(st, 'j', offsetof(struct A436, m39), 1);
		dcStructField(st, 'j', offsetof(struct A436, m40), 1);
		dcStructField(st, 'c', offsetof(struct A436, m41), 1);
		dcStructField(st, 'c', offsetof(struct A436, m42), 1);
		dcStructField(st, 'c', offsetof(struct A436, m43), 1);
		dcStructField(st, 'j', offsetof(struct A436, m44), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A436, m45), 1, f_touchdcstA435());
		dcStructField(st, 'j', offsetof(struct A436, m46), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{dfcljpl}sflcc{l{jpf}ppjidscjcdcsijffidid{jpji}idpsdsfcljildisdjjcccj{icffpcpjfsljicldlfss}j}jd} */
struct A437 { p m0; struct A432 m1; s m2; f m3; l m4; c m5; c m6; struct A436 m7; j m8; d m9; };
void f_cpA437(struct A437 *x, const struct A437 *y) { x->m0 = y->m0; f_cpA432(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA436(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA437(const struct A437 *x, const struct A437 *y) { return x->m0 == y->m0 && f_cmpA432(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA436(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA437() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A437), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A437, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A437, m1), 1, f_touchdcstA432());
		dcStructField(st, 's', offsetof(struct A437, m2), 1);
		dcStructField(st, 'f', offsetof(struct A437, m3), 1);
		dcStructField(st, 'l', offsetof(struct A437, m4), 1);
		dcStructField(st, 'c', offsetof(struct A437, m5), 1);
		dcStructField(st, 'c', offsetof(struct A437, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A437, m7), 1, f_touchdcstA436());
		dcStructField(st, 'j', offsetof(struct A437, m8), 1);
		dcStructField(st, 'd', offsetof(struct A437, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pscfpl} */
struct A438 { p m0; s m1; c m2; f m3; p m4; l m5; };
void f_cpA438(struct A438 *x, const struct A438 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA438(const struct A438 *x, const struct A438 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA438() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A438), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A438, m0), 1);
		dcStructField(st, 's', offsetof(struct A438, m1), 1);
		dcStructField(st, 'c', offsetof(struct A438, m2), 1);
		dcStructField(st, 'f', offsetof(struct A438, m3), 1);
		dcStructField(st, 'p', offsetof(struct A438, m4), 1);
		dcStructField(st, 'l', offsetof(struct A438, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spfjdjj} */
struct A439 { s m0; p m1; f m2; j m3; d m4; j m5; j m6; };
void f_cpA439(struct A439 *x, const struct A439 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA439(const struct A439 *x, const struct A439 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA439() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A439), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A439, m0), 1);
		dcStructField(st, 'p', offsetof(struct A439, m1), 1);
		dcStructField(st, 'f', offsetof(struct A439, m2), 1);
		dcStructField(st, 'j', offsetof(struct A439, m3), 1);
		dcStructField(st, 'd', offsetof(struct A439, m4), 1);
		dcStructField(st, 'j', offsetof(struct A439, m5), 1);
		dcStructField(st, 'j', offsetof(struct A439, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iiildidldjslscpj} */
struct A440 { i m0; i m1; i m2; l m3; d m4; i m5; d m6; l m7; d m8; j m9; s m10; l m11; s m12; c m13; p m14; j m15; };
void f_cpA440(struct A440 *x, const struct A440 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA440(const struct A440 *x, const struct A440 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA440() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A440), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A440, m0), 1);
		dcStructField(st, 'i', offsetof(struct A440, m1), 1);
		dcStructField(st, 'i', offsetof(struct A440, m2), 1);
		dcStructField(st, 'l', offsetof(struct A440, m3), 1);
		dcStructField(st, 'd', offsetof(struct A440, m4), 1);
		dcStructField(st, 'i', offsetof(struct A440, m5), 1);
		dcStructField(st, 'd', offsetof(struct A440, m6), 1);
		dcStructField(st, 'l', offsetof(struct A440, m7), 1);
		dcStructField(st, 'd', offsetof(struct A440, m8), 1);
		dcStructField(st, 'j', offsetof(struct A440, m9), 1);
		dcStructField(st, 's', offsetof(struct A440, m10), 1);
		dcStructField(st, 'l', offsetof(struct A440, m11), 1);
		dcStructField(st, 's', offsetof(struct A440, m12), 1);
		dcStructField(st, 'c', offsetof(struct A440, m13), 1);
		dcStructField(st, 'p', offsetof(struct A440, m14), 1);
		dcStructField(st, 'j', offsetof(struct A440, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilijdfjjjpfiddjffi} */
struct A441 { i m0; l m1; i m2; j m3; d m4; f m5; j m6; j m7; j m8; p m9; f m10; i m11; d m12; d m13; j m14; f m15; f m16; i m17; };
void f_cpA441(struct A441 *x, const struct A441 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA441(const struct A441 *x, const struct A441 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA441() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A441), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A441, m0), 1);
		dcStructField(st, 'l', offsetof(struct A441, m1), 1);
		dcStructField(st, 'i', offsetof(struct A441, m2), 1);
		dcStructField(st, 'j', offsetof(struct A441, m3), 1);
		dcStructField(st, 'd', offsetof(struct A441, m4), 1);
		dcStructField(st, 'f', offsetof(struct A441, m5), 1);
		dcStructField(st, 'j', offsetof(struct A441, m6), 1);
		dcStructField(st, 'j', offsetof(struct A441, m7), 1);
		dcStructField(st, 'j', offsetof(struct A441, m8), 1);
		dcStructField(st, 'p', offsetof(struct A441, m9), 1);
		dcStructField(st, 'f', offsetof(struct A441, m10), 1);
		dcStructField(st, 'i', offsetof(struct A441, m11), 1);
		dcStructField(st, 'd', offsetof(struct A441, m12), 1);
		dcStructField(st, 'd', offsetof(struct A441, m13), 1);
		dcStructField(st, 'j', offsetof(struct A441, m14), 1);
		dcStructField(st, 'f', offsetof(struct A441, m15), 1);
		dcStructField(st, 'f', offsetof(struct A441, m16), 1);
		dcStructField(st, 'i', offsetof(struct A441, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddiplsldlis} */
struct A442 { d m0; d m1; i m2; p m3; l m4; s m5; l m6; d m7; l m8; i m9; s m10; };
void f_cpA442(struct A442 *x, const struct A442 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA442(const struct A442 *x, const struct A442 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA442() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A442), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A442, m0), 1);
		dcStructField(st, 'd', offsetof(struct A442, m1), 1);
		dcStructField(st, 'i', offsetof(struct A442, m2), 1);
		dcStructField(st, 'p', offsetof(struct A442, m3), 1);
		dcStructField(st, 'l', offsetof(struct A442, m4), 1);
		dcStructField(st, 's', offsetof(struct A442, m5), 1);
		dcStructField(st, 'l', offsetof(struct A442, m6), 1);
		dcStructField(st, 'd', offsetof(struct A442, m7), 1);
		dcStructField(st, 'l', offsetof(struct A442, m8), 1);
		dcStructField(st, 'i', offsetof(struct A442, m9), 1);
		dcStructField(st, 's', offsetof(struct A442, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lffjplsjf} */
struct A443 { l m0; f m1; f m2; j m3; p m4; l m5; s m6; j m7; f m8; };
void f_cpA443(struct A443 *x, const struct A443 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA443(const struct A443 *x, const struct A443 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA443() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A443), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A443, m0), 1);
		dcStructField(st, 'f', offsetof(struct A443, m1), 1);
		dcStructField(st, 'f', offsetof(struct A443, m2), 1);
		dcStructField(st, 'j', offsetof(struct A443, m3), 1);
		dcStructField(st, 'p', offsetof(struct A443, m4), 1);
		dcStructField(st, 'l', offsetof(struct A443, m5), 1);
		dcStructField(st, 's', offsetof(struct A443, m6), 1);
		dcStructField(st, 'j', offsetof(struct A443, m7), 1);
		dcStructField(st, 'f', offsetof(struct A443, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d{ilijdfjjjpfiddjffi}lfpil{ddiplsldlis}{lffjplsjf}jcp} */
struct A444 { d m0; struct A441 m1; l m2; f m3; p m4; i m5; l m6; struct A442 m7; struct A443 m8; j m9; c m10; p m11; };
void f_cpA444(struct A444 *x, const struct A444 *y) { x->m0 = y->m0; f_cpA441(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA442(&x->m7, &y->m7); f_cpA443(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA444(const struct A444 *x, const struct A444 *y) { return x->m0 == y->m0 && f_cmpA441(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA442(&x->m7, &y->m7) && f_cmpA443(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA444() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A444), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A444, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A444, m1), 1, f_touchdcstA441());
		dcStructField(st, 'l', offsetof(struct A444, m2), 1);
		dcStructField(st, 'f', offsetof(struct A444, m3), 1);
		dcStructField(st, 'p', offsetof(struct A444, m4), 1);
		dcStructField(st, 'i', offsetof(struct A444, m5), 1);
		dcStructField(st, 'l', offsetof(struct A444, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A444, m7), 1, f_touchdcstA442());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A444, m8), 1, f_touchdcstA443());
		dcStructField(st, 'j', offsetof(struct A444, m9), 1);
		dcStructField(st, 'c', offsetof(struct A444, m10), 1);
		dcStructField(st, 'p', offsetof(struct A444, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pis} */
struct A445 { p m0; i m1; s m2; };
void f_cpA445(struct A445 *x, const struct A445 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA445(const struct A445 *x, const struct A445 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA445() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A445), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A445, m0), 1);
		dcStructField(st, 'i', offsetof(struct A445, m1), 1);
		dcStructField(st, 's', offsetof(struct A445, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfspcpclcispdpcifscdsjjd} */
struct A446 { s m0; f m1; s m2; p m3; c m4; p m5; c m6; l m7; c m8; i m9; s m10; p m11; d m12; p m13; c m14; i m15; f m16; s m17; c m18; d m19; s m20; j m21; j m22; d m23; };
void f_cpA446(struct A446 *x, const struct A446 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA446(const struct A446 *x, const struct A446 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA446() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A446), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A446, m0), 1);
		dcStructField(st, 'f', offsetof(struct A446, m1), 1);
		dcStructField(st, 's', offsetof(struct A446, m2), 1);
		dcStructField(st, 'p', offsetof(struct A446, m3), 1);
		dcStructField(st, 'c', offsetof(struct A446, m4), 1);
		dcStructField(st, 'p', offsetof(struct A446, m5), 1);
		dcStructField(st, 'c', offsetof(struct A446, m6), 1);
		dcStructField(st, 'l', offsetof(struct A446, m7), 1);
		dcStructField(st, 'c', offsetof(struct A446, m8), 1);
		dcStructField(st, 'i', offsetof(struct A446, m9), 1);
		dcStructField(st, 's', offsetof(struct A446, m10), 1);
		dcStructField(st, 'p', offsetof(struct A446, m11), 1);
		dcStructField(st, 'd', offsetof(struct A446, m12), 1);
		dcStructField(st, 'p', offsetof(struct A446, m13), 1);
		dcStructField(st, 'c', offsetof(struct A446, m14), 1);
		dcStructField(st, 'i', offsetof(struct A446, m15), 1);
		dcStructField(st, 'f', offsetof(struct A446, m16), 1);
		dcStructField(st, 's', offsetof(struct A446, m17), 1);
		dcStructField(st, 'c', offsetof(struct A446, m18), 1);
		dcStructField(st, 'd', offsetof(struct A446, m19), 1);
		dcStructField(st, 's', offsetof(struct A446, m20), 1);
		dcStructField(st, 'j', offsetof(struct A446, m21), 1);
		dcStructField(st, 'j', offsetof(struct A446, m22), 1);
		dcStructField(st, 'd', offsetof(struct A446, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpdc} */
struct A447 { j m0; p m1; d m2; c m3; };
void f_cpA447(struct A447 *x, const struct A447 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA447(const struct A447 *x, const struct A447 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA447() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A447), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A447, m0), 1);
		dcStructField(st, 'p', offsetof(struct A447, m1), 1);
		dcStructField(st, 'd', offsetof(struct A447, m2), 1);
		dcStructField(st, 'c', offsetof(struct A447, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilffsf} */
struct A448 { i m0; l m1; f m2; f m3; s m4; f m5; };
void f_cpA448(struct A448 *x, const struct A448 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA448(const struct A448 *x, const struct A448 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA448() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A448), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A448, m0), 1);
		dcStructField(st, 'l', offsetof(struct A448, m1), 1);
		dcStructField(st, 'f', offsetof(struct A448, m2), 1);
		dcStructField(st, 'f', offsetof(struct A448, m3), 1);
		dcStructField(st, 's', offsetof(struct A448, m4), 1);
		dcStructField(st, 'f', offsetof(struct A448, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlcfjdss} */
struct A449 { j m0; l m1; c m2; f m3; j m4; d m5; s m6; s m7; };
void f_cpA449(struct A449 *x, const struct A449 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA449(const struct A449 *x, const struct A449 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA449() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A449), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A449, m0), 1);
		dcStructField(st, 'l', offsetof(struct A449, m1), 1);
		dcStructField(st, 'c', offsetof(struct A449, m2), 1);
		dcStructField(st, 'f', offsetof(struct A449, m3), 1);
		dcStructField(st, 'j', offsetof(struct A449, m4), 1);
		dcStructField(st, 'd', offsetof(struct A449, m5), 1);
		dcStructField(st, 's', offsetof(struct A449, m6), 1);
		dcStructField(st, 's', offsetof(struct A449, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccfld{jlcfjdss}scpd} */
struct A450 { c m0; c m1; f m2; l m3; d m4; struct A449 m5; s m6; c m7; p m8; d m9; };
void f_cpA450(struct A450 *x, const struct A450 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA449(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA450(const struct A450 *x, const struct A450 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA449(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA450() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A450), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A450, m0), 1);
		dcStructField(st, 'c', offsetof(struct A450, m1), 1);
		dcStructField(st, 'f', offsetof(struct A450, m2), 1);
		dcStructField(st, 'l', offsetof(struct A450, m3), 1);
		dcStructField(st, 'd', offsetof(struct A450, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A450, m5), 1, f_touchdcstA449());
		dcStructField(st, 's', offsetof(struct A450, m6), 1);
		dcStructField(st, 'c', offsetof(struct A450, m7), 1);
		dcStructField(st, 'p', offsetof(struct A450, m8), 1);
		dcStructField(st, 'd', offsetof(struct A450, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jd} */
struct A451 { j m0; d m1; };
void f_cpA451(struct A451 *x, const struct A451 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA451(const struct A451 *x, const struct A451 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA451() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A451), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A451, m0), 1);
		dcStructField(st, 'd', offsetof(struct A451, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpcsidji} */
struct A452 { j m0; p m1; c m2; s m3; i m4; d m5; j m6; i m7; };
void f_cpA452(struct A452 *x, const struct A452 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA452(const struct A452 *x, const struct A452 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA452() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A452), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A452, m0), 1);
		dcStructField(st, 'p', offsetof(struct A452, m1), 1);
		dcStructField(st, 'c', offsetof(struct A452, m2), 1);
		dcStructField(st, 's', offsetof(struct A452, m3), 1);
		dcStructField(st, 'i', offsetof(struct A452, m4), 1);
		dcStructField(st, 'd', offsetof(struct A452, m5), 1);
		dcStructField(st, 'j', offsetof(struct A452, m6), 1);
		dcStructField(st, 'i', offsetof(struct A452, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lf} */
struct A453 { l m0; f m1; };
void f_cpA453(struct A453 *x, const struct A453 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA453(const struct A453 *x, const struct A453 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA453() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A453), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A453, m0), 1);
		dcStructField(st, 'f', offsetof(struct A453, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsspdid} */
struct A454 { f m0; s m1; s m2; p m3; d m4; i m5; d m6; };
void f_cpA454(struct A454 *x, const struct A454 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA454(const struct A454 *x, const struct A454 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA454() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A454), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A454, m0), 1);
		dcStructField(st, 's', offsetof(struct A454, m1), 1);
		dcStructField(st, 's', offsetof(struct A454, m2), 1);
		dcStructField(st, 'p', offsetof(struct A454, m3), 1);
		dcStructField(st, 'd', offsetof(struct A454, m4), 1);
		dcStructField(st, 'i', offsetof(struct A454, m5), 1);
		dcStructField(st, 'd', offsetof(struct A454, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilidifsjp} */
struct A455 { i m0; l m1; i m2; d m3; i m4; f m5; s m6; j m7; p m8; };
void f_cpA455(struct A455 *x, const struct A455 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA455(const struct A455 *x, const struct A455 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA455() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A455), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A455, m0), 1);
		dcStructField(st, 'l', offsetof(struct A455, m1), 1);
		dcStructField(st, 'i', offsetof(struct A455, m2), 1);
		dcStructField(st, 'd', offsetof(struct A455, m3), 1);
		dcStructField(st, 'i', offsetof(struct A455, m4), 1);
		dcStructField(st, 'f', offsetof(struct A455, m5), 1);
		dcStructField(st, 's', offsetof(struct A455, m6), 1);
		dcStructField(st, 'j', offsetof(struct A455, m7), 1);
		dcStructField(st, 'p', offsetof(struct A455, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sppffp} */
struct A456 { s m0; p m1; p m2; f m3; f m4; p m5; };
void f_cpA456(struct A456 *x, const struct A456 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA456(const struct A456 *x, const struct A456 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA456() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A456), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A456, m0), 1);
		dcStructField(st, 'p', offsetof(struct A456, m1), 1);
		dcStructField(st, 'p', offsetof(struct A456, m2), 1);
		dcStructField(st, 'f', offsetof(struct A456, m3), 1);
		dcStructField(st, 'f', offsetof(struct A456, m4), 1);
		dcStructField(st, 'p', offsetof(struct A456, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpdls} */
struct A457 { f m0; p m1; d m2; l m3; s m4; };
void f_cpA457(struct A457 *x, const struct A457 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA457(const struct A457 *x, const struct A457 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA457() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A457), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A457, m0), 1);
		dcStructField(st, 'p', offsetof(struct A457, m1), 1);
		dcStructField(st, 'd', offsetof(struct A457, m2), 1);
		dcStructField(st, 'l', offsetof(struct A457, m3), 1);
		dcStructField(st, 's', offsetof(struct A457, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifjdi} */
struct A458 { i m0; f m1; j m2; d m3; i m4; };
void f_cpA458(struct A458 *x, const struct A458 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA458(const struct A458 *x, const struct A458 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA458() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A458), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A458, m0), 1);
		dcStructField(st, 'f', offsetof(struct A458, m1), 1);
		dcStructField(st, 'j', offsetof(struct A458, m2), 1);
		dcStructField(st, 'd', offsetof(struct A458, m3), 1);
		dcStructField(st, 'i', offsetof(struct A458, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjf} */
struct A459 { j m0; j m1; f m2; };
void f_cpA459(struct A459 *x, const struct A459 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA459(const struct A459 *x, const struct A459 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA459() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A459), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A459, m0), 1);
		dcStructField(st, 'j', offsetof(struct A459, m1), 1);
		dcStructField(st, 'f', offsetof(struct A459, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dijs} */
struct A460 { d m0; i m1; j m2; s m3; };
void f_cpA460(struct A460 *x, const struct A460 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA460(const struct A460 *x, const struct A460 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA460() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A460), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A460, m0), 1);
		dcStructField(st, 'i', offsetof(struct A460, m1), 1);
		dcStructField(st, 'j', offsetof(struct A460, m2), 1);
		dcStructField(st, 's', offsetof(struct A460, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssjcfd{p}pfi} */
struct A461 { s m0; s m1; j m2; c m3; f m4; d m5; struct A119 m6; p m7; f m8; i m9; };
void f_cpA461(struct A461 *x, const struct A461 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA119(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA461(const struct A461 *x, const struct A461 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA119(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA461() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A461), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A461, m0), 1);
		dcStructField(st, 's', offsetof(struct A461, m1), 1);
		dcStructField(st, 'j', offsetof(struct A461, m2), 1);
		dcStructField(st, 'c', offsetof(struct A461, m3), 1);
		dcStructField(st, 'f', offsetof(struct A461, m4), 1);
		dcStructField(st, 'd', offsetof(struct A461, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A461, m6), 1, f_touchdcstA119());
		dcStructField(st, 'p', offsetof(struct A461, m7), 1);
		dcStructField(st, 'f', offsetof(struct A461, m8), 1);
		dcStructField(st, 'i', offsetof(struct A461, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sd{dijs}p{c}pc{ssjcfd{p}pfi}} */
struct A462 { s m0; d m1; struct A460 m2; p m3; struct A77 m4; p m5; c m6; struct A461 m7; };
void f_cpA462(struct A462 *x, const struct A462 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA460(&x->m2, &y->m2); x->m3 = y->m3; f_cpA77(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA461(&x->m7, &y->m7); };
int f_cmpA462(const struct A462 *x, const struct A462 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA460(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA77(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA461(&x->m7, &y->m7); };
DCstruct* f_touchdcstA462() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A462), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A462, m0), 1);
		dcStructField(st, 'd', offsetof(struct A462, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A462, m2), 1, f_touchdcstA460());
		dcStructField(st, 'p', offsetof(struct A462, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A462, m4), 1, f_touchdcstA77());
		dcStructField(st, 'p', offsetof(struct A462, m5), 1);
		dcStructField(st, 'c', offsetof(struct A462, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A462, m7), 1, f_touchdcstA461());
		dcCloseStruct(st);
	}
	return st;
};
/* {dcs} */
struct A463 { d m0; c m1; s m2; };
void f_cpA463(struct A463 *x, const struct A463 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA463(const struct A463 *x, const struct A463 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA463() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A463), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A463, m0), 1);
		dcStructField(st, 'c', offsetof(struct A463, m1), 1);
		dcStructField(st, 's', offsetof(struct A463, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ildili} */
struct A464 { i m0; l m1; d m2; i m3; l m4; i m5; };
void f_cpA464(struct A464 *x, const struct A464 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA464(const struct A464 *x, const struct A464 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA464() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A464), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A464, m0), 1);
		dcStructField(st, 'l', offsetof(struct A464, m1), 1);
		dcStructField(st, 'd', offsetof(struct A464, m2), 1);
		dcStructField(st, 'i', offsetof(struct A464, m3), 1);
		dcStructField(st, 'l', offsetof(struct A464, m4), 1);
		dcStructField(st, 'i', offsetof(struct A464, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpc} */
struct A465 { j m0; p m1; c m2; };
void f_cpA465(struct A465 *x, const struct A465 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA465(const struct A465 *x, const struct A465 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA465() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A465), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A465, m0), 1);
		dcStructField(st, 'p', offsetof(struct A465, m1), 1);
		dcStructField(st, 'c', offsetof(struct A465, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jljjcdilffpljdscj} */
struct A466 { j m0; l m1; j m2; j m3; c m4; d m5; i m6; l m7; f m8; f m9; p m10; l m11; j m12; d m13; s m14; c m15; j m16; };
void f_cpA466(struct A466 *x, const struct A466 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA466(const struct A466 *x, const struct A466 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA466() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A466), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A466, m0), 1);
		dcStructField(st, 'l', offsetof(struct A466, m1), 1);
		dcStructField(st, 'j', offsetof(struct A466, m2), 1);
		dcStructField(st, 'j', offsetof(struct A466, m3), 1);
		dcStructField(st, 'c', offsetof(struct A466, m4), 1);
		dcStructField(st, 'd', offsetof(struct A466, m5), 1);
		dcStructField(st, 'i', offsetof(struct A466, m6), 1);
		dcStructField(st, 'l', offsetof(struct A466, m7), 1);
		dcStructField(st, 'f', offsetof(struct A466, m8), 1);
		dcStructField(st, 'f', offsetof(struct A466, m9), 1);
		dcStructField(st, 'p', offsetof(struct A466, m10), 1);
		dcStructField(st, 'l', offsetof(struct A466, m11), 1);
		dcStructField(st, 'j', offsetof(struct A466, m12), 1);
		dcStructField(st, 'd', offsetof(struct A466, m13), 1);
		dcStructField(st, 's', offsetof(struct A466, m14), 1);
		dcStructField(st, 'c', offsetof(struct A466, m15), 1);
		dcStructField(st, 'j', offsetof(struct A466, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iscfdiic} */
struct A467 { i m0; s m1; c m2; f m3; d m4; i m5; i m6; c m7; };
void f_cpA467(struct A467 *x, const struct A467 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA467(const struct A467 *x, const struct A467 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA467() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A467), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A467, m0), 1);
		dcStructField(st, 's', offsetof(struct A467, m1), 1);
		dcStructField(st, 'c', offsetof(struct A467, m2), 1);
		dcStructField(st, 'f', offsetof(struct A467, m3), 1);
		dcStructField(st, 'd', offsetof(struct A467, m4), 1);
		dcStructField(st, 'i', offsetof(struct A467, m5), 1);
		dcStructField(st, 'i', offsetof(struct A467, m6), 1);
		dcStructField(st, 'c', offsetof(struct A467, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sl{ildili}dl{jpc}{jljjcdilffpljdscj}idiildcdisdclsl{iscfdiic}si} */
struct A468 { s m0; l m1; struct A464 m2; d m3; l m4; struct A465 m5; struct A466 m6; i m7; d m8; i m9; i m10; l m11; d m12; c m13; d m14; i m15; s m16; d m17; c m18; l m19; s m20; l m21; struct A467 m22; s m23; i m24; };
void f_cpA468(struct A468 *x, const struct A468 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA464(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA465(&x->m5, &y->m5); f_cpA466(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; f_cpA467(&x->m22, &y->m22); x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA468(const struct A468 *x, const struct A468 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA464(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA465(&x->m5, &y->m5) && f_cmpA466(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && f_cmpA467(&x->m22, &y->m22) && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA468() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A468), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A468, m0), 1);
		dcStructField(st, 'l', offsetof(struct A468, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A468, m2), 1, f_touchdcstA464());
		dcStructField(st, 'd', offsetof(struct A468, m3), 1);
		dcStructField(st, 'l', offsetof(struct A468, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A468, m5), 1, f_touchdcstA465());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A468, m6), 1, f_touchdcstA466());
		dcStructField(st, 'i', offsetof(struct A468, m7), 1);
		dcStructField(st, 'd', offsetof(struct A468, m8), 1);
		dcStructField(st, 'i', offsetof(struct A468, m9), 1);
		dcStructField(st, 'i', offsetof(struct A468, m10), 1);
		dcStructField(st, 'l', offsetof(struct A468, m11), 1);
		dcStructField(st, 'd', offsetof(struct A468, m12), 1);
		dcStructField(st, 'c', offsetof(struct A468, m13), 1);
		dcStructField(st, 'd', offsetof(struct A468, m14), 1);
		dcStructField(st, 'i', offsetof(struct A468, m15), 1);
		dcStructField(st, 's', offsetof(struct A468, m16), 1);
		dcStructField(st, 'd', offsetof(struct A468, m17), 1);
		dcStructField(st, 'c', offsetof(struct A468, m18), 1);
		dcStructField(st, 'l', offsetof(struct A468, m19), 1);
		dcStructField(st, 's', offsetof(struct A468, m20), 1);
		dcStructField(st, 'l', offsetof(struct A468, m21), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A468, m22), 1, f_touchdcstA467());
		dcStructField(st, 's', offsetof(struct A468, m23), 1);
		dcStructField(st, 'i', offsetof(struct A468, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fs{s}} */
struct A469 { f m0; s m1; struct A27 m2; };
void f_cpA469(struct A469 *x, const struct A469 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA27(&x->m2, &y->m2); };
int f_cmpA469(const struct A469 *x, const struct A469 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA27(&x->m2, &y->m2); };
DCstruct* f_touchdcstA469() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A469), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A469, m0), 1);
		dcStructField(st, 's', offsetof(struct A469, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A469, m2), 1, f_touchdcstA27());
		dcCloseStruct(st);
	}
	return st;
};
/* {jcfldlccii} */
struct A470 { j m0; c m1; f m2; l m3; d m4; l m5; c m6; c m7; i m8; i m9; };
void f_cpA470(struct A470 *x, const struct A470 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA470(const struct A470 *x, const struct A470 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA470() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A470), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A470, m0), 1);
		dcStructField(st, 'c', offsetof(struct A470, m1), 1);
		dcStructField(st, 'f', offsetof(struct A470, m2), 1);
		dcStructField(st, 'l', offsetof(struct A470, m3), 1);
		dcStructField(st, 'd', offsetof(struct A470, m4), 1);
		dcStructField(st, 'l', offsetof(struct A470, m5), 1);
		dcStructField(st, 'c', offsetof(struct A470, m6), 1);
		dcStructField(st, 'c', offsetof(struct A470, m7), 1);
		dcStructField(st, 'i', offsetof(struct A470, m8), 1);
		dcStructField(st, 'i', offsetof(struct A470, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdcific} */
struct A471 { j m0; d m1; c m2; i m3; f m4; i m5; c m6; };
void f_cpA471(struct A471 *x, const struct A471 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA471(const struct A471 *x, const struct A471 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA471() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A471), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A471, m0), 1);
		dcStructField(st, 'd', offsetof(struct A471, m1), 1);
		dcStructField(st, 'c', offsetof(struct A471, m2), 1);
		dcStructField(st, 'i', offsetof(struct A471, m3), 1);
		dcStructField(st, 'f', offsetof(struct A471, m4), 1);
		dcStructField(st, 'i', offsetof(struct A471, m5), 1);
		dcStructField(st, 'c', offsetof(struct A471, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjpicsijjccjljldl} */
struct A472 { s m0; j m1; p m2; i m3; c m4; s m5; i m6; j m7; j m8; c m9; c m10; j m11; l m12; j m13; l m14; d m15; l m16; };
void f_cpA472(struct A472 *x, const struct A472 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA472(const struct A472 *x, const struct A472 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA472() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A472), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A472, m0), 1);
		dcStructField(st, 'j', offsetof(struct A472, m1), 1);
		dcStructField(st, 'p', offsetof(struct A472, m2), 1);
		dcStructField(st, 'i', offsetof(struct A472, m3), 1);
		dcStructField(st, 'c', offsetof(struct A472, m4), 1);
		dcStructField(st, 's', offsetof(struct A472, m5), 1);
		dcStructField(st, 'i', offsetof(struct A472, m6), 1);
		dcStructField(st, 'j', offsetof(struct A472, m7), 1);
		dcStructField(st, 'j', offsetof(struct A472, m8), 1);
		dcStructField(st, 'c', offsetof(struct A472, m9), 1);
		dcStructField(st, 'c', offsetof(struct A472, m10), 1);
		dcStructField(st, 'j', offsetof(struct A472, m11), 1);
		dcStructField(st, 'l', offsetof(struct A472, m12), 1);
		dcStructField(st, 'j', offsetof(struct A472, m13), 1);
		dcStructField(st, 'l', offsetof(struct A472, m14), 1);
		dcStructField(st, 'd', offsetof(struct A472, m15), 1);
		dcStructField(st, 'l', offsetof(struct A472, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d{sjpicsijjccjljldl}} */
struct A473 { d m0; struct A472 m1; };
void f_cpA473(struct A473 *x, const struct A473 *y) { x->m0 = y->m0; f_cpA472(&x->m1, &y->m1); };
int f_cmpA473(const struct A473 *x, const struct A473 *y) { return x->m0 == y->m0 && f_cmpA472(&x->m1, &y->m1); };
DCstruct* f_touchdcstA473() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A473), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A473, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A473, m1), 1, f_touchdcstA472());
		dcCloseStruct(st);
	}
	return st;
};
/* {lsfj} */
struct A474 { l m0; s m1; f m2; j m3; };
void f_cpA474(struct A474 *x, const struct A474 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA474(const struct A474 *x, const struct A474 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA474() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A474), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A474, m0), 1);
		dcStructField(st, 's', offsetof(struct A474, m1), 1);
		dcStructField(st, 'f', offsetof(struct A474, m2), 1);
		dcStructField(st, 'j', offsetof(struct A474, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfjffpp} */
struct A475 { l m0; f m1; j m2; f m3; f m4; p m5; p m6; };
void f_cpA475(struct A475 *x, const struct A475 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA475(const struct A475 *x, const struct A475 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA475() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A475), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A475, m0), 1);
		dcStructField(st, 'f', offsetof(struct A475, m1), 1);
		dcStructField(st, 'j', offsetof(struct A475, m2), 1);
		dcStructField(st, 'f', offsetof(struct A475, m3), 1);
		dcStructField(st, 'f', offsetof(struct A475, m4), 1);
		dcStructField(st, 'p', offsetof(struct A475, m5), 1);
		dcStructField(st, 'p', offsetof(struct A475, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{lsfj}ji{lfjffpp}} */
struct A476 { struct A474 m0; j m1; i m2; struct A475 m3; };
void f_cpA476(struct A476 *x, const struct A476 *y) { f_cpA474(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA475(&x->m3, &y->m3); };
int f_cmpA476(const struct A476 *x, const struct A476 *y) { return f_cmpA474(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA475(&x->m3, &y->m3); };
DCstruct* f_touchdcstA476() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A476), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A476, m0), 1, f_touchdcstA474());
		dcStructField(st, 'j', offsetof(struct A476, m1), 1);
		dcStructField(st, 'i', offsetof(struct A476, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A476, m3), 1, f_touchdcstA475());
		dcCloseStruct(st);
	}
	return st;
};
/* {{d{sjpicsijjccjljldl}}{{lsfj}ji{lfjffpp}}} */
struct A477 { struct A473 m0; struct A476 m1; };
void f_cpA477(struct A477 *x, const struct A477 *y) { f_cpA473(&x->m0, &y->m0); f_cpA476(&x->m1, &y->m1); };
int f_cmpA477(const struct A477 *x, const struct A477 *y) { return f_cmpA473(&x->m0, &y->m0) && f_cmpA476(&x->m1, &y->m1); };
DCstruct* f_touchdcstA477() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A477), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A477, m0), 1, f_touchdcstA473());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A477, m1), 1, f_touchdcstA476());
		dcCloseStruct(st);
	}
	return st;
};
/* {lflpidppcjcfddjijicisclfjppjcjjl} */
struct A478 { l m0; f m1; l m2; p m3; i m4; d m5; p m6; p m7; c m8; j m9; c m10; f m11; d m12; d m13; j m14; i m15; j m16; i m17; c m18; i m19; s m20; c m21; l m22; f m23; j m24; p m25; p m26; j m27; c m28; j m29; j m30; l m31; };
void f_cpA478(struct A478 *x, const struct A478 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; };
int f_cmpA478(const struct A478 *x, const struct A478 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31; };
DCstruct* f_touchdcstA478() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(32, sizeof(struct A478), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A478, m0), 1);
		dcStructField(st, 'f', offsetof(struct A478, m1), 1);
		dcStructField(st, 'l', offsetof(struct A478, m2), 1);
		dcStructField(st, 'p', offsetof(struct A478, m3), 1);
		dcStructField(st, 'i', offsetof(struct A478, m4), 1);
		dcStructField(st, 'd', offsetof(struct A478, m5), 1);
		dcStructField(st, 'p', offsetof(struct A478, m6), 1);
		dcStructField(st, 'p', offsetof(struct A478, m7), 1);
		dcStructField(st, 'c', offsetof(struct A478, m8), 1);
		dcStructField(st, 'j', offsetof(struct A478, m9), 1);
		dcStructField(st, 'c', offsetof(struct A478, m10), 1);
		dcStructField(st, 'f', offsetof(struct A478, m11), 1);
		dcStructField(st, 'd', offsetof(struct A478, m12), 1);
		dcStructField(st, 'd', offsetof(struct A478, m13), 1);
		dcStructField(st, 'j', offsetof(struct A478, m14), 1);
		dcStructField(st, 'i', offsetof(struct A478, m15), 1);
		dcStructField(st, 'j', offsetof(struct A478, m16), 1);
		dcStructField(st, 'i', offsetof(struct A478, m17), 1);
		dcStructField(st, 'c', offsetof(struct A478, m18), 1);
		dcStructField(st, 'i', offsetof(struct A478, m19), 1);
		dcStructField(st, 's', offsetof(struct A478, m20), 1);
		dcStructField(st, 'c', offsetof(struct A478, m21), 1);
		dcStructField(st, 'l', offsetof(struct A478, m22), 1);
		dcStructField(st, 'f', offsetof(struct A478, m23), 1);
		dcStructField(st, 'j', offsetof(struct A478, m24), 1);
		dcStructField(st, 'p', offsetof(struct A478, m25), 1);
		dcStructField(st, 'p', offsetof(struct A478, m26), 1);
		dcStructField(st, 'j', offsetof(struct A478, m27), 1);
		dcStructField(st, 'c', offsetof(struct A478, m28), 1);
		dcStructField(st, 'j', offsetof(struct A478, m29), 1);
		dcStructField(st, 'j', offsetof(struct A478, m30), 1);
		dcStructField(st, 'l', offsetof(struct A478, m31), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{d}s} */
struct A479 { struct A33 m0; s m1; };
void f_cpA479(struct A479 *x, const struct A479 *y) { f_cpA33(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA479(const struct A479 *x, const struct A479 *y) { return f_cmpA33(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA479() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A479), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A479, m0), 1, f_touchdcstA33());
		dcStructField(st, 's', offsetof(struct A479, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ippp{{d}s}} */
struct A480 { i m0; p m1; p m2; p m3; struct A479 m4; };
void f_cpA480(struct A480 *x, const struct A480 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA479(&x->m4, &y->m4); };
int f_cmpA480(const struct A480 *x, const struct A480 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA479(&x->m4, &y->m4); };
DCstruct* f_touchdcstA480() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A480), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A480, m0), 1);
		dcStructField(st, 'p', offsetof(struct A480, m1), 1);
		dcStructField(st, 'p', offsetof(struct A480, m2), 1);
		dcStructField(st, 'p', offsetof(struct A480, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A480, m4), 1, f_touchdcstA479());
		dcCloseStruct(st);
	}
	return st;
};
/* {jifjlcslcidd} */
struct A481 { j m0; i m1; f m2; j m3; l m4; c m5; s m6; l m7; c m8; i m9; d m10; d m11; };
void f_cpA481(struct A481 *x, const struct A481 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA481(const struct A481 *x, const struct A481 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA481() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A481), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A481, m0), 1);
		dcStructField(st, 'i', offsetof(struct A481, m1), 1);
		dcStructField(st, 'f', offsetof(struct A481, m2), 1);
		dcStructField(st, 'j', offsetof(struct A481, m3), 1);
		dcStructField(st, 'l', offsetof(struct A481, m4), 1);
		dcStructField(st, 'c', offsetof(struct A481, m5), 1);
		dcStructField(st, 's', offsetof(struct A481, m6), 1);
		dcStructField(st, 'l', offsetof(struct A481, m7), 1);
		dcStructField(st, 'c', offsetof(struct A481, m8), 1);
		dcStructField(st, 'i', offsetof(struct A481, m9), 1);
		dcStructField(st, 'd', offsetof(struct A481, m10), 1);
		dcStructField(st, 'd', offsetof(struct A481, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psldl} */
struct A482 { p m0; s m1; l m2; d m3; l m4; };
void f_cpA482(struct A482 *x, const struct A482 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA482(const struct A482 *x, const struct A482 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA482() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A482), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A482, m0), 1);
		dcStructField(st, 's', offsetof(struct A482, m1), 1);
		dcStructField(st, 'l', offsetof(struct A482, m2), 1);
		dcStructField(st, 'd', offsetof(struct A482, m3), 1);
		dcStructField(st, 'l', offsetof(struct A482, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lcscifddpcpdlipii} */
struct A483 { l m0; c m1; s m2; c m3; i m4; f m5; d m6; d m7; p m8; c m9; p m10; d m11; l m12; i m13; p m14; i m15; i m16; };
void f_cpA483(struct A483 *x, const struct A483 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA483(const struct A483 *x, const struct A483 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA483() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A483), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A483, m0), 1);
		dcStructField(st, 'c', offsetof(struct A483, m1), 1);
		dcStructField(st, 's', offsetof(struct A483, m2), 1);
		dcStructField(st, 'c', offsetof(struct A483, m3), 1);
		dcStructField(st, 'i', offsetof(struct A483, m4), 1);
		dcStructField(st, 'f', offsetof(struct A483, m5), 1);
		dcStructField(st, 'd', offsetof(struct A483, m6), 1);
		dcStructField(st, 'd', offsetof(struct A483, m7), 1);
		dcStructField(st, 'p', offsetof(struct A483, m8), 1);
		dcStructField(st, 'c', offsetof(struct A483, m9), 1);
		dcStructField(st, 'p', offsetof(struct A483, m10), 1);
		dcStructField(st, 'd', offsetof(struct A483, m11), 1);
		dcStructField(st, 'l', offsetof(struct A483, m12), 1);
		dcStructField(st, 'i', offsetof(struct A483, m13), 1);
		dcStructField(st, 'p', offsetof(struct A483, m14), 1);
		dcStructField(st, 'i', offsetof(struct A483, m15), 1);
		dcStructField(st, 'i', offsetof(struct A483, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csspijldlffifjd} */
struct A484 { c m0; s m1; s m2; p m3; i m4; j m5; l m6; d m7; l m8; f m9; f m10; i m11; f m12; j m13; d m14; };
void f_cpA484(struct A484 *x, const struct A484 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA484(const struct A484 *x, const struct A484 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA484() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A484), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A484, m0), 1);
		dcStructField(st, 's', offsetof(struct A484, m1), 1);
		dcStructField(st, 's', offsetof(struct A484, m2), 1);
		dcStructField(st, 'p', offsetof(struct A484, m3), 1);
		dcStructField(st, 'i', offsetof(struct A484, m4), 1);
		dcStructField(st, 'j', offsetof(struct A484, m5), 1);
		dcStructField(st, 'l', offsetof(struct A484, m6), 1);
		dcStructField(st, 'd', offsetof(struct A484, m7), 1);
		dcStructField(st, 'l', offsetof(struct A484, m8), 1);
		dcStructField(st, 'f', offsetof(struct A484, m9), 1);
		dcStructField(st, 'f', offsetof(struct A484, m10), 1);
		dcStructField(st, 'i', offsetof(struct A484, m11), 1);
		dcStructField(st, 'f', offsetof(struct A484, m12), 1);
		dcStructField(st, 'j', offsetof(struct A484, m13), 1);
		dcStructField(st, 'd', offsetof(struct A484, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfilsi{lcscifddpcpdlipii}jfjpp{csspijldlffifjd}psssjjcfcjipijdj} */
struct A485 { p m0; f m1; i m2; l m3; s m4; i m5; struct A483 m6; j m7; f m8; j m9; p m10; p m11; struct A484 m12; p m13; s m14; s m15; s m16; j m17; j m18; c m19; f m20; c m21; j m22; i m23; p m24; i m25; j m26; d m27; j m28; };
void f_cpA485(struct A485 *x, const struct A485 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA483(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA484(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA485(const struct A485 *x, const struct A485 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA483(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA484(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA485() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(struct A485), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A485, m0), 1);
		dcStructField(st, 'f', offsetof(struct A485, m1), 1);
		dcStructField(st, 'i', offsetof(struct A485, m2), 1);
		dcStructField(st, 'l', offsetof(struct A485, m3), 1);
		dcStructField(st, 's', offsetof(struct A485, m4), 1);
		dcStructField(st, 'i', offsetof(struct A485, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A485, m6), 1, f_touchdcstA483());
		dcStructField(st, 'j', offsetof(struct A485, m7), 1);
		dcStructField(st, 'f', offsetof(struct A485, m8), 1);
		dcStructField(st, 'j', offsetof(struct A485, m9), 1);
		dcStructField(st, 'p', offsetof(struct A485, m10), 1);
		dcStructField(st, 'p', offsetof(struct A485, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A485, m12), 1, f_touchdcstA484());
		dcStructField(st, 'p', offsetof(struct A485, m13), 1);
		dcStructField(st, 's', offsetof(struct A485, m14), 1);
		dcStructField(st, 's', offsetof(struct A485, m15), 1);
		dcStructField(st, 's', offsetof(struct A485, m16), 1);
		dcStructField(st, 'j', offsetof(struct A485, m17), 1);
		dcStructField(st, 'j', offsetof(struct A485, m18), 1);
		dcStructField(st, 'c', offsetof(struct A485, m19), 1);
		dcStructField(st, 'f', offsetof(struct A485, m20), 1);
		dcStructField(st, 'c', offsetof(struct A485, m21), 1);
		dcStructField(st, 'j', offsetof(struct A485, m22), 1);
		dcStructField(st, 'i', offsetof(struct A485, m23), 1);
		dcStructField(st, 'p', offsetof(struct A485, m24), 1);
		dcStructField(st, 'i', offsetof(struct A485, m25), 1);
		dcStructField(st, 'j', offsetof(struct A485, m26), 1);
		dcStructField(st, 'd', offsetof(struct A485, m27), 1);
		dcStructField(st, 'j', offsetof(struct A485, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iis} */
struct A486 { i m0; i m1; s m2; };
void f_cpA486(struct A486 *x, const struct A486 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA486(const struct A486 *x, const struct A486 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA486() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A486), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A486, m0), 1);
		dcStructField(st, 'i', offsetof(struct A486, m1), 1);
		dcStructField(st, 's', offsetof(struct A486, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdiljpcdcpsdslplfpf} */
struct A487 { s m0; d m1; i m2; l m3; j m4; p m5; c m6; d m7; c m8; p m9; s m10; d m11; s m12; l m13; p m14; l m15; f m16; p m17; f m18; };
void f_cpA487(struct A487 *x, const struct A487 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA487(const struct A487 *x, const struct A487 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA487() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A487), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A487, m0), 1);
		dcStructField(st, 'd', offsetof(struct A487, m1), 1);
		dcStructField(st, 'i', offsetof(struct A487, m2), 1);
		dcStructField(st, 'l', offsetof(struct A487, m3), 1);
		dcStructField(st, 'j', offsetof(struct A487, m4), 1);
		dcStructField(st, 'p', offsetof(struct A487, m5), 1);
		dcStructField(st, 'c', offsetof(struct A487, m6), 1);
		dcStructField(st, 'd', offsetof(struct A487, m7), 1);
		dcStructField(st, 'c', offsetof(struct A487, m8), 1);
		dcStructField(st, 'p', offsetof(struct A487, m9), 1);
		dcStructField(st, 's', offsetof(struct A487, m10), 1);
		dcStructField(st, 'd', offsetof(struct A487, m11), 1);
		dcStructField(st, 's', offsetof(struct A487, m12), 1);
		dcStructField(st, 'l', offsetof(struct A487, m13), 1);
		dcStructField(st, 'p', offsetof(struct A487, m14), 1);
		dcStructField(st, 'l', offsetof(struct A487, m15), 1);
		dcStructField(st, 'f', offsetof(struct A487, m16), 1);
		dcStructField(st, 'p', offsetof(struct A487, m17), 1);
		dcStructField(st, 'f', offsetof(struct A487, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdsdcfpclicclpjl} */
struct A488 { j m0; d m1; s m2; d m3; c m4; f m5; p m6; c m7; l m8; i m9; c m10; c m11; l m12; p m13; j m14; l m15; };
void f_cpA488(struct A488 *x, const struct A488 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA488(const struct A488 *x, const struct A488 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA488() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A488), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A488, m0), 1);
		dcStructField(st, 'd', offsetof(struct A488, m1), 1);
		dcStructField(st, 's', offsetof(struct A488, m2), 1);
		dcStructField(st, 'd', offsetof(struct A488, m3), 1);
		dcStructField(st, 'c', offsetof(struct A488, m4), 1);
		dcStructField(st, 'f', offsetof(struct A488, m5), 1);
		dcStructField(st, 'p', offsetof(struct A488, m6), 1);
		dcStructField(st, 'c', offsetof(struct A488, m7), 1);
		dcStructField(st, 'l', offsetof(struct A488, m8), 1);
		dcStructField(st, 'i', offsetof(struct A488, m9), 1);
		dcStructField(st, 'c', offsetof(struct A488, m10), 1);
		dcStructField(st, 'c', offsetof(struct A488, m11), 1);
		dcStructField(st, 'l', offsetof(struct A488, m12), 1);
		dcStructField(st, 'p', offsetof(struct A488, m13), 1);
		dcStructField(st, 'j', offsetof(struct A488, m14), 1);
		dcStructField(st, 'l', offsetof(struct A488, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d{sdiljpcdcpsdslplfpf}idjcsc{jdsdcfpclicclpjl}} */
struct A489 { d m0; struct A487 m1; i m2; d m3; j m4; c m5; s m6; c m7; struct A488 m8; };
void f_cpA489(struct A489 *x, const struct A489 *y) { x->m0 = y->m0; f_cpA487(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA488(&x->m8, &y->m8); };
int f_cmpA489(const struct A489 *x, const struct A489 *y) { return x->m0 == y->m0 && f_cmpA487(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA488(&x->m8, &y->m8); };
DCstruct* f_touchdcstA489() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A489), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A489, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A489, m1), 1, f_touchdcstA487());
		dcStructField(st, 'i', offsetof(struct A489, m2), 1);
		dcStructField(st, 'd', offsetof(struct A489, m3), 1);
		dcStructField(st, 'j', offsetof(struct A489, m4), 1);
		dcStructField(st, 'c', offsetof(struct A489, m5), 1);
		dcStructField(st, 's', offsetof(struct A489, m6), 1);
		dcStructField(st, 'c', offsetof(struct A489, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A489, m8), 1, f_touchdcstA488());
		dcCloseStruct(st);
	}
	return st;
};
/* {dssisdfl} */
struct A490 { d m0; s m1; s m2; i m3; s m4; d m5; f m6; l m7; };
void f_cpA490(struct A490 *x, const struct A490 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA490(const struct A490 *x, const struct A490 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA490() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A490), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A490, m0), 1);
		dcStructField(st, 's', offsetof(struct A490, m1), 1);
		dcStructField(st, 's', offsetof(struct A490, m2), 1);
		dcStructField(st, 'i', offsetof(struct A490, m3), 1);
		dcStructField(st, 's', offsetof(struct A490, m4), 1);
		dcStructField(st, 'd', offsetof(struct A490, m5), 1);
		dcStructField(st, 'f', offsetof(struct A490, m6), 1);
		dcStructField(st, 'l', offsetof(struct A490, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldfjdlsicdlljiisjpilllfsjjpjsd} */
struct A491 { l m0; d m1; f m2; j m3; d m4; l m5; s m6; i m7; c m8; d m9; l m10; l m11; j m12; i m13; i m14; s m15; j m16; p m17; i m18; l m19; l m20; l m21; f m22; s m23; j m24; j m25; p m26; j m27; s m28; d m29; };
void f_cpA491(struct A491 *x, const struct A491 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA491(const struct A491 *x, const struct A491 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA491() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A491), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A491, m0), 1);
		dcStructField(st, 'd', offsetof(struct A491, m1), 1);
		dcStructField(st, 'f', offsetof(struct A491, m2), 1);
		dcStructField(st, 'j', offsetof(struct A491, m3), 1);
		dcStructField(st, 'd', offsetof(struct A491, m4), 1);
		dcStructField(st, 'l', offsetof(struct A491, m5), 1);
		dcStructField(st, 's', offsetof(struct A491, m6), 1);
		dcStructField(st, 'i', offsetof(struct A491, m7), 1);
		dcStructField(st, 'c', offsetof(struct A491, m8), 1);
		dcStructField(st, 'd', offsetof(struct A491, m9), 1);
		dcStructField(st, 'l', offsetof(struct A491, m10), 1);
		dcStructField(st, 'l', offsetof(struct A491, m11), 1);
		dcStructField(st, 'j', offsetof(struct A491, m12), 1);
		dcStructField(st, 'i', offsetof(struct A491, m13), 1);
		dcStructField(st, 'i', offsetof(struct A491, m14), 1);
		dcStructField(st, 's', offsetof(struct A491, m15), 1);
		dcStructField(st, 'j', offsetof(struct A491, m16), 1);
		dcStructField(st, 'p', offsetof(struct A491, m17), 1);
		dcStructField(st, 'i', offsetof(struct A491, m18), 1);
		dcStructField(st, 'l', offsetof(struct A491, m19), 1);
		dcStructField(st, 'l', offsetof(struct A491, m20), 1);
		dcStructField(st, 'l', offsetof(struct A491, m21), 1);
		dcStructField(st, 'f', offsetof(struct A491, m22), 1);
		dcStructField(st, 's', offsetof(struct A491, m23), 1);
		dcStructField(st, 'j', offsetof(struct A491, m24), 1);
		dcStructField(st, 'j', offsetof(struct A491, m25), 1);
		dcStructField(st, 'p', offsetof(struct A491, m26), 1);
		dcStructField(st, 'j', offsetof(struct A491, m27), 1);
		dcStructField(st, 's', offsetof(struct A491, m28), 1);
		dcStructField(st, 'd', offsetof(struct A491, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lslddcldlljfcfd} */
struct A492 { l m0; s m1; l m2; d m3; d m4; c m5; l m6; d m7; l m8; l m9; j m10; f m11; c m12; f m13; d m14; };
void f_cpA492(struct A492 *x, const struct A492 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA492(const struct A492 *x, const struct A492 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA492() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A492), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A492, m0), 1);
		dcStructField(st, 's', offsetof(struct A492, m1), 1);
		dcStructField(st, 'l', offsetof(struct A492, m2), 1);
		dcStructField(st, 'd', offsetof(struct A492, m3), 1);
		dcStructField(st, 'd', offsetof(struct A492, m4), 1);
		dcStructField(st, 'c', offsetof(struct A492, m5), 1);
		dcStructField(st, 'l', offsetof(struct A492, m6), 1);
		dcStructField(st, 'd', offsetof(struct A492, m7), 1);
		dcStructField(st, 'l', offsetof(struct A492, m8), 1);
		dcStructField(st, 'l', offsetof(struct A492, m9), 1);
		dcStructField(st, 'j', offsetof(struct A492, m10), 1);
		dcStructField(st, 'f', offsetof(struct A492, m11), 1);
		dcStructField(st, 'c', offsetof(struct A492, m12), 1);
		dcStructField(st, 'f', offsetof(struct A492, m13), 1);
		dcStructField(st, 'd', offsetof(struct A492, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccpisiillcsfcjjspsld} */
struct A493 { c m0; c m1; p m2; i m3; s m4; i m5; i m6; l m7; l m8; c m9; s m10; f m11; c m12; j m13; j m14; s m15; p m16; s m17; l m18; d m19; };
void f_cpA493(struct A493 *x, const struct A493 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA493(const struct A493 *x, const struct A493 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA493() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A493), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A493, m0), 1);
		dcStructField(st, 'c', offsetof(struct A493, m1), 1);
		dcStructField(st, 'p', offsetof(struct A493, m2), 1);
		dcStructField(st, 'i', offsetof(struct A493, m3), 1);
		dcStructField(st, 's', offsetof(struct A493, m4), 1);
		dcStructField(st, 'i', offsetof(struct A493, m5), 1);
		dcStructField(st, 'i', offsetof(struct A493, m6), 1);
		dcStructField(st, 'l', offsetof(struct A493, m7), 1);
		dcStructField(st, 'l', offsetof(struct A493, m8), 1);
		dcStructField(st, 'c', offsetof(struct A493, m9), 1);
		dcStructField(st, 's', offsetof(struct A493, m10), 1);
		dcStructField(st, 'f', offsetof(struct A493, m11), 1);
		dcStructField(st, 'c', offsetof(struct A493, m12), 1);
		dcStructField(st, 'j', offsetof(struct A493, m13), 1);
		dcStructField(st, 'j', offsetof(struct A493, m14), 1);
		dcStructField(st, 's', offsetof(struct A493, m15), 1);
		dcStructField(st, 'p', offsetof(struct A493, m16), 1);
		dcStructField(st, 's', offsetof(struct A493, m17), 1);
		dcStructField(st, 'l', offsetof(struct A493, m18), 1);
		dcStructField(st, 'd', offsetof(struct A493, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dddpfdfi} */
struct A494 { d m0; d m1; d m2; p m3; f m4; d m5; f m6; i m7; };
void f_cpA494(struct A494 *x, const struct A494 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA494(const struct A494 *x, const struct A494 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA494() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A494), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A494, m0), 1);
		dcStructField(st, 'd', offsetof(struct A494, m1), 1);
		dcStructField(st, 'd', offsetof(struct A494, m2), 1);
		dcStructField(st, 'p', offsetof(struct A494, m3), 1);
		dcStructField(st, 'f', offsetof(struct A494, m4), 1);
		dcStructField(st, 'd', offsetof(struct A494, m5), 1);
		dcStructField(st, 'f', offsetof(struct A494, m6), 1);
		dcStructField(st, 'i', offsetof(struct A494, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssc} */
struct A495 { s m0; s m1; c m2; };
void f_cpA495(struct A495 *x, const struct A495 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA495(const struct A495 *x, const struct A495 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA495() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A495), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A495, m0), 1);
		dcStructField(st, 's', offsetof(struct A495, m1), 1);
		dcStructField(st, 'c', offsetof(struct A495, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d{ccpisiillcsfcjjspsld}{dddpfdfi}{ssc}ppcdi} */
struct A496 { d m0; struct A493 m1; struct A494 m2; struct A495 m3; p m4; p m5; c m6; d m7; i m8; };
void f_cpA496(struct A496 *x, const struct A496 *y) { x->m0 = y->m0; f_cpA493(&x->m1, &y->m1); f_cpA494(&x->m2, &y->m2); f_cpA495(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA496(const struct A496 *x, const struct A496 *y) { return x->m0 == y->m0 && f_cmpA493(&x->m1, &y->m1) && f_cmpA494(&x->m2, &y->m2) && f_cmpA495(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA496() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A496), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A496, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A496, m1), 1, f_touchdcstA493());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A496, m2), 1, f_touchdcstA494());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A496, m3), 1, f_touchdcstA495());
		dcStructField(st, 'p', offsetof(struct A496, m4), 1);
		dcStructField(st, 'p', offsetof(struct A496, m5), 1);
		dcStructField(st, 'c', offsetof(struct A496, m6), 1);
		dcStructField(st, 'd', offsetof(struct A496, m7), 1);
		dcStructField(st, 'i', offsetof(struct A496, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{d{ccpisiillcsfcjjspsld}{dddpfdfi}{ssc}ppcdi}dpi} */
struct A497 { struct A496 m0; d m1; p m2; i m3; };
void f_cpA497(struct A497 *x, const struct A497 *y) { f_cpA496(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA497(const struct A497 *x, const struct A497 *y) { return f_cmpA496(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA497() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A497), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A497, m0), 1, f_touchdcstA496());
		dcStructField(st, 'd', offsetof(struct A497, m1), 1);
		dcStructField(st, 'p', offsetof(struct A497, m2), 1);
		dcStructField(st, 'i', offsetof(struct A497, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dldplippsippisfjcspjsspd} */
struct A498 { d m0; l m1; d m2; p m3; l m4; i m5; p m6; p m7; s m8; i m9; p m10; p m11; i m12; s m13; f m14; j m15; c m16; s m17; p m18; j m19; s m20; s m21; p m22; d m23; };
void f_cpA498(struct A498 *x, const struct A498 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA498(const struct A498 *x, const struct A498 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA498() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A498), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A498, m0), 1);
		dcStructField(st, 'l', offsetof(struct A498, m1), 1);
		dcStructField(st, 'd', offsetof(struct A498, m2), 1);
		dcStructField(st, 'p', offsetof(struct A498, m3), 1);
		dcStructField(st, 'l', offsetof(struct A498, m4), 1);
		dcStructField(st, 'i', offsetof(struct A498, m5), 1);
		dcStructField(st, 'p', offsetof(struct A498, m6), 1);
		dcStructField(st, 'p', offsetof(struct A498, m7), 1);
		dcStructField(st, 's', offsetof(struct A498, m8), 1);
		dcStructField(st, 'i', offsetof(struct A498, m9), 1);
		dcStructField(st, 'p', offsetof(struct A498, m10), 1);
		dcStructField(st, 'p', offsetof(struct A498, m11), 1);
		dcStructField(st, 'i', offsetof(struct A498, m12), 1);
		dcStructField(st, 's', offsetof(struct A498, m13), 1);
		dcStructField(st, 'f', offsetof(struct A498, m14), 1);
		dcStructField(st, 'j', offsetof(struct A498, m15), 1);
		dcStructField(st, 'c', offsetof(struct A498, m16), 1);
		dcStructField(st, 's', offsetof(struct A498, m17), 1);
		dcStructField(st, 'p', offsetof(struct A498, m18), 1);
		dcStructField(st, 'j', offsetof(struct A498, m19), 1);
		dcStructField(st, 's', offsetof(struct A498, m20), 1);
		dcStructField(st, 's', offsetof(struct A498, m21), 1);
		dcStructField(st, 'p', offsetof(struct A498, m22), 1);
		dcStructField(st, 'd', offsetof(struct A498, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isp{dldplippsippisfjcspjsspd}c} */
struct A499 { i m0; s m1; p m2; struct A498 m3; c m4; };
void f_cpA499(struct A499 *x, const struct A499 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA498(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA499(const struct A499 *x, const struct A499 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA498(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA499() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A499), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A499, m0), 1);
		dcStructField(st, 's', offsetof(struct A499, m1), 1);
		dcStructField(st, 'p', offsetof(struct A499, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A499, m3), 1, f_touchdcstA498());
		dcStructField(st, 'c', offsetof(struct A499, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijl} */
struct A500 { i m0; j m1; l m2; };
void f_cpA500(struct A500 *x, const struct A500 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA500(const struct A500 *x, const struct A500 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA500() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A500), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A500, m0), 1);
		dcStructField(st, 'j', offsetof(struct A500, m1), 1);
		dcStructField(st, 'l', offsetof(struct A500, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pssppdps} */
struct A501 { p m0; s m1; s m2; p m3; p m4; d m5; p m6; s m7; };
void f_cpA501(struct A501 *x, const struct A501 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA501(const struct A501 *x, const struct A501 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA501() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A501), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A501, m0), 1);
		dcStructField(st, 's', offsetof(struct A501, m1), 1);
		dcStructField(st, 's', offsetof(struct A501, m2), 1);
		dcStructField(st, 'p', offsetof(struct A501, m3), 1);
		dcStructField(st, 'p', offsetof(struct A501, m4), 1);
		dcStructField(st, 'd', offsetof(struct A501, m5), 1);
		dcStructField(st, 'p', offsetof(struct A501, m6), 1);
		dcStructField(st, 's', offsetof(struct A501, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llsfcflpj} */
struct A502 { l m0; l m1; s m2; f m3; c m4; f m5; l m6; p m7; j m8; };
void f_cpA502(struct A502 *x, const struct A502 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA502(const struct A502 *x, const struct A502 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA502() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A502), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A502, m0), 1);
		dcStructField(st, 'l', offsetof(struct A502, m1), 1);
		dcStructField(st, 's', offsetof(struct A502, m2), 1);
		dcStructField(st, 'f', offsetof(struct A502, m3), 1);
		dcStructField(st, 'c', offsetof(struct A502, m4), 1);
		dcStructField(st, 'f', offsetof(struct A502, m5), 1);
		dcStructField(st, 'l', offsetof(struct A502, m6), 1);
		dcStructField(st, 'p', offsetof(struct A502, m7), 1);
		dcStructField(st, 'j', offsetof(struct A502, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pddcdcccffilpccsll} */
struct A503 { p m0; d m1; d m2; c m3; d m4; c m5; c m6; c m7; f m8; f m9; i m10; l m11; p m12; c m13; c m14; s m15; l m16; l m17; };
void f_cpA503(struct A503 *x, const struct A503 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA503(const struct A503 *x, const struct A503 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA503() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A503), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A503, m0), 1);
		dcStructField(st, 'd', offsetof(struct A503, m1), 1);
		dcStructField(st, 'd', offsetof(struct A503, m2), 1);
		dcStructField(st, 'c', offsetof(struct A503, m3), 1);
		dcStructField(st, 'd', offsetof(struct A503, m4), 1);
		dcStructField(st, 'c', offsetof(struct A503, m5), 1);
		dcStructField(st, 'c', offsetof(struct A503, m6), 1);
		dcStructField(st, 'c', offsetof(struct A503, m7), 1);
		dcStructField(st, 'f', offsetof(struct A503, m8), 1);
		dcStructField(st, 'f', offsetof(struct A503, m9), 1);
		dcStructField(st, 'i', offsetof(struct A503, m10), 1);
		dcStructField(st, 'l', offsetof(struct A503, m11), 1);
		dcStructField(st, 'p', offsetof(struct A503, m12), 1);
		dcStructField(st, 'c', offsetof(struct A503, m13), 1);
		dcStructField(st, 'c', offsetof(struct A503, m14), 1);
		dcStructField(st, 's', offsetof(struct A503, m15), 1);
		dcStructField(st, 'l', offsetof(struct A503, m16), 1);
		dcStructField(st, 'l', offsetof(struct A503, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{pddcdcccffilpccsll}lpff} */
struct A504 { struct A503 m0; l m1; p m2; f m3; f m4; };
void f_cpA504(struct A504 *x, const struct A504 *y) { f_cpA503(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA504(const struct A504 *x, const struct A504 *y) { return f_cmpA503(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA504() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A504), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A504, m0), 1, f_touchdcstA503());
		dcStructField(st, 'l', offsetof(struct A504, m1), 1);
		dcStructField(st, 'p', offsetof(struct A504, m2), 1);
		dcStructField(st, 'f', offsetof(struct A504, m3), 1);
		dcStructField(st, 'f', offsetof(struct A504, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsjllpjpccd} */
struct A505 { f m0; s m1; j m2; l m3; l m4; p m5; j m6; p m7; c m8; c m9; d m10; };
void f_cpA505(struct A505 *x, const struct A505 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA505(const struct A505 *x, const struct A505 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA505() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A505), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A505, m0), 1);
		dcStructField(st, 's', offsetof(struct A505, m1), 1);
		dcStructField(st, 'j', offsetof(struct A505, m2), 1);
		dcStructField(st, 'l', offsetof(struct A505, m3), 1);
		dcStructField(st, 'l', offsetof(struct A505, m4), 1);
		dcStructField(st, 'p', offsetof(struct A505, m5), 1);
		dcStructField(st, 'j', offsetof(struct A505, m6), 1);
		dcStructField(st, 'p', offsetof(struct A505, m7), 1);
		dcStructField(st, 'c', offsetof(struct A505, m8), 1);
		dcStructField(st, 'c', offsetof(struct A505, m9), 1);
		dcStructField(st, 'd', offsetof(struct A505, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfllfdfp} */
struct A506 { p m0; f m1; l m2; l m3; f m4; d m5; f m6; p m7; };
void f_cpA506(struct A506 *x, const struct A506 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA506(const struct A506 *x, const struct A506 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA506() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A506), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A506, m0), 1);
		dcStructField(st, 'f', offsetof(struct A506, m1), 1);
		dcStructField(st, 'l', offsetof(struct A506, m2), 1);
		dcStructField(st, 'l', offsetof(struct A506, m3), 1);
		dcStructField(st, 'f', offsetof(struct A506, m4), 1);
		dcStructField(st, 'd', offsetof(struct A506, m5), 1);
		dcStructField(st, 'f', offsetof(struct A506, m6), 1);
		dcStructField(st, 'p', offsetof(struct A506, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isisfsdjcj} */
struct A507 { i m0; s m1; i m2; s m3; f m4; s m5; d m6; j m7; c m8; j m9; };
void f_cpA507(struct A507 *x, const struct A507 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA507(const struct A507 *x, const struct A507 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA507() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A507), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A507, m0), 1);
		dcStructField(st, 's', offsetof(struct A507, m1), 1);
		dcStructField(st, 'i', offsetof(struct A507, m2), 1);
		dcStructField(st, 's', offsetof(struct A507, m3), 1);
		dcStructField(st, 'f', offsetof(struct A507, m4), 1);
		dcStructField(st, 's', offsetof(struct A507, m5), 1);
		dcStructField(st, 'd', offsetof(struct A507, m6), 1);
		dcStructField(st, 'j', offsetof(struct A507, m7), 1);
		dcStructField(st, 'c', offsetof(struct A507, m8), 1);
		dcStructField(st, 'j', offsetof(struct A507, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i{pfllfdfp}{c}ipcdpljsjsjicdp{isisfsdjcj}i} */
struct A508 { i m0; struct A506 m1; struct A77 m2; i m3; p m4; c m5; d m6; p m7; l m8; j m9; s m10; j m11; s m12; j m13; i m14; c m15; d m16; p m17; struct A507 m18; i m19; };
void f_cpA508(struct A508 *x, const struct A508 *y) { x->m0 = y->m0; f_cpA506(&x->m1, &y->m1); f_cpA77(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA507(&x->m18, &y->m18); x->m19 = y->m19; };
int f_cmpA508(const struct A508 *x, const struct A508 *y) { return x->m0 == y->m0 && f_cmpA506(&x->m1, &y->m1) && f_cmpA77(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA507(&x->m18, &y->m18) && x->m19 == y->m19; };
DCstruct* f_touchdcstA508() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A508), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A508, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A508, m1), 1, f_touchdcstA506());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A508, m2), 1, f_touchdcstA77());
		dcStructField(st, 'i', offsetof(struct A508, m3), 1);
		dcStructField(st, 'p', offsetof(struct A508, m4), 1);
		dcStructField(st, 'c', offsetof(struct A508, m5), 1);
		dcStructField(st, 'd', offsetof(struct A508, m6), 1);
		dcStructField(st, 'p', offsetof(struct A508, m7), 1);
		dcStructField(st, 'l', offsetof(struct A508, m8), 1);
		dcStructField(st, 'j', offsetof(struct A508, m9), 1);
		dcStructField(st, 's', offsetof(struct A508, m10), 1);
		dcStructField(st, 'j', offsetof(struct A508, m11), 1);
		dcStructField(st, 's', offsetof(struct A508, m12), 1);
		dcStructField(st, 'j', offsetof(struct A508, m13), 1);
		dcStructField(st, 'i', offsetof(struct A508, m14), 1);
		dcStructField(st, 'c', offsetof(struct A508, m15), 1);
		dcStructField(st, 'd', offsetof(struct A508, m16), 1);
		dcStructField(st, 'p', offsetof(struct A508, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A508, m18), 1, f_touchdcstA507());
		dcStructField(st, 'i', offsetof(struct A508, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsdfdlppli} */
struct A509 { d m0; s m1; d m2; f m3; d m4; l m5; p m6; p m7; l m8; i m9; };
void f_cpA509(struct A509 *x, const struct A509 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA509(const struct A509 *x, const struct A509 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA509() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A509), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A509, m0), 1);
		dcStructField(st, 's', offsetof(struct A509, m1), 1);
		dcStructField(st, 'd', offsetof(struct A509, m2), 1);
		dcStructField(st, 'f', offsetof(struct A509, m3), 1);
		dcStructField(st, 'd', offsetof(struct A509, m4), 1);
		dcStructField(st, 'l', offsetof(struct A509, m5), 1);
		dcStructField(st, 'p', offsetof(struct A509, m6), 1);
		dcStructField(st, 'p', offsetof(struct A509, m7), 1);
		dcStructField(st, 'l', offsetof(struct A509, m8), 1);
		dcStructField(st, 'i', offsetof(struct A509, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llcssdffjc} */
struct A510 { l m0; l m1; c m2; s m3; s m4; d m5; f m6; f m7; j m8; c m9; };
void f_cpA510(struct A510 *x, const struct A510 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA510(const struct A510 *x, const struct A510 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA510() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A510), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A510, m0), 1);
		dcStructField(st, 'l', offsetof(struct A510, m1), 1);
		dcStructField(st, 'c', offsetof(struct A510, m2), 1);
		dcStructField(st, 's', offsetof(struct A510, m3), 1);
		dcStructField(st, 's', offsetof(struct A510, m4), 1);
		dcStructField(st, 'd', offsetof(struct A510, m5), 1);
		dcStructField(st, 'f', offsetof(struct A510, m6), 1);
		dcStructField(st, 'f', offsetof(struct A510, m7), 1);
		dcStructField(st, 'j', offsetof(struct A510, m8), 1);
		dcStructField(st, 'c', offsetof(struct A510, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ff{llcssdffjc}jipp} */
struct A511 { f m0; f m1; struct A510 m2; j m3; i m4; p m5; p m6; };
void f_cpA511(struct A511 *x, const struct A511 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA510(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA511(const struct A511 *x, const struct A511 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA510(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA511() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A511), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A511, m0), 1);
		dcStructField(st, 'f', offsetof(struct A511, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A511, m2), 1, f_touchdcstA510());
		dcStructField(st, 'j', offsetof(struct A511, m3), 1);
		dcStructField(st, 'i', offsetof(struct A511, m4), 1);
		dcStructField(st, 'p', offsetof(struct A511, m5), 1);
		dcStructField(st, 'p', offsetof(struct A511, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pflfjsc} */
struct A512 { p m0; f m1; l m2; f m3; j m4; s m5; c m6; };
void f_cpA512(struct A512 *x, const struct A512 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA512(const struct A512 *x, const struct A512 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA512() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A512), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A512, m0), 1);
		dcStructField(st, 'f', offsetof(struct A512, m1), 1);
		dcStructField(st, 'l', offsetof(struct A512, m2), 1);
		dcStructField(st, 'f', offsetof(struct A512, m3), 1);
		dcStructField(st, 'j', offsetof(struct A512, m4), 1);
		dcStructField(st, 's', offsetof(struct A512, m5), 1);
		dcStructField(st, 'c', offsetof(struct A512, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lcsdcsdccps{pflfjsc}spd} */
struct A513 { l m0; c m1; s m2; d m3; c m4; s m5; d m6; c m7; c m8; p m9; s m10; struct A512 m11; s m12; p m13; d m14; };
void f_cpA513(struct A513 *x, const struct A513 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA512(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA513(const struct A513 *x, const struct A513 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA512(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA513() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A513), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A513, m0), 1);
		dcStructField(st, 'c', offsetof(struct A513, m1), 1);
		dcStructField(st, 's', offsetof(struct A513, m2), 1);
		dcStructField(st, 'd', offsetof(struct A513, m3), 1);
		dcStructField(st, 'c', offsetof(struct A513, m4), 1);
		dcStructField(st, 's', offsetof(struct A513, m5), 1);
		dcStructField(st, 'd', offsetof(struct A513, m6), 1);
		dcStructField(st, 'c', offsetof(struct A513, m7), 1);
		dcStructField(st, 'c', offsetof(struct A513, m8), 1);
		dcStructField(st, 'p', offsetof(struct A513, m9), 1);
		dcStructField(st, 's', offsetof(struct A513, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A513, m11), 1, f_touchdcstA512());
		dcStructField(st, 's', offsetof(struct A513, m12), 1);
		dcStructField(st, 'p', offsetof(struct A513, m13), 1);
		dcStructField(st, 'd', offsetof(struct A513, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sifdlcf{j}} */
struct A514 { s m0; i m1; f m2; d m3; l m4; c m5; f m6; struct A96 m7; };
void f_cpA514(struct A514 *x, const struct A514 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA96(&x->m7, &y->m7); };
int f_cmpA514(const struct A514 *x, const struct A514 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA96(&x->m7, &y->m7); };
DCstruct* f_touchdcstA514() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A514), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A514, m0), 1);
		dcStructField(st, 'i', offsetof(struct A514, m1), 1);
		dcStructField(st, 'f', offsetof(struct A514, m2), 1);
		dcStructField(st, 'd', offsetof(struct A514, m3), 1);
		dcStructField(st, 'l', offsetof(struct A514, m4), 1);
		dcStructField(st, 'c', offsetof(struct A514, m5), 1);
		dcStructField(st, 'f', offsetof(struct A514, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A514, m7), 1, f_touchdcstA96());
		dcCloseStruct(st);
	}
	return st;
};
/* {dfpf} */
struct A515 { d m0; f m1; p m2; f m3; };
void f_cpA515(struct A515 *x, const struct A515 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA515(const struct A515 *x, const struct A515 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA515() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A515), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A515, m0), 1);
		dcStructField(st, 'f', offsetof(struct A515, m1), 1);
		dcStructField(st, 'p', offsetof(struct A515, m2), 1);
		dcStructField(st, 'f', offsetof(struct A515, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsispjsl} */
struct A516 { d m0; s m1; i m2; s m3; p m4; j m5; s m6; l m7; };
void f_cpA516(struct A516 *x, const struct A516 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA516(const struct A516 *x, const struct A516 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA516() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A516), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A516, m0), 1);
		dcStructField(st, 's', offsetof(struct A516, m1), 1);
		dcStructField(st, 'i', offsetof(struct A516, m2), 1);
		dcStructField(st, 's', offsetof(struct A516, m3), 1);
		dcStructField(st, 'p', offsetof(struct A516, m4), 1);
		dcStructField(st, 'j', offsetof(struct A516, m5), 1);
		dcStructField(st, 's', offsetof(struct A516, m6), 1);
		dcStructField(st, 'l', offsetof(struct A516, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdscfp} */
struct A517 { c m0; d m1; s m2; c m3; f m4; p m5; };
void f_cpA517(struct A517 *x, const struct A517 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA517(const struct A517 *x, const struct A517 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA517() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A517), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A517, m0), 1);
		dcStructField(st, 'd', offsetof(struct A517, m1), 1);
		dcStructField(st, 's', offsetof(struct A517, m2), 1);
		dcStructField(st, 'c', offsetof(struct A517, m3), 1);
		dcStructField(st, 'f', offsetof(struct A517, m4), 1);
		dcStructField(st, 'p', offsetof(struct A517, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jicpid} */
struct A518 { j m0; i m1; c m2; p m3; i m4; d m5; };
void f_cpA518(struct A518 *x, const struct A518 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA518(const struct A518 *x, const struct A518 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA518() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A518), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A518, m0), 1);
		dcStructField(st, 'i', offsetof(struct A518, m1), 1);
		dcStructField(st, 'c', offsetof(struct A518, m2), 1);
		dcStructField(st, 'p', offsetof(struct A518, m3), 1);
		dcStructField(st, 'i', offsetof(struct A518, m4), 1);
		dcStructField(st, 'd', offsetof(struct A518, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpjplp} */
struct A519 { f m0; p m1; j m2; p m3; l m4; p m5; };
void f_cpA519(struct A519 *x, const struct A519 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA519(const struct A519 *x, const struct A519 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA519() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A519), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A519, m0), 1);
		dcStructField(st, 'p', offsetof(struct A519, m1), 1);
		dcStructField(st, 'j', offsetof(struct A519, m2), 1);
		dcStructField(st, 'p', offsetof(struct A519, m3), 1);
		dcStructField(st, 'l', offsetof(struct A519, m4), 1);
		dcStructField(st, 'p', offsetof(struct A519, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpp} */
struct A520 { c m0; p m1; p m2; };
void f_cpA520(struct A520 *x, const struct A520 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA520(const struct A520 *x, const struct A520 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA520() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A520), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A520, m0), 1);
		dcStructField(st, 'p', offsetof(struct A520, m1), 1);
		dcStructField(st, 'p', offsetof(struct A520, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jli} */
struct A521 { j m0; l m1; i m2; };
void f_cpA521(struct A521 *x, const struct A521 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA521(const struct A521 *x, const struct A521 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA521() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A521), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A521, m0), 1);
		dcStructField(st, 'l', offsetof(struct A521, m1), 1);
		dcStructField(st, 'i', offsetof(struct A521, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{cpp}djpi{jli}pjllic} */
struct A522 { p m0; struct A520 m1; d m2; j m3; p m4; i m5; struct A521 m6; p m7; j m8; l m9; l m10; i m11; c m12; };
void f_cpA522(struct A522 *x, const struct A522 *y) { x->m0 = y->m0; f_cpA520(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA521(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA522(const struct A522 *x, const struct A522 *y) { return x->m0 == y->m0 && f_cmpA520(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA521(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA522() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A522), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A522, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A522, m1), 1, f_touchdcstA520());
		dcStructField(st, 'd', offsetof(struct A522, m2), 1);
		dcStructField(st, 'j', offsetof(struct A522, m3), 1);
		dcStructField(st, 'p', offsetof(struct A522, m4), 1);
		dcStructField(st, 'i', offsetof(struct A522, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A522, m6), 1, f_touchdcstA521());
		dcStructField(st, 'p', offsetof(struct A522, m7), 1);
		dcStructField(st, 'j', offsetof(struct A522, m8), 1);
		dcStructField(st, 'l', offsetof(struct A522, m9), 1);
		dcStructField(st, 'l', offsetof(struct A522, m10), 1);
		dcStructField(st, 'i', offsetof(struct A522, m11), 1);
		dcStructField(st, 'c', offsetof(struct A522, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfispdjfcjidldfp} */
struct A523 { c m0; f m1; i m2; s m3; p m4; d m5; j m6; f m7; c m8; j m9; i m10; d m11; l m12; d m13; f m14; p m15; };
void f_cpA523(struct A523 *x, const struct A523 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA523(const struct A523 *x, const struct A523 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA523() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A523), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A523, m0), 1);
		dcStructField(st, 'f', offsetof(struct A523, m1), 1);
		dcStructField(st, 'i', offsetof(struct A523, m2), 1);
		dcStructField(st, 's', offsetof(struct A523, m3), 1);
		dcStructField(st, 'p', offsetof(struct A523, m4), 1);
		dcStructField(st, 'd', offsetof(struct A523, m5), 1);
		dcStructField(st, 'j', offsetof(struct A523, m6), 1);
		dcStructField(st, 'f', offsetof(struct A523, m7), 1);
		dcStructField(st, 'c', offsetof(struct A523, m8), 1);
		dcStructField(st, 'j', offsetof(struct A523, m9), 1);
		dcStructField(st, 'i', offsetof(struct A523, m10), 1);
		dcStructField(st, 'd', offsetof(struct A523, m11), 1);
		dcStructField(st, 'l', offsetof(struct A523, m12), 1);
		dcStructField(st, 'd', offsetof(struct A523, m13), 1);
		dcStructField(st, 'f', offsetof(struct A523, m14), 1);
		dcStructField(st, 'p', offsetof(struct A523, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fllpiddcff{cfispdjfcjidldfp}l{f}jisc} */
struct A524 { f m0; l m1; l m2; p m3; i m4; d m5; d m6; c m7; f m8; f m9; struct A523 m10; l m11; struct A28 m12; j m13; i m14; s m15; c m16; };
void f_cpA524(struct A524 *x, const struct A524 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA523(&x->m10, &y->m10); x->m11 = y->m11; f_cpA28(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA524(const struct A524 *x, const struct A524 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA523(&x->m10, &y->m10) && x->m11 == y->m11 && f_cmpA28(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA524() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A524), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A524, m0), 1);
		dcStructField(st, 'l', offsetof(struct A524, m1), 1);
		dcStructField(st, 'l', offsetof(struct A524, m2), 1);
		dcStructField(st, 'p', offsetof(struct A524, m3), 1);
		dcStructField(st, 'i', offsetof(struct A524, m4), 1);
		dcStructField(st, 'd', offsetof(struct A524, m5), 1);
		dcStructField(st, 'd', offsetof(struct A524, m6), 1);
		dcStructField(st, 'c', offsetof(struct A524, m7), 1);
		dcStructField(st, 'f', offsetof(struct A524, m8), 1);
		dcStructField(st, 'f', offsetof(struct A524, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A524, m10), 1, f_touchdcstA523());
		dcStructField(st, 'l', offsetof(struct A524, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A524, m12), 1, f_touchdcstA28());
		dcStructField(st, 'j', offsetof(struct A524, m13), 1);
		dcStructField(st, 'i', offsetof(struct A524, m14), 1);
		dcStructField(st, 's', offsetof(struct A524, m15), 1);
		dcStructField(st, 'c', offsetof(struct A524, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcspsjpfpididl} */
struct A525 { f m0; c m1; s m2; p m3; s m4; j m5; p m6; f m7; p m8; i m9; d m10; i m11; d m12; l m13; };
void f_cpA525(struct A525 *x, const struct A525 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA525(const struct A525 *x, const struct A525 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA525() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A525), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A525, m0), 1);
		dcStructField(st, 'c', offsetof(struct A525, m1), 1);
		dcStructField(st, 's', offsetof(struct A525, m2), 1);
		dcStructField(st, 'p', offsetof(struct A525, m3), 1);
		dcStructField(st, 's', offsetof(struct A525, m4), 1);
		dcStructField(st, 'j', offsetof(struct A525, m5), 1);
		dcStructField(st, 'p', offsetof(struct A525, m6), 1);
		dcStructField(st, 'f', offsetof(struct A525, m7), 1);
		dcStructField(st, 'p', offsetof(struct A525, m8), 1);
		dcStructField(st, 'i', offsetof(struct A525, m9), 1);
		dcStructField(st, 'd', offsetof(struct A525, m10), 1);
		dcStructField(st, 'i', offsetof(struct A525, m11), 1);
		dcStructField(st, 'd', offsetof(struct A525, m12), 1);
		dcStructField(st, 'l', offsetof(struct A525, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pidjjjlpi} */
struct A526 { p m0; i m1; d m2; j m3; j m4; j m5; l m6; p m7; i m8; };
void f_cpA526(struct A526 *x, const struct A526 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA526(const struct A526 *x, const struct A526 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA526() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A526), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A526, m0), 1);
		dcStructField(st, 'i', offsetof(struct A526, m1), 1);
		dcStructField(st, 'd', offsetof(struct A526, m2), 1);
		dcStructField(st, 'j', offsetof(struct A526, m3), 1);
		dcStructField(st, 'j', offsetof(struct A526, m4), 1);
		dcStructField(st, 'j', offsetof(struct A526, m5), 1);
		dcStructField(st, 'l', offsetof(struct A526, m6), 1);
		dcStructField(st, 'p', offsetof(struct A526, m7), 1);
		dcStructField(st, 'i', offsetof(struct A526, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scli} */
struct A527 { s m0; c m1; l m2; i m3; };
void f_cpA527(struct A527 *x, const struct A527 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA527(const struct A527 *x, const struct A527 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA527() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A527), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A527, m0), 1);
		dcStructField(st, 'c', offsetof(struct A527, m1), 1);
		dcStructField(st, 'l', offsetof(struct A527, m2), 1);
		dcStructField(st, 'i', offsetof(struct A527, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {illclp} */
struct A528 { i m0; l m1; l m2; c m3; l m4; p m5; };
void f_cpA528(struct A528 *x, const struct A528 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA528(const struct A528 *x, const struct A528 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA528() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A528), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A528, m0), 1);
		dcStructField(st, 'l', offsetof(struct A528, m1), 1);
		dcStructField(st, 'l', offsetof(struct A528, m2), 1);
		dcStructField(st, 'c', offsetof(struct A528, m3), 1);
		dcStructField(st, 'l', offsetof(struct A528, m4), 1);
		dcStructField(st, 'p', offsetof(struct A528, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lds} */
struct A529 { l m0; d m1; s m2; };
void f_cpA529(struct A529 *x, const struct A529 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA529(const struct A529 *x, const struct A529 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA529() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A529), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A529, m0), 1);
		dcStructField(st, 'd', offsetof(struct A529, m1), 1);
		dcStructField(st, 's', offsetof(struct A529, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fip} */
struct A530 { f m0; i m1; p m2; };
void f_cpA530(struct A530 *x, const struct A530 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA530(const struct A530 *x, const struct A530 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA530() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A530), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A530, m0), 1);
		dcStructField(st, 'i', offsetof(struct A530, m1), 1);
		dcStructField(st, 'p', offsetof(struct A530, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dclslp} */
struct A531 { d m0; c m1; l m2; s m3; l m4; p m5; };
void f_cpA531(struct A531 *x, const struct A531 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA531(const struct A531 *x, const struct A531 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA531() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A531), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A531, m0), 1);
		dcStructField(st, 'c', offsetof(struct A531, m1), 1);
		dcStructField(st, 'l', offsetof(struct A531, m2), 1);
		dcStructField(st, 's', offsetof(struct A531, m3), 1);
		dcStructField(st, 'l', offsetof(struct A531, m4), 1);
		dcStructField(st, 'p', offsetof(struct A531, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cf} */
struct A532 { c m0; f m1; };
void f_cpA532(struct A532 *x, const struct A532 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA532(const struct A532 *x, const struct A532 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA532() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A532), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A532, m0), 1);
		dcStructField(st, 'f', offsetof(struct A532, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{cf}p} */
struct A533 { l m0; struct A532 m1; p m2; };
void f_cpA533(struct A533 *x, const struct A533 *y) { x->m0 = y->m0; f_cpA532(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA533(const struct A533 *x, const struct A533 *y) { return x->m0 == y->m0 && f_cmpA532(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA533() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A533), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A533, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A533, m1), 1, f_touchdcstA532());
		dcStructField(st, 'p', offsetof(struct A533, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjpllijldlpdcjcipisjffijc} */
struct A534 { p m0; j m1; p m2; l m3; l m4; i m5; j m6; l m7; d m8; l m9; p m10; d m11; c m12; j m13; c m14; i m15; p m16; i m17; s m18; j m19; f m20; f m21; i m22; j m23; c m24; };
void f_cpA534(struct A534 *x, const struct A534 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA534(const struct A534 *x, const struct A534 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA534() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A534), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A534, m0), 1);
		dcStructField(st, 'j', offsetof(struct A534, m1), 1);
		dcStructField(st, 'p', offsetof(struct A534, m2), 1);
		dcStructField(st, 'l', offsetof(struct A534, m3), 1);
		dcStructField(st, 'l', offsetof(struct A534, m4), 1);
		dcStructField(st, 'i', offsetof(struct A534, m5), 1);
		dcStructField(st, 'j', offsetof(struct A534, m6), 1);
		dcStructField(st, 'l', offsetof(struct A534, m7), 1);
		dcStructField(st, 'd', offsetof(struct A534, m8), 1);
		dcStructField(st, 'l', offsetof(struct A534, m9), 1);
		dcStructField(st, 'p', offsetof(struct A534, m10), 1);
		dcStructField(st, 'd', offsetof(struct A534, m11), 1);
		dcStructField(st, 'c', offsetof(struct A534, m12), 1);
		dcStructField(st, 'j', offsetof(struct A534, m13), 1);
		dcStructField(st, 'c', offsetof(struct A534, m14), 1);
		dcStructField(st, 'i', offsetof(struct A534, m15), 1);
		dcStructField(st, 'p', offsetof(struct A534, m16), 1);
		dcStructField(st, 'i', offsetof(struct A534, m17), 1);
		dcStructField(st, 's', offsetof(struct A534, m18), 1);
		dcStructField(st, 'j', offsetof(struct A534, m19), 1);
		dcStructField(st, 'f', offsetof(struct A534, m20), 1);
		dcStructField(st, 'f', offsetof(struct A534, m21), 1);
		dcStructField(st, 'i', offsetof(struct A534, m22), 1);
		dcStructField(st, 'j', offsetof(struct A534, m23), 1);
		dcStructField(st, 'c', offsetof(struct A534, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lcl} */
struct A535 { l m0; c m1; l m2; };
void f_cpA535(struct A535 *x, const struct A535 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA535(const struct A535 *x, const struct A535 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA535() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A535), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A535, m0), 1);
		dcStructField(st, 'c', offsetof(struct A535, m1), 1);
		dcStructField(st, 'l', offsetof(struct A535, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djdj{pjpllijldlpdcjcipisjffijc}f{lcl}} */
struct A536 { d m0; j m1; d m2; j m3; struct A534 m4; f m5; struct A535 m6; };
void f_cpA536(struct A536 *x, const struct A536 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA534(&x->m4, &y->m4); x->m5 = y->m5; f_cpA535(&x->m6, &y->m6); };
int f_cmpA536(const struct A536 *x, const struct A536 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA534(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA535(&x->m6, &y->m6); };
DCstruct* f_touchdcstA536() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A536), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A536, m0), 1);
		dcStructField(st, 'j', offsetof(struct A536, m1), 1);
		dcStructField(st, 'd', offsetof(struct A536, m2), 1);
		dcStructField(st, 'j', offsetof(struct A536, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A536, m4), 1, f_touchdcstA534());
		dcStructField(st, 'f', offsetof(struct A536, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A536, m6), 1, f_touchdcstA535());
		dcCloseStruct(st);
	}
	return st;
};
/* {iii} */
struct A537 { i m0; i m1; i m2; };
void f_cpA537(struct A537 *x, const struct A537 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA537(const struct A537 *x, const struct A537 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA537() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A537), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A537, m0), 1);
		dcStructField(st, 'i', offsetof(struct A537, m1), 1);
		dcStructField(st, 'i', offsetof(struct A537, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppjl{djdj{pjpllijldlpdcjcipisjffijc}f{lcl}}{iii}f{dl}slidil} */
struct A538 { p m0; p m1; j m2; l m3; struct A536 m4; struct A537 m5; f m6; struct A215 m7; s m8; l m9; i m10; d m11; i m12; l m13; };
void f_cpA538(struct A538 *x, const struct A538 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA536(&x->m4, &y->m4); f_cpA537(&x->m5, &y->m5); x->m6 = y->m6; f_cpA215(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA538(const struct A538 *x, const struct A538 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA536(&x->m4, &y->m4) && f_cmpA537(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA215(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA538() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A538), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A538, m0), 1);
		dcStructField(st, 'p', offsetof(struct A538, m1), 1);
		dcStructField(st, 'j', offsetof(struct A538, m2), 1);
		dcStructField(st, 'l', offsetof(struct A538, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A538, m4), 1, f_touchdcstA536());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A538, m5), 1, f_touchdcstA537());
		dcStructField(st, 'f', offsetof(struct A538, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A538, m7), 1, f_touchdcstA215());
		dcStructField(st, 's', offsetof(struct A538, m8), 1);
		dcStructField(st, 'l', offsetof(struct A538, m9), 1);
		dcStructField(st, 'i', offsetof(struct A538, m10), 1);
		dcStructField(st, 'd', offsetof(struct A538, m11), 1);
		dcStructField(st, 'i', offsetof(struct A538, m12), 1);
		dcStructField(st, 'l', offsetof(struct A538, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjs} */
struct A539 { p m0; j m1; s m2; };
void f_cpA539(struct A539 *x, const struct A539 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA539(const struct A539 *x, const struct A539 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA539() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A539), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A539, m0), 1);
		dcStructField(st, 'j', offsetof(struct A539, m1), 1);
		dcStructField(st, 's', offsetof(struct A539, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldcs} */
struct A540 { l m0; d m1; c m2; s m3; };
void f_cpA540(struct A540 *x, const struct A540 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA540(const struct A540 *x, const struct A540 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA540() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A540), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A540, m0), 1);
		dcStructField(st, 'd', offsetof(struct A540, m1), 1);
		dcStructField(st, 'c', offsetof(struct A540, m2), 1);
		dcStructField(st, 's', offsetof(struct A540, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ii{ldcs}lsfpdp} */
struct A541 { i m0; i m1; struct A540 m2; l m3; s m4; f m5; p m6; d m7; p m8; };
void f_cpA541(struct A541 *x, const struct A541 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA540(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA541(const struct A541 *x, const struct A541 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA540(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA541() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A541), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A541, m0), 1);
		dcStructField(st, 'i', offsetof(struct A541, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A541, m2), 1, f_touchdcstA540());
		dcStructField(st, 'l', offsetof(struct A541, m3), 1);
		dcStructField(st, 's', offsetof(struct A541, m4), 1);
		dcStructField(st, 'f', offsetof(struct A541, m5), 1);
		dcStructField(st, 'p', offsetof(struct A541, m6), 1);
		dcStructField(st, 'd', offsetof(struct A541, m7), 1);
		dcStructField(st, 'p', offsetof(struct A541, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iillsplps} */
struct A542 { i m0; i m1; l m2; l m3; s m4; p m5; l m6; p m7; s m8; };
void f_cpA542(struct A542 *x, const struct A542 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA542(const struct A542 *x, const struct A542 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA542() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A542), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A542, m0), 1);
		dcStructField(st, 'i', offsetof(struct A542, m1), 1);
		dcStructField(st, 'l', offsetof(struct A542, m2), 1);
		dcStructField(st, 'l', offsetof(struct A542, m3), 1);
		dcStructField(st, 's', offsetof(struct A542, m4), 1);
		dcStructField(st, 'p', offsetof(struct A542, m5), 1);
		dcStructField(st, 'l', offsetof(struct A542, m6), 1);
		dcStructField(st, 'p', offsetof(struct A542, m7), 1);
		dcStructField(st, 's', offsetof(struct A542, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cddidjcp} */
struct A543 { c m0; d m1; d m2; i m3; d m4; j m5; c m6; p m7; };
void f_cpA543(struct A543 *x, const struct A543 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA543(const struct A543 *x, const struct A543 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA543() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A543), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A543, m0), 1);
		dcStructField(st, 'd', offsetof(struct A543, m1), 1);
		dcStructField(st, 'd', offsetof(struct A543, m2), 1);
		dcStructField(st, 'i', offsetof(struct A543, m3), 1);
		dcStructField(st, 'd', offsetof(struct A543, m4), 1);
		dcStructField(st, 'j', offsetof(struct A543, m5), 1);
		dcStructField(st, 'c', offsetof(struct A543, m6), 1);
		dcStructField(st, 'p', offsetof(struct A543, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {il} */
struct A544 { i m0; l m1; };
void f_cpA544(struct A544 *x, const struct A544 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA544(const struct A544 *x, const struct A544 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA544() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A544), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A544, m0), 1);
		dcStructField(st, 'l', offsetof(struct A544, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfci{cddidjcp}ljfd{il}} */
struct A545 { d m0; f m1; c m2; i m3; struct A543 m4; l m5; j m6; f m7; d m8; struct A544 m9; };
void f_cpA545(struct A545 *x, const struct A545 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA543(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA544(&x->m9, &y->m9); };
int f_cmpA545(const struct A545 *x, const struct A545 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA543(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA544(&x->m9, &y->m9); };
DCstruct* f_touchdcstA545() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A545), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A545, m0), 1);
		dcStructField(st, 'f', offsetof(struct A545, m1), 1);
		dcStructField(st, 'c', offsetof(struct A545, m2), 1);
		dcStructField(st, 'i', offsetof(struct A545, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A545, m4), 1, f_touchdcstA543());
		dcStructField(st, 'l', offsetof(struct A545, m5), 1);
		dcStructField(st, 'j', offsetof(struct A545, m6), 1);
		dcStructField(st, 'f', offsetof(struct A545, m7), 1);
		dcStructField(st, 'd', offsetof(struct A545, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A545, m9), 1, f_touchdcstA544());
		dcCloseStruct(st);
	}
	return st;
};
/* {pfi} */
struct A546 { p m0; f m1; i m2; };
void f_cpA546(struct A546 *x, const struct A546 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA546(const struct A546 *x, const struct A546 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA546() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A546), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A546, m0), 1);
		dcStructField(st, 'f', offsetof(struct A546, m1), 1);
		dcStructField(st, 'i', offsetof(struct A546, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c{j}} */
struct A547 { c m0; struct A96 m1; };
void f_cpA547(struct A547 *x, const struct A547 *y) { x->m0 = y->m0; f_cpA96(&x->m1, &y->m1); };
int f_cmpA547(const struct A547 *x, const struct A547 *y) { return x->m0 == y->m0 && f_cmpA96(&x->m1, &y->m1); };
DCstruct* f_touchdcstA547() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A547), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A547, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A547, m1), 1, f_touchdcstA96());
		dcCloseStruct(st);
	}
	return st;
};
/* {fpl{id}} */
struct A548 { f m0; p m1; l m2; struct A178 m3; };
void f_cpA548(struct A548 *x, const struct A548 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA178(&x->m3, &y->m3); };
int f_cmpA548(const struct A548 *x, const struct A548 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA178(&x->m3, &y->m3); };
DCstruct* f_touchdcstA548() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A548), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A548, m0), 1);
		dcStructField(st, 'p', offsetof(struct A548, m1), 1);
		dcStructField(st, 'l', offsetof(struct A548, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A548, m3), 1, f_touchdcstA178());
		dcCloseStruct(st);
	}
	return st;
};
/* {picci} */
struct A549 { p m0; i m1; c m2; c m3; i m4; };
void f_cpA549(struct A549 *x, const struct A549 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA549(const struct A549 *x, const struct A549 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA549() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A549), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A549, m0), 1);
		dcStructField(st, 'i', offsetof(struct A549, m1), 1);
		dcStructField(st, 'c', offsetof(struct A549, m2), 1);
		dcStructField(st, 'c', offsetof(struct A549, m3), 1);
		dcStructField(st, 'i', offsetof(struct A549, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sip} */
struct A550 { s m0; i m1; p m2; };
void f_cpA550(struct A550 *x, const struct A550 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA550(const struct A550 *x, const struct A550 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA550() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A550), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A550, m0), 1);
		dcStructField(st, 'i', offsetof(struct A550, m1), 1);
		dcStructField(st, 'p', offsetof(struct A550, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjdccjidc} */
struct A551 { j m0; j m1; d m2; c m3; c m4; j m5; i m6; d m7; c m8; };
void f_cpA551(struct A551 *x, const struct A551 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA551(const struct A551 *x, const struct A551 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA551() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A551), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A551, m0), 1);
		dcStructField(st, 'j', offsetof(struct A551, m1), 1);
		dcStructField(st, 'd', offsetof(struct A551, m2), 1);
		dcStructField(st, 'c', offsetof(struct A551, m3), 1);
		dcStructField(st, 'c', offsetof(struct A551, m4), 1);
		dcStructField(st, 'j', offsetof(struct A551, m5), 1);
		dcStructField(st, 'i', offsetof(struct A551, m6), 1);
		dcStructField(st, 'd', offsetof(struct A551, m7), 1);
		dcStructField(st, 'c', offsetof(struct A551, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pd{sip}psij{jjdccjidc}iidjddicjc} */
struct A552 { p m0; d m1; struct A550 m2; p m3; s m4; i m5; j m6; struct A551 m7; i m8; i m9; d m10; j m11; d m12; d m13; i m14; c m15; j m16; c m17; };
void f_cpA552(struct A552 *x, const struct A552 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA550(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA551(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA552(const struct A552 *x, const struct A552 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA550(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA551(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA552() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A552), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A552, m0), 1);
		dcStructField(st, 'd', offsetof(struct A552, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A552, m2), 1, f_touchdcstA550());
		dcStructField(st, 'p', offsetof(struct A552, m3), 1);
		dcStructField(st, 's', offsetof(struct A552, m4), 1);
		dcStructField(st, 'i', offsetof(struct A552, m5), 1);
		dcStructField(st, 'j', offsetof(struct A552, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A552, m7), 1, f_touchdcstA551());
		dcStructField(st, 'i', offsetof(struct A552, m8), 1);
		dcStructField(st, 'i', offsetof(struct A552, m9), 1);
		dcStructField(st, 'd', offsetof(struct A552, m10), 1);
		dcStructField(st, 'j', offsetof(struct A552, m11), 1);
		dcStructField(st, 'd', offsetof(struct A552, m12), 1);
		dcStructField(st, 'd', offsetof(struct A552, m13), 1);
		dcStructField(st, 'i', offsetof(struct A552, m14), 1);
		dcStructField(st, 'c', offsetof(struct A552, m15), 1);
		dcStructField(st, 'j', offsetof(struct A552, m16), 1);
		dcStructField(st, 'c', offsetof(struct A552, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jf} */
struct A553 { j m0; f m1; };
void f_cpA553(struct A553 *x, const struct A553 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA553(const struct A553 *x, const struct A553 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA553() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A553), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A553, m0), 1);
		dcStructField(st, 'f', offsetof(struct A553, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jsdcidjplfii{jf}issdp} */
struct A554 { j m0; s m1; d m2; c m3; i m4; d m5; j m6; p m7; l m8; f m9; i m10; i m11; struct A553 m12; i m13; s m14; s m15; d m16; p m17; };
void f_cpA554(struct A554 *x, const struct A554 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA553(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA554(const struct A554 *x, const struct A554 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA553(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA554() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A554), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A554, m0), 1);
		dcStructField(st, 's', offsetof(struct A554, m1), 1);
		dcStructField(st, 'd', offsetof(struct A554, m2), 1);
		dcStructField(st, 'c', offsetof(struct A554, m3), 1);
		dcStructField(st, 'i', offsetof(struct A554, m4), 1);
		dcStructField(st, 'd', offsetof(struct A554, m5), 1);
		dcStructField(st, 'j', offsetof(struct A554, m6), 1);
		dcStructField(st, 'p', offsetof(struct A554, m7), 1);
		dcStructField(st, 'l', offsetof(struct A554, m8), 1);
		dcStructField(st, 'f', offsetof(struct A554, m9), 1);
		dcStructField(st, 'i', offsetof(struct A554, m10), 1);
		dcStructField(st, 'i', offsetof(struct A554, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A554, m12), 1, f_touchdcstA553());
		dcStructField(st, 'i', offsetof(struct A554, m13), 1);
		dcStructField(st, 's', offsetof(struct A554, m14), 1);
		dcStructField(st, 's', offsetof(struct A554, m15), 1);
		dcStructField(st, 'd', offsetof(struct A554, m16), 1);
		dcStructField(st, 'p', offsetof(struct A554, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsl} */
struct A555 { f m0; s m1; l m2; };
void f_cpA555(struct A555 *x, const struct A555 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA555(const struct A555 *x, const struct A555 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA555() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A555), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A555, m0), 1);
		dcStructField(st, 's', offsetof(struct A555, m1), 1);
		dcStructField(st, 'l', offsetof(struct A555, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sflfipjdpicijlsfdfc} */
struct A556 { s m0; f m1; l m2; f m3; i m4; p m5; j m6; d m7; p m8; i m9; c m10; i m11; j m12; l m13; s m14; f m15; d m16; f m17; c m18; };
void f_cpA556(struct A556 *x, const struct A556 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA556(const struct A556 *x, const struct A556 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA556() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A556), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A556, m0), 1);
		dcStructField(st, 'f', offsetof(struct A556, m1), 1);
		dcStructField(st, 'l', offsetof(struct A556, m2), 1);
		dcStructField(st, 'f', offsetof(struct A556, m3), 1);
		dcStructField(st, 'i', offsetof(struct A556, m4), 1);
		dcStructField(st, 'p', offsetof(struct A556, m5), 1);
		dcStructField(st, 'j', offsetof(struct A556, m6), 1);
		dcStructField(st, 'd', offsetof(struct A556, m7), 1);
		dcStructField(st, 'p', offsetof(struct A556, m8), 1);
		dcStructField(st, 'i', offsetof(struct A556, m9), 1);
		dcStructField(st, 'c', offsetof(struct A556, m10), 1);
		dcStructField(st, 'i', offsetof(struct A556, m11), 1);
		dcStructField(st, 'j', offsetof(struct A556, m12), 1);
		dcStructField(st, 'l', offsetof(struct A556, m13), 1);
		dcStructField(st, 's', offsetof(struct A556, m14), 1);
		dcStructField(st, 'f', offsetof(struct A556, m15), 1);
		dcStructField(st, 'd', offsetof(struct A556, m16), 1);
		dcStructField(st, 'f', offsetof(struct A556, m17), 1);
		dcStructField(st, 'c', offsetof(struct A556, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ciifpjp} */
struct A557 { c m0; i m1; i m2; f m3; p m4; j m5; p m6; };
void f_cpA557(struct A557 *x, const struct A557 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA557(const struct A557 *x, const struct A557 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA557() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A557), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A557, m0), 1);
		dcStructField(st, 'i', offsetof(struct A557, m1), 1);
		dcStructField(st, 'i', offsetof(struct A557, m2), 1);
		dcStructField(st, 'f', offsetof(struct A557, m3), 1);
		dcStructField(st, 'p', offsetof(struct A557, m4), 1);
		dcStructField(st, 'j', offsetof(struct A557, m5), 1);
		dcStructField(st, 'p', offsetof(struct A557, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cifspsjpjcilssfsij} */
struct A558 { c m0; i m1; f m2; s m3; p m4; s m5; j m6; p m7; j m8; c m9; i m10; l m11; s m12; s m13; f m14; s m15; i m16; j m17; };
void f_cpA558(struct A558 *x, const struct A558 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA558(const struct A558 *x, const struct A558 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA558() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A558), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A558, m0), 1);
		dcStructField(st, 'i', offsetof(struct A558, m1), 1);
		dcStructField(st, 'f', offsetof(struct A558, m2), 1);
		dcStructField(st, 's', offsetof(struct A558, m3), 1);
		dcStructField(st, 'p', offsetof(struct A558, m4), 1);
		dcStructField(st, 's', offsetof(struct A558, m5), 1);
		dcStructField(st, 'j', offsetof(struct A558, m6), 1);
		dcStructField(st, 'p', offsetof(struct A558, m7), 1);
		dcStructField(st, 'j', offsetof(struct A558, m8), 1);
		dcStructField(st, 'c', offsetof(struct A558, m9), 1);
		dcStructField(st, 'i', offsetof(struct A558, m10), 1);
		dcStructField(st, 'l', offsetof(struct A558, m11), 1);
		dcStructField(st, 's', offsetof(struct A558, m12), 1);
		dcStructField(st, 's', offsetof(struct A558, m13), 1);
		dcStructField(st, 'f', offsetof(struct A558, m14), 1);
		dcStructField(st, 's', offsetof(struct A558, m15), 1);
		dcStructField(st, 'i', offsetof(struct A558, m16), 1);
		dcStructField(st, 'j', offsetof(struct A558, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fldcd} */
struct A559 { f m0; l m1; d m2; c m3; d m4; };
void f_cpA559(struct A559 *x, const struct A559 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA559(const struct A559 *x, const struct A559 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA559() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A559), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A559, m0), 1);
		dcStructField(st, 'l', offsetof(struct A559, m1), 1);
		dcStructField(st, 'd', offsetof(struct A559, m2), 1);
		dcStructField(st, 'c', offsetof(struct A559, m3), 1);
		dcStructField(st, 'd', offsetof(struct A559, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjdjiilf} */
struct A560 { j m0; j m1; d m2; j m3; i m4; i m5; l m6; f m7; };
void f_cpA560(struct A560 *x, const struct A560 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA560(const struct A560 *x, const struct A560 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA560() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A560), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A560, m0), 1);
		dcStructField(st, 'j', offsetof(struct A560, m1), 1);
		dcStructField(st, 'd', offsetof(struct A560, m2), 1);
		dcStructField(st, 'j', offsetof(struct A560, m3), 1);
		dcStructField(st, 'i', offsetof(struct A560, m4), 1);
		dcStructField(st, 'i', offsetof(struct A560, m5), 1);
		dcStructField(st, 'l', offsetof(struct A560, m6), 1);
		dcStructField(st, 'f', offsetof(struct A560, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slflccpilflc{fldcd}pdfpf{jjdjiilf}{f}j} */
struct A561 { s m0; l m1; f m2; l m3; c m4; c m5; p m6; i m7; l m8; f m9; l m10; c m11; struct A559 m12; p m13; d m14; f m15; p m16; f m17; struct A560 m18; struct A28 m19; j m20; };
void f_cpA561(struct A561 *x, const struct A561 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA559(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA560(&x->m18, &y->m18); f_cpA28(&x->m19, &y->m19); x->m20 = y->m20; };
int f_cmpA561(const struct A561 *x, const struct A561 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA559(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA560(&x->m18, &y->m18) && f_cmpA28(&x->m19, &y->m19) && x->m20 == y->m20; };
DCstruct* f_touchdcstA561() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A561), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A561, m0), 1);
		dcStructField(st, 'l', offsetof(struct A561, m1), 1);
		dcStructField(st, 'f', offsetof(struct A561, m2), 1);
		dcStructField(st, 'l', offsetof(struct A561, m3), 1);
		dcStructField(st, 'c', offsetof(struct A561, m4), 1);
		dcStructField(st, 'c', offsetof(struct A561, m5), 1);
		dcStructField(st, 'p', offsetof(struct A561, m6), 1);
		dcStructField(st, 'i', offsetof(struct A561, m7), 1);
		dcStructField(st, 'l', offsetof(struct A561, m8), 1);
		dcStructField(st, 'f', offsetof(struct A561, m9), 1);
		dcStructField(st, 'l', offsetof(struct A561, m10), 1);
		dcStructField(st, 'c', offsetof(struct A561, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A561, m12), 1, f_touchdcstA559());
		dcStructField(st, 'p', offsetof(struct A561, m13), 1);
		dcStructField(st, 'd', offsetof(struct A561, m14), 1);
		dcStructField(st, 'f', offsetof(struct A561, m15), 1);
		dcStructField(st, 'p', offsetof(struct A561, m16), 1);
		dcStructField(st, 'f', offsetof(struct A561, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A561, m18), 1, f_touchdcstA560());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A561, m19), 1, f_touchdcstA28());
		dcStructField(st, 'j', offsetof(struct A561, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fclfjcfi} */
struct A562 { f m0; c m1; l m2; f m3; j m4; c m5; f m6; i m7; };
void f_cpA562(struct A562 *x, const struct A562 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA562(const struct A562 *x, const struct A562 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA562() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A562), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A562, m0), 1);
		dcStructField(st, 'c', offsetof(struct A562, m1), 1);
		dcStructField(st, 'l', offsetof(struct A562, m2), 1);
		dcStructField(st, 'f', offsetof(struct A562, m3), 1);
		dcStructField(st, 'j', offsetof(struct A562, m4), 1);
		dcStructField(st, 'c', offsetof(struct A562, m5), 1);
		dcStructField(st, 'f', offsetof(struct A562, m6), 1);
		dcStructField(st, 'i', offsetof(struct A562, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {di{s}jiccf} */
struct A563 { d m0; i m1; struct A27 m2; j m3; i m4; c m5; c m6; f m7; };
void f_cpA563(struct A563 *x, const struct A563 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA27(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA563(const struct A563 *x, const struct A563 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA27(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA563() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A563), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A563, m0), 1);
		dcStructField(st, 'i', offsetof(struct A563, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A563, m2), 1, f_touchdcstA27());
		dcStructField(st, 'j', offsetof(struct A563, m3), 1);
		dcStructField(st, 'i', offsetof(struct A563, m4), 1);
		dcStructField(st, 'c', offsetof(struct A563, m5), 1);
		dcStructField(st, 'c', offsetof(struct A563, m6), 1);
		dcStructField(st, 'f', offsetof(struct A563, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijdc} */
struct A564 { i m0; j m1; d m2; c m3; };
void f_cpA564(struct A564 *x, const struct A564 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA564(const struct A564 *x, const struct A564 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA564() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A564), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A564, m0), 1);
		dcStructField(st, 'j', offsetof(struct A564, m1), 1);
		dcStructField(st, 'd', offsetof(struct A564, m2), 1);
		dcStructField(st, 'c', offsetof(struct A564, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jipijssp} */
struct A565 { j m0; i m1; p m2; i m3; j m4; s m5; s m6; p m7; };
void f_cpA565(struct A565 *x, const struct A565 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA565(const struct A565 *x, const struct A565 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA565() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A565), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A565, m0), 1);
		dcStructField(st, 'i', offsetof(struct A565, m1), 1);
		dcStructField(st, 'p', offsetof(struct A565, m2), 1);
		dcStructField(st, 'i', offsetof(struct A565, m3), 1);
		dcStructField(st, 'j', offsetof(struct A565, m4), 1);
		dcStructField(st, 's', offsetof(struct A565, m5), 1);
		dcStructField(st, 's', offsetof(struct A565, m6), 1);
		dcStructField(st, 'p', offsetof(struct A565, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddfdsislp} */
struct A566 { d m0; d m1; f m2; d m3; s m4; i m5; s m6; l m7; p m8; };
void f_cpA566(struct A566 *x, const struct A566 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA566(const struct A566 *x, const struct A566 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA566() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A566), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A566, m0), 1);
		dcStructField(st, 'd', offsetof(struct A566, m1), 1);
		dcStructField(st, 'f', offsetof(struct A566, m2), 1);
		dcStructField(st, 'd', offsetof(struct A566, m3), 1);
		dcStructField(st, 's', offsetof(struct A566, m4), 1);
		dcStructField(st, 'i', offsetof(struct A566, m5), 1);
		dcStructField(st, 's', offsetof(struct A566, m6), 1);
		dcStructField(st, 'l', offsetof(struct A566, m7), 1);
		dcStructField(st, 'p', offsetof(struct A566, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{jipijssp}licl{ddfdsislp}sc} */
struct A567 { struct A565 m0; l m1; i m2; c m3; l m4; struct A566 m5; s m6; c m7; };
void f_cpA567(struct A567 *x, const struct A567 *y) { f_cpA565(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA566(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA567(const struct A567 *x, const struct A567 *y) { return f_cmpA565(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA566(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA567() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A567), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A567, m0), 1, f_touchdcstA565());
		dcStructField(st, 'l', offsetof(struct A567, m1), 1);
		dcStructField(st, 'i', offsetof(struct A567, m2), 1);
		dcStructField(st, 'c', offsetof(struct A567, m3), 1);
		dcStructField(st, 'l', offsetof(struct A567, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A567, m5), 1, f_touchdcstA566());
		dcStructField(st, 's', offsetof(struct A567, m6), 1);
		dcStructField(st, 'c', offsetof(struct A567, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjjpciijlc} */
struct A568 { p m0; j m1; j m2; p m3; c m4; i m5; i m6; j m7; l m8; c m9; };
void f_cpA568(struct A568 *x, const struct A568 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA568(const struct A568 *x, const struct A568 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA568() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A568), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A568, m0), 1);
		dcStructField(st, 'j', offsetof(struct A568, m1), 1);
		dcStructField(st, 'j', offsetof(struct A568, m2), 1);
		dcStructField(st, 'p', offsetof(struct A568, m3), 1);
		dcStructField(st, 'c', offsetof(struct A568, m4), 1);
		dcStructField(st, 'i', offsetof(struct A568, m5), 1);
		dcStructField(st, 'i', offsetof(struct A568, m6), 1);
		dcStructField(st, 'j', offsetof(struct A568, m7), 1);
		dcStructField(st, 'l', offsetof(struct A568, m8), 1);
		dcStructField(st, 'c', offsetof(struct A568, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjjfsddjid{pjjpciijlc}ccccs{jli}f} */
struct A569 { j m0; j m1; j m2; f m3; s m4; d m5; d m6; j m7; i m8; d m9; struct A568 m10; c m11; c m12; c m13; c m14; s m15; struct A521 m16; f m17; };
void f_cpA569(struct A569 *x, const struct A569 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA568(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA521(&x->m16, &y->m16); x->m17 = y->m17; };
int f_cmpA569(const struct A569 *x, const struct A569 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA568(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA521(&x->m16, &y->m16) && x->m17 == y->m17; };
DCstruct* f_touchdcstA569() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A569), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A569, m0), 1);
		dcStructField(st, 'j', offsetof(struct A569, m1), 1);
		dcStructField(st, 'j', offsetof(struct A569, m2), 1);
		dcStructField(st, 'f', offsetof(struct A569, m3), 1);
		dcStructField(st, 's', offsetof(struct A569, m4), 1);
		dcStructField(st, 'd', offsetof(struct A569, m5), 1);
		dcStructField(st, 'd', offsetof(struct A569, m6), 1);
		dcStructField(st, 'j', offsetof(struct A569, m7), 1);
		dcStructField(st, 'i', offsetof(struct A569, m8), 1);
		dcStructField(st, 'd', offsetof(struct A569, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A569, m10), 1, f_touchdcstA568());
		dcStructField(st, 'c', offsetof(struct A569, m11), 1);
		dcStructField(st, 'c', offsetof(struct A569, m12), 1);
		dcStructField(st, 'c', offsetof(struct A569, m13), 1);
		dcStructField(st, 'c', offsetof(struct A569, m14), 1);
		dcStructField(st, 's', offsetof(struct A569, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A569, m16), 1, f_touchdcstA521());
		dcStructField(st, 'f', offsetof(struct A569, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iplji{dp}{{jipijssp}licl{ddfdsislp}sc}c{jjjfsddjid{pjjpciijlc}ccccs{jli}f}d} */
struct A570 { i m0; p m1; l m2; j m3; i m4; struct A325 m5; struct A567 m6; c m7; struct A569 m8; d m9; };
void f_cpA570(struct A570 *x, const struct A570 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA325(&x->m5, &y->m5); f_cpA567(&x->m6, &y->m6); x->m7 = y->m7; f_cpA569(&x->m8, &y->m8); x->m9 = y->m9; };
int f_cmpA570(const struct A570 *x, const struct A570 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA325(&x->m5, &y->m5) && f_cmpA567(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA569(&x->m8, &y->m8) && x->m9 == y->m9; };
DCstruct* f_touchdcstA570() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A570), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A570, m0), 1);
		dcStructField(st, 'p', offsetof(struct A570, m1), 1);
		dcStructField(st, 'l', offsetof(struct A570, m2), 1);
		dcStructField(st, 'j', offsetof(struct A570, m3), 1);
		dcStructField(st, 'i', offsetof(struct A570, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A570, m5), 1, f_touchdcstA325());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A570, m6), 1, f_touchdcstA567());
		dcStructField(st, 'c', offsetof(struct A570, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A570, m8), 1, f_touchdcstA569());
		dcStructField(st, 'd', offsetof(struct A570, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jccdpcflcfpsjliflpsdffpcdf} */
struct A571 { j m0; c m1; c m2; d m3; p m4; c m5; f m6; l m7; c m8; f m9; p m10; s m11; j m12; l m13; i m14; f m15; l m16; p m17; s m18; d m19; f m20; f m21; p m22; c m23; d m24; f m25; };
void f_cpA571(struct A571 *x, const struct A571 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA571(const struct A571 *x, const struct A571 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA571() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A571), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A571, m0), 1);
		dcStructField(st, 'c', offsetof(struct A571, m1), 1);
		dcStructField(st, 'c', offsetof(struct A571, m2), 1);
		dcStructField(st, 'd', offsetof(struct A571, m3), 1);
		dcStructField(st, 'p', offsetof(struct A571, m4), 1);
		dcStructField(st, 'c', offsetof(struct A571, m5), 1);
		dcStructField(st, 'f', offsetof(struct A571, m6), 1);
		dcStructField(st, 'l', offsetof(struct A571, m7), 1);
		dcStructField(st, 'c', offsetof(struct A571, m8), 1);
		dcStructField(st, 'f', offsetof(struct A571, m9), 1);
		dcStructField(st, 'p', offsetof(struct A571, m10), 1);
		dcStructField(st, 's', offsetof(struct A571, m11), 1);
		dcStructField(st, 'j', offsetof(struct A571, m12), 1);
		dcStructField(st, 'l', offsetof(struct A571, m13), 1);
		dcStructField(st, 'i', offsetof(struct A571, m14), 1);
		dcStructField(st, 'f', offsetof(struct A571, m15), 1);
		dcStructField(st, 'l', offsetof(struct A571, m16), 1);
		dcStructField(st, 'p', offsetof(struct A571, m17), 1);
		dcStructField(st, 's', offsetof(struct A571, m18), 1);
		dcStructField(st, 'd', offsetof(struct A571, m19), 1);
		dcStructField(st, 'f', offsetof(struct A571, m20), 1);
		dcStructField(st, 'f', offsetof(struct A571, m21), 1);
		dcStructField(st, 'p', offsetof(struct A571, m22), 1);
		dcStructField(st, 'c', offsetof(struct A571, m23), 1);
		dcStructField(st, 'd', offsetof(struct A571, m24), 1);
		dcStructField(st, 'f', offsetof(struct A571, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iilpdjcscissd} */
struct A572 { i m0; i m1; l m2; p m3; d m4; j m5; c m6; s m7; c m8; i m9; s m10; s m11; d m12; };
void f_cpA572(struct A572 *x, const struct A572 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA572(const struct A572 *x, const struct A572 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA572() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A572), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A572, m0), 1);
		dcStructField(st, 'i', offsetof(struct A572, m1), 1);
		dcStructField(st, 'l', offsetof(struct A572, m2), 1);
		dcStructField(st, 'p', offsetof(struct A572, m3), 1);
		dcStructField(st, 'd', offsetof(struct A572, m4), 1);
		dcStructField(st, 'j', offsetof(struct A572, m5), 1);
		dcStructField(st, 'c', offsetof(struct A572, m6), 1);
		dcStructField(st, 's', offsetof(struct A572, m7), 1);
		dcStructField(st, 'c', offsetof(struct A572, m8), 1);
		dcStructField(st, 'i', offsetof(struct A572, m9), 1);
		dcStructField(st, 's', offsetof(struct A572, m10), 1);
		dcStructField(st, 's', offsetof(struct A572, m11), 1);
		dcStructField(st, 'd', offsetof(struct A572, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfdlcisfjllsdj{iilpdjcscissd}fspjffpdi} */
struct A573 { l m0; f m1; d m2; l m3; c m4; i m5; s m6; f m7; j m8; l m9; l m10; s m11; d m12; j m13; struct A572 m14; f m15; s m16; p m17; j m18; f m19; f m20; p m21; d m22; i m23; };
void f_cpA573(struct A573 *x, const struct A573 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA572(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA573(const struct A573 *x, const struct A573 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA572(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA573() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A573), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A573, m0), 1);
		dcStructField(st, 'f', offsetof(struct A573, m1), 1);
		dcStructField(st, 'd', offsetof(struct A573, m2), 1);
		dcStructField(st, 'l', offsetof(struct A573, m3), 1);
		dcStructField(st, 'c', offsetof(struct A573, m4), 1);
		dcStructField(st, 'i', offsetof(struct A573, m5), 1);
		dcStructField(st, 's', offsetof(struct A573, m6), 1);
		dcStructField(st, 'f', offsetof(struct A573, m7), 1);
		dcStructField(st, 'j', offsetof(struct A573, m8), 1);
		dcStructField(st, 'l', offsetof(struct A573, m9), 1);
		dcStructField(st, 'l', offsetof(struct A573, m10), 1);
		dcStructField(st, 's', offsetof(struct A573, m11), 1);
		dcStructField(st, 'd', offsetof(struct A573, m12), 1);
		dcStructField(st, 'j', offsetof(struct A573, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A573, m14), 1, f_touchdcstA572());
		dcStructField(st, 'f', offsetof(struct A573, m15), 1);
		dcStructField(st, 's', offsetof(struct A573, m16), 1);
		dcStructField(st, 'p', offsetof(struct A573, m17), 1);
		dcStructField(st, 'j', offsetof(struct A573, m18), 1);
		dcStructField(st, 'f', offsetof(struct A573, m19), 1);
		dcStructField(st, 'f', offsetof(struct A573, m20), 1);
		dcStructField(st, 'p', offsetof(struct A573, m21), 1);
		dcStructField(st, 'd', offsetof(struct A573, m22), 1);
		dcStructField(st, 'i', offsetof(struct A573, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sffsljls} */
struct A574 { s m0; f m1; f m2; s m3; l m4; j m5; l m6; s m7; };
void f_cpA574(struct A574 *x, const struct A574 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA574(const struct A574 *x, const struct A574 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA574() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A574), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A574, m0), 1);
		dcStructField(st, 'f', offsetof(struct A574, m1), 1);
		dcStructField(st, 'f', offsetof(struct A574, m2), 1);
		dcStructField(st, 's', offsetof(struct A574, m3), 1);
		dcStructField(st, 'l', offsetof(struct A574, m4), 1);
		dcStructField(st, 'j', offsetof(struct A574, m5), 1);
		dcStructField(st, 'l', offsetof(struct A574, m6), 1);
		dcStructField(st, 's', offsetof(struct A574, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isdcscfjilsfsccspfj} */
struct A575 { i m0; s m1; d m2; c m3; s m4; c m5; f m6; j m7; i m8; l m9; s m10; f m11; s m12; c m13; c m14; s m15; p m16; f m17; j m18; };
void f_cpA575(struct A575 *x, const struct A575 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA575(const struct A575 *x, const struct A575 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA575() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A575), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A575, m0), 1);
		dcStructField(st, 's', offsetof(struct A575, m1), 1);
		dcStructField(st, 'd', offsetof(struct A575, m2), 1);
		dcStructField(st, 'c', offsetof(struct A575, m3), 1);
		dcStructField(st, 's', offsetof(struct A575, m4), 1);
		dcStructField(st, 'c', offsetof(struct A575, m5), 1);
		dcStructField(st, 'f', offsetof(struct A575, m6), 1);
		dcStructField(st, 'j', offsetof(struct A575, m7), 1);
		dcStructField(st, 'i', offsetof(struct A575, m8), 1);
		dcStructField(st, 'l', offsetof(struct A575, m9), 1);
		dcStructField(st, 's', offsetof(struct A575, m10), 1);
		dcStructField(st, 'f', offsetof(struct A575, m11), 1);
		dcStructField(st, 's', offsetof(struct A575, m12), 1);
		dcStructField(st, 'c', offsetof(struct A575, m13), 1);
		dcStructField(st, 'c', offsetof(struct A575, m14), 1);
		dcStructField(st, 's', offsetof(struct A575, m15), 1);
		dcStructField(st, 'p', offsetof(struct A575, m16), 1);
		dcStructField(st, 'f', offsetof(struct A575, m17), 1);
		dcStructField(st, 'j', offsetof(struct A575, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldsddcjjcccip} */
struct A576 { l m0; d m1; s m2; d m3; d m4; c m5; j m6; j m7; c m8; c m9; c m10; i m11; p m12; };
void f_cpA576(struct A576 *x, const struct A576 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA576(const struct A576 *x, const struct A576 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA576() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A576), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A576, m0), 1);
		dcStructField(st, 'd', offsetof(struct A576, m1), 1);
		dcStructField(st, 's', offsetof(struct A576, m2), 1);
		dcStructField(st, 'd', offsetof(struct A576, m3), 1);
		dcStructField(st, 'd', offsetof(struct A576, m4), 1);
		dcStructField(st, 'c', offsetof(struct A576, m5), 1);
		dcStructField(st, 'j', offsetof(struct A576, m6), 1);
		dcStructField(st, 'j', offsetof(struct A576, m7), 1);
		dcStructField(st, 'c', offsetof(struct A576, m8), 1);
		dcStructField(st, 'c', offsetof(struct A576, m9), 1);
		dcStructField(st, 'c', offsetof(struct A576, m10), 1);
		dcStructField(st, 'i', offsetof(struct A576, m11), 1);
		dcStructField(st, 'p', offsetof(struct A576, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jiilspfijlfci} */
struct A577 { j m0; i m1; i m2; l m3; s m4; p m5; f m6; i m7; j m8; l m9; f m10; c m11; i m12; };
void f_cpA577(struct A577 *x, const struct A577 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA577(const struct A577 *x, const struct A577 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA577() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A577), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A577, m0), 1);
		dcStructField(st, 'i', offsetof(struct A577, m1), 1);
		dcStructField(st, 'i', offsetof(struct A577, m2), 1);
		dcStructField(st, 'l', offsetof(struct A577, m3), 1);
		dcStructField(st, 's', offsetof(struct A577, m4), 1);
		dcStructField(st, 'p', offsetof(struct A577, m5), 1);
		dcStructField(st, 'f', offsetof(struct A577, m6), 1);
		dcStructField(st, 'i', offsetof(struct A577, m7), 1);
		dcStructField(st, 'j', offsetof(struct A577, m8), 1);
		dcStructField(st, 'l', offsetof(struct A577, m9), 1);
		dcStructField(st, 'f', offsetof(struct A577, m10), 1);
		dcStructField(st, 'c', offsetof(struct A577, m11), 1);
		dcStructField(st, 'i', offsetof(struct A577, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{ldsddcjjcccip}fclj{jiilspfijlfci}} */
struct A578 { struct A576 m0; f m1; c m2; l m3; j m4; struct A577 m5; };
void f_cpA578(struct A578 *x, const struct A578 *y) { f_cpA576(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA577(&x->m5, &y->m5); };
int f_cmpA578(const struct A578 *x, const struct A578 *y) { return f_cmpA576(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA577(&x->m5, &y->m5); };
DCstruct* f_touchdcstA578() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A578), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A578, m0), 1, f_touchdcstA576());
		dcStructField(st, 'f', offsetof(struct A578, m1), 1);
		dcStructField(st, 'c', offsetof(struct A578, m2), 1);
		dcStructField(st, 'l', offsetof(struct A578, m3), 1);
		dcStructField(st, 'j', offsetof(struct A578, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A578, m5), 1, f_touchdcstA577());
		dcCloseStruct(st);
	}
	return st;
};
/* {{ls}isc{{ldsddcjjcccip}fclj{jiilspfijlfci}}pcj{cl}j} */
struct A579 { struct A256 m0; i m1; s m2; c m3; struct A578 m4; p m5; c m6; j m7; struct A150 m8; j m9; };
void f_cpA579(struct A579 *x, const struct A579 *y) { f_cpA256(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA578(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA150(&x->m8, &y->m8); x->m9 = y->m9; };
int f_cmpA579(const struct A579 *x, const struct A579 *y) { return f_cmpA256(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA578(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA150(&x->m8, &y->m8) && x->m9 == y->m9; };
DCstruct* f_touchdcstA579() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A579), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A579, m0), 1, f_touchdcstA256());
		dcStructField(st, 'i', offsetof(struct A579, m1), 1);
		dcStructField(st, 's', offsetof(struct A579, m2), 1);
		dcStructField(st, 'c', offsetof(struct A579, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A579, m4), 1, f_touchdcstA578());
		dcStructField(st, 'p', offsetof(struct A579, m5), 1);
		dcStructField(st, 'c', offsetof(struct A579, m6), 1);
		dcStructField(st, 'j', offsetof(struct A579, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A579, m8), 1, f_touchdcstA150());
		dcStructField(st, 'j', offsetof(struct A579, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jssfcjffpjpfs} */
struct A580 { j m0; s m1; s m2; f m3; c m4; j m5; f m6; f m7; p m8; j m9; p m10; f m11; s m12; };
void f_cpA580(struct A580 *x, const struct A580 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA580(const struct A580 *x, const struct A580 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA580() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A580), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A580, m0), 1);
		dcStructField(st, 's', offsetof(struct A580, m1), 1);
		dcStructField(st, 's', offsetof(struct A580, m2), 1);
		dcStructField(st, 'f', offsetof(struct A580, m3), 1);
		dcStructField(st, 'c', offsetof(struct A580, m4), 1);
		dcStructField(st, 'j', offsetof(struct A580, m5), 1);
		dcStructField(st, 'f', offsetof(struct A580, m6), 1);
		dcStructField(st, 'f', offsetof(struct A580, m7), 1);
		dcStructField(st, 'p', offsetof(struct A580, m8), 1);
		dcStructField(st, 'j', offsetof(struct A580, m9), 1);
		dcStructField(st, 'p', offsetof(struct A580, m10), 1);
		dcStructField(st, 'f', offsetof(struct A580, m11), 1);
		dcStructField(st, 's', offsetof(struct A580, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jliplfis} */
struct A581 { j m0; l m1; i m2; p m3; l m4; f m5; i m6; s m7; };
void f_cpA581(struct A581 *x, const struct A581 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA581(const struct A581 *x, const struct A581 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA581() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A581), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A581, m0), 1);
		dcStructField(st, 'l', offsetof(struct A581, m1), 1);
		dcStructField(st, 'i', offsetof(struct A581, m2), 1);
		dcStructField(st, 'p', offsetof(struct A581, m3), 1);
		dcStructField(st, 'l', offsetof(struct A581, m4), 1);
		dcStructField(st, 'f', offsetof(struct A581, m5), 1);
		dcStructField(st, 'i', offsetof(struct A581, m6), 1);
		dcStructField(st, 's', offsetof(struct A581, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fji} */
struct A582 { f m0; j m1; i m2; };
void f_cpA582(struct A582 *x, const struct A582 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA582(const struct A582 *x, const struct A582 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA582() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A582), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A582, m0), 1);
		dcStructField(st, 'j', offsetof(struct A582, m1), 1);
		dcStructField(st, 'i', offsetof(struct A582, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iscjcisi} */
struct A583 { i m0; s m1; c m2; j m3; c m4; i m5; s m6; i m7; };
void f_cpA583(struct A583 *x, const struct A583 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA583(const struct A583 *x, const struct A583 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA583() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A583), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A583, m0), 1);
		dcStructField(st, 's', offsetof(struct A583, m1), 1);
		dcStructField(st, 'c', offsetof(struct A583, m2), 1);
		dcStructField(st, 'j', offsetof(struct A583, m3), 1);
		dcStructField(st, 'c', offsetof(struct A583, m4), 1);
		dcStructField(st, 'i', offsetof(struct A583, m5), 1);
		dcStructField(st, 's', offsetof(struct A583, m6), 1);
		dcStructField(st, 'i', offsetof(struct A583, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdjisps} */
struct A584 { f m0; d m1; j m2; i m3; s m4; p m5; s m6; };
void f_cpA584(struct A584 *x, const struct A584 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA584(const struct A584 *x, const struct A584 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA584() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A584), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A584, m0), 1);
		dcStructField(st, 'd', offsetof(struct A584, m1), 1);
		dcStructField(st, 'j', offsetof(struct A584, m2), 1);
		dcStructField(st, 'i', offsetof(struct A584, m3), 1);
		dcStructField(st, 's', offsetof(struct A584, m4), 1);
		dcStructField(st, 'p', offsetof(struct A584, m5), 1);
		dcStructField(st, 's', offsetof(struct A584, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sccjcilspi} */
struct A585 { s m0; c m1; c m2; j m3; c m4; i m5; l m6; s m7; p m8; i m9; };
void f_cpA585(struct A585 *x, const struct A585 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA585(const struct A585 *x, const struct A585 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA585() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A585), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A585, m0), 1);
		dcStructField(st, 'c', offsetof(struct A585, m1), 1);
		dcStructField(st, 'c', offsetof(struct A585, m2), 1);
		dcStructField(st, 'j', offsetof(struct A585, m3), 1);
		dcStructField(st, 'c', offsetof(struct A585, m4), 1);
		dcStructField(st, 'i', offsetof(struct A585, m5), 1);
		dcStructField(st, 'l', offsetof(struct A585, m6), 1);
		dcStructField(st, 's', offsetof(struct A585, m7), 1);
		dcStructField(st, 'p', offsetof(struct A585, m8), 1);
		dcStructField(st, 'i', offsetof(struct A585, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {s{sccjcilspi}iiiisd{sc}fi} */
struct A586 { s m0; struct A585 m1; i m2; i m3; i m4; i m5; s m6; d m7; struct A426 m8; f m9; i m10; };
void f_cpA586(struct A586 *x, const struct A586 *y) { x->m0 = y->m0; f_cpA585(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA426(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA586(const struct A586 *x, const struct A586 *y) { return x->m0 == y->m0 && f_cmpA585(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA426(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA586() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A586), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A586, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A586, m1), 1, f_touchdcstA585());
		dcStructField(st, 'i', offsetof(struct A586, m2), 1);
		dcStructField(st, 'i', offsetof(struct A586, m3), 1);
		dcStructField(st, 'i', offsetof(struct A586, m4), 1);
		dcStructField(st, 'i', offsetof(struct A586, m5), 1);
		dcStructField(st, 's', offsetof(struct A586, m6), 1);
		dcStructField(st, 'd', offsetof(struct A586, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A586, m8), 1, f_touchdcstA426());
		dcStructField(st, 'f', offsetof(struct A586, m9), 1);
		dcStructField(st, 'i', offsetof(struct A586, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjd} */
struct A587 { f m0; j m1; d m2; };
void f_cpA587(struct A587 *x, const struct A587 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA587(const struct A587 *x, const struct A587 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA587() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A587), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A587, m0), 1);
		dcStructField(st, 'j', offsetof(struct A587, m1), 1);
		dcStructField(st, 'd', offsetof(struct A587, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldpcfijpcci} */
struct A588 { l m0; d m1; p m2; c m3; f m4; i m5; j m6; p m7; c m8; c m9; i m10; };
void f_cpA588(struct A588 *x, const struct A588 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA588(const struct A588 *x, const struct A588 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA588() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A588), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A588, m0), 1);
		dcStructField(st, 'd', offsetof(struct A588, m1), 1);
		dcStructField(st, 'p', offsetof(struct A588, m2), 1);
		dcStructField(st, 'c', offsetof(struct A588, m3), 1);
		dcStructField(st, 'f', offsetof(struct A588, m4), 1);
		dcStructField(st, 'i', offsetof(struct A588, m5), 1);
		dcStructField(st, 'j', offsetof(struct A588, m6), 1);
		dcStructField(st, 'p', offsetof(struct A588, m7), 1);
		dcStructField(st, 'c', offsetof(struct A588, m8), 1);
		dcStructField(st, 'c', offsetof(struct A588, m9), 1);
		dcStructField(st, 'i', offsetof(struct A588, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flj} */
struct A589 { f m0; l m1; j m2; };
void f_cpA589(struct A589 *x, const struct A589 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA589(const struct A589 *x, const struct A589 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA589() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A589), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A589, m0), 1);
		dcStructField(st, 'l', offsetof(struct A589, m1), 1);
		dcStructField(st, 'j', offsetof(struct A589, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljlf{ldpcfijpcci}ci{flj}fjdp} */
struct A590 { l m0; j m1; l m2; f m3; struct A588 m4; c m5; i m6; struct A589 m7; f m8; j m9; d m10; p m11; };
void f_cpA590(struct A590 *x, const struct A590 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA588(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA589(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA590(const struct A590 *x, const struct A590 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA588(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA589(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA590() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A590), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A590, m0), 1);
		dcStructField(st, 'j', offsetof(struct A590, m1), 1);
		dcStructField(st, 'l', offsetof(struct A590, m2), 1);
		dcStructField(st, 'f', offsetof(struct A590, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A590, m4), 1, f_touchdcstA588());
		dcStructField(st, 'c', offsetof(struct A590, m5), 1);
		dcStructField(st, 'i', offsetof(struct A590, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A590, m7), 1, f_touchdcstA589());
		dcStructField(st, 'f', offsetof(struct A590, m8), 1);
		dcStructField(st, 'j', offsetof(struct A590, m9), 1);
		dcStructField(st, 'd', offsetof(struct A590, m10), 1);
		dcStructField(st, 'p', offsetof(struct A590, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idi} */
struct A591 { i m0; d m1; i m2; };
void f_cpA591(struct A591 *x, const struct A591 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA591(const struct A591 *x, const struct A591 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA591() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A591), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A591, m0), 1);
		dcStructField(st, 'd', offsetof(struct A591, m1), 1);
		dcStructField(st, 'i', offsetof(struct A591, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpjdspflsdplfffpic{idi}isssp} */
struct A592 { f m0; p m1; j m2; d m3; s m4; p m5; f m6; l m7; s m8; d m9; p m10; l m11; f m12; f m13; f m14; p m15; i m16; c m17; struct A591 m18; i m19; s m20; s m21; s m22; p m23; };
void f_cpA592(struct A592 *x, const struct A592 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA591(&x->m18, &y->m18); x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA592(const struct A592 *x, const struct A592 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA591(&x->m18, &y->m18) && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA592() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A592), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A592, m0), 1);
		dcStructField(st, 'p', offsetof(struct A592, m1), 1);
		dcStructField(st, 'j', offsetof(struct A592, m2), 1);
		dcStructField(st, 'd', offsetof(struct A592, m3), 1);
		dcStructField(st, 's', offsetof(struct A592, m4), 1);
		dcStructField(st, 'p', offsetof(struct A592, m5), 1);
		dcStructField(st, 'f', offsetof(struct A592, m6), 1);
		dcStructField(st, 'l', offsetof(struct A592, m7), 1);
		dcStructField(st, 's', offsetof(struct A592, m8), 1);
		dcStructField(st, 'd', offsetof(struct A592, m9), 1);
		dcStructField(st, 'p', offsetof(struct A592, m10), 1);
		dcStructField(st, 'l', offsetof(struct A592, m11), 1);
		dcStructField(st, 'f', offsetof(struct A592, m12), 1);
		dcStructField(st, 'f', offsetof(struct A592, m13), 1);
		dcStructField(st, 'f', offsetof(struct A592, m14), 1);
		dcStructField(st, 'p', offsetof(struct A592, m15), 1);
		dcStructField(st, 'i', offsetof(struct A592, m16), 1);
		dcStructField(st, 'c', offsetof(struct A592, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A592, m18), 1, f_touchdcstA591());
		dcStructField(st, 'i', offsetof(struct A592, m19), 1);
		dcStructField(st, 's', offsetof(struct A592, m20), 1);
		dcStructField(st, 's', offsetof(struct A592, m21), 1);
		dcStructField(st, 's', offsetof(struct A592, m22), 1);
		dcStructField(st, 'p', offsetof(struct A592, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfjdjli} */
struct A593 { j m0; f m1; j m2; d m3; j m4; l m5; i m6; };
void f_cpA593(struct A593 *x, const struct A593 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA593(const struct A593 *x, const struct A593 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA593() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A593), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A593, m0), 1);
		dcStructField(st, 'f', offsetof(struct A593, m1), 1);
		dcStructField(st, 'j', offsetof(struct A593, m2), 1);
		dcStructField(st, 'd', offsetof(struct A593, m3), 1);
		dcStructField(st, 'j', offsetof(struct A593, m4), 1);
		dcStructField(st, 'l', offsetof(struct A593, m5), 1);
		dcStructField(st, 'i', offsetof(struct A593, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fpjdspflsdplfffpic{idi}isssp}{jfjdjli}} */
struct A594 { struct A592 m0; struct A593 m1; };
void f_cpA594(struct A594 *x, const struct A594 *y) { f_cpA592(&x->m0, &y->m0); f_cpA593(&x->m1, &y->m1); };
int f_cmpA594(const struct A594 *x, const struct A594 *y) { return f_cmpA592(&x->m0, &y->m0) && f_cmpA593(&x->m1, &y->m1); };
DCstruct* f_touchdcstA594() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A594), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A594, m0), 1, f_touchdcstA592());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A594, m1), 1, f_touchdcstA593());
		dcCloseStruct(st);
	}
	return st;
};
/* {dfjcfjljifcdpliispsdcsldcijsf} */
struct A595 { d m0; f m1; j m2; c m3; f m4; j m5; l m6; j m7; i m8; f m9; c m10; d m11; p m12; l m13; i m14; i m15; s m16; p m17; s m18; d m19; c m20; s m21; l m22; d m23; c m24; i m25; j m26; s m27; f m28; };
void f_cpA595(struct A595 *x, const struct A595 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA595(const struct A595 *x, const struct A595 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA595() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(struct A595), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A595, m0), 1);
		dcStructField(st, 'f', offsetof(struct A595, m1), 1);
		dcStructField(st, 'j', offsetof(struct A595, m2), 1);
		dcStructField(st, 'c', offsetof(struct A595, m3), 1);
		dcStructField(st, 'f', offsetof(struct A595, m4), 1);
		dcStructField(st, 'j', offsetof(struct A595, m5), 1);
		dcStructField(st, 'l', offsetof(struct A595, m6), 1);
		dcStructField(st, 'j', offsetof(struct A595, m7), 1);
		dcStructField(st, 'i', offsetof(struct A595, m8), 1);
		dcStructField(st, 'f', offsetof(struct A595, m9), 1);
		dcStructField(st, 'c', offsetof(struct A595, m10), 1);
		dcStructField(st, 'd', offsetof(struct A595, m11), 1);
		dcStructField(st, 'p', offsetof(struct A595, m12), 1);
		dcStructField(st, 'l', offsetof(struct A595, m13), 1);
		dcStructField(st, 'i', offsetof(struct A595, m14), 1);
		dcStructField(st, 'i', offsetof(struct A595, m15), 1);
		dcStructField(st, 's', offsetof(struct A595, m16), 1);
		dcStructField(st, 'p', offsetof(struct A595, m17), 1);
		dcStructField(st, 's', offsetof(struct A595, m18), 1);
		dcStructField(st, 'd', offsetof(struct A595, m19), 1);
		dcStructField(st, 'c', offsetof(struct A595, m20), 1);
		dcStructField(st, 's', offsetof(struct A595, m21), 1);
		dcStructField(st, 'l', offsetof(struct A595, m22), 1);
		dcStructField(st, 'd', offsetof(struct A595, m23), 1);
		dcStructField(st, 'c', offsetof(struct A595, m24), 1);
		dcStructField(st, 'i', offsetof(struct A595, m25), 1);
		dcStructField(st, 'j', offsetof(struct A595, m26), 1);
		dcStructField(st, 's', offsetof(struct A595, m27), 1);
		dcStructField(st, 'f', offsetof(struct A595, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcdfffpci{dfjcfjljifcdpliispsdcsldcijsf}pfp} */
struct A596 { p m0; c m1; d m2; f m3; f m4; f m5; p m6; c m7; i m8; struct A595 m9; p m10; f m11; p m12; };
void f_cpA596(struct A596 *x, const struct A596 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA595(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA596(const struct A596 *x, const struct A596 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA595(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA596() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A596), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A596, m0), 1);
		dcStructField(st, 'c', offsetof(struct A596, m1), 1);
		dcStructField(st, 'd', offsetof(struct A596, m2), 1);
		dcStructField(st, 'f', offsetof(struct A596, m3), 1);
		dcStructField(st, 'f', offsetof(struct A596, m4), 1);
		dcStructField(st, 'f', offsetof(struct A596, m5), 1);
		dcStructField(st, 'p', offsetof(struct A596, m6), 1);
		dcStructField(st, 'c', offsetof(struct A596, m7), 1);
		dcStructField(st, 'i', offsetof(struct A596, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A596, m9), 1, f_touchdcstA595());
		dcStructField(st, 'p', offsetof(struct A596, m10), 1);
		dcStructField(st, 'f', offsetof(struct A596, m11), 1);
		dcStructField(st, 'p', offsetof(struct A596, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccjjjlls} */
struct A597 { c m0; c m1; j m2; j m3; j m4; l m5; l m6; s m7; };
void f_cpA597(struct A597 *x, const struct A597 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA597(const struct A597 *x, const struct A597 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA597() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A597), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A597, m0), 1);
		dcStructField(st, 'c', offsetof(struct A597, m1), 1);
		dcStructField(st, 'j', offsetof(struct A597, m2), 1);
		dcStructField(st, 'j', offsetof(struct A597, m3), 1);
		dcStructField(st, 'j', offsetof(struct A597, m4), 1);
		dcStructField(st, 'l', offsetof(struct A597, m5), 1);
		dcStructField(st, 'l', offsetof(struct A597, m6), 1);
		dcStructField(st, 's', offsetof(struct A597, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{ccjjjlls}fpflf} */
struct A598 { p m0; struct A597 m1; f m2; p m3; f m4; l m5; f m6; };
void f_cpA598(struct A598 *x, const struct A598 *y) { x->m0 = y->m0; f_cpA597(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA598(const struct A598 *x, const struct A598 *y) { return x->m0 == y->m0 && f_cmpA597(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA598() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A598), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A598, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A598, m1), 1, f_touchdcstA597());
		dcStructField(st, 'f', offsetof(struct A598, m2), 1);
		dcStructField(st, 'p', offsetof(struct A598, m3), 1);
		dcStructField(st, 'f', offsetof(struct A598, m4), 1);
		dcStructField(st, 'l', offsetof(struct A598, m5), 1);
		dcStructField(st, 'f', offsetof(struct A598, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i{id}fpjjfj} */
struct A599 { i m0; struct A178 m1; f m2; p m3; j m4; j m5; f m6; j m7; };
void f_cpA599(struct A599 *x, const struct A599 *y) { x->m0 = y->m0; f_cpA178(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA599(const struct A599 *x, const struct A599 *y) { return x->m0 == y->m0 && f_cmpA178(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA599() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A599), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A599, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A599, m1), 1, f_touchdcstA178());
		dcStructField(st, 'f', offsetof(struct A599, m2), 1);
		dcStructField(st, 'p', offsetof(struct A599, m3), 1);
		dcStructField(st, 'j', offsetof(struct A599, m4), 1);
		dcStructField(st, 'j', offsetof(struct A599, m5), 1);
		dcStructField(st, 'f', offsetof(struct A599, m6), 1);
		dcStructField(st, 'j', offsetof(struct A599, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfsdipccplcpssjp} */
struct A600 { c m0; f m1; s m2; d m3; i m4; p m5; c m6; c m7; p m8; l m9; c m10; p m11; s m12; s m13; j m14; p m15; };
void f_cpA600(struct A600 *x, const struct A600 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA600(const struct A600 *x, const struct A600 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA600() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A600), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A600, m0), 1);
		dcStructField(st, 'f', offsetof(struct A600, m1), 1);
		dcStructField(st, 's', offsetof(struct A600, m2), 1);
		dcStructField(st, 'd', offsetof(struct A600, m3), 1);
		dcStructField(st, 'i', offsetof(struct A600, m4), 1);
		dcStructField(st, 'p', offsetof(struct A600, m5), 1);
		dcStructField(st, 'c', offsetof(struct A600, m6), 1);
		dcStructField(st, 'c', offsetof(struct A600, m7), 1);
		dcStructField(st, 'p', offsetof(struct A600, m8), 1);
		dcStructField(st, 'l', offsetof(struct A600, m9), 1);
		dcStructField(st, 'c', offsetof(struct A600, m10), 1);
		dcStructField(st, 'p', offsetof(struct A600, m11), 1);
		dcStructField(st, 's', offsetof(struct A600, m12), 1);
		dcStructField(st, 's', offsetof(struct A600, m13), 1);
		dcStructField(st, 'j', offsetof(struct A600, m14), 1);
		dcStructField(st, 'p', offsetof(struct A600, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdpidcfifl} */
struct A601 { s m0; d m1; p m2; i m3; d m4; c m5; f m6; i m7; f m8; l m9; };
void f_cpA601(struct A601 *x, const struct A601 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA601(const struct A601 *x, const struct A601 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA601() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A601), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A601, m0), 1);
		dcStructField(st, 'd', offsetof(struct A601, m1), 1);
		dcStructField(st, 'p', offsetof(struct A601, m2), 1);
		dcStructField(st, 'i', offsetof(struct A601, m3), 1);
		dcStructField(st, 'd', offsetof(struct A601, m4), 1);
		dcStructField(st, 'c', offsetof(struct A601, m5), 1);
		dcStructField(st, 'f', offsetof(struct A601, m6), 1);
		dcStructField(st, 'i', offsetof(struct A601, m7), 1);
		dcStructField(st, 'f', offsetof(struct A601, m8), 1);
		dcStructField(st, 'l', offsetof(struct A601, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {s{sdpidcfifl}lcl} */
struct A602 { s m0; struct A601 m1; l m2; c m3; l m4; };
void f_cpA602(struct A602 *x, const struct A602 *y) { x->m0 = y->m0; f_cpA601(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA602(const struct A602 *x, const struct A602 *y) { return x->m0 == y->m0 && f_cmpA601(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA602() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A602), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A602, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A602, m1), 1, f_touchdcstA601());
		dcStructField(st, 'l', offsetof(struct A602, m2), 1);
		dcStructField(st, 'c', offsetof(struct A602, m3), 1);
		dcStructField(st, 'l', offsetof(struct A602, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifpjijiisdspclipilsdffijjj} */
struct A603 { i m0; f m1; p m2; j m3; i m4; j m5; i m6; i m7; s m8; d m9; s m10; p m11; c m12; l m13; i m14; p m15; i m16; l m17; s m18; d m19; f m20; f m21; i m22; j m23; j m24; j m25; };
void f_cpA603(struct A603 *x, const struct A603 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA603(const struct A603 *x, const struct A603 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA603() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A603), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A603, m0), 1);
		dcStructField(st, 'f', offsetof(struct A603, m1), 1);
		dcStructField(st, 'p', offsetof(struct A603, m2), 1);
		dcStructField(st, 'j', offsetof(struct A603, m3), 1);
		dcStructField(st, 'i', offsetof(struct A603, m4), 1);
		dcStructField(st, 'j', offsetof(struct A603, m5), 1);
		dcStructField(st, 'i', offsetof(struct A603, m6), 1);
		dcStructField(st, 'i', offsetof(struct A603, m7), 1);
		dcStructField(st, 's', offsetof(struct A603, m8), 1);
		dcStructField(st, 'd', offsetof(struct A603, m9), 1);
		dcStructField(st, 's', offsetof(struct A603, m10), 1);
		dcStructField(st, 'p', offsetof(struct A603, m11), 1);
		dcStructField(st, 'c', offsetof(struct A603, m12), 1);
		dcStructField(st, 'l', offsetof(struct A603, m13), 1);
		dcStructField(st, 'i', offsetof(struct A603, m14), 1);
		dcStructField(st, 'p', offsetof(struct A603, m15), 1);
		dcStructField(st, 'i', offsetof(struct A603, m16), 1);
		dcStructField(st, 'l', offsetof(struct A603, m17), 1);
		dcStructField(st, 's', offsetof(struct A603, m18), 1);
		dcStructField(st, 'd', offsetof(struct A603, m19), 1);
		dcStructField(st, 'f', offsetof(struct A603, m20), 1);
		dcStructField(st, 'f', offsetof(struct A603, m21), 1);
		dcStructField(st, 'i', offsetof(struct A603, m22), 1);
		dcStructField(st, 'j', offsetof(struct A603, m23), 1);
		dcStructField(st, 'j', offsetof(struct A603, m24), 1);
		dcStructField(st, 'j', offsetof(struct A603, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ic} */
struct A604 { i m0; c m1; };
void f_cpA604(struct A604 *x, const struct A604 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA604(const struct A604 *x, const struct A604 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA604() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A604), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A604, m0), 1);
		dcStructField(st, 'c', offsetof(struct A604, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssfjilpdl} */
struct A605 { s m0; s m1; f m2; j m3; i m4; l m5; p m6; d m7; l m8; };
void f_cpA605(struct A605 *x, const struct A605 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA605(const struct A605 *x, const struct A605 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA605() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A605), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A605, m0), 1);
		dcStructField(st, 's', offsetof(struct A605, m1), 1);
		dcStructField(st, 'f', offsetof(struct A605, m2), 1);
		dcStructField(st, 'j', offsetof(struct A605, m3), 1);
		dcStructField(st, 'i', offsetof(struct A605, m4), 1);
		dcStructField(st, 'l', offsetof(struct A605, m5), 1);
		dcStructField(st, 'p', offsetof(struct A605, m6), 1);
		dcStructField(st, 'd', offsetof(struct A605, m7), 1);
		dcStructField(st, 'l', offsetof(struct A605, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lclislf} */
struct A606 { l m0; c m1; l m2; i m3; s m4; l m5; f m6; };
void f_cpA606(struct A606 *x, const struct A606 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA606(const struct A606 *x, const struct A606 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA606() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A606), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A606, m0), 1);
		dcStructField(st, 'c', offsetof(struct A606, m1), 1);
		dcStructField(st, 'l', offsetof(struct A606, m2), 1);
		dcStructField(st, 'i', offsetof(struct A606, m3), 1);
		dcStructField(st, 's', offsetof(struct A606, m4), 1);
		dcStructField(st, 'l', offsetof(struct A606, m5), 1);
		dcStructField(st, 'f', offsetof(struct A606, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fppijfisdii} */
struct A607 { f m0; p m1; p m2; i m3; j m4; f m5; i m6; s m7; d m8; i m9; i m10; };
void f_cpA607(struct A607 *x, const struct A607 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA607(const struct A607 *x, const struct A607 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA607() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A607), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A607, m0), 1);
		dcStructField(st, 'p', offsetof(struct A607, m1), 1);
		dcStructField(st, 'p', offsetof(struct A607, m2), 1);
		dcStructField(st, 'i', offsetof(struct A607, m3), 1);
		dcStructField(st, 'j', offsetof(struct A607, m4), 1);
		dcStructField(st, 'f', offsetof(struct A607, m5), 1);
		dcStructField(st, 'i', offsetof(struct A607, m6), 1);
		dcStructField(st, 's', offsetof(struct A607, m7), 1);
		dcStructField(st, 'd', offsetof(struct A607, m8), 1);
		dcStructField(st, 'i', offsetof(struct A607, m9), 1);
		dcStructField(st, 'i', offsetof(struct A607, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fif{fppijfisdii}jslcclipfsjjdp} */
struct A608 { f m0; i m1; f m2; struct A607 m3; j m4; s m5; l m6; c m7; c m8; l m9; i m10; p m11; f m12; s m13; j m14; j m15; d m16; p m17; };
void f_cpA608(struct A608 *x, const struct A608 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA607(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA608(const struct A608 *x, const struct A608 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA607(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA608() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A608), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A608, m0), 1);
		dcStructField(st, 'i', offsetof(struct A608, m1), 1);
		dcStructField(st, 'f', offsetof(struct A608, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A608, m3), 1, f_touchdcstA607());
		dcStructField(st, 'j', offsetof(struct A608, m4), 1);
		dcStructField(st, 's', offsetof(struct A608, m5), 1);
		dcStructField(st, 'l', offsetof(struct A608, m6), 1);
		dcStructField(st, 'c', offsetof(struct A608, m7), 1);
		dcStructField(st, 'c', offsetof(struct A608, m8), 1);
		dcStructField(st, 'l', offsetof(struct A608, m9), 1);
		dcStructField(st, 'i', offsetof(struct A608, m10), 1);
		dcStructField(st, 'p', offsetof(struct A608, m11), 1);
		dcStructField(st, 'f', offsetof(struct A608, m12), 1);
		dcStructField(st, 's', offsetof(struct A608, m13), 1);
		dcStructField(st, 'j', offsetof(struct A608, m14), 1);
		dcStructField(st, 'j', offsetof(struct A608, m15), 1);
		dcStructField(st, 'd', offsetof(struct A608, m16), 1);
		dcStructField(st, 'p', offsetof(struct A608, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppidcjpcdcd} */
struct A609 { p m0; p m1; i m2; d m3; c m4; j m5; p m6; c m7; d m8; c m9; d m10; };
void f_cpA609(struct A609 *x, const struct A609 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA609(const struct A609 *x, const struct A609 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA609() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A609), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A609, m0), 1);
		dcStructField(st, 'p', offsetof(struct A609, m1), 1);
		dcStructField(st, 'i', offsetof(struct A609, m2), 1);
		dcStructField(st, 'd', offsetof(struct A609, m3), 1);
		dcStructField(st, 'c', offsetof(struct A609, m4), 1);
		dcStructField(st, 'j', offsetof(struct A609, m5), 1);
		dcStructField(st, 'p', offsetof(struct A609, m6), 1);
		dcStructField(st, 'c', offsetof(struct A609, m7), 1);
		dcStructField(st, 'd', offsetof(struct A609, m8), 1);
		dcStructField(st, 'c', offsetof(struct A609, m9), 1);
		dcStructField(st, 'd', offsetof(struct A609, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjppf{ppidcjpcdcd}iffis} */
struct A610 { j m0; j m1; p m2; p m3; f m4; struct A609 m5; i m6; f m7; f m8; i m9; s m10; };
void f_cpA610(struct A610 *x, const struct A610 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA609(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA610(const struct A610 *x, const struct A610 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA609(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA610() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A610), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A610, m0), 1);
		dcStructField(st, 'j', offsetof(struct A610, m1), 1);
		dcStructField(st, 'p', offsetof(struct A610, m2), 1);
		dcStructField(st, 'p', offsetof(struct A610, m3), 1);
		dcStructField(st, 'f', offsetof(struct A610, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A610, m5), 1, f_touchdcstA609());
		dcStructField(st, 'i', offsetof(struct A610, m6), 1);
		dcStructField(st, 'f', offsetof(struct A610, m7), 1);
		dcStructField(st, 'f', offsetof(struct A610, m8), 1);
		dcStructField(st, 'i', offsetof(struct A610, m9), 1);
		dcStructField(st, 's', offsetof(struct A610, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fisfslccd} */
struct A611 { f m0; i m1; s m2; f m3; s m4; l m5; c m6; c m7; d m8; };
void f_cpA611(struct A611 *x, const struct A611 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA611(const struct A611 *x, const struct A611 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA611() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A611), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A611, m0), 1);
		dcStructField(st, 'i', offsetof(struct A611, m1), 1);
		dcStructField(st, 's', offsetof(struct A611, m2), 1);
		dcStructField(st, 'f', offsetof(struct A611, m3), 1);
		dcStructField(st, 's', offsetof(struct A611, m4), 1);
		dcStructField(st, 'l', offsetof(struct A611, m5), 1);
		dcStructField(st, 'c', offsetof(struct A611, m6), 1);
		dcStructField(st, 'c', offsetof(struct A611, m7), 1);
		dcStructField(st, 'd', offsetof(struct A611, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdjfpijpccllpicjippj} */
struct A612 { c m0; d m1; j m2; f m3; p m4; i m5; j m6; p m7; c m8; c m9; l m10; l m11; p m12; i m13; c m14; j m15; i m16; p m17; p m18; j m19; };
void f_cpA612(struct A612 *x, const struct A612 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA612(const struct A612 *x, const struct A612 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA612() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A612), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A612, m0), 1);
		dcStructField(st, 'd', offsetof(struct A612, m1), 1);
		dcStructField(st, 'j', offsetof(struct A612, m2), 1);
		dcStructField(st, 'f', offsetof(struct A612, m3), 1);
		dcStructField(st, 'p', offsetof(struct A612, m4), 1);
		dcStructField(st, 'i', offsetof(struct A612, m5), 1);
		dcStructField(st, 'j', offsetof(struct A612, m6), 1);
		dcStructField(st, 'p', offsetof(struct A612, m7), 1);
		dcStructField(st, 'c', offsetof(struct A612, m8), 1);
		dcStructField(st, 'c', offsetof(struct A612, m9), 1);
		dcStructField(st, 'l', offsetof(struct A612, m10), 1);
		dcStructField(st, 'l', offsetof(struct A612, m11), 1);
		dcStructField(st, 'p', offsetof(struct A612, m12), 1);
		dcStructField(st, 'i', offsetof(struct A612, m13), 1);
		dcStructField(st, 'c', offsetof(struct A612, m14), 1);
		dcStructField(st, 'j', offsetof(struct A612, m15), 1);
		dcStructField(st, 'i', offsetof(struct A612, m16), 1);
		dcStructField(st, 'p', offsetof(struct A612, m17), 1);
		dcStructField(st, 'p', offsetof(struct A612, m18), 1);
		dcStructField(st, 'j', offsetof(struct A612, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dppcpflflldp{fisfslccd}c{cdjfpijpccllpicjippj}fldplppi} */
struct A613 { d m0; p m1; p m2; c m3; p m4; f m5; l m6; f m7; l m8; l m9; d m10; p m11; struct A611 m12; c m13; struct A612 m14; f m15; l m16; d m17; p m18; l m19; p m20; p m21; i m22; };
void f_cpA613(struct A613 *x, const struct A613 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA611(&x->m12, &y->m12); x->m13 = y->m13; f_cpA612(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA613(const struct A613 *x, const struct A613 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA611(&x->m12, &y->m12) && x->m13 == y->m13 && f_cmpA612(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA613() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A613), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A613, m0), 1);
		dcStructField(st, 'p', offsetof(struct A613, m1), 1);
		dcStructField(st, 'p', offsetof(struct A613, m2), 1);
		dcStructField(st, 'c', offsetof(struct A613, m3), 1);
		dcStructField(st, 'p', offsetof(struct A613, m4), 1);
		dcStructField(st, 'f', offsetof(struct A613, m5), 1);
		dcStructField(st, 'l', offsetof(struct A613, m6), 1);
		dcStructField(st, 'f', offsetof(struct A613, m7), 1);
		dcStructField(st, 'l', offsetof(struct A613, m8), 1);
		dcStructField(st, 'l', offsetof(struct A613, m9), 1);
		dcStructField(st, 'd', offsetof(struct A613, m10), 1);
		dcStructField(st, 'p', offsetof(struct A613, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A613, m12), 1, f_touchdcstA611());
		dcStructField(st, 'c', offsetof(struct A613, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A613, m14), 1, f_touchdcstA612());
		dcStructField(st, 'f', offsetof(struct A613, m15), 1);
		dcStructField(st, 'l', offsetof(struct A613, m16), 1);
		dcStructField(st, 'd', offsetof(struct A613, m17), 1);
		dcStructField(st, 'p', offsetof(struct A613, m18), 1);
		dcStructField(st, 'l', offsetof(struct A613, m19), 1);
		dcStructField(st, 'p', offsetof(struct A613, m20), 1);
		dcStructField(st, 'p', offsetof(struct A613, m21), 1);
		dcStructField(st, 'i', offsetof(struct A613, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sicddjij} */
struct A614 { s m0; i m1; c m2; d m3; d m4; j m5; i m6; j m7; };
void f_cpA614(struct A614 *x, const struct A614 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA614(const struct A614 *x, const struct A614 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA614() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A614), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A614, m0), 1);
		dcStructField(st, 'i', offsetof(struct A614, m1), 1);
		dcStructField(st, 'c', offsetof(struct A614, m2), 1);
		dcStructField(st, 'd', offsetof(struct A614, m3), 1);
		dcStructField(st, 'd', offsetof(struct A614, m4), 1);
		dcStructField(st, 'j', offsetof(struct A614, m5), 1);
		dcStructField(st, 'i', offsetof(struct A614, m6), 1);
		dcStructField(st, 'j', offsetof(struct A614, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fslpifilpcddlfid} */
struct A615 { f m0; s m1; l m2; p m3; i m4; f m5; i m6; l m7; p m8; c m9; d m10; d m11; l m12; f m13; i m14; d m15; };
void f_cpA615(struct A615 *x, const struct A615 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA615(const struct A615 *x, const struct A615 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA615() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A615), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A615, m0), 1);
		dcStructField(st, 's', offsetof(struct A615, m1), 1);
		dcStructField(st, 'l', offsetof(struct A615, m2), 1);
		dcStructField(st, 'p', offsetof(struct A615, m3), 1);
		dcStructField(st, 'i', offsetof(struct A615, m4), 1);
		dcStructField(st, 'f', offsetof(struct A615, m5), 1);
		dcStructField(st, 'i', offsetof(struct A615, m6), 1);
		dcStructField(st, 'l', offsetof(struct A615, m7), 1);
		dcStructField(st, 'p', offsetof(struct A615, m8), 1);
		dcStructField(st, 'c', offsetof(struct A615, m9), 1);
		dcStructField(st, 'd', offsetof(struct A615, m10), 1);
		dcStructField(st, 'd', offsetof(struct A615, m11), 1);
		dcStructField(st, 'l', offsetof(struct A615, m12), 1);
		dcStructField(st, 'f', offsetof(struct A615, m13), 1);
		dcStructField(st, 'i', offsetof(struct A615, m14), 1);
		dcStructField(st, 'd', offsetof(struct A615, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijcs} */
struct A616 { i m0; j m1; c m2; s m3; };
void f_cpA616(struct A616 *x, const struct A616 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA616(const struct A616 *x, const struct A616 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA616() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A616), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A616, m0), 1);
		dcStructField(st, 'j', offsetof(struct A616, m1), 1);
		dcStructField(st, 'c', offsetof(struct A616, m2), 1);
		dcStructField(st, 's', offsetof(struct A616, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpscf{fslpifilpcddlfid}f{ijcs}lfsli} */
struct A617 { j m0; p m1; s m2; c m3; f m4; struct A615 m5; f m6; struct A616 m7; l m8; f m9; s m10; l m11; i m12; };
void f_cpA617(struct A617 *x, const struct A617 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA615(&x->m5, &y->m5); x->m6 = y->m6; f_cpA616(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA617(const struct A617 *x, const struct A617 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA615(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA616(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA617() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A617), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A617, m0), 1);
		dcStructField(st, 'p', offsetof(struct A617, m1), 1);
		dcStructField(st, 's', offsetof(struct A617, m2), 1);
		dcStructField(st, 'c', offsetof(struct A617, m3), 1);
		dcStructField(st, 'f', offsetof(struct A617, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A617, m5), 1, f_touchdcstA615());
		dcStructField(st, 'f', offsetof(struct A617, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A617, m7), 1, f_touchdcstA616());
		dcStructField(st, 'l', offsetof(struct A617, m8), 1);
		dcStructField(st, 'f', offsetof(struct A617, m9), 1);
		dcStructField(st, 's', offsetof(struct A617, m10), 1);
		dcStructField(st, 'l', offsetof(struct A617, m11), 1);
		dcStructField(st, 'i', offsetof(struct A617, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sppcl} */
struct A618 { s m0; p m1; p m2; c m3; l m4; };
void f_cpA618(struct A618 *x, const struct A618 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA618(const struct A618 *x, const struct A618 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA618() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A618), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A618, m0), 1);
		dcStructField(st, 'p', offsetof(struct A618, m1), 1);
		dcStructField(st, 'p', offsetof(struct A618, m2), 1);
		dcStructField(st, 'c', offsetof(struct A618, m3), 1);
		dcStructField(st, 'l', offsetof(struct A618, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pisllilpl} */
struct A619 { p m0; i m1; s m2; l m3; l m4; i m5; l m6; p m7; l m8; };
void f_cpA619(struct A619 *x, const struct A619 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA619(const struct A619 *x, const struct A619 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA619() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A619), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A619, m0), 1);
		dcStructField(st, 'i', offsetof(struct A619, m1), 1);
		dcStructField(st, 's', offsetof(struct A619, m2), 1);
		dcStructField(st, 'l', offsetof(struct A619, m3), 1);
		dcStructField(st, 'l', offsetof(struct A619, m4), 1);
		dcStructField(st, 'i', offsetof(struct A619, m5), 1);
		dcStructField(st, 'l', offsetof(struct A619, m6), 1);
		dcStructField(st, 'p', offsetof(struct A619, m7), 1);
		dcStructField(st, 'l', offsetof(struct A619, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dciicfjf} */
struct A620 { d m0; c m1; i m2; i m3; c m4; f m5; j m6; f m7; };
void f_cpA620(struct A620 *x, const struct A620 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA620(const struct A620 *x, const struct A620 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA620() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A620), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A620, m0), 1);
		dcStructField(st, 'c', offsetof(struct A620, m1), 1);
		dcStructField(st, 'i', offsetof(struct A620, m2), 1);
		dcStructField(st, 'i', offsetof(struct A620, m3), 1);
		dcStructField(st, 'c', offsetof(struct A620, m4), 1);
		dcStructField(st, 'f', offsetof(struct A620, m5), 1);
		dcStructField(st, 'j', offsetof(struct A620, m6), 1);
		dcStructField(st, 'f', offsetof(struct A620, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {issjdp} */
struct A621 { i m0; s m1; s m2; j m3; d m4; p m5; };
void f_cpA621(struct A621 *x, const struct A621 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA621(const struct A621 *x, const struct A621 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA621() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A621), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A621, m0), 1);
		dcStructField(st, 's', offsetof(struct A621, m1), 1);
		dcStructField(st, 's', offsetof(struct A621, m2), 1);
		dcStructField(st, 'j', offsetof(struct A621, m3), 1);
		dcStructField(st, 'd', offsetof(struct A621, m4), 1);
		dcStructField(st, 'p', offsetof(struct A621, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icplliiclpcfdll} */
struct A622 { i m0; c m1; p m2; l m3; l m4; i m5; i m6; c m7; l m8; p m9; c m10; f m11; d m12; l m13; l m14; };
void f_cpA622(struct A622 *x, const struct A622 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA622(const struct A622 *x, const struct A622 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA622() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A622), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A622, m0), 1);
		dcStructField(st, 'c', offsetof(struct A622, m1), 1);
		dcStructField(st, 'p', offsetof(struct A622, m2), 1);
		dcStructField(st, 'l', offsetof(struct A622, m3), 1);
		dcStructField(st, 'l', offsetof(struct A622, m4), 1);
		dcStructField(st, 'i', offsetof(struct A622, m5), 1);
		dcStructField(st, 'i', offsetof(struct A622, m6), 1);
		dcStructField(st, 'c', offsetof(struct A622, m7), 1);
		dcStructField(st, 'l', offsetof(struct A622, m8), 1);
		dcStructField(st, 'p', offsetof(struct A622, m9), 1);
		dcStructField(st, 'c', offsetof(struct A622, m10), 1);
		dcStructField(st, 'f', offsetof(struct A622, m11), 1);
		dcStructField(st, 'd', offsetof(struct A622, m12), 1);
		dcStructField(st, 'l', offsetof(struct A622, m13), 1);
		dcStructField(st, 'l', offsetof(struct A622, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jislsddcdlcl} */
struct A623 { j m0; i m1; s m2; l m3; s m4; d m5; d m6; c m7; d m8; l m9; c m10; l m11; };
void f_cpA623(struct A623 *x, const struct A623 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA623(const struct A623 *x, const struct A623 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA623() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A623), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A623, m0), 1);
		dcStructField(st, 'i', offsetof(struct A623, m1), 1);
		dcStructField(st, 's', offsetof(struct A623, m2), 1);
		dcStructField(st, 'l', offsetof(struct A623, m3), 1);
		dcStructField(st, 's', offsetof(struct A623, m4), 1);
		dcStructField(st, 'd', offsetof(struct A623, m5), 1);
		dcStructField(st, 'd', offsetof(struct A623, m6), 1);
		dcStructField(st, 'c', offsetof(struct A623, m7), 1);
		dcStructField(st, 'd', offsetof(struct A623, m8), 1);
		dcStructField(st, 'l', offsetof(struct A623, m9), 1);
		dcStructField(st, 'c', offsetof(struct A623, m10), 1);
		dcStructField(st, 'l', offsetof(struct A623, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lisplpjsc} */
struct A624 { l m0; i m1; s m2; p m3; l m4; p m5; j m6; s m7; c m8; };
void f_cpA624(struct A624 *x, const struct A624 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA624(const struct A624 *x, const struct A624 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA624() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A624), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A624, m0), 1);
		dcStructField(st, 'i', offsetof(struct A624, m1), 1);
		dcStructField(st, 's', offsetof(struct A624, m2), 1);
		dcStructField(st, 'p', offsetof(struct A624, m3), 1);
		dcStructField(st, 'l', offsetof(struct A624, m4), 1);
		dcStructField(st, 'p', offsetof(struct A624, m5), 1);
		dcStructField(st, 'j', offsetof(struct A624, m6), 1);
		dcStructField(st, 's', offsetof(struct A624, m7), 1);
		dcStructField(st, 'c', offsetof(struct A624, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {piilljjj} */
struct A625 { p m0; i m1; i m2; l m3; l m4; j m5; j m6; j m7; };
void f_cpA625(struct A625 *x, const struct A625 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA625(const struct A625 *x, const struct A625 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA625() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A625), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A625, m0), 1);
		dcStructField(st, 'i', offsetof(struct A625, m1), 1);
		dcStructField(st, 'i', offsetof(struct A625, m2), 1);
		dcStructField(st, 'l', offsetof(struct A625, m3), 1);
		dcStructField(st, 'l', offsetof(struct A625, m4), 1);
		dcStructField(st, 'j', offsetof(struct A625, m5), 1);
		dcStructField(st, 'j', offsetof(struct A625, m6), 1);
		dcStructField(st, 'j', offsetof(struct A625, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dccfpfilddd} */
struct A626 { d m0; c m1; c m2; f m3; p m4; f m5; i m6; l m7; d m8; d m9; d m10; };
void f_cpA626(struct A626 *x, const struct A626 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA626(const struct A626 *x, const struct A626 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA626() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A626), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A626, m0), 1);
		dcStructField(st, 'c', offsetof(struct A626, m1), 1);
		dcStructField(st, 'c', offsetof(struct A626, m2), 1);
		dcStructField(st, 'f', offsetof(struct A626, m3), 1);
		dcStructField(st, 'p', offsetof(struct A626, m4), 1);
		dcStructField(st, 'f', offsetof(struct A626, m5), 1);
		dcStructField(st, 'i', offsetof(struct A626, m6), 1);
		dcStructField(st, 'l', offsetof(struct A626, m7), 1);
		dcStructField(st, 'd', offsetof(struct A626, m8), 1);
		dcStructField(st, 'd', offsetof(struct A626, m9), 1);
		dcStructField(st, 'd', offsetof(struct A626, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flfi} */
struct A627 { f m0; l m1; f m2; i m3; };
void f_cpA627(struct A627 *x, const struct A627 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA627(const struct A627 *x, const struct A627 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA627() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A627), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A627, m0), 1);
		dcStructField(st, 'l', offsetof(struct A627, m1), 1);
		dcStructField(st, 'f', offsetof(struct A627, m2), 1);
		dcStructField(st, 'i', offsetof(struct A627, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpdcl} */
struct A628 { j m0; p m1; d m2; c m3; l m4; };
void f_cpA628(struct A628 *x, const struct A628 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA628(const struct A628 *x, const struct A628 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA628() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A628), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A628, m0), 1);
		dcStructField(st, 'p', offsetof(struct A628, m1), 1);
		dcStructField(st, 'd', offsetof(struct A628, m2), 1);
		dcStructField(st, 'c', offsetof(struct A628, m3), 1);
		dcStructField(st, 'l', offsetof(struct A628, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dic{jpdcl}j} */
struct A629 { d m0; i m1; c m2; struct A628 m3; j m4; };
void f_cpA629(struct A629 *x, const struct A629 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA628(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA629(const struct A629 *x, const struct A629 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA628(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA629() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A629), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A629, m0), 1);
		dcStructField(st, 'i', offsetof(struct A629, m1), 1);
		dcStructField(st, 'c', offsetof(struct A629, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A629, m3), 1, f_touchdcstA628());
		dcStructField(st, 'j', offsetof(struct A629, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddisl} */
struct A630 { d m0; d m1; i m2; s m3; l m4; };
void f_cpA630(struct A630 *x, const struct A630 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA630(const struct A630 *x, const struct A630 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA630() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A630), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A630, m0), 1);
		dcStructField(st, 'd', offsetof(struct A630, m1), 1);
		dcStructField(st, 'i', offsetof(struct A630, m2), 1);
		dcStructField(st, 's', offsetof(struct A630, m3), 1);
		dcStructField(st, 'l', offsetof(struct A630, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fppfscfdpcljdfjdddspdi} */
struct A631 { f m0; p m1; p m2; f m3; s m4; c m5; f m6; d m7; p m8; c m9; l m10; j m11; d m12; f m13; j m14; d m15; d m16; d m17; s m18; p m19; d m20; i m21; };
void f_cpA631(struct A631 *x, const struct A631 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA631(const struct A631 *x, const struct A631 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA631() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A631), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A631, m0), 1);
		dcStructField(st, 'p', offsetof(struct A631, m1), 1);
		dcStructField(st, 'p', offsetof(struct A631, m2), 1);
		dcStructField(st, 'f', offsetof(struct A631, m3), 1);
		dcStructField(st, 's', offsetof(struct A631, m4), 1);
		dcStructField(st, 'c', offsetof(struct A631, m5), 1);
		dcStructField(st, 'f', offsetof(struct A631, m6), 1);
		dcStructField(st, 'd', offsetof(struct A631, m7), 1);
		dcStructField(st, 'p', offsetof(struct A631, m8), 1);
		dcStructField(st, 'c', offsetof(struct A631, m9), 1);
		dcStructField(st, 'l', offsetof(struct A631, m10), 1);
		dcStructField(st, 'j', offsetof(struct A631, m11), 1);
		dcStructField(st, 'd', offsetof(struct A631, m12), 1);
		dcStructField(st, 'f', offsetof(struct A631, m13), 1);
		dcStructField(st, 'j', offsetof(struct A631, m14), 1);
		dcStructField(st, 'd', offsetof(struct A631, m15), 1);
		dcStructField(st, 'd', offsetof(struct A631, m16), 1);
		dcStructField(st, 'd', offsetof(struct A631, m17), 1);
		dcStructField(st, 's', offsetof(struct A631, m18), 1);
		dcStructField(st, 'p', offsetof(struct A631, m19), 1);
		dcStructField(st, 'd', offsetof(struct A631, m20), 1);
		dcStructField(st, 'i', offsetof(struct A631, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldsipdsjcscddcis} */
struct A632 { l m0; d m1; s m2; i m3; p m4; d m5; s m6; j m7; c m8; s m9; c m10; d m11; d m12; c m13; i m14; s m15; };
void f_cpA632(struct A632 *x, const struct A632 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA632(const struct A632 *x, const struct A632 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA632() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A632), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A632, m0), 1);
		dcStructField(st, 'd', offsetof(struct A632, m1), 1);
		dcStructField(st, 's', offsetof(struct A632, m2), 1);
		dcStructField(st, 'i', offsetof(struct A632, m3), 1);
		dcStructField(st, 'p', offsetof(struct A632, m4), 1);
		dcStructField(st, 'd', offsetof(struct A632, m5), 1);
		dcStructField(st, 's', offsetof(struct A632, m6), 1);
		dcStructField(st, 'j', offsetof(struct A632, m7), 1);
		dcStructField(st, 'c', offsetof(struct A632, m8), 1);
		dcStructField(st, 's', offsetof(struct A632, m9), 1);
		dcStructField(st, 'c', offsetof(struct A632, m10), 1);
		dcStructField(st, 'd', offsetof(struct A632, m11), 1);
		dcStructField(st, 'd', offsetof(struct A632, m12), 1);
		dcStructField(st, 'c', offsetof(struct A632, m13), 1);
		dcStructField(st, 'i', offsetof(struct A632, m14), 1);
		dcStructField(st, 's', offsetof(struct A632, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fppfscfdpcljdfjdddspdi}i{ldsipdsjcscddcis}csfd} */
struct A633 { struct A631 m0; i m1; struct A632 m2; c m3; s m4; f m5; d m6; };
void f_cpA633(struct A633 *x, const struct A633 *y) { f_cpA631(&x->m0, &y->m0); x->m1 = y->m1; f_cpA632(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA633(const struct A633 *x, const struct A633 *y) { return f_cmpA631(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA632(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA633() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A633), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A633, m0), 1, f_touchdcstA631());
		dcStructField(st, 'i', offsetof(struct A633, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A633, m2), 1, f_touchdcstA632());
		dcStructField(st, 'c', offsetof(struct A633, m3), 1);
		dcStructField(st, 's', offsetof(struct A633, m4), 1);
		dcStructField(st, 'f', offsetof(struct A633, m5), 1);
		dcStructField(st, 'd', offsetof(struct A633, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slpflli{{fppfscfdpcljdfjdddspdi}i{ldsipdsjcscddcis}csfd}didcic} */
struct A634 { s m0; l m1; p m2; f m3; l m4; l m5; i m6; struct A633 m7; d m8; i m9; d m10; c m11; i m12; c m13; };
void f_cpA634(struct A634 *x, const struct A634 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA633(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA634(const struct A634 *x, const struct A634 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA633(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA634() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A634), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A634, m0), 1);
		dcStructField(st, 'l', offsetof(struct A634, m1), 1);
		dcStructField(st, 'p', offsetof(struct A634, m2), 1);
		dcStructField(st, 'f', offsetof(struct A634, m3), 1);
		dcStructField(st, 'l', offsetof(struct A634, m4), 1);
		dcStructField(st, 'l', offsetof(struct A634, m5), 1);
		dcStructField(st, 'i', offsetof(struct A634, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A634, m7), 1, f_touchdcstA633());
		dcStructField(st, 'd', offsetof(struct A634, m8), 1);
		dcStructField(st, 'i', offsetof(struct A634, m9), 1);
		dcStructField(st, 'd', offsetof(struct A634, m10), 1);
		dcStructField(st, 'c', offsetof(struct A634, m11), 1);
		dcStructField(st, 'i', offsetof(struct A634, m12), 1);
		dcStructField(st, 'c', offsetof(struct A634, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipslsdlpi} */
struct A635 { i m0; p m1; s m2; l m3; s m4; d m5; l m6; p m7; i m8; };
void f_cpA635(struct A635 *x, const struct A635 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA635(const struct A635 *x, const struct A635 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA635() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A635), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A635, m0), 1);
		dcStructField(st, 'p', offsetof(struct A635, m1), 1);
		dcStructField(st, 's', offsetof(struct A635, m2), 1);
		dcStructField(st, 'l', offsetof(struct A635, m3), 1);
		dcStructField(st, 's', offsetof(struct A635, m4), 1);
		dcStructField(st, 'd', offsetof(struct A635, m5), 1);
		dcStructField(st, 'l', offsetof(struct A635, m6), 1);
		dcStructField(st, 'p', offsetof(struct A635, m7), 1);
		dcStructField(st, 'i', offsetof(struct A635, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jds} */
struct A636 { j m0; d m1; s m2; };
void f_cpA636(struct A636 *x, const struct A636 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA636(const struct A636 *x, const struct A636 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA636() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A636), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A636, m0), 1);
		dcStructField(st, 'd', offsetof(struct A636, m1), 1);
		dcStructField(st, 's', offsetof(struct A636, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plsldfpidjdjffp} */
struct A637 { p m0; l m1; s m2; l m3; d m4; f m5; p m6; i m7; d m8; j m9; d m10; j m11; f m12; f m13; p m14; };
void f_cpA637(struct A637 *x, const struct A637 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA637(const struct A637 *x, const struct A637 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA637() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A637), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A637, m0), 1);
		dcStructField(st, 'l', offsetof(struct A637, m1), 1);
		dcStructField(st, 's', offsetof(struct A637, m2), 1);
		dcStructField(st, 'l', offsetof(struct A637, m3), 1);
		dcStructField(st, 'd', offsetof(struct A637, m4), 1);
		dcStructField(st, 'f', offsetof(struct A637, m5), 1);
		dcStructField(st, 'p', offsetof(struct A637, m6), 1);
		dcStructField(st, 'i', offsetof(struct A637, m7), 1);
		dcStructField(st, 'd', offsetof(struct A637, m8), 1);
		dcStructField(st, 'j', offsetof(struct A637, m9), 1);
		dcStructField(st, 'd', offsetof(struct A637, m10), 1);
		dcStructField(st, 'j', offsetof(struct A637, m11), 1);
		dcStructField(st, 'f', offsetof(struct A637, m12), 1);
		dcStructField(st, 'f', offsetof(struct A637, m13), 1);
		dcStructField(st, 'p', offsetof(struct A637, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsffsdd} */
struct A638 { l m0; s m1; f m2; f m3; s m4; d m5; d m6; };
void f_cpA638(struct A638 *x, const struct A638 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA638(const struct A638 *x, const struct A638 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA638() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A638), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A638, m0), 1);
		dcStructField(st, 's', offsetof(struct A638, m1), 1);
		dcStructField(st, 'f', offsetof(struct A638, m2), 1);
		dcStructField(st, 'f', offsetof(struct A638, m3), 1);
		dcStructField(st, 's', offsetof(struct A638, m4), 1);
		dcStructField(st, 'd', offsetof(struct A638, m5), 1);
		dcStructField(st, 'd', offsetof(struct A638, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ii{ipslsdlpi}sijdfdjjs{jds}cs{plsldfpidjdjffp}ilff{lsffsdd}jicdcfiilf} */
struct A639 { i m0; i m1; struct A635 m2; s m3; i m4; j m5; d m6; f m7; d m8; j m9; j m10; s m11; struct A636 m12; c m13; s m14; struct A637 m15; i m16; l m17; f m18; f m19; struct A638 m20; j m21; i m22; c m23; d m24; c m25; f m26; i m27; i m28; l m29; f m30; };
void f_cpA639(struct A639 *x, const struct A639 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA635(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA636(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; f_cpA637(&x->m15, &y->m15); x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA638(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; };
int f_cmpA639(const struct A639 *x, const struct A639 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA635(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA636(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA637(&x->m15, &y->m15) && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA638(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30; };
DCstruct* f_touchdcstA639() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(31, sizeof(struct A639), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A639, m0), 1);
		dcStructField(st, 'i', offsetof(struct A639, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A639, m2), 1, f_touchdcstA635());
		dcStructField(st, 's', offsetof(struct A639, m3), 1);
		dcStructField(st, 'i', offsetof(struct A639, m4), 1);
		dcStructField(st, 'j', offsetof(struct A639, m5), 1);
		dcStructField(st, 'd', offsetof(struct A639, m6), 1);
		dcStructField(st, 'f', offsetof(struct A639, m7), 1);
		dcStructField(st, 'd', offsetof(struct A639, m8), 1);
		dcStructField(st, 'j', offsetof(struct A639, m9), 1);
		dcStructField(st, 'j', offsetof(struct A639, m10), 1);
		dcStructField(st, 's', offsetof(struct A639, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A639, m12), 1, f_touchdcstA636());
		dcStructField(st, 'c', offsetof(struct A639, m13), 1);
		dcStructField(st, 's', offsetof(struct A639, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A639, m15), 1, f_touchdcstA637());
		dcStructField(st, 'i', offsetof(struct A639, m16), 1);
		dcStructField(st, 'l', offsetof(struct A639, m17), 1);
		dcStructField(st, 'f', offsetof(struct A639, m18), 1);
		dcStructField(st, 'f', offsetof(struct A639, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A639, m20), 1, f_touchdcstA638());
		dcStructField(st, 'j', offsetof(struct A639, m21), 1);
		dcStructField(st, 'i', offsetof(struct A639, m22), 1);
		dcStructField(st, 'c', offsetof(struct A639, m23), 1);
		dcStructField(st, 'd', offsetof(struct A639, m24), 1);
		dcStructField(st, 'c', offsetof(struct A639, m25), 1);
		dcStructField(st, 'f', offsetof(struct A639, m26), 1);
		dcStructField(st, 'i', offsetof(struct A639, m27), 1);
		dcStructField(st, 'i', offsetof(struct A639, m28), 1);
		dcStructField(st, 'l', offsetof(struct A639, m29), 1);
		dcStructField(st, 'f', offsetof(struct A639, m30), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clcfd} */
struct A640 { c m0; l m1; c m2; f m3; d m4; };
void f_cpA640(struct A640 *x, const struct A640 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA640(const struct A640 *x, const struct A640 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA640() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A640), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A640, m0), 1);
		dcStructField(st, 'l', offsetof(struct A640, m1), 1);
		dcStructField(st, 'c', offsetof(struct A640, m2), 1);
		dcStructField(st, 'f', offsetof(struct A640, m3), 1);
		dcStructField(st, 'd', offsetof(struct A640, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpssfcfjcidlij} */
struct A641 { j m0; p m1; s m2; s m3; f m4; c m5; f m6; j m7; c m8; i m9; d m10; l m11; i m12; j m13; };
void f_cpA641(struct A641 *x, const struct A641 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA641(const struct A641 *x, const struct A641 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA641() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A641), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A641, m0), 1);
		dcStructField(st, 'p', offsetof(struct A641, m1), 1);
		dcStructField(st, 's', offsetof(struct A641, m2), 1);
		dcStructField(st, 's', offsetof(struct A641, m3), 1);
		dcStructField(st, 'f', offsetof(struct A641, m4), 1);
		dcStructField(st, 'c', offsetof(struct A641, m5), 1);
		dcStructField(st, 'f', offsetof(struct A641, m6), 1);
		dcStructField(st, 'j', offsetof(struct A641, m7), 1);
		dcStructField(st, 'c', offsetof(struct A641, m8), 1);
		dcStructField(st, 'i', offsetof(struct A641, m9), 1);
		dcStructField(st, 'd', offsetof(struct A641, m10), 1);
		dcStructField(st, 'l', offsetof(struct A641, m11), 1);
		dcStructField(st, 'i', offsetof(struct A641, m12), 1);
		dcStructField(st, 'j', offsetof(struct A641, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcpsjppiisddpdisdjjpcjdpcjs} */
struct A642 { f m0; c m1; p m2; s m3; j m4; p m5; p m6; i m7; i m8; s m9; d m10; d m11; p m12; d m13; i m14; s m15; d m16; j m17; j m18; p m19; c m20; j m21; d m22; p m23; c m24; j m25; s m26; };
void f_cpA642(struct A642 *x, const struct A642 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA642(const struct A642 *x, const struct A642 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA642() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(struct A642), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A642, m0), 1);
		dcStructField(st, 'c', offsetof(struct A642, m1), 1);
		dcStructField(st, 'p', offsetof(struct A642, m2), 1);
		dcStructField(st, 's', offsetof(struct A642, m3), 1);
		dcStructField(st, 'j', offsetof(struct A642, m4), 1);
		dcStructField(st, 'p', offsetof(struct A642, m5), 1);
		dcStructField(st, 'p', offsetof(struct A642, m6), 1);
		dcStructField(st, 'i', offsetof(struct A642, m7), 1);
		dcStructField(st, 'i', offsetof(struct A642, m8), 1);
		dcStructField(st, 's', offsetof(struct A642, m9), 1);
		dcStructField(st, 'd', offsetof(struct A642, m10), 1);
		dcStructField(st, 'd', offsetof(struct A642, m11), 1);
		dcStructField(st, 'p', offsetof(struct A642, m12), 1);
		dcStructField(st, 'd', offsetof(struct A642, m13), 1);
		dcStructField(st, 'i', offsetof(struct A642, m14), 1);
		dcStructField(st, 's', offsetof(struct A642, m15), 1);
		dcStructField(st, 'd', offsetof(struct A642, m16), 1);
		dcStructField(st, 'j', offsetof(struct A642, m17), 1);
		dcStructField(st, 'j', offsetof(struct A642, m18), 1);
		dcStructField(st, 'p', offsetof(struct A642, m19), 1);
		dcStructField(st, 'c', offsetof(struct A642, m20), 1);
		dcStructField(st, 'j', offsetof(struct A642, m21), 1);
		dcStructField(st, 'd', offsetof(struct A642, m22), 1);
		dcStructField(st, 'p', offsetof(struct A642, m23), 1);
		dcStructField(st, 'c', offsetof(struct A642, m24), 1);
		dcStructField(st, 'j', offsetof(struct A642, m25), 1);
		dcStructField(st, 's', offsetof(struct A642, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpcpidscc} */
struct A643 { l m0; p m1; c m2; p m3; i m4; d m5; s m6; c m7; c m8; };
void f_cpA643(struct A643 *x, const struct A643 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA643(const struct A643 *x, const struct A643 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA643() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A643), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A643, m0), 1);
		dcStructField(st, 'p', offsetof(struct A643, m1), 1);
		dcStructField(st, 'c', offsetof(struct A643, m2), 1);
		dcStructField(st, 'p', offsetof(struct A643, m3), 1);
		dcStructField(st, 'i', offsetof(struct A643, m4), 1);
		dcStructField(st, 'd', offsetof(struct A643, m5), 1);
		dcStructField(st, 's', offsetof(struct A643, m6), 1);
		dcStructField(st, 'c', offsetof(struct A643, m7), 1);
		dcStructField(st, 'c', offsetof(struct A643, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djjplijdcljsciscicciifcclicjldfdjc} */
struct A644 { d m0; j m1; j m2; p m3; l m4; i m5; j m6; d m7; c m8; l m9; j m10; s m11; c m12; i m13; s m14; c m15; i m16; c m17; c m18; i m19; i m20; f m21; c m22; c m23; l m24; i m25; c m26; j m27; l m28; d m29; f m30; d m31; j m32; c m33; };
void f_cpA644(struct A644 *x, const struct A644 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; };
int f_cmpA644(const struct A644 *x, const struct A644 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33; };
DCstruct* f_touchdcstA644() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(34, sizeof(struct A644), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A644, m0), 1);
		dcStructField(st, 'j', offsetof(struct A644, m1), 1);
		dcStructField(st, 'j', offsetof(struct A644, m2), 1);
		dcStructField(st, 'p', offsetof(struct A644, m3), 1);
		dcStructField(st, 'l', offsetof(struct A644, m4), 1);
		dcStructField(st, 'i', offsetof(struct A644, m5), 1);
		dcStructField(st, 'j', offsetof(struct A644, m6), 1);
		dcStructField(st, 'd', offsetof(struct A644, m7), 1);
		dcStructField(st, 'c', offsetof(struct A644, m8), 1);
		dcStructField(st, 'l', offsetof(struct A644, m9), 1);
		dcStructField(st, 'j', offsetof(struct A644, m10), 1);
		dcStructField(st, 's', offsetof(struct A644, m11), 1);
		dcStructField(st, 'c', offsetof(struct A644, m12), 1);
		dcStructField(st, 'i', offsetof(struct A644, m13), 1);
		dcStructField(st, 's', offsetof(struct A644, m14), 1);
		dcStructField(st, 'c', offsetof(struct A644, m15), 1);
		dcStructField(st, 'i', offsetof(struct A644, m16), 1);
		dcStructField(st, 'c', offsetof(struct A644, m17), 1);
		dcStructField(st, 'c', offsetof(struct A644, m18), 1);
		dcStructField(st, 'i', offsetof(struct A644, m19), 1);
		dcStructField(st, 'i', offsetof(struct A644, m20), 1);
		dcStructField(st, 'f', offsetof(struct A644, m21), 1);
		dcStructField(st, 'c', offsetof(struct A644, m22), 1);
		dcStructField(st, 'c', offsetof(struct A644, m23), 1);
		dcStructField(st, 'l', offsetof(struct A644, m24), 1);
		dcStructField(st, 'i', offsetof(struct A644, m25), 1);
		dcStructField(st, 'c', offsetof(struct A644, m26), 1);
		dcStructField(st, 'j', offsetof(struct A644, m27), 1);
		dcStructField(st, 'l', offsetof(struct A644, m28), 1);
		dcStructField(st, 'd', offsetof(struct A644, m29), 1);
		dcStructField(st, 'f', offsetof(struct A644, m30), 1);
		dcStructField(st, 'd', offsetof(struct A644, m31), 1);
		dcStructField(st, 'j', offsetof(struct A644, m32), 1);
		dcStructField(st, 'c', offsetof(struct A644, m33), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjspiifssispilf} */
struct A645 { s m0; j m1; s m2; p m3; i m4; i m5; f m6; s m7; s m8; i m9; s m10; p m11; i m12; l m13; f m14; };
void f_cpA645(struct A645 *x, const struct A645 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA645(const struct A645 *x, const struct A645 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA645() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A645), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A645, m0), 1);
		dcStructField(st, 'j', offsetof(struct A645, m1), 1);
		dcStructField(st, 's', offsetof(struct A645, m2), 1);
		dcStructField(st, 'p', offsetof(struct A645, m3), 1);
		dcStructField(st, 'i', offsetof(struct A645, m4), 1);
		dcStructField(st, 'i', offsetof(struct A645, m5), 1);
		dcStructField(st, 'f', offsetof(struct A645, m6), 1);
		dcStructField(st, 's', offsetof(struct A645, m7), 1);
		dcStructField(st, 's', offsetof(struct A645, m8), 1);
		dcStructField(st, 'i', offsetof(struct A645, m9), 1);
		dcStructField(st, 's', offsetof(struct A645, m10), 1);
		dcStructField(st, 'p', offsetof(struct A645, m11), 1);
		dcStructField(st, 'i', offsetof(struct A645, m12), 1);
		dcStructField(st, 'l', offsetof(struct A645, m13), 1);
		dcStructField(st, 'f', offsetof(struct A645, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pddsf} */
struct A646 { p m0; d m1; d m2; s m3; f m4; };
void f_cpA646(struct A646 *x, const struct A646 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA646(const struct A646 *x, const struct A646 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA646() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A646), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A646, m0), 1);
		dcStructField(st, 'd', offsetof(struct A646, m1), 1);
		dcStructField(st, 'd', offsetof(struct A646, m2), 1);
		dcStructField(st, 's', offsetof(struct A646, m3), 1);
		dcStructField(st, 'f', offsetof(struct A646, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clspscs} */
struct A647 { c m0; l m1; s m2; p m3; s m4; c m5; s m6; };
void f_cpA647(struct A647 *x, const struct A647 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA647(const struct A647 *x, const struct A647 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA647() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A647), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A647, m0), 1);
		dcStructField(st, 'l', offsetof(struct A647, m1), 1);
		dcStructField(st, 's', offsetof(struct A647, m2), 1);
		dcStructField(st, 'p', offsetof(struct A647, m3), 1);
		dcStructField(st, 's', offsetof(struct A647, m4), 1);
		dcStructField(st, 'c', offsetof(struct A647, m5), 1);
		dcStructField(st, 's', offsetof(struct A647, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {df{sjspiifssispilf}f{pddsf}ppjjsipplcdddf{clspscs}f} */
struct A648 { d m0; f m1; struct A645 m2; f m3; struct A646 m4; p m5; p m6; j m7; j m8; s m9; i m10; p m11; p m12; l m13; c m14; d m15; d m16; d m17; f m18; struct A647 m19; f m20; };
void f_cpA648(struct A648 *x, const struct A648 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA645(&x->m2, &y->m2); x->m3 = y->m3; f_cpA646(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA647(&x->m19, &y->m19); x->m20 = y->m20; };
int f_cmpA648(const struct A648 *x, const struct A648 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA645(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA646(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA647(&x->m19, &y->m19) && x->m20 == y->m20; };
DCstruct* f_touchdcstA648() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A648), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A648, m0), 1);
		dcStructField(st, 'f', offsetof(struct A648, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A648, m2), 1, f_touchdcstA645());
		dcStructField(st, 'f', offsetof(struct A648, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A648, m4), 1, f_touchdcstA646());
		dcStructField(st, 'p', offsetof(struct A648, m5), 1);
		dcStructField(st, 'p', offsetof(struct A648, m6), 1);
		dcStructField(st, 'j', offsetof(struct A648, m7), 1);
		dcStructField(st, 'j', offsetof(struct A648, m8), 1);
		dcStructField(st, 's', offsetof(struct A648, m9), 1);
		dcStructField(st, 'i', offsetof(struct A648, m10), 1);
		dcStructField(st, 'p', offsetof(struct A648, m11), 1);
		dcStructField(st, 'p', offsetof(struct A648, m12), 1);
		dcStructField(st, 'l', offsetof(struct A648, m13), 1);
		dcStructField(st, 'c', offsetof(struct A648, m14), 1);
		dcStructField(st, 'd', offsetof(struct A648, m15), 1);
		dcStructField(st, 'd', offsetof(struct A648, m16), 1);
		dcStructField(st, 'd', offsetof(struct A648, m17), 1);
		dcStructField(st, 'f', offsetof(struct A648, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A648, m19), 1, f_touchdcstA647());
		dcStructField(st, 'f', offsetof(struct A648, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sffdcdd} */
struct A649 { s m0; f m1; f m2; d m3; c m4; d m5; d m6; };
void f_cpA649(struct A649 *x, const struct A649 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA649(const struct A649 *x, const struct A649 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA649() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A649), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A649, m0), 1);
		dcStructField(st, 'f', offsetof(struct A649, m1), 1);
		dcStructField(st, 'f', offsetof(struct A649, m2), 1);
		dcStructField(st, 'd', offsetof(struct A649, m3), 1);
		dcStructField(st, 'c', offsetof(struct A649, m4), 1);
		dcStructField(st, 'd', offsetof(struct A649, m5), 1);
		dcStructField(st, 'd', offsetof(struct A649, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fifsplfs} */
struct A650 { f m0; i m1; f m2; s m3; p m4; l m5; f m6; s m7; };
void f_cpA650(struct A650 *x, const struct A650 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA650(const struct A650 *x, const struct A650 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA650() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A650), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A650, m0), 1);
		dcStructField(st, 'i', offsetof(struct A650, m1), 1);
		dcStructField(st, 'f', offsetof(struct A650, m2), 1);
		dcStructField(st, 's', offsetof(struct A650, m3), 1);
		dcStructField(st, 'p', offsetof(struct A650, m4), 1);
		dcStructField(st, 'l', offsetof(struct A650, m5), 1);
		dcStructField(st, 'f', offsetof(struct A650, m6), 1);
		dcStructField(st, 's', offsetof(struct A650, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spci{fifsplfs}lpifdscdjdpcid{lj}fifplijf{i}dfp} */
struct A651 { s m0; p m1; c m2; i m3; struct A650 m4; l m5; p m6; i m7; f m8; d m9; s m10; c m11; d m12; j m13; d m14; p m15; c m16; i m17; d m18; struct A87 m19; f m20; i m21; f m22; p m23; l m24; i m25; j m26; f m27; struct A2 m28; d m29; f m30; p m31; };
void f_cpA651(struct A651 *x, const struct A651 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA650(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA87(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; f_cpA2(&x->m28, &y->m28); x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; };
int f_cmpA651(const struct A651 *x, const struct A651 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA650(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA87(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && f_cmpA2(&x->m28, &y->m28) && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31; };
DCstruct* f_touchdcstA651() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(32, sizeof(struct A651), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A651, m0), 1);
		dcStructField(st, 'p', offsetof(struct A651, m1), 1);
		dcStructField(st, 'c', offsetof(struct A651, m2), 1);
		dcStructField(st, 'i', offsetof(struct A651, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A651, m4), 1, f_touchdcstA650());
		dcStructField(st, 'l', offsetof(struct A651, m5), 1);
		dcStructField(st, 'p', offsetof(struct A651, m6), 1);
		dcStructField(st, 'i', offsetof(struct A651, m7), 1);
		dcStructField(st, 'f', offsetof(struct A651, m8), 1);
		dcStructField(st, 'd', offsetof(struct A651, m9), 1);
		dcStructField(st, 's', offsetof(struct A651, m10), 1);
		dcStructField(st, 'c', offsetof(struct A651, m11), 1);
		dcStructField(st, 'd', offsetof(struct A651, m12), 1);
		dcStructField(st, 'j', offsetof(struct A651, m13), 1);
		dcStructField(st, 'd', offsetof(struct A651, m14), 1);
		dcStructField(st, 'p', offsetof(struct A651, m15), 1);
		dcStructField(st, 'c', offsetof(struct A651, m16), 1);
		dcStructField(st, 'i', offsetof(struct A651, m17), 1);
		dcStructField(st, 'd', offsetof(struct A651, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A651, m19), 1, f_touchdcstA87());
		dcStructField(st, 'f', offsetof(struct A651, m20), 1);
		dcStructField(st, 'i', offsetof(struct A651, m21), 1);
		dcStructField(st, 'f', offsetof(struct A651, m22), 1);
		dcStructField(st, 'p', offsetof(struct A651, m23), 1);
		dcStructField(st, 'l', offsetof(struct A651, m24), 1);
		dcStructField(st, 'i', offsetof(struct A651, m25), 1);
		dcStructField(st, 'j', offsetof(struct A651, m26), 1);
		dcStructField(st, 'f', offsetof(struct A651, m27), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A651, m28), 1, f_touchdcstA2());
		dcStructField(st, 'd', offsetof(struct A651, m29), 1);
		dcStructField(st, 'f', offsetof(struct A651, m30), 1);
		dcStructField(st, 'p', offsetof(struct A651, m31), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ps{spci{fifsplfs}lpifdscdjdpcid{lj}fifplijf{i}dfp}iisj} */
struct A652 { p m0; s m1; struct A651 m2; i m3; i m4; s m5; j m6; };
void f_cpA652(struct A652 *x, const struct A652 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA651(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA652(const struct A652 *x, const struct A652 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA651(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA652() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A652), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A652, m0), 1);
		dcStructField(st, 's', offsetof(struct A652, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A652, m2), 1, f_touchdcstA651());
		dcStructField(st, 'i', offsetof(struct A652, m3), 1);
		dcStructField(st, 'i', offsetof(struct A652, m4), 1);
		dcStructField(st, 's', offsetof(struct A652, m5), 1);
		dcStructField(st, 'j', offsetof(struct A652, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spdlljcsfpii} */
struct A653 { s m0; p m1; d m2; l m3; l m4; j m5; c m6; s m7; f m8; p m9; i m10; i m11; };
void f_cpA653(struct A653 *x, const struct A653 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA653(const struct A653 *x, const struct A653 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA653() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A653), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A653, m0), 1);
		dcStructField(st, 'p', offsetof(struct A653, m1), 1);
		dcStructField(st, 'd', offsetof(struct A653, m2), 1);
		dcStructField(st, 'l', offsetof(struct A653, m3), 1);
		dcStructField(st, 'l', offsetof(struct A653, m4), 1);
		dcStructField(st, 'j', offsetof(struct A653, m5), 1);
		dcStructField(st, 'c', offsetof(struct A653, m6), 1);
		dcStructField(st, 's', offsetof(struct A653, m7), 1);
		dcStructField(st, 'f', offsetof(struct A653, m8), 1);
		dcStructField(st, 'p', offsetof(struct A653, m9), 1);
		dcStructField(st, 'i', offsetof(struct A653, m10), 1);
		dcStructField(st, 'i', offsetof(struct A653, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icpipfscpsdc} */
struct A654 { i m0; c m1; p m2; i m3; p m4; f m5; s m6; c m7; p m8; s m9; d m10; c m11; };
void f_cpA654(struct A654 *x, const struct A654 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA654(const struct A654 *x, const struct A654 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA654() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A654), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A654, m0), 1);
		dcStructField(st, 'c', offsetof(struct A654, m1), 1);
		dcStructField(st, 'p', offsetof(struct A654, m2), 1);
		dcStructField(st, 'i', offsetof(struct A654, m3), 1);
		dcStructField(st, 'p', offsetof(struct A654, m4), 1);
		dcStructField(st, 'f', offsetof(struct A654, m5), 1);
		dcStructField(st, 's', offsetof(struct A654, m6), 1);
		dcStructField(st, 'c', offsetof(struct A654, m7), 1);
		dcStructField(st, 'p', offsetof(struct A654, m8), 1);
		dcStructField(st, 's', offsetof(struct A654, m9), 1);
		dcStructField(st, 'd', offsetof(struct A654, m10), 1);
		dcStructField(st, 'c', offsetof(struct A654, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spdsif} */
struct A655 { s m0; p m1; d m2; s m3; i m4; f m5; };
void f_cpA655(struct A655 *x, const struct A655 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA655(const struct A655 *x, const struct A655 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA655() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A655), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A655, m0), 1);
		dcStructField(st, 'p', offsetof(struct A655, m1), 1);
		dcStructField(st, 'd', offsetof(struct A655, m2), 1);
		dcStructField(st, 's', offsetof(struct A655, m3), 1);
		dcStructField(st, 'i', offsetof(struct A655, m4), 1);
		dcStructField(st, 'f', offsetof(struct A655, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sippj} */
struct A656 { s m0; i m1; p m2; p m3; j m4; };
void f_cpA656(struct A656 *x, const struct A656 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA656(const struct A656 *x, const struct A656 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA656() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A656), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A656, m0), 1);
		dcStructField(st, 'i', offsetof(struct A656, m1), 1);
		dcStructField(st, 'p', offsetof(struct A656, m2), 1);
		dcStructField(st, 'p', offsetof(struct A656, m3), 1);
		dcStructField(st, 'j', offsetof(struct A656, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{c}j{spdsif}lsdcf{sippj}lif} */
struct A657 { struct A77 m0; j m1; struct A655 m2; l m3; s m4; d m5; c m6; f m7; struct A656 m8; l m9; i m10; f m11; };
void f_cpA657(struct A657 *x, const struct A657 *y) { f_cpA77(&x->m0, &y->m0); x->m1 = y->m1; f_cpA655(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA656(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA657(const struct A657 *x, const struct A657 *y) { return f_cmpA77(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA655(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA656(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA657() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A657), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A657, m0), 1, f_touchdcstA77());
		dcStructField(st, 'j', offsetof(struct A657, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A657, m2), 1, f_touchdcstA655());
		dcStructField(st, 'l', offsetof(struct A657, m3), 1);
		dcStructField(st, 's', offsetof(struct A657, m4), 1);
		dcStructField(st, 'd', offsetof(struct A657, m5), 1);
		dcStructField(st, 'c', offsetof(struct A657, m6), 1);
		dcStructField(st, 'f', offsetof(struct A657, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A657, m8), 1, f_touchdcstA656());
		dcStructField(st, 'l', offsetof(struct A657, m9), 1);
		dcStructField(st, 'i', offsetof(struct A657, m10), 1);
		dcStructField(st, 'f', offsetof(struct A657, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjjcffcdcs{j}slliicjsj} */
struct A658 { p m0; j m1; j m2; c m3; f m4; f m5; c m6; d m7; c m8; s m9; struct A96 m10; s m11; l m12; l m13; i m14; i m15; c m16; j m17; s m18; j m19; };
void f_cpA658(struct A658 *x, const struct A658 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA96(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA658(const struct A658 *x, const struct A658 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA96(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA658() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A658), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A658, m0), 1);
		dcStructField(st, 'j', offsetof(struct A658, m1), 1);
		dcStructField(st, 'j', offsetof(struct A658, m2), 1);
		dcStructField(st, 'c', offsetof(struct A658, m3), 1);
		dcStructField(st, 'f', offsetof(struct A658, m4), 1);
		dcStructField(st, 'f', offsetof(struct A658, m5), 1);
		dcStructField(st, 'c', offsetof(struct A658, m6), 1);
		dcStructField(st, 'd', offsetof(struct A658, m7), 1);
		dcStructField(st, 'c', offsetof(struct A658, m8), 1);
		dcStructField(st, 's', offsetof(struct A658, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A658, m10), 1, f_touchdcstA96());
		dcStructField(st, 's', offsetof(struct A658, m11), 1);
		dcStructField(st, 'l', offsetof(struct A658, m12), 1);
		dcStructField(st, 'l', offsetof(struct A658, m13), 1);
		dcStructField(st, 'i', offsetof(struct A658, m14), 1);
		dcStructField(st, 'i', offsetof(struct A658, m15), 1);
		dcStructField(st, 'c', offsetof(struct A658, m16), 1);
		dcStructField(st, 'j', offsetof(struct A658, m17), 1);
		dcStructField(st, 's', offsetof(struct A658, m18), 1);
		dcStructField(st, 'j', offsetof(struct A658, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfpdjj} */
struct A659 { c m0; f m1; p m2; d m3; j m4; j m5; };
void f_cpA659(struct A659 *x, const struct A659 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA659(const struct A659 *x, const struct A659 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA659() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A659), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A659, m0), 1);
		dcStructField(st, 'f', offsetof(struct A659, m1), 1);
		dcStructField(st, 'p', offsetof(struct A659, m2), 1);
		dcStructField(st, 'd', offsetof(struct A659, m3), 1);
		dcStructField(st, 'j', offsetof(struct A659, m4), 1);
		dcStructField(st, 'j', offsetof(struct A659, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iddlp} */
struct A660 { i m0; d m1; d m2; l m3; p m4; };
void f_cpA660(struct A660 *x, const struct A660 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA660(const struct A660 *x, const struct A660 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA660() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A660), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A660, m0), 1);
		dcStructField(st, 'd', offsetof(struct A660, m1), 1);
		dcStructField(st, 'd', offsetof(struct A660, m2), 1);
		dcStructField(st, 'l', offsetof(struct A660, m3), 1);
		dcStructField(st, 'p', offsetof(struct A660, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfffjlfd} */
struct A661 { s m0; f m1; f m2; f m3; j m4; l m5; f m6; d m7; };
void f_cpA661(struct A661 *x, const struct A661 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA661(const struct A661 *x, const struct A661 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA661() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A661), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A661, m0), 1);
		dcStructField(st, 'f', offsetof(struct A661, m1), 1);
		dcStructField(st, 'f', offsetof(struct A661, m2), 1);
		dcStructField(st, 'f', offsetof(struct A661, m3), 1);
		dcStructField(st, 'j', offsetof(struct A661, m4), 1);
		dcStructField(st, 'l', offsetof(struct A661, m5), 1);
		dcStructField(st, 'f', offsetof(struct A661, m6), 1);
		dcStructField(st, 'd', offsetof(struct A661, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjjidj} */
struct A662 { f m0; j m1; j m2; i m3; d m4; j m5; };
void f_cpA662(struct A662 *x, const struct A662 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA662(const struct A662 *x, const struct A662 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA662() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A662), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A662, m0), 1);
		dcStructField(st, 'j', offsetof(struct A662, m1), 1);
		dcStructField(st, 'j', offsetof(struct A662, m2), 1);
		dcStructField(st, 'i', offsetof(struct A662, m3), 1);
		dcStructField(st, 'd', offsetof(struct A662, m4), 1);
		dcStructField(st, 'j', offsetof(struct A662, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfjjcps} */
struct A663 { p m0; f m1; j m2; j m3; c m4; p m5; s m6; };
void f_cpA663(struct A663 *x, const struct A663 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA663(const struct A663 *x, const struct A663 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA663() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A663), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A663, m0), 1);
		dcStructField(st, 'f', offsetof(struct A663, m1), 1);
		dcStructField(st, 'j', offsetof(struct A663, m2), 1);
		dcStructField(st, 'j', offsetof(struct A663, m3), 1);
		dcStructField(st, 'c', offsetof(struct A663, m4), 1);
		dcStructField(st, 'p', offsetof(struct A663, m5), 1);
		dcStructField(st, 's', offsetof(struct A663, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifjidjcij{ji}ljfc{pfjjcps}} */
struct A664 { i m0; f m1; j m2; i m3; d m4; j m5; c m6; i m7; j m8; struct A229 m9; l m10; j m11; f m12; c m13; struct A663 m14; };
void f_cpA664(struct A664 *x, const struct A664 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA229(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA663(&x->m14, &y->m14); };
int f_cmpA664(const struct A664 *x, const struct A664 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA229(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA663(&x->m14, &y->m14); };
DCstruct* f_touchdcstA664() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A664), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A664, m0), 1);
		dcStructField(st, 'f', offsetof(struct A664, m1), 1);
		dcStructField(st, 'j', offsetof(struct A664, m2), 1);
		dcStructField(st, 'i', offsetof(struct A664, m3), 1);
		dcStructField(st, 'd', offsetof(struct A664, m4), 1);
		dcStructField(st, 'j', offsetof(struct A664, m5), 1);
		dcStructField(st, 'c', offsetof(struct A664, m6), 1);
		dcStructField(st, 'i', offsetof(struct A664, m7), 1);
		dcStructField(st, 'j', offsetof(struct A664, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A664, m9), 1, f_touchdcstA229());
		dcStructField(st, 'l', offsetof(struct A664, m10), 1);
		dcStructField(st, 'j', offsetof(struct A664, m11), 1);
		dcStructField(st, 'f', offsetof(struct A664, m12), 1);
		dcStructField(st, 'c', offsetof(struct A664, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A664, m14), 1, f_touchdcstA663());
		dcCloseStruct(st);
	}
	return st;
};
/* {jif} */
struct A665 { j m0; i m1; f m2; };
void f_cpA665(struct A665 *x, const struct A665 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA665(const struct A665 *x, const struct A665 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA665() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A665), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A665, m0), 1);
		dcStructField(st, 'i', offsetof(struct A665, m1), 1);
		dcStructField(st, 'f', offsetof(struct A665, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlsssspcpl} */
struct A666 { j m0; l m1; s m2; s m3; s m4; s m5; p m6; c m7; p m8; l m9; };
void f_cpA666(struct A666 *x, const struct A666 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA666(const struct A666 *x, const struct A666 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA666() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A666), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A666, m0), 1);
		dcStructField(st, 'l', offsetof(struct A666, m1), 1);
		dcStructField(st, 's', offsetof(struct A666, m2), 1);
		dcStructField(st, 's', offsetof(struct A666, m3), 1);
		dcStructField(st, 's', offsetof(struct A666, m4), 1);
		dcStructField(st, 's', offsetof(struct A666, m5), 1);
		dcStructField(st, 'p', offsetof(struct A666, m6), 1);
		dcStructField(st, 'c', offsetof(struct A666, m7), 1);
		dcStructField(st, 'p', offsetof(struct A666, m8), 1);
		dcStructField(st, 'l', offsetof(struct A666, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlfldccifjissiljsdicildcjpisddildjfjf} */
struct A667 { j m0; l m1; f m2; l m3; d m4; c m5; c m6; i m7; f m8; j m9; i m10; s m11; s m12; i m13; l m14; j m15; s m16; d m17; i m18; c m19; i m20; l m21; d m22; c m23; j m24; p m25; i m26; s m27; d m28; d m29; i m30; l m31; d m32; j m33; f m34; j m35; f m36; };
void f_cpA667(struct A667 *x, const struct A667 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; };
int f_cmpA667(const struct A667 *x, const struct A667 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36; };
DCstruct* f_touchdcstA667() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(37, sizeof(struct A667), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A667, m0), 1);
		dcStructField(st, 'l', offsetof(struct A667, m1), 1);
		dcStructField(st, 'f', offsetof(struct A667, m2), 1);
		dcStructField(st, 'l', offsetof(struct A667, m3), 1);
		dcStructField(st, 'd', offsetof(struct A667, m4), 1);
		dcStructField(st, 'c', offsetof(struct A667, m5), 1);
		dcStructField(st, 'c', offsetof(struct A667, m6), 1);
		dcStructField(st, 'i', offsetof(struct A667, m7), 1);
		dcStructField(st, 'f', offsetof(struct A667, m8), 1);
		dcStructField(st, 'j', offsetof(struct A667, m9), 1);
		dcStructField(st, 'i', offsetof(struct A667, m10), 1);
		dcStructField(st, 's', offsetof(struct A667, m11), 1);
		dcStructField(st, 's', offsetof(struct A667, m12), 1);
		dcStructField(st, 'i', offsetof(struct A667, m13), 1);
		dcStructField(st, 'l', offsetof(struct A667, m14), 1);
		dcStructField(st, 'j', offsetof(struct A667, m15), 1);
		dcStructField(st, 's', offsetof(struct A667, m16), 1);
		dcStructField(st, 'd', offsetof(struct A667, m17), 1);
		dcStructField(st, 'i', offsetof(struct A667, m18), 1);
		dcStructField(st, 'c', offsetof(struct A667, m19), 1);
		dcStructField(st, 'i', offsetof(struct A667, m20), 1);
		dcStructField(st, 'l', offsetof(struct A667, m21), 1);
		dcStructField(st, 'd', offsetof(struct A667, m22), 1);
		dcStructField(st, 'c', offsetof(struct A667, m23), 1);
		dcStructField(st, 'j', offsetof(struct A667, m24), 1);
		dcStructField(st, 'p', offsetof(struct A667, m25), 1);
		dcStructField(st, 'i', offsetof(struct A667, m26), 1);
		dcStructField(st, 's', offsetof(struct A667, m27), 1);
		dcStructField(st, 'd', offsetof(struct A667, m28), 1);
		dcStructField(st, 'd', offsetof(struct A667, m29), 1);
		dcStructField(st, 'i', offsetof(struct A667, m30), 1);
		dcStructField(st, 'l', offsetof(struct A667, m31), 1);
		dcStructField(st, 'd', offsetof(struct A667, m32), 1);
		dcStructField(st, 'j', offsetof(struct A667, m33), 1);
		dcStructField(st, 'f', offsetof(struct A667, m34), 1);
		dcStructField(st, 'j', offsetof(struct A667, m35), 1);
		dcStructField(st, 'f', offsetof(struct A667, m36), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljcilcdiidlplliifjd} */
struct A668 { l m0; j m1; c m2; i m3; l m4; c m5; d m6; i m7; i m8; d m9; l m10; p m11; l m12; l m13; i m14; i m15; f m16; j m17; d m18; };
void f_cpA668(struct A668 *x, const struct A668 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA668(const struct A668 *x, const struct A668 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA668() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A668), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A668, m0), 1);
		dcStructField(st, 'j', offsetof(struct A668, m1), 1);
		dcStructField(st, 'c', offsetof(struct A668, m2), 1);
		dcStructField(st, 'i', offsetof(struct A668, m3), 1);
		dcStructField(st, 'l', offsetof(struct A668, m4), 1);
		dcStructField(st, 'c', offsetof(struct A668, m5), 1);
		dcStructField(st, 'd', offsetof(struct A668, m6), 1);
		dcStructField(st, 'i', offsetof(struct A668, m7), 1);
		dcStructField(st, 'i', offsetof(struct A668, m8), 1);
		dcStructField(st, 'd', offsetof(struct A668, m9), 1);
		dcStructField(st, 'l', offsetof(struct A668, m10), 1);
		dcStructField(st, 'p', offsetof(struct A668, m11), 1);
		dcStructField(st, 'l', offsetof(struct A668, m12), 1);
		dcStructField(st, 'l', offsetof(struct A668, m13), 1);
		dcStructField(st, 'i', offsetof(struct A668, m14), 1);
		dcStructField(st, 'i', offsetof(struct A668, m15), 1);
		dcStructField(st, 'f', offsetof(struct A668, m16), 1);
		dcStructField(st, 'j', offsetof(struct A668, m17), 1);
		dcStructField(st, 'd', offsetof(struct A668, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfjlcpd} */
struct A669 { l m0; f m1; j m2; l m3; c m4; p m5; d m6; };
void f_cpA669(struct A669 *x, const struct A669 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA669(const struct A669 *x, const struct A669 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA669() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A669), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A669, m0), 1);
		dcStructField(st, 'f', offsetof(struct A669, m1), 1);
		dcStructField(st, 'j', offsetof(struct A669, m2), 1);
		dcStructField(st, 'l', offsetof(struct A669, m3), 1);
		dcStructField(st, 'c', offsetof(struct A669, m4), 1);
		dcStructField(st, 'p', offsetof(struct A669, m5), 1);
		dcStructField(st, 'd', offsetof(struct A669, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpd} */
struct A670 { f m0; p m1; d m2; };
void f_cpA670(struct A670 *x, const struct A670 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA670(const struct A670 *x, const struct A670 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA670() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A670), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A670, m0), 1);
		dcStructField(st, 'p', offsetof(struct A670, m1), 1);
		dcStructField(st, 'd', offsetof(struct A670, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spf{fpd}cl} */
struct A671 { s m0; p m1; f m2; struct A670 m3; c m4; l m5; };
void f_cpA671(struct A671 *x, const struct A671 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA670(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA671(const struct A671 *x, const struct A671 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA670(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA671() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A671), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A671, m0), 1);
		dcStructField(st, 'p', offsetof(struct A671, m1), 1);
		dcStructField(st, 'f', offsetof(struct A671, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A671, m3), 1, f_touchdcstA670());
		dcStructField(st, 'c', offsetof(struct A671, m4), 1);
		dcStructField(st, 'l', offsetof(struct A671, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dd} */
struct A672 { d m0; d m1; };
void f_cpA672(struct A672 *x, const struct A672 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA672(const struct A672 *x, const struct A672 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA672() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A672), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A672, m0), 1);
		dcStructField(st, 'd', offsetof(struct A672, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sldflcljips} */
struct A673 { s m0; l m1; d m2; f m3; l m4; c m5; l m6; j m7; i m8; p m9; s m10; };
void f_cpA673(struct A673 *x, const struct A673 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA673(const struct A673 *x, const struct A673 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA673() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A673), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A673, m0), 1);
		dcStructField(st, 'l', offsetof(struct A673, m1), 1);
		dcStructField(st, 'd', offsetof(struct A673, m2), 1);
		dcStructField(st, 'f', offsetof(struct A673, m3), 1);
		dcStructField(st, 'l', offsetof(struct A673, m4), 1);
		dcStructField(st, 'c', offsetof(struct A673, m5), 1);
		dcStructField(st, 'l', offsetof(struct A673, m6), 1);
		dcStructField(st, 'j', offsetof(struct A673, m7), 1);
		dcStructField(st, 'i', offsetof(struct A673, m8), 1);
		dcStructField(st, 'p', offsetof(struct A673, m9), 1);
		dcStructField(st, 's', offsetof(struct A673, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pc{sldflcljips}pspl} */
struct A674 { p m0; c m1; struct A673 m2; p m3; s m4; p m5; l m6; };
void f_cpA674(struct A674 *x, const struct A674 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA673(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA674(const struct A674 *x, const struct A674 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA673(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA674() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A674), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A674, m0), 1);
		dcStructField(st, 'c', offsetof(struct A674, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A674, m2), 1, f_touchdcstA673());
		dcStructField(st, 'p', offsetof(struct A674, m3), 1);
		dcStructField(st, 's', offsetof(struct A674, m4), 1);
		dcStructField(st, 'p', offsetof(struct A674, m5), 1);
		dcStructField(st, 'l', offsetof(struct A674, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j{l}jd} */
struct A675 { j m0; struct A11 m1; j m2; d m3; };
void f_cpA675(struct A675 *x, const struct A675 *y) { x->m0 = y->m0; f_cpA11(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA675(const struct A675 *x, const struct A675 *y) { return x->m0 == y->m0 && f_cmpA11(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA675() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A675), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A675, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A675, m1), 1, f_touchdcstA11());
		dcStructField(st, 'j', offsetof(struct A675, m2), 1);
		dcStructField(st, 'd', offsetof(struct A675, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdsfdcdfppicjjlfpjlslldfcspjjjslsjc{j{l}jd}dsllfd} */
struct A676 { c m0; d m1; s m2; f m3; d m4; c m5; d m6; f m7; p m8; p m9; i m10; c m11; j m12; j m13; l m14; f m15; p m16; j m17; l m18; s m19; l m20; l m21; d m22; f m23; c m24; s m25; p m26; j m27; j m28; j m29; s m30; l m31; s m32; j m33; c m34; struct A675 m35; d m36; s m37; l m38; l m39; f m40; d m41; };
void f_cpA676(struct A676 *x, const struct A676 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; f_cpA675(&x->m35, &y->m35); x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; };
int f_cmpA676(const struct A676 *x, const struct A676 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && f_cmpA675(&x->m35, &y->m35) && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41; };
DCstruct* f_touchdcstA676() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(42, sizeof(struct A676), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A676, m0), 1);
		dcStructField(st, 'd', offsetof(struct A676, m1), 1);
		dcStructField(st, 's', offsetof(struct A676, m2), 1);
		dcStructField(st, 'f', offsetof(struct A676, m3), 1);
		dcStructField(st, 'd', offsetof(struct A676, m4), 1);
		dcStructField(st, 'c', offsetof(struct A676, m5), 1);
		dcStructField(st, 'd', offsetof(struct A676, m6), 1);
		dcStructField(st, 'f', offsetof(struct A676, m7), 1);
		dcStructField(st, 'p', offsetof(struct A676, m8), 1);
		dcStructField(st, 'p', offsetof(struct A676, m9), 1);
		dcStructField(st, 'i', offsetof(struct A676, m10), 1);
		dcStructField(st, 'c', offsetof(struct A676, m11), 1);
		dcStructField(st, 'j', offsetof(struct A676, m12), 1);
		dcStructField(st, 'j', offsetof(struct A676, m13), 1);
		dcStructField(st, 'l', offsetof(struct A676, m14), 1);
		dcStructField(st, 'f', offsetof(struct A676, m15), 1);
		dcStructField(st, 'p', offsetof(struct A676, m16), 1);
		dcStructField(st, 'j', offsetof(struct A676, m17), 1);
		dcStructField(st, 'l', offsetof(struct A676, m18), 1);
		dcStructField(st, 's', offsetof(struct A676, m19), 1);
		dcStructField(st, 'l', offsetof(struct A676, m20), 1);
		dcStructField(st, 'l', offsetof(struct A676, m21), 1);
		dcStructField(st, 'd', offsetof(struct A676, m22), 1);
		dcStructField(st, 'f', offsetof(struct A676, m23), 1);
		dcStructField(st, 'c', offsetof(struct A676, m24), 1);
		dcStructField(st, 's', offsetof(struct A676, m25), 1);
		dcStructField(st, 'p', offsetof(struct A676, m26), 1);
		dcStructField(st, 'j', offsetof(struct A676, m27), 1);
		dcStructField(st, 'j', offsetof(struct A676, m28), 1);
		dcStructField(st, 'j', offsetof(struct A676, m29), 1);
		dcStructField(st, 's', offsetof(struct A676, m30), 1);
		dcStructField(st, 'l', offsetof(struct A676, m31), 1);
		dcStructField(st, 's', offsetof(struct A676, m32), 1);
		dcStructField(st, 'j', offsetof(struct A676, m33), 1);
		dcStructField(st, 'c', offsetof(struct A676, m34), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A676, m35), 1, f_touchdcstA675());
		dcStructField(st, 'd', offsetof(struct A676, m36), 1);
		dcStructField(st, 's', offsetof(struct A676, m37), 1);
		dcStructField(st, 'l', offsetof(struct A676, m38), 1);
		dcStructField(st, 'l', offsetof(struct A676, m39), 1);
		dcStructField(st, 'f', offsetof(struct A676, m40), 1);
		dcStructField(st, 'd', offsetof(struct A676, m41), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipipp} */
struct A677 { i m0; p m1; i m2; p m3; p m4; };
void f_cpA677(struct A677 *x, const struct A677 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA677(const struct A677 *x, const struct A677 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA677() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A677), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A677, m0), 1);
		dcStructField(st, 'p', offsetof(struct A677, m1), 1);
		dcStructField(st, 'i', offsetof(struct A677, m2), 1);
		dcStructField(st, 'p', offsetof(struct A677, m3), 1);
		dcStructField(st, 'p', offsetof(struct A677, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dffsp} */
struct A678 { d m0; f m1; f m2; s m3; p m4; };
void f_cpA678(struct A678 *x, const struct A678 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA678(const struct A678 *x, const struct A678 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA678() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A678), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A678, m0), 1);
		dcStructField(st, 'f', offsetof(struct A678, m1), 1);
		dcStructField(st, 'f', offsetof(struct A678, m2), 1);
		dcStructField(st, 's', offsetof(struct A678, m3), 1);
		dcStructField(st, 'p', offsetof(struct A678, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppsippjlplfjfsd} */
struct A679 { p m0; p m1; s m2; i m3; p m4; p m5; j m6; l m7; p m8; l m9; f m10; j m11; f m12; s m13; d m14; };
void f_cpA679(struct A679 *x, const struct A679 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA679(const struct A679 *x, const struct A679 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA679() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A679), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A679, m0), 1);
		dcStructField(st, 'p', offsetof(struct A679, m1), 1);
		dcStructField(st, 's', offsetof(struct A679, m2), 1);
		dcStructField(st, 'i', offsetof(struct A679, m3), 1);
		dcStructField(st, 'p', offsetof(struct A679, m4), 1);
		dcStructField(st, 'p', offsetof(struct A679, m5), 1);
		dcStructField(st, 'j', offsetof(struct A679, m6), 1);
		dcStructField(st, 'l', offsetof(struct A679, m7), 1);
		dcStructField(st, 'p', offsetof(struct A679, m8), 1);
		dcStructField(st, 'l', offsetof(struct A679, m9), 1);
		dcStructField(st, 'f', offsetof(struct A679, m10), 1);
		dcStructField(st, 'j', offsetof(struct A679, m11), 1);
		dcStructField(st, 'f', offsetof(struct A679, m12), 1);
		dcStructField(st, 's', offsetof(struct A679, m13), 1);
		dcStructField(st, 'd', offsetof(struct A679, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpcjdc} */
struct A680 { l m0; p m1; c m2; j m3; d m4; c m5; };
void f_cpA680(struct A680 *x, const struct A680 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA680(const struct A680 *x, const struct A680 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA680() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A680), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A680, m0), 1);
		dcStructField(st, 'p', offsetof(struct A680, m1), 1);
		dcStructField(st, 'c', offsetof(struct A680, m2), 1);
		dcStructField(st, 'j', offsetof(struct A680, m3), 1);
		dcStructField(st, 'd', offsetof(struct A680, m4), 1);
		dcStructField(st, 'c', offsetof(struct A680, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfpdjpid} */
struct A681 { d m0; f m1; p m2; d m3; j m4; p m5; i m6; d m7; };
void f_cpA681(struct A681 *x, const struct A681 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA681(const struct A681 *x, const struct A681 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA681() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A681), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A681, m0), 1);
		dcStructField(st, 'f', offsetof(struct A681, m1), 1);
		dcStructField(st, 'p', offsetof(struct A681, m2), 1);
		dcStructField(st, 'd', offsetof(struct A681, m3), 1);
		dcStructField(st, 'j', offsetof(struct A681, m4), 1);
		dcStructField(st, 'p', offsetof(struct A681, m5), 1);
		dcStructField(st, 'i', offsetof(struct A681, m6), 1);
		dcStructField(st, 'd', offsetof(struct A681, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdfj} */
struct A682 { j m0; d m1; f m2; j m3; };
void f_cpA682(struct A682 *x, const struct A682 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA682(const struct A682 *x, const struct A682 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA682() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A682), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A682, m0), 1);
		dcStructField(st, 'd', offsetof(struct A682, m1), 1);
		dcStructField(st, 'f', offsetof(struct A682, m2), 1);
		dcStructField(st, 'j', offsetof(struct A682, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjlplssipj} */
struct A683 { s m0; j m1; l m2; p m3; l m4; s m5; s m6; i m7; p m8; j m9; };
void f_cpA683(struct A683 *x, const struct A683 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA683(const struct A683 *x, const struct A683 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA683() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A683), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A683, m0), 1);
		dcStructField(st, 'j', offsetof(struct A683, m1), 1);
		dcStructField(st, 'l', offsetof(struct A683, m2), 1);
		dcStructField(st, 'p', offsetof(struct A683, m3), 1);
		dcStructField(st, 'l', offsetof(struct A683, m4), 1);
		dcStructField(st, 's', offsetof(struct A683, m5), 1);
		dcStructField(st, 's', offsetof(struct A683, m6), 1);
		dcStructField(st, 'i', offsetof(struct A683, m7), 1);
		dcStructField(st, 'p', offsetof(struct A683, m8), 1);
		dcStructField(st, 'j', offsetof(struct A683, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dppcsddfj} */
struct A684 { d m0; p m1; p m2; c m3; s m4; d m5; d m6; f m7; j m8; };
void f_cpA684(struct A684 *x, const struct A684 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA684(const struct A684 *x, const struct A684 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA684() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A684), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A684, m0), 1);
		dcStructField(st, 'p', offsetof(struct A684, m1), 1);
		dcStructField(st, 'p', offsetof(struct A684, m2), 1);
		dcStructField(st, 'c', offsetof(struct A684, m3), 1);
		dcStructField(st, 's', offsetof(struct A684, m4), 1);
		dcStructField(st, 'd', offsetof(struct A684, m5), 1);
		dcStructField(st, 'd', offsetof(struct A684, m6), 1);
		dcStructField(st, 'f', offsetof(struct A684, m7), 1);
		dcStructField(st, 'j', offsetof(struct A684, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjcdp} */
struct A685 { f m0; j m1; c m2; d m3; p m4; };
void f_cpA685(struct A685 *x, const struct A685 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA685(const struct A685 *x, const struct A685 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA685() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A685), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A685, m0), 1);
		dcStructField(st, 'j', offsetof(struct A685, m1), 1);
		dcStructField(st, 'c', offsetof(struct A685, m2), 1);
		dcStructField(st, 'd', offsetof(struct A685, m3), 1);
		dcStructField(st, 'p', offsetof(struct A685, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idfsjfs} */
struct A686 { i m0; d m1; f m2; s m3; j m4; f m5; s m6; };
void f_cpA686(struct A686 *x, const struct A686 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA686(const struct A686 *x, const struct A686 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA686() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A686), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A686, m0), 1);
		dcStructField(st, 'd', offsetof(struct A686, m1), 1);
		dcStructField(st, 'f', offsetof(struct A686, m2), 1);
		dcStructField(st, 's', offsetof(struct A686, m3), 1);
		dcStructField(st, 'j', offsetof(struct A686, m4), 1);
		dcStructField(st, 'f', offsetof(struct A686, m5), 1);
		dcStructField(st, 's', offsetof(struct A686, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fjcdp}j{idfsjfs}} */
struct A687 { struct A685 m0; j m1; struct A686 m2; };
void f_cpA687(struct A687 *x, const struct A687 *y) { f_cpA685(&x->m0, &y->m0); x->m1 = y->m1; f_cpA686(&x->m2, &y->m2); };
int f_cmpA687(const struct A687 *x, const struct A687 *y) { return f_cmpA685(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA686(&x->m2, &y->m2); };
DCstruct* f_touchdcstA687() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A687), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A687, m0), 1, f_touchdcstA685());
		dcStructField(st, 'j', offsetof(struct A687, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A687, m2), 1, f_touchdcstA686());
		dcCloseStruct(st);
	}
	return st;
};
/* {pjf{dppcsddfj}pjc{{fjcdp}j{idfsjfs}}} */
struct A688 { p m0; j m1; f m2; struct A684 m3; p m4; j m5; c m6; struct A687 m7; };
void f_cpA688(struct A688 *x, const struct A688 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA684(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA687(&x->m7, &y->m7); };
int f_cmpA688(const struct A688 *x, const struct A688 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA684(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA687(&x->m7, &y->m7); };
DCstruct* f_touchdcstA688() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A688), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A688, m0), 1);
		dcStructField(st, 'j', offsetof(struct A688, m1), 1);
		dcStructField(st, 'f', offsetof(struct A688, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A688, m3), 1, f_touchdcstA684());
		dcStructField(st, 'p', offsetof(struct A688, m4), 1);
		dcStructField(st, 'j', offsetof(struct A688, m5), 1);
		dcStructField(st, 'c', offsetof(struct A688, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A688, m7), 1, f_touchdcstA687());
		dcCloseStruct(st);
	}
	return st;
};
/* {cjlfplp} */
struct A689 { c m0; j m1; l m2; f m3; p m4; l m5; p m6; };
void f_cpA689(struct A689 *x, const struct A689 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA689(const struct A689 *x, const struct A689 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA689() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A689), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A689, m0), 1);
		dcStructField(st, 'j', offsetof(struct A689, m1), 1);
		dcStructField(st, 'l', offsetof(struct A689, m2), 1);
		dcStructField(st, 'f', offsetof(struct A689, m3), 1);
		dcStructField(st, 'p', offsetof(struct A689, m4), 1);
		dcStructField(st, 'l', offsetof(struct A689, m5), 1);
		dcStructField(st, 'p', offsetof(struct A689, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dl{cjlfplp}} */
struct A690 { d m0; l m1; struct A689 m2; };
void f_cpA690(struct A690 *x, const struct A690 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA689(&x->m2, &y->m2); };
int f_cmpA690(const struct A690 *x, const struct A690 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA689(&x->m2, &y->m2); };
DCstruct* f_touchdcstA690() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A690), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A690, m0), 1);
		dcStructField(st, 'l', offsetof(struct A690, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A690, m2), 1, f_touchdcstA689());
		dcCloseStruct(st);
	}
	return st;
};
/* {cciflffdpfd} */
struct A691 { c m0; c m1; i m2; f m3; l m4; f m5; f m6; d m7; p m8; f m9; d m10; };
void f_cpA691(struct A691 *x, const struct A691 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA691(const struct A691 *x, const struct A691 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA691() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A691), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A691, m0), 1);
		dcStructField(st, 'c', offsetof(struct A691, m1), 1);
		dcStructField(st, 'i', offsetof(struct A691, m2), 1);
		dcStructField(st, 'f', offsetof(struct A691, m3), 1);
		dcStructField(st, 'l', offsetof(struct A691, m4), 1);
		dcStructField(st, 'f', offsetof(struct A691, m5), 1);
		dcStructField(st, 'f', offsetof(struct A691, m6), 1);
		dcStructField(st, 'd', offsetof(struct A691, m7), 1);
		dcStructField(st, 'p', offsetof(struct A691, m8), 1);
		dcStructField(st, 'f', offsetof(struct A691, m9), 1);
		dcStructField(st, 'd', offsetof(struct A691, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipdj} */
struct A692 { i m0; p m1; d m2; j m3; };
void f_cpA692(struct A692 *x, const struct A692 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA692(const struct A692 *x, const struct A692 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA692() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A692), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A692, m0), 1);
		dcStructField(st, 'p', offsetof(struct A692, m1), 1);
		dcStructField(st, 'd', offsetof(struct A692, m2), 1);
		dcStructField(st, 'j', offsetof(struct A692, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffdji{ipdj}c} */
struct A693 { f m0; f m1; d m2; j m3; i m4; struct A692 m5; c m6; };
void f_cpA693(struct A693 *x, const struct A693 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA692(&x->m5, &y->m5); x->m6 = y->m6; };
int f_cmpA693(const struct A693 *x, const struct A693 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA692(&x->m5, &y->m5) && x->m6 == y->m6; };
DCstruct* f_touchdcstA693() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A693), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A693, m0), 1);
		dcStructField(st, 'f', offsetof(struct A693, m1), 1);
		dcStructField(st, 'd', offsetof(struct A693, m2), 1);
		dcStructField(st, 'j', offsetof(struct A693, m3), 1);
		dcStructField(st, 'i', offsetof(struct A693, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A693, m5), 1, f_touchdcstA692());
		dcStructField(st, 'c', offsetof(struct A693, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spipcij} */
struct A694 { s m0; p m1; i m2; p m3; c m4; i m5; j m6; };
void f_cpA694(struct A694 *x, const struct A694 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA694(const struct A694 *x, const struct A694 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA694() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A694), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A694, m0), 1);
		dcStructField(st, 'p', offsetof(struct A694, m1), 1);
		dcStructField(st, 'i', offsetof(struct A694, m2), 1);
		dcStructField(st, 'p', offsetof(struct A694, m3), 1);
		dcStructField(st, 'c', offsetof(struct A694, m4), 1);
		dcStructField(st, 'i', offsetof(struct A694, m5), 1);
		dcStructField(st, 'j', offsetof(struct A694, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cclfd} */
struct A695 { c m0; c m1; l m2; f m3; d m4; };
void f_cpA695(struct A695 *x, const struct A695 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA695(const struct A695 *x, const struct A695 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA695() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A695), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A695, m0), 1);
		dcStructField(st, 'c', offsetof(struct A695, m1), 1);
		dcStructField(st, 'l', offsetof(struct A695, m2), 1);
		dcStructField(st, 'f', offsetof(struct A695, m3), 1);
		dcStructField(st, 'd', offsetof(struct A695, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsc} */
struct A696 { l m0; s m1; c m2; };
void f_cpA696(struct A696 *x, const struct A696 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA696(const struct A696 *x, const struct A696 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA696() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A696), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A696, m0), 1);
		dcStructField(st, 's', offsetof(struct A696, m1), 1);
		dcStructField(st, 'c', offsetof(struct A696, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{spipcij}i{cclfd}fcllllpjpi{lsc}} */
struct A697 { struct A694 m0; i m1; struct A695 m2; f m3; c m4; l m5; l m6; l m7; l m8; p m9; j m10; p m11; i m12; struct A696 m13; };
void f_cpA697(struct A697 *x, const struct A697 *y) { f_cpA694(&x->m0, &y->m0); x->m1 = y->m1; f_cpA695(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA696(&x->m13, &y->m13); };
int f_cmpA697(const struct A697 *x, const struct A697 *y) { return f_cmpA694(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA695(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA696(&x->m13, &y->m13); };
DCstruct* f_touchdcstA697() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A697), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A697, m0), 1, f_touchdcstA694());
		dcStructField(st, 'i', offsetof(struct A697, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A697, m2), 1, f_touchdcstA695());
		dcStructField(st, 'f', offsetof(struct A697, m3), 1);
		dcStructField(st, 'c', offsetof(struct A697, m4), 1);
		dcStructField(st, 'l', offsetof(struct A697, m5), 1);
		dcStructField(st, 'l', offsetof(struct A697, m6), 1);
		dcStructField(st, 'l', offsetof(struct A697, m7), 1);
		dcStructField(st, 'l', offsetof(struct A697, m8), 1);
		dcStructField(st, 'p', offsetof(struct A697, m9), 1);
		dcStructField(st, 'j', offsetof(struct A697, m10), 1);
		dcStructField(st, 'p', offsetof(struct A697, m11), 1);
		dcStructField(st, 'i', offsetof(struct A697, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A697, m13), 1, f_touchdcstA696());
		dcCloseStruct(st);
	}
	return st;
};
/* {cls{ffdji{ipdj}c}sdp{{spipcij}i{cclfd}fcllllpjpi{lsc}}il} */
struct A698 { c m0; l m1; s m2; struct A693 m3; s m4; d m5; p m6; struct A697 m7; i m8; l m9; };
void f_cpA698(struct A698 *x, const struct A698 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA693(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA697(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA698(const struct A698 *x, const struct A698 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA693(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA697(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA698() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A698), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A698, m0), 1);
		dcStructField(st, 'l', offsetof(struct A698, m1), 1);
		dcStructField(st, 's', offsetof(struct A698, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A698, m3), 1, f_touchdcstA693());
		dcStructField(st, 's', offsetof(struct A698, m4), 1);
		dcStructField(st, 'd', offsetof(struct A698, m5), 1);
		dcStructField(st, 'p', offsetof(struct A698, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A698, m7), 1, f_touchdcstA697());
		dcStructField(st, 'i', offsetof(struct A698, m8), 1);
		dcStructField(st, 'l', offsetof(struct A698, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fffj} */
struct A699 { f m0; f m1; f m2; j m3; };
void f_cpA699(struct A699 *x, const struct A699 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA699(const struct A699 *x, const struct A699 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA699() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A699), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A699, m0), 1);
		dcStructField(st, 'f', offsetof(struct A699, m1), 1);
		dcStructField(st, 'f', offsetof(struct A699, m2), 1);
		dcStructField(st, 'j', offsetof(struct A699, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlldpsdlfpc} */
struct A700 { d m0; l m1; l m2; d m3; p m4; s m5; d m6; l m7; f m8; p m9; c m10; };
void f_cpA700(struct A700 *x, const struct A700 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA700(const struct A700 *x, const struct A700 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA700() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A700), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A700, m0), 1);
		dcStructField(st, 'l', offsetof(struct A700, m1), 1);
		dcStructField(st, 'l', offsetof(struct A700, m2), 1);
		dcStructField(st, 'd', offsetof(struct A700, m3), 1);
		dcStructField(st, 'p', offsetof(struct A700, m4), 1);
		dcStructField(st, 's', offsetof(struct A700, m5), 1);
		dcStructField(st, 'd', offsetof(struct A700, m6), 1);
		dcStructField(st, 'l', offsetof(struct A700, m7), 1);
		dcStructField(st, 'f', offsetof(struct A700, m8), 1);
		dcStructField(st, 'p', offsetof(struct A700, m9), 1);
		dcStructField(st, 'c', offsetof(struct A700, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ji{dlldpsdlfpc}} */
struct A701 { j m0; i m1; struct A700 m2; };
void f_cpA701(struct A701 *x, const struct A701 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA700(&x->m2, &y->m2); };
int f_cmpA701(const struct A701 *x, const struct A701 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA700(&x->m2, &y->m2); };
DCstruct* f_touchdcstA701() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A701), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A701, m0), 1);
		dcStructField(st, 'i', offsetof(struct A701, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A701, m2), 1, f_touchdcstA700());
		dcCloseStruct(st);
	}
	return st;
};
/* {dcspl} */
struct A702 { d m0; c m1; s m2; p m3; l m4; };
void f_cpA702(struct A702 *x, const struct A702 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA702(const struct A702 *x, const struct A702 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA702() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A702), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A702, m0), 1);
		dcStructField(st, 'c', offsetof(struct A702, m1), 1);
		dcStructField(st, 's', offsetof(struct A702, m2), 1);
		dcStructField(st, 'p', offsetof(struct A702, m3), 1);
		dcStructField(st, 'l', offsetof(struct A702, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfpfcip} */
struct A703 { s m0; f m1; p m2; f m3; c m4; i m5; p m6; };
void f_cpA703(struct A703 *x, const struct A703 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA703(const struct A703 *x, const struct A703 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA703() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A703), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A703, m0), 1);
		dcStructField(st, 'f', offsetof(struct A703, m1), 1);
		dcStructField(st, 'p', offsetof(struct A703, m2), 1);
		dcStructField(st, 'f', offsetof(struct A703, m3), 1);
		dcStructField(st, 'c', offsetof(struct A703, m4), 1);
		dcStructField(st, 'i', offsetof(struct A703, m5), 1);
		dcStructField(st, 'p', offsetof(struct A703, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ji{dcspl}d{sfpfcip}dfdlclcsj} */
struct A704 { j m0; i m1; struct A702 m2; d m3; struct A703 m4; d m5; f m6; d m7; l m8; c m9; l m10; c m11; s m12; j m13; };
void f_cpA704(struct A704 *x, const struct A704 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA702(&x->m2, &y->m2); x->m3 = y->m3; f_cpA703(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA704(const struct A704 *x, const struct A704 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA702(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA703(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA704() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A704), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A704, m0), 1);
		dcStructField(st, 'i', offsetof(struct A704, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A704, m2), 1, f_touchdcstA702());
		dcStructField(st, 'd', offsetof(struct A704, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A704, m4), 1, f_touchdcstA703());
		dcStructField(st, 'd', offsetof(struct A704, m5), 1);
		dcStructField(st, 'f', offsetof(struct A704, m6), 1);
		dcStructField(st, 'd', offsetof(struct A704, m7), 1);
		dcStructField(st, 'l', offsetof(struct A704, m8), 1);
		dcStructField(st, 'c', offsetof(struct A704, m9), 1);
		dcStructField(st, 'l', offsetof(struct A704, m10), 1);
		dcStructField(st, 'c', offsetof(struct A704, m11), 1);
		dcStructField(st, 's', offsetof(struct A704, m12), 1);
		dcStructField(st, 'j', offsetof(struct A704, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jj{ji{dlldpsdlfpc}}{ji{dcspl}d{sfpfcip}dfdlclcsj}} */
struct A705 { j m0; j m1; struct A701 m2; struct A704 m3; };
void f_cpA705(struct A705 *x, const struct A705 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA701(&x->m2, &y->m2); f_cpA704(&x->m3, &y->m3); };
int f_cmpA705(const struct A705 *x, const struct A705 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA701(&x->m2, &y->m2) && f_cmpA704(&x->m3, &y->m3); };
DCstruct* f_touchdcstA705() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A705), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A705, m0), 1);
		dcStructField(st, 'j', offsetof(struct A705, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A705, m2), 1, f_touchdcstA701());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A705, m3), 1, f_touchdcstA704());
		dcCloseStruct(st);
	}
	return st;
};
/* {slpcjp} */
struct A706 { s m0; l m1; p m2; c m3; j m4; p m5; };
void f_cpA706(struct A706 *x, const struct A706 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA706(const struct A706 *x, const struct A706 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA706() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A706), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A706, m0), 1);
		dcStructField(st, 'l', offsetof(struct A706, m1), 1);
		dcStructField(st, 'p', offsetof(struct A706, m2), 1);
		dcStructField(st, 'c', offsetof(struct A706, m3), 1);
		dcStructField(st, 'j', offsetof(struct A706, m4), 1);
		dcStructField(st, 'p', offsetof(struct A706, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjddpsfjdfdjldfdjccljijdifpjcjjcf} */
struct A707 { p m0; j m1; d m2; d m3; p m4; s m5; f m6; j m7; d m8; f m9; d m10; j m11; l m12; d m13; f m14; d m15; j m16; c m17; c m18; l m19; j m20; i m21; j m22; d m23; i m24; f m25; p m26; j m27; c m28; j m29; j m30; c m31; f m32; };
void f_cpA707(struct A707 *x, const struct A707 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; };
int f_cmpA707(const struct A707 *x, const struct A707 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32; };
DCstruct* f_touchdcstA707() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(33, sizeof(struct A707), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A707, m0), 1);
		dcStructField(st, 'j', offsetof(struct A707, m1), 1);
		dcStructField(st, 'd', offsetof(struct A707, m2), 1);
		dcStructField(st, 'd', offsetof(struct A707, m3), 1);
		dcStructField(st, 'p', offsetof(struct A707, m4), 1);
		dcStructField(st, 's', offsetof(struct A707, m5), 1);
		dcStructField(st, 'f', offsetof(struct A707, m6), 1);
		dcStructField(st, 'j', offsetof(struct A707, m7), 1);
		dcStructField(st, 'd', offsetof(struct A707, m8), 1);
		dcStructField(st, 'f', offsetof(struct A707, m9), 1);
		dcStructField(st, 'd', offsetof(struct A707, m10), 1);
		dcStructField(st, 'j', offsetof(struct A707, m11), 1);
		dcStructField(st, 'l', offsetof(struct A707, m12), 1);
		dcStructField(st, 'd', offsetof(struct A707, m13), 1);
		dcStructField(st, 'f', offsetof(struct A707, m14), 1);
		dcStructField(st, 'd', offsetof(struct A707, m15), 1);
		dcStructField(st, 'j', offsetof(struct A707, m16), 1);
		dcStructField(st, 'c', offsetof(struct A707, m17), 1);
		dcStructField(st, 'c', offsetof(struct A707, m18), 1);
		dcStructField(st, 'l', offsetof(struct A707, m19), 1);
		dcStructField(st, 'j', offsetof(struct A707, m20), 1);
		dcStructField(st, 'i', offsetof(struct A707, m21), 1);
		dcStructField(st, 'j', offsetof(struct A707, m22), 1);
		dcStructField(st, 'd', offsetof(struct A707, m23), 1);
		dcStructField(st, 'i', offsetof(struct A707, m24), 1);
		dcStructField(st, 'f', offsetof(struct A707, m25), 1);
		dcStructField(st, 'p', offsetof(struct A707, m26), 1);
		dcStructField(st, 'j', offsetof(struct A707, m27), 1);
		dcStructField(st, 'c', offsetof(struct A707, m28), 1);
		dcStructField(st, 'j', offsetof(struct A707, m29), 1);
		dcStructField(st, 'j', offsetof(struct A707, m30), 1);
		dcStructField(st, 'c', offsetof(struct A707, m31), 1);
		dcStructField(st, 'f', offsetof(struct A707, m32), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjj} */
struct A708 { c m0; j m1; j m2; };
void f_cpA708(struct A708 *x, const struct A708 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA708(const struct A708 *x, const struct A708 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA708() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A708), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A708, m0), 1);
		dcStructField(st, 'j', offsetof(struct A708, m1), 1);
		dcStructField(st, 'j', offsetof(struct A708, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpcjss} */
struct A709 { d m0; p m1; c m2; j m3; s m4; s m5; };
void f_cpA709(struct A709 *x, const struct A709 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA709(const struct A709 *x, const struct A709 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA709() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A709), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A709, m0), 1);
		dcStructField(st, 'p', offsetof(struct A709, m1), 1);
		dcStructField(st, 'c', offsetof(struct A709, m2), 1);
		dcStructField(st, 'j', offsetof(struct A709, m3), 1);
		dcStructField(st, 's', offsetof(struct A709, m4), 1);
		dcStructField(st, 's', offsetof(struct A709, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljl} */
struct A710 { l m0; j m1; l m2; };
void f_cpA710(struct A710 *x, const struct A710 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA710(const struct A710 *x, const struct A710 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA710() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A710), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A710, m0), 1);
		dcStructField(st, 'j', offsetof(struct A710, m1), 1);
		dcStructField(st, 'l', offsetof(struct A710, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjdcj{pjddpsfjdfdjldfdjccljijdifpjcjjcf}iijc{cjj}cfjsf{l}sii{dpcjss}sjillcp{ljl}spf} */
struct A711 { c m0; j m1; d m2; c m3; j m4; struct A707 m5; i m6; i m7; j m8; c m9; struct A708 m10; c m11; f m12; j m13; s m14; f m15; struct A11 m16; s m17; i m18; i m19; struct A709 m20; s m21; j m22; i m23; l m24; l m25; c m26; p m27; struct A710 m28; s m29; p m30; f m31; };
void f_cpA711(struct A711 *x, const struct A711 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA707(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA708(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA11(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA709(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; f_cpA710(&x->m28, &y->m28); x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; };
int f_cmpA711(const struct A711 *x, const struct A711 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA707(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA708(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA11(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA709(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && f_cmpA710(&x->m28, &y->m28) && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31; };
DCstruct* f_touchdcstA711() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(32, sizeof(struct A711), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A711, m0), 1);
		dcStructField(st, 'j', offsetof(struct A711, m1), 1);
		dcStructField(st, 'd', offsetof(struct A711, m2), 1);
		dcStructField(st, 'c', offsetof(struct A711, m3), 1);
		dcStructField(st, 'j', offsetof(struct A711, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A711, m5), 1, f_touchdcstA707());
		dcStructField(st, 'i', offsetof(struct A711, m6), 1);
		dcStructField(st, 'i', offsetof(struct A711, m7), 1);
		dcStructField(st, 'j', offsetof(struct A711, m8), 1);
		dcStructField(st, 'c', offsetof(struct A711, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A711, m10), 1, f_touchdcstA708());
		dcStructField(st, 'c', offsetof(struct A711, m11), 1);
		dcStructField(st, 'f', offsetof(struct A711, m12), 1);
		dcStructField(st, 'j', offsetof(struct A711, m13), 1);
		dcStructField(st, 's', offsetof(struct A711, m14), 1);
		dcStructField(st, 'f', offsetof(struct A711, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A711, m16), 1, f_touchdcstA11());
		dcStructField(st, 's', offsetof(struct A711, m17), 1);
		dcStructField(st, 'i', offsetof(struct A711, m18), 1);
		dcStructField(st, 'i', offsetof(struct A711, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A711, m20), 1, f_touchdcstA709());
		dcStructField(st, 's', offsetof(struct A711, m21), 1);
		dcStructField(st, 'j', offsetof(struct A711, m22), 1);
		dcStructField(st, 'i', offsetof(struct A711, m23), 1);
		dcStructField(st, 'l', offsetof(struct A711, m24), 1);
		dcStructField(st, 'l', offsetof(struct A711, m25), 1);
		dcStructField(st, 'c', offsetof(struct A711, m26), 1);
		dcStructField(st, 'p', offsetof(struct A711, m27), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A711, m28), 1, f_touchdcstA710());
		dcStructField(st, 's', offsetof(struct A711, m29), 1);
		dcStructField(st, 'p', offsetof(struct A711, m30), 1);
		dcStructField(st, 'f', offsetof(struct A711, m31), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfip} */
struct A712 { l m0; f m1; i m2; p m3; };
void f_cpA712(struct A712 *x, const struct A712 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA712(const struct A712 *x, const struct A712 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA712() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A712), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A712, m0), 1);
		dcStructField(st, 'f', offsetof(struct A712, m1), 1);
		dcStructField(st, 'i', offsetof(struct A712, m2), 1);
		dcStructField(st, 'p', offsetof(struct A712, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cslsffjjji} */
struct A713 { c m0; s m1; l m2; s m3; f m4; f m5; j m6; j m7; j m8; i m9; };
void f_cpA713(struct A713 *x, const struct A713 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA713(const struct A713 *x, const struct A713 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA713() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A713), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A713, m0), 1);
		dcStructField(st, 's', offsetof(struct A713, m1), 1);
		dcStructField(st, 'l', offsetof(struct A713, m2), 1);
		dcStructField(st, 's', offsetof(struct A713, m3), 1);
		dcStructField(st, 'f', offsetof(struct A713, m4), 1);
		dcStructField(st, 'f', offsetof(struct A713, m5), 1);
		dcStructField(st, 'j', offsetof(struct A713, m6), 1);
		dcStructField(st, 'j', offsetof(struct A713, m7), 1);
		dcStructField(st, 'j', offsetof(struct A713, m8), 1);
		dcStructField(st, 'i', offsetof(struct A713, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssdsjcjsdppijcipljisfpp} */
struct A714 { s m0; s m1; d m2; s m3; j m4; c m5; j m6; s m7; d m8; p m9; p m10; i m11; j m12; c m13; i m14; p m15; l m16; j m17; i m18; s m19; f m20; p m21; p m22; };
void f_cpA714(struct A714 *x, const struct A714 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA714(const struct A714 *x, const struct A714 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA714() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A714), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A714, m0), 1);
		dcStructField(st, 's', offsetof(struct A714, m1), 1);
		dcStructField(st, 'd', offsetof(struct A714, m2), 1);
		dcStructField(st, 's', offsetof(struct A714, m3), 1);
		dcStructField(st, 'j', offsetof(struct A714, m4), 1);
		dcStructField(st, 'c', offsetof(struct A714, m5), 1);
		dcStructField(st, 'j', offsetof(struct A714, m6), 1);
		dcStructField(st, 's', offsetof(struct A714, m7), 1);
		dcStructField(st, 'd', offsetof(struct A714, m8), 1);
		dcStructField(st, 'p', offsetof(struct A714, m9), 1);
		dcStructField(st, 'p', offsetof(struct A714, m10), 1);
		dcStructField(st, 'i', offsetof(struct A714, m11), 1);
		dcStructField(st, 'j', offsetof(struct A714, m12), 1);
		dcStructField(st, 'c', offsetof(struct A714, m13), 1);
		dcStructField(st, 'i', offsetof(struct A714, m14), 1);
		dcStructField(st, 'p', offsetof(struct A714, m15), 1);
		dcStructField(st, 'l', offsetof(struct A714, m16), 1);
		dcStructField(st, 'j', offsetof(struct A714, m17), 1);
		dcStructField(st, 'i', offsetof(struct A714, m18), 1);
		dcStructField(st, 's', offsetof(struct A714, m19), 1);
		dcStructField(st, 'f', offsetof(struct A714, m20), 1);
		dcStructField(st, 'p', offsetof(struct A714, m21), 1);
		dcStructField(st, 'p', offsetof(struct A714, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lssllsdi} */
struct A715 { l m0; s m1; s m2; l m3; l m4; s m5; d m6; i m7; };
void f_cpA715(struct A715 *x, const struct A715 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA715(const struct A715 *x, const struct A715 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA715() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A715), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A715, m0), 1);
		dcStructField(st, 's', offsetof(struct A715, m1), 1);
		dcStructField(st, 's', offsetof(struct A715, m2), 1);
		dcStructField(st, 'l', offsetof(struct A715, m3), 1);
		dcStructField(st, 'l', offsetof(struct A715, m4), 1);
		dcStructField(st, 's', offsetof(struct A715, m5), 1);
		dcStructField(st, 'd', offsetof(struct A715, m6), 1);
		dcStructField(st, 'i', offsetof(struct A715, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scl} */
struct A716 { s m0; c m1; l m2; };
void f_cpA716(struct A716 *x, const struct A716 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA716(const struct A716 *x, const struct A716 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA716() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A716), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A716, m0), 1);
		dcStructField(st, 'c', offsetof(struct A716, m1), 1);
		dcStructField(st, 'l', offsetof(struct A716, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ff} */
struct A717 { f m0; f m1; };
void f_cpA717(struct A717 *x, const struct A717 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA717(const struct A717 *x, const struct A717 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA717() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A717), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A717, m0), 1);
		dcStructField(st, 'f', offsetof(struct A717, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccsfds} */
struct A718 { c m0; c m1; s m2; f m3; d m4; s m5; };
void f_cpA718(struct A718 *x, const struct A718 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA718(const struct A718 *x, const struct A718 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA718() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A718), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A718, m0), 1);
		dcStructField(st, 'c', offsetof(struct A718, m1), 1);
		dcStructField(st, 's', offsetof(struct A718, m2), 1);
		dcStructField(st, 'f', offsetof(struct A718, m3), 1);
		dcStructField(st, 'd', offsetof(struct A718, m4), 1);
		dcStructField(st, 's', offsetof(struct A718, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{ccsfds}dj} */
struct A719 { struct A718 m0; d m1; j m2; };
void f_cpA719(struct A719 *x, const struct A719 *y) { f_cpA718(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA719(const struct A719 *x, const struct A719 *y) { return f_cmpA718(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA719() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A719), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A719, m0), 1, f_touchdcstA718());
		dcStructField(st, 'd', offsetof(struct A719, m1), 1);
		dcStructField(st, 'j', offsetof(struct A719, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pficf} */
struct A720 { p m0; f m1; i m2; c m3; f m4; };
void f_cpA720(struct A720 *x, const struct A720 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA720(const struct A720 *x, const struct A720 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA720() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A720), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A720, m0), 1);
		dcStructField(st, 'f', offsetof(struct A720, m1), 1);
		dcStructField(st, 'i', offsetof(struct A720, m2), 1);
		dcStructField(st, 'c', offsetof(struct A720, m3), 1);
		dcStructField(st, 'f', offsetof(struct A720, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llf} */
struct A721 { l m0; l m1; f m2; };
void f_cpA721(struct A721 *x, const struct A721 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA721(const struct A721 *x, const struct A721 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA721() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A721), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A721, m0), 1);
		dcStructField(st, 'l', offsetof(struct A721, m1), 1);
		dcStructField(st, 'f', offsetof(struct A721, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijpijdll} */
struct A722 { i m0; j m1; p m2; i m3; j m4; d m5; l m6; l m7; };
void f_cpA722(struct A722 *x, const struct A722 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA722(const struct A722 *x, const struct A722 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA722() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A722), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A722, m0), 1);
		dcStructField(st, 'j', offsetof(struct A722, m1), 1);
		dcStructField(st, 'p', offsetof(struct A722, m2), 1);
		dcStructField(st, 'i', offsetof(struct A722, m3), 1);
		dcStructField(st, 'j', offsetof(struct A722, m4), 1);
		dcStructField(st, 'd', offsetof(struct A722, m5), 1);
		dcStructField(st, 'l', offsetof(struct A722, m6), 1);
		dcStructField(st, 'l', offsetof(struct A722, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsddjsfi} */
struct A723 { f m0; s m1; d m2; d m3; j m4; s m5; f m6; i m7; };
void f_cpA723(struct A723 *x, const struct A723 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA723(const struct A723 *x, const struct A723 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA723() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A723), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A723, m0), 1);
		dcStructField(st, 's', offsetof(struct A723, m1), 1);
		dcStructField(st, 'd', offsetof(struct A723, m2), 1);
		dcStructField(st, 'd', offsetof(struct A723, m3), 1);
		dcStructField(st, 'j', offsetof(struct A723, m4), 1);
		dcStructField(st, 's', offsetof(struct A723, m5), 1);
		dcStructField(st, 'f', offsetof(struct A723, m6), 1);
		dcStructField(st, 'i', offsetof(struct A723, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpijsl{ijpijdll}i{fsddjsfi}} */
struct A724 { f m0; p m1; i m2; j m3; s m4; l m5; struct A722 m6; i m7; struct A723 m8; };
void f_cpA724(struct A724 *x, const struct A724 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA722(&x->m6, &y->m6); x->m7 = y->m7; f_cpA723(&x->m8, &y->m8); };
int f_cmpA724(const struct A724 *x, const struct A724 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA722(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA723(&x->m8, &y->m8); };
DCstruct* f_touchdcstA724() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A724), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A724, m0), 1);
		dcStructField(st, 'p', offsetof(struct A724, m1), 1);
		dcStructField(st, 'i', offsetof(struct A724, m2), 1);
		dcStructField(st, 'j', offsetof(struct A724, m3), 1);
		dcStructField(st, 's', offsetof(struct A724, m4), 1);
		dcStructField(st, 'l', offsetof(struct A724, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A724, m6), 1, f_touchdcstA722());
		dcStructField(st, 'i', offsetof(struct A724, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A724, m8), 1, f_touchdcstA723());
		dcCloseStruct(st);
	}
	return st;
};
/* {isci} */
struct A725 { i m0; s m1; c m2; i m3; };
void f_cpA725(struct A725 *x, const struct A725 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA725(const struct A725 *x, const struct A725 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA725() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A725), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A725, m0), 1);
		dcStructField(st, 's', offsetof(struct A725, m1), 1);
		dcStructField(st, 'c', offsetof(struct A725, m2), 1);
		dcStructField(st, 'i', offsetof(struct A725, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfj} */
struct A726 { c m0; f m1; j m2; };
void f_cpA726(struct A726 *x, const struct A726 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA726(const struct A726 *x, const struct A726 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA726() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A726), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A726, m0), 1);
		dcStructField(st, 'f', offsetof(struct A726, m1), 1);
		dcStructField(st, 'j', offsetof(struct A726, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipjcfljlps} */
struct A727 { i m0; p m1; j m2; c m3; f m4; l m5; j m6; l m7; p m8; s m9; };
void f_cpA727(struct A727 *x, const struct A727 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA727(const struct A727 *x, const struct A727 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA727() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A727), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A727, m0), 1);
		dcStructField(st, 'p', offsetof(struct A727, m1), 1);
		dcStructField(st, 'j', offsetof(struct A727, m2), 1);
		dcStructField(st, 'c', offsetof(struct A727, m3), 1);
		dcStructField(st, 'f', offsetof(struct A727, m4), 1);
		dcStructField(st, 'l', offsetof(struct A727, m5), 1);
		dcStructField(st, 'j', offsetof(struct A727, m6), 1);
		dcStructField(st, 'l', offsetof(struct A727, m7), 1);
		dcStructField(st, 'p', offsetof(struct A727, m8), 1);
		dcStructField(st, 's', offsetof(struct A727, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sf{ipjcfljlps}} */
struct A728 { s m0; f m1; struct A727 m2; };
void f_cpA728(struct A728 *x, const struct A728 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA727(&x->m2, &y->m2); };
int f_cmpA728(const struct A728 *x, const struct A728 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA727(&x->m2, &y->m2); };
DCstruct* f_touchdcstA728() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A728), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A728, m0), 1);
		dcStructField(st, 'f', offsetof(struct A728, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A728, m2), 1, f_touchdcstA727());
		dcCloseStruct(st);
	}
	return st;
};
/* {fcj} */
struct A729 { f m0; c m1; j m2; };
void f_cpA729(struct A729 *x, const struct A729 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA729(const struct A729 *x, const struct A729 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA729() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A729), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A729, m0), 1);
		dcStructField(st, 'c', offsetof(struct A729, m1), 1);
		dcStructField(st, 'j', offsetof(struct A729, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppdfpss} */
struct A730 { p m0; p m1; d m2; f m3; p m4; s m5; s m6; };
void f_cpA730(struct A730 *x, const struct A730 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA730(const struct A730 *x, const struct A730 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA730() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A730), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A730, m0), 1);
		dcStructField(st, 'p', offsetof(struct A730, m1), 1);
		dcStructField(st, 'd', offsetof(struct A730, m2), 1);
		dcStructField(st, 'f', offsetof(struct A730, m3), 1);
		dcStructField(st, 'p', offsetof(struct A730, m4), 1);
		dcStructField(st, 's', offsetof(struct A730, m5), 1);
		dcStructField(st, 's', offsetof(struct A730, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfjlddj{ppdfpss}} */
struct A731 { d m0; f m1; j m2; l m3; d m4; d m5; j m6; struct A730 m7; };
void f_cpA731(struct A731 *x, const struct A731 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA730(&x->m7, &y->m7); };
int f_cmpA731(const struct A731 *x, const struct A731 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA730(&x->m7, &y->m7); };
DCstruct* f_touchdcstA731() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A731), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A731, m0), 1);
		dcStructField(st, 'f', offsetof(struct A731, m1), 1);
		dcStructField(st, 'j', offsetof(struct A731, m2), 1);
		dcStructField(st, 'l', offsetof(struct A731, m3), 1);
		dcStructField(st, 'd', offsetof(struct A731, m4), 1);
		dcStructField(st, 'd', offsetof(struct A731, m5), 1);
		dcStructField(st, 'j', offsetof(struct A731, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A731, m7), 1, f_touchdcstA730());
		dcCloseStruct(st);
	}
	return st;
};
/* {spf} */
struct A732 { s m0; p m1; f m2; };
void f_cpA732(struct A732 *x, const struct A732 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA732(const struct A732 *x, const struct A732 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA732() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A732), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A732, m0), 1);
		dcStructField(st, 'p', offsetof(struct A732, m1), 1);
		dcStructField(st, 'f', offsetof(struct A732, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssldjpjpjlsjcisplfcsspjpjp} */
struct A733 { s m0; s m1; l m2; d m3; j m4; p m5; j m6; p m7; j m8; l m9; s m10; j m11; c m12; i m13; s m14; p m15; l m16; f m17; c m18; s m19; s m20; p m21; j m22; p m23; j m24; p m25; };
void f_cpA733(struct A733 *x, const struct A733 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA733(const struct A733 *x, const struct A733 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA733() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A733), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A733, m0), 1);
		dcStructField(st, 's', offsetof(struct A733, m1), 1);
		dcStructField(st, 'l', offsetof(struct A733, m2), 1);
		dcStructField(st, 'd', offsetof(struct A733, m3), 1);
		dcStructField(st, 'j', offsetof(struct A733, m4), 1);
		dcStructField(st, 'p', offsetof(struct A733, m5), 1);
		dcStructField(st, 'j', offsetof(struct A733, m6), 1);
		dcStructField(st, 'p', offsetof(struct A733, m7), 1);
		dcStructField(st, 'j', offsetof(struct A733, m8), 1);
		dcStructField(st, 'l', offsetof(struct A733, m9), 1);
		dcStructField(st, 's', offsetof(struct A733, m10), 1);
		dcStructField(st, 'j', offsetof(struct A733, m11), 1);
		dcStructField(st, 'c', offsetof(struct A733, m12), 1);
		dcStructField(st, 'i', offsetof(struct A733, m13), 1);
		dcStructField(st, 's', offsetof(struct A733, m14), 1);
		dcStructField(st, 'p', offsetof(struct A733, m15), 1);
		dcStructField(st, 'l', offsetof(struct A733, m16), 1);
		dcStructField(st, 'f', offsetof(struct A733, m17), 1);
		dcStructField(st, 'c', offsetof(struct A733, m18), 1);
		dcStructField(st, 's', offsetof(struct A733, m19), 1);
		dcStructField(st, 's', offsetof(struct A733, m20), 1);
		dcStructField(st, 'p', offsetof(struct A733, m21), 1);
		dcStructField(st, 'j', offsetof(struct A733, m22), 1);
		dcStructField(st, 'p', offsetof(struct A733, m23), 1);
		dcStructField(st, 'j', offsetof(struct A733, m24), 1);
		dcStructField(st, 'p', offsetof(struct A733, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pficjlclpffis} */
struct A734 { p m0; f m1; i m2; c m3; j m4; l m5; c m6; l m7; p m8; f m9; f m10; i m11; s m12; };
void f_cpA734(struct A734 *x, const struct A734 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA734(const struct A734 *x, const struct A734 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA734() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A734), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A734, m0), 1);
		dcStructField(st, 'f', offsetof(struct A734, m1), 1);
		dcStructField(st, 'i', offsetof(struct A734, m2), 1);
		dcStructField(st, 'c', offsetof(struct A734, m3), 1);
		dcStructField(st, 'j', offsetof(struct A734, m4), 1);
		dcStructField(st, 'l', offsetof(struct A734, m5), 1);
		dcStructField(st, 'c', offsetof(struct A734, m6), 1);
		dcStructField(st, 'l', offsetof(struct A734, m7), 1);
		dcStructField(st, 'p', offsetof(struct A734, m8), 1);
		dcStructField(st, 'f', offsetof(struct A734, m9), 1);
		dcStructField(st, 'f', offsetof(struct A734, m10), 1);
		dcStructField(st, 'i', offsetof(struct A734, m11), 1);
		dcStructField(st, 's', offsetof(struct A734, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{pficjlclpffis}} */
struct A735 { struct A734 m0; };
void f_cpA735(struct A735 *x, const struct A735 *y) { f_cpA734(&x->m0, &y->m0); };
int f_cmpA735(const struct A735 *x, const struct A735 *y) { return f_cmpA734(&x->m0, &y->m0); };
DCstruct* f_touchdcstA735() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A735), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A735, m0), 1, f_touchdcstA734());
		dcCloseStruct(st);
	}
	return st;
};
/* {pcclf} */
struct A736 { p m0; c m1; c m2; l m3; f m4; };
void f_cpA736(struct A736 *x, const struct A736 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA736(const struct A736 *x, const struct A736 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA736() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A736), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A736, m0), 1);
		dcStructField(st, 'c', offsetof(struct A736, m1), 1);
		dcStructField(st, 'c', offsetof(struct A736, m2), 1);
		dcStructField(st, 'l', offsetof(struct A736, m3), 1);
		dcStructField(st, 'f', offsetof(struct A736, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dilsldsplcsidp} */
struct A737 { d m0; i m1; l m2; s m3; l m4; d m5; s m6; p m7; l m8; c m9; s m10; i m11; d m12; p m13; };
void f_cpA737(struct A737 *x, const struct A737 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA737(const struct A737 *x, const struct A737 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA737() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A737), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A737, m0), 1);
		dcStructField(st, 'i', offsetof(struct A737, m1), 1);
		dcStructField(st, 'l', offsetof(struct A737, m2), 1);
		dcStructField(st, 's', offsetof(struct A737, m3), 1);
		dcStructField(st, 'l', offsetof(struct A737, m4), 1);
		dcStructField(st, 'd', offsetof(struct A737, m5), 1);
		dcStructField(st, 's', offsetof(struct A737, m6), 1);
		dcStructField(st, 'p', offsetof(struct A737, m7), 1);
		dcStructField(st, 'l', offsetof(struct A737, m8), 1);
		dcStructField(st, 'c', offsetof(struct A737, m9), 1);
		dcStructField(st, 's', offsetof(struct A737, m10), 1);
		dcStructField(st, 'i', offsetof(struct A737, m11), 1);
		dcStructField(st, 'd', offsetof(struct A737, m12), 1);
		dcStructField(st, 'p', offsetof(struct A737, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifjfdj} */
struct A738 { i m0; f m1; j m2; f m3; d m4; j m5; };
void f_cpA738(struct A738 *x, const struct A738 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA738(const struct A738 *x, const struct A738 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA738() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A738), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A738, m0), 1);
		dcStructField(st, 'f', offsetof(struct A738, m1), 1);
		dcStructField(st, 'j', offsetof(struct A738, m2), 1);
		dcStructField(st, 'f', offsetof(struct A738, m3), 1);
		dcStructField(st, 'd', offsetof(struct A738, m4), 1);
		dcStructField(st, 'j', offsetof(struct A738, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlps} */
struct A739 { d m0; l m1; p m2; s m3; };
void f_cpA739(struct A739 *x, const struct A739 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA739(const struct A739 *x, const struct A739 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA739() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A739), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A739, m0), 1);
		dcStructField(st, 'l', offsetof(struct A739, m1), 1);
		dcStructField(st, 'p', offsetof(struct A739, m2), 1);
		dcStructField(st, 's', offsetof(struct A739, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljj} */
struct A740 { l m0; j m1; j m2; };
void f_cpA740(struct A740 *x, const struct A740 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA740(const struct A740 *x, const struct A740 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA740() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A740), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A740, m0), 1);
		dcStructField(st, 'j', offsetof(struct A740, m1), 1);
		dcStructField(st, 'j', offsetof(struct A740, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsff} */
struct A741 { f m0; s m1; f m2; f m3; };
void f_cpA741(struct A741 *x, const struct A741 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA741(const struct A741 *x, const struct A741 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA741() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A741), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A741, m0), 1);
		dcStructField(st, 's', offsetof(struct A741, m1), 1);
		dcStructField(st, 'f', offsetof(struct A741, m2), 1);
		dcStructField(st, 'f', offsetof(struct A741, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fsff}fljsl} */
struct A742 { struct A741 m0; f m1; l m2; j m3; s m4; l m5; };
void f_cpA742(struct A742 *x, const struct A742 *y) { f_cpA741(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA742(const struct A742 *x, const struct A742 *y) { return f_cmpA741(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA742() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A742), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A742, m0), 1, f_touchdcstA741());
		dcStructField(st, 'f', offsetof(struct A742, m1), 1);
		dcStructField(st, 'l', offsetof(struct A742, m2), 1);
		dcStructField(st, 'j', offsetof(struct A742, m3), 1);
		dcStructField(st, 's', offsetof(struct A742, m4), 1);
		dcStructField(st, 'l', offsetof(struct A742, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjj} */
struct A743 { s m0; j m1; j m2; };
void f_cpA743(struct A743 *x, const struct A743 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA743(const struct A743 *x, const struct A743 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA743() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A743), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A743, m0), 1);
		dcStructField(st, 'j', offsetof(struct A743, m1), 1);
		dcStructField(st, 'j', offsetof(struct A743, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cccisp{sjj}cisf} */
struct A744 { c m0; c m1; c m2; i m3; s m4; p m5; struct A743 m6; c m7; i m8; s m9; f m10; };
void f_cpA744(struct A744 *x, const struct A744 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA743(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA744(const struct A744 *x, const struct A744 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA743(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA744() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A744), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A744, m0), 1);
		dcStructField(st, 'c', offsetof(struct A744, m1), 1);
		dcStructField(st, 'c', offsetof(struct A744, m2), 1);
		dcStructField(st, 'i', offsetof(struct A744, m3), 1);
		dcStructField(st, 's', offsetof(struct A744, m4), 1);
		dcStructField(st, 'p', offsetof(struct A744, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A744, m6), 1, f_touchdcstA743());
		dcStructField(st, 'c', offsetof(struct A744, m7), 1);
		dcStructField(st, 'i', offsetof(struct A744, m8), 1);
		dcStructField(st, 's', offsetof(struct A744, m9), 1);
		dcStructField(st, 'f', offsetof(struct A744, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpslldjdpjf} */
struct A745 { l m0; p m1; s m2; l m3; l m4; d m5; j m6; d m7; p m8; j m9; f m10; };
void f_cpA745(struct A745 *x, const struct A745 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA745(const struct A745 *x, const struct A745 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA745() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A745), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A745, m0), 1);
		dcStructField(st, 'p', offsetof(struct A745, m1), 1);
		dcStructField(st, 's', offsetof(struct A745, m2), 1);
		dcStructField(st, 'l', offsetof(struct A745, m3), 1);
		dcStructField(st, 'l', offsetof(struct A745, m4), 1);
		dcStructField(st, 'd', offsetof(struct A745, m5), 1);
		dcStructField(st, 'j', offsetof(struct A745, m6), 1);
		dcStructField(st, 'd', offsetof(struct A745, m7), 1);
		dcStructField(st, 'p', offsetof(struct A745, m8), 1);
		dcStructField(st, 'j', offsetof(struct A745, m9), 1);
		dcStructField(st, 'f', offsetof(struct A745, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slf{lpslldjdpjf}pc} */
struct A746 { s m0; l m1; f m2; struct A745 m3; p m4; c m5; };
void f_cpA746(struct A746 *x, const struct A746 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA745(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA746(const struct A746 *x, const struct A746 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA745(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA746() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A746), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A746, m0), 1);
		dcStructField(st, 'l', offsetof(struct A746, m1), 1);
		dcStructField(st, 'f', offsetof(struct A746, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A746, m3), 1, f_touchdcstA745());
		dcStructField(st, 'p', offsetof(struct A746, m4), 1);
		dcStructField(st, 'c', offsetof(struct A746, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjfplcls} */
struct A747 { f m0; j m1; f m2; p m3; l m4; c m5; l m6; s m7; };
void f_cpA747(struct A747 *x, const struct A747 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA747(const struct A747 *x, const struct A747 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA747() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A747), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A747, m0), 1);
		dcStructField(st, 'j', offsetof(struct A747, m1), 1);
		dcStructField(st, 'f', offsetof(struct A747, m2), 1);
		dcStructField(st, 'p', offsetof(struct A747, m3), 1);
		dcStructField(st, 'l', offsetof(struct A747, m4), 1);
		dcStructField(st, 'c', offsetof(struct A747, m5), 1);
		dcStructField(st, 'l', offsetof(struct A747, m6), 1);
		dcStructField(st, 's', offsetof(struct A747, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idssdlfdp} */
struct A748 { i m0; d m1; s m2; s m3; d m4; l m5; f m6; d m7; p m8; };
void f_cpA748(struct A748 *x, const struct A748 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA748(const struct A748 *x, const struct A748 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA748() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A748), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A748, m0), 1);
		dcStructField(st, 'd', offsetof(struct A748, m1), 1);
		dcStructField(st, 's', offsetof(struct A748, m2), 1);
		dcStructField(st, 's', offsetof(struct A748, m3), 1);
		dcStructField(st, 'd', offsetof(struct A748, m4), 1);
		dcStructField(st, 'l', offsetof(struct A748, m5), 1);
		dcStructField(st, 'f', offsetof(struct A748, m6), 1);
		dcStructField(st, 'd', offsetof(struct A748, m7), 1);
		dcStructField(st, 'p', offsetof(struct A748, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sifdpdsjcdssllpcjijscdjsc} */
struct A749 { s m0; i m1; f m2; d m3; p m4; d m5; s m6; j m7; c m8; d m9; s m10; s m11; l m12; l m13; p m14; c m15; j m16; i m17; j m18; s m19; c m20; d m21; j m22; s m23; c m24; };
void f_cpA749(struct A749 *x, const struct A749 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA749(const struct A749 *x, const struct A749 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA749() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A749), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A749, m0), 1);
		dcStructField(st, 'i', offsetof(struct A749, m1), 1);
		dcStructField(st, 'f', offsetof(struct A749, m2), 1);
		dcStructField(st, 'd', offsetof(struct A749, m3), 1);
		dcStructField(st, 'p', offsetof(struct A749, m4), 1);
		dcStructField(st, 'd', offsetof(struct A749, m5), 1);
		dcStructField(st, 's', offsetof(struct A749, m6), 1);
		dcStructField(st, 'j', offsetof(struct A749, m7), 1);
		dcStructField(st, 'c', offsetof(struct A749, m8), 1);
		dcStructField(st, 'd', offsetof(struct A749, m9), 1);
		dcStructField(st, 's', offsetof(struct A749, m10), 1);
		dcStructField(st, 's', offsetof(struct A749, m11), 1);
		dcStructField(st, 'l', offsetof(struct A749, m12), 1);
		dcStructField(st, 'l', offsetof(struct A749, m13), 1);
		dcStructField(st, 'p', offsetof(struct A749, m14), 1);
		dcStructField(st, 'c', offsetof(struct A749, m15), 1);
		dcStructField(st, 'j', offsetof(struct A749, m16), 1);
		dcStructField(st, 'i', offsetof(struct A749, m17), 1);
		dcStructField(st, 'j', offsetof(struct A749, m18), 1);
		dcStructField(st, 's', offsetof(struct A749, m19), 1);
		dcStructField(st, 'c', offsetof(struct A749, m20), 1);
		dcStructField(st, 'd', offsetof(struct A749, m21), 1);
		dcStructField(st, 'j', offsetof(struct A749, m22), 1);
		dcStructField(st, 's', offsetof(struct A749, m23), 1);
		dcStructField(st, 'c', offsetof(struct A749, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlscjfl{sifdpdsjcdssllpcjijscdjsc}p} */
struct A750 { d m0; l m1; s m2; c m3; j m4; f m5; l m6; struct A749 m7; p m8; };
void f_cpA750(struct A750 *x, const struct A750 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA749(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA750(const struct A750 *x, const struct A750 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA749(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA750() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A750), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A750, m0), 1);
		dcStructField(st, 'l', offsetof(struct A750, m1), 1);
		dcStructField(st, 's', offsetof(struct A750, m2), 1);
		dcStructField(st, 'c', offsetof(struct A750, m3), 1);
		dcStructField(st, 'j', offsetof(struct A750, m4), 1);
		dcStructField(st, 'f', offsetof(struct A750, m5), 1);
		dcStructField(st, 'l', offsetof(struct A750, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A750, m7), 1, f_touchdcstA749());
		dcStructField(st, 'p', offsetof(struct A750, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsfpl} */
struct A751 { f m0; s m1; f m2; p m3; l m4; };
void f_cpA751(struct A751 *x, const struct A751 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA751(const struct A751 *x, const struct A751 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA751() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A751), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A751, m0), 1);
		dcStructField(st, 's', offsetof(struct A751, m1), 1);
		dcStructField(st, 'f', offsetof(struct A751, m2), 1);
		dcStructField(st, 'p', offsetof(struct A751, m3), 1);
		dcStructField(st, 'l', offsetof(struct A751, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lciicj} */
struct A752 { l m0; c m1; i m2; i m3; c m4; j m5; };
void f_cpA752(struct A752 *x, const struct A752 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA752(const struct A752 *x, const struct A752 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA752() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A752), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A752, m0), 1);
		dcStructField(st, 'c', offsetof(struct A752, m1), 1);
		dcStructField(st, 'i', offsetof(struct A752, m2), 1);
		dcStructField(st, 'i', offsetof(struct A752, m3), 1);
		dcStructField(st, 'c', offsetof(struct A752, m4), 1);
		dcStructField(st, 'j', offsetof(struct A752, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {f{fsfpl}jjcl{lciicj}jlcj} */
struct A753 { f m0; struct A751 m1; j m2; j m3; c m4; l m5; struct A752 m6; j m7; l m8; c m9; j m10; };
void f_cpA753(struct A753 *x, const struct A753 *y) { x->m0 = y->m0; f_cpA751(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA752(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA753(const struct A753 *x, const struct A753 *y) { return x->m0 == y->m0 && f_cmpA751(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA752(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA753() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A753), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A753, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A753, m1), 1, f_touchdcstA751());
		dcStructField(st, 'j', offsetof(struct A753, m2), 1);
		dcStructField(st, 'j', offsetof(struct A753, m3), 1);
		dcStructField(st, 'c', offsetof(struct A753, m4), 1);
		dcStructField(st, 'l', offsetof(struct A753, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A753, m6), 1, f_touchdcstA752());
		dcStructField(st, 'j', offsetof(struct A753, m7), 1);
		dcStructField(st, 'l', offsetof(struct A753, m8), 1);
		dcStructField(st, 'c', offsetof(struct A753, m9), 1);
		dcStructField(st, 'j', offsetof(struct A753, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icfdcpfjdfddcsdjsd} */
struct A754 { i m0; c m1; f m2; d m3; c m4; p m5; f m6; j m7; d m8; f m9; d m10; d m11; c m12; s m13; d m14; j m15; s m16; d m17; };
void f_cpA754(struct A754 *x, const struct A754 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA754(const struct A754 *x, const struct A754 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA754() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A754), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A754, m0), 1);
		dcStructField(st, 'c', offsetof(struct A754, m1), 1);
		dcStructField(st, 'f', offsetof(struct A754, m2), 1);
		dcStructField(st, 'd', offsetof(struct A754, m3), 1);
		dcStructField(st, 'c', offsetof(struct A754, m4), 1);
		dcStructField(st, 'p', offsetof(struct A754, m5), 1);
		dcStructField(st, 'f', offsetof(struct A754, m6), 1);
		dcStructField(st, 'j', offsetof(struct A754, m7), 1);
		dcStructField(st, 'd', offsetof(struct A754, m8), 1);
		dcStructField(st, 'f', offsetof(struct A754, m9), 1);
		dcStructField(st, 'd', offsetof(struct A754, m10), 1);
		dcStructField(st, 'd', offsetof(struct A754, m11), 1);
		dcStructField(st, 'c', offsetof(struct A754, m12), 1);
		dcStructField(st, 's', offsetof(struct A754, m13), 1);
		dcStructField(st, 'd', offsetof(struct A754, m14), 1);
		dcStructField(st, 'j', offsetof(struct A754, m15), 1);
		dcStructField(st, 's', offsetof(struct A754, m16), 1);
		dcStructField(st, 'd', offsetof(struct A754, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjpdcjjlif{icfdcpfjdfddcsdjsd}} */
struct A755 { f m0; j m1; p m2; d m3; c m4; j m5; j m6; l m7; i m8; f m9; struct A754 m10; };
void f_cpA755(struct A755 *x, const struct A755 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA754(&x->m10, &y->m10); };
int f_cmpA755(const struct A755 *x, const struct A755 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA754(&x->m10, &y->m10); };
DCstruct* f_touchdcstA755() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A755), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A755, m0), 1);
		dcStructField(st, 'j', offsetof(struct A755, m1), 1);
		dcStructField(st, 'p', offsetof(struct A755, m2), 1);
		dcStructField(st, 'd', offsetof(struct A755, m3), 1);
		dcStructField(st, 'c', offsetof(struct A755, m4), 1);
		dcStructField(st, 'j', offsetof(struct A755, m5), 1);
		dcStructField(st, 'j', offsetof(struct A755, m6), 1);
		dcStructField(st, 'l', offsetof(struct A755, m7), 1);
		dcStructField(st, 'i', offsetof(struct A755, m8), 1);
		dcStructField(st, 'f', offsetof(struct A755, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A755, m10), 1, f_touchdcstA754());
		dcCloseStruct(st);
	}
	return st;
};
/* {ssfjiisjddpllilp} */
struct A756 { s m0; s m1; f m2; j m3; i m4; i m5; s m6; j m7; d m8; d m9; p m10; l m11; l m12; i m13; l m14; p m15; };
void f_cpA756(struct A756 *x, const struct A756 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA756(const struct A756 *x, const struct A756 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA756() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A756), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A756, m0), 1);
		dcStructField(st, 's', offsetof(struct A756, m1), 1);
		dcStructField(st, 'f', offsetof(struct A756, m2), 1);
		dcStructField(st, 'j', offsetof(struct A756, m3), 1);
		dcStructField(st, 'i', offsetof(struct A756, m4), 1);
		dcStructField(st, 'i', offsetof(struct A756, m5), 1);
		dcStructField(st, 's', offsetof(struct A756, m6), 1);
		dcStructField(st, 'j', offsetof(struct A756, m7), 1);
		dcStructField(st, 'd', offsetof(struct A756, m8), 1);
		dcStructField(st, 'd', offsetof(struct A756, m9), 1);
		dcStructField(st, 'p', offsetof(struct A756, m10), 1);
		dcStructField(st, 'l', offsetof(struct A756, m11), 1);
		dcStructField(st, 'l', offsetof(struct A756, m12), 1);
		dcStructField(st, 'i', offsetof(struct A756, m13), 1);
		dcStructField(st, 'l', offsetof(struct A756, m14), 1);
		dcStructField(st, 'p', offsetof(struct A756, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{ssfjiisjddpllilp}ddddficsljc} */
struct A757 { p m0; struct A756 m1; d m2; d m3; d m4; d m5; f m6; i m7; c m8; s m9; l m10; j m11; c m12; };
void f_cpA757(struct A757 *x, const struct A757 *y) { x->m0 = y->m0; f_cpA756(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA757(const struct A757 *x, const struct A757 *y) { return x->m0 == y->m0 && f_cmpA756(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA757() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A757), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A757, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A757, m1), 1, f_touchdcstA756());
		dcStructField(st, 'd', offsetof(struct A757, m2), 1);
		dcStructField(st, 'd', offsetof(struct A757, m3), 1);
		dcStructField(st, 'd', offsetof(struct A757, m4), 1);
		dcStructField(st, 'd', offsetof(struct A757, m5), 1);
		dcStructField(st, 'f', offsetof(struct A757, m6), 1);
		dcStructField(st, 'i', offsetof(struct A757, m7), 1);
		dcStructField(st, 'c', offsetof(struct A757, m8), 1);
		dcStructField(st, 's', offsetof(struct A757, m9), 1);
		dcStructField(st, 'l', offsetof(struct A757, m10), 1);
		dcStructField(st, 'j', offsetof(struct A757, m11), 1);
		dcStructField(st, 'c', offsetof(struct A757, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjsdd} */
struct A758 { p m0; j m1; s m2; d m3; d m4; };
void f_cpA758(struct A758 *x, const struct A758 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA758(const struct A758 *x, const struct A758 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA758() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A758), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A758, m0), 1);
		dcStructField(st, 'j', offsetof(struct A758, m1), 1);
		dcStructField(st, 's', offsetof(struct A758, m2), 1);
		dcStructField(st, 'd', offsetof(struct A758, m3), 1);
		dcStructField(st, 'd', offsetof(struct A758, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i{dlscjfl{sifdpdsjcdssllpcjijscdjsc}p}s{f{fsfpl}jjcl{lciicj}jlcj}cp{fjpdcjjlif{icfdcpfjdfddcsdjsd}}ljlij{p{ssfjiisjddpllilp}ddddficsljc}sss{pjsdd}lll} */
struct A759 { i m0; struct A750 m1; s m2; struct A753 m3; c m4; p m5; struct A755 m6; l m7; j m8; l m9; i m10; j m11; struct A757 m12; s m13; s m14; s m15; struct A758 m16; l m17; l m18; l m19; };
void f_cpA759(struct A759 *x, const struct A759 *y) { x->m0 = y->m0; f_cpA750(&x->m1, &y->m1); x->m2 = y->m2; f_cpA753(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA755(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA757(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA758(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA759(const struct A759 *x, const struct A759 *y) { return x->m0 == y->m0 && f_cmpA750(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA753(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA755(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA757(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA758(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA759() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A759), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A759, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A759, m1), 1, f_touchdcstA750());
		dcStructField(st, 's', offsetof(struct A759, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A759, m3), 1, f_touchdcstA753());
		dcStructField(st, 'c', offsetof(struct A759, m4), 1);
		dcStructField(st, 'p', offsetof(struct A759, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A759, m6), 1, f_touchdcstA755());
		dcStructField(st, 'l', offsetof(struct A759, m7), 1);
		dcStructField(st, 'j', offsetof(struct A759, m8), 1);
		dcStructField(st, 'l', offsetof(struct A759, m9), 1);
		dcStructField(st, 'i', offsetof(struct A759, m10), 1);
		dcStructField(st, 'j', offsetof(struct A759, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A759, m12), 1, f_touchdcstA757());
		dcStructField(st, 's', offsetof(struct A759, m13), 1);
		dcStructField(st, 's', offsetof(struct A759, m14), 1);
		dcStructField(st, 's', offsetof(struct A759, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A759, m16), 1, f_touchdcstA758());
		dcStructField(st, 'l', offsetof(struct A759, m17), 1);
		dcStructField(st, 'l', offsetof(struct A759, m18), 1);
		dcStructField(st, 'l', offsetof(struct A759, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{f}ssccjsiidpjlii} */
struct A760 { struct A28 m0; s m1; s m2; c m3; c m4; j m5; s m6; i m7; i m8; d m9; p m10; j m11; l m12; i m13; i m14; };
void f_cpA760(struct A760 *x, const struct A760 *y) { f_cpA28(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA760(const struct A760 *x, const struct A760 *y) { return f_cmpA28(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA760() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A760), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A760, m0), 1, f_touchdcstA28());
		dcStructField(st, 's', offsetof(struct A760, m1), 1);
		dcStructField(st, 's', offsetof(struct A760, m2), 1);
		dcStructField(st, 'c', offsetof(struct A760, m3), 1);
		dcStructField(st, 'c', offsetof(struct A760, m4), 1);
		dcStructField(st, 'j', offsetof(struct A760, m5), 1);
		dcStructField(st, 's', offsetof(struct A760, m6), 1);
		dcStructField(st, 'i', offsetof(struct A760, m7), 1);
		dcStructField(st, 'i', offsetof(struct A760, m8), 1);
		dcStructField(st, 'd', offsetof(struct A760, m9), 1);
		dcStructField(st, 'p', offsetof(struct A760, m10), 1);
		dcStructField(st, 'j', offsetof(struct A760, m11), 1);
		dcStructField(st, 'l', offsetof(struct A760, m12), 1);
		dcStructField(st, 'i', offsetof(struct A760, m13), 1);
		dcStructField(st, 'i', offsetof(struct A760, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plscsisfccj} */
struct A761 { p m0; l m1; s m2; c m3; s m4; i m5; s m6; f m7; c m8; c m9; j m10; };
void f_cpA761(struct A761 *x, const struct A761 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA761(const struct A761 *x, const struct A761 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA761() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A761), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A761, m0), 1);
		dcStructField(st, 'l', offsetof(struct A761, m1), 1);
		dcStructField(st, 's', offsetof(struct A761, m2), 1);
		dcStructField(st, 'c', offsetof(struct A761, m3), 1);
		dcStructField(st, 's', offsetof(struct A761, m4), 1);
		dcStructField(st, 'i', offsetof(struct A761, m5), 1);
		dcStructField(st, 's', offsetof(struct A761, m6), 1);
		dcStructField(st, 'f', offsetof(struct A761, m7), 1);
		dcStructField(st, 'c', offsetof(struct A761, m8), 1);
		dcStructField(st, 'c', offsetof(struct A761, m9), 1);
		dcStructField(st, 'j', offsetof(struct A761, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcjfjijsc} */
struct A762 { j m0; c m1; j m2; f m3; j m4; i m5; j m6; s m7; c m8; };
void f_cpA762(struct A762 *x, const struct A762 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA762(const struct A762 *x, const struct A762 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA762() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A762), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A762, m0), 1);
		dcStructField(st, 'c', offsetof(struct A762, m1), 1);
		dcStructField(st, 'j', offsetof(struct A762, m2), 1);
		dcStructField(st, 'f', offsetof(struct A762, m3), 1);
		dcStructField(st, 'j', offsetof(struct A762, m4), 1);
		dcStructField(st, 'i', offsetof(struct A762, m5), 1);
		dcStructField(st, 'j', offsetof(struct A762, m6), 1);
		dcStructField(st, 's', offsetof(struct A762, m7), 1);
		dcStructField(st, 'c', offsetof(struct A762, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jldssl{{f}ssccjsiidpjlii}dd{plscsisfccj}clscppsdd{jcjfjijsc}pi} */
struct A763 { j m0; l m1; d m2; s m3; s m4; l m5; struct A760 m6; d m7; d m8; struct A761 m9; c m10; l m11; s m12; c m13; p m14; p m15; s m16; d m17; d m18; struct A762 m19; p m20; i m21; };
void f_cpA763(struct A763 *x, const struct A763 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA760(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; f_cpA761(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA762(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA763(const struct A763 *x, const struct A763 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA760(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA761(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA762(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA763() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A763), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A763, m0), 1);
		dcStructField(st, 'l', offsetof(struct A763, m1), 1);
		dcStructField(st, 'd', offsetof(struct A763, m2), 1);
		dcStructField(st, 's', offsetof(struct A763, m3), 1);
		dcStructField(st, 's', offsetof(struct A763, m4), 1);
		dcStructField(st, 'l', offsetof(struct A763, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A763, m6), 1, f_touchdcstA760());
		dcStructField(st, 'd', offsetof(struct A763, m7), 1);
		dcStructField(st, 'd', offsetof(struct A763, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A763, m9), 1, f_touchdcstA761());
		dcStructField(st, 'c', offsetof(struct A763, m10), 1);
		dcStructField(st, 'l', offsetof(struct A763, m11), 1);
		dcStructField(st, 's', offsetof(struct A763, m12), 1);
		dcStructField(st, 'c', offsetof(struct A763, m13), 1);
		dcStructField(st, 'p', offsetof(struct A763, m14), 1);
		dcStructField(st, 'p', offsetof(struct A763, m15), 1);
		dcStructField(st, 's', offsetof(struct A763, m16), 1);
		dcStructField(st, 'd', offsetof(struct A763, m17), 1);
		dcStructField(st, 'd', offsetof(struct A763, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A763, m19), 1, f_touchdcstA762());
		dcStructField(st, 'p', offsetof(struct A763, m20), 1);
		dcStructField(st, 'i', offsetof(struct A763, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csddpssc} */
struct A764 { c m0; s m1; d m2; d m3; p m4; s m5; s m6; c m7; };
void f_cpA764(struct A764 *x, const struct A764 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA764(const struct A764 *x, const struct A764 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA764() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A764), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A764, m0), 1);
		dcStructField(st, 's', offsetof(struct A764, m1), 1);
		dcStructField(st, 'd', offsetof(struct A764, m2), 1);
		dcStructField(st, 'd', offsetof(struct A764, m3), 1);
		dcStructField(st, 'p', offsetof(struct A764, m4), 1);
		dcStructField(st, 's', offsetof(struct A764, m5), 1);
		dcStructField(st, 's', offsetof(struct A764, m6), 1);
		dcStructField(st, 'c', offsetof(struct A764, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{csddpssc}fsiijclffj} */
struct A765 { struct A764 m0; f m1; s m2; i m3; i m4; j m5; c m6; l m7; f m8; f m9; j m10; };
void f_cpA765(struct A765 *x, const struct A765 *y) { f_cpA764(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA765(const struct A765 *x, const struct A765 *y) { return f_cmpA764(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA765() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A765), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A765, m0), 1, f_touchdcstA764());
		dcStructField(st, 'f', offsetof(struct A765, m1), 1);
		dcStructField(st, 's', offsetof(struct A765, m2), 1);
		dcStructField(st, 'i', offsetof(struct A765, m3), 1);
		dcStructField(st, 'i', offsetof(struct A765, m4), 1);
		dcStructField(st, 'j', offsetof(struct A765, m5), 1);
		dcStructField(st, 'c', offsetof(struct A765, m6), 1);
		dcStructField(st, 'l', offsetof(struct A765, m7), 1);
		dcStructField(st, 'f', offsetof(struct A765, m8), 1);
		dcStructField(st, 'f', offsetof(struct A765, m9), 1);
		dcStructField(st, 'j', offsetof(struct A765, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjp} */
struct A766 { s m0; j m1; p m2; };
void f_cpA766(struct A766 *x, const struct A766 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA766(const struct A766 *x, const struct A766 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA766() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A766), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A766, m0), 1);
		dcStructField(st, 'j', offsetof(struct A766, m1), 1);
		dcStructField(st, 'p', offsetof(struct A766, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsclcffi} */
struct A767 { l m0; s m1; c m2; l m3; c m4; f m5; f m6; i m7; };
void f_cpA767(struct A767 *x, const struct A767 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA767(const struct A767 *x, const struct A767 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA767() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A767), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A767, m0), 1);
		dcStructField(st, 's', offsetof(struct A767, m1), 1);
		dcStructField(st, 'c', offsetof(struct A767, m2), 1);
		dcStructField(st, 'l', offsetof(struct A767, m3), 1);
		dcStructField(st, 'c', offsetof(struct A767, m4), 1);
		dcStructField(st, 'f', offsetof(struct A767, m5), 1);
		dcStructField(st, 'f', offsetof(struct A767, m6), 1);
		dcStructField(st, 'i', offsetof(struct A767, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{{csddpssc}fsiijclffj}pipsfjcci{sjp}{lsclcffi}} */
struct A768 { l m0; struct A765 m1; p m2; i m3; p m4; s m5; f m6; j m7; c m8; c m9; i m10; struct A766 m11; struct A767 m12; };
void f_cpA768(struct A768 *x, const struct A768 *y) { x->m0 = y->m0; f_cpA765(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA766(&x->m11, &y->m11); f_cpA767(&x->m12, &y->m12); };
int f_cmpA768(const struct A768 *x, const struct A768 *y) { return x->m0 == y->m0 && f_cmpA765(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA766(&x->m11, &y->m11) && f_cmpA767(&x->m12, &y->m12); };
DCstruct* f_touchdcstA768() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A768), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A768, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A768, m1), 1, f_touchdcstA765());
		dcStructField(st, 'p', offsetof(struct A768, m2), 1);
		dcStructField(st, 'i', offsetof(struct A768, m3), 1);
		dcStructField(st, 'p', offsetof(struct A768, m4), 1);
		dcStructField(st, 's', offsetof(struct A768, m5), 1);
		dcStructField(st, 'f', offsetof(struct A768, m6), 1);
		dcStructField(st, 'j', offsetof(struct A768, m7), 1);
		dcStructField(st, 'c', offsetof(struct A768, m8), 1);
		dcStructField(st, 'c', offsetof(struct A768, m9), 1);
		dcStructField(st, 'i', offsetof(struct A768, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A768, m11), 1, f_touchdcstA766());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A768, m12), 1, f_touchdcstA767());
		dcCloseStruct(st);
	}
	return st;
};
/* {ciiilcjfsilfld} */
struct A769 { c m0; i m1; i m2; i m3; l m4; c m5; j m6; f m7; s m8; i m9; l m10; f m11; l m12; d m13; };
void f_cpA769(struct A769 *x, const struct A769 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA769(const struct A769 *x, const struct A769 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA769() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A769), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A769, m0), 1);
		dcStructField(st, 'i', offsetof(struct A769, m1), 1);
		dcStructField(st, 'i', offsetof(struct A769, m2), 1);
		dcStructField(st, 'i', offsetof(struct A769, m3), 1);
		dcStructField(st, 'l', offsetof(struct A769, m4), 1);
		dcStructField(st, 'c', offsetof(struct A769, m5), 1);
		dcStructField(st, 'j', offsetof(struct A769, m6), 1);
		dcStructField(st, 'f', offsetof(struct A769, m7), 1);
		dcStructField(st, 's', offsetof(struct A769, m8), 1);
		dcStructField(st, 'i', offsetof(struct A769, m9), 1);
		dcStructField(st, 'l', offsetof(struct A769, m10), 1);
		dcStructField(st, 'f', offsetof(struct A769, m11), 1);
		dcStructField(st, 'l', offsetof(struct A769, m12), 1);
		dcStructField(st, 'd', offsetof(struct A769, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psid{ciiilcjfsilfld}il} */
struct A770 { p m0; s m1; i m2; d m3; struct A769 m4; i m5; l m6; };
void f_cpA770(struct A770 *x, const struct A770 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA769(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA770(const struct A770 *x, const struct A770 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA769(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA770() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A770), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A770, m0), 1);
		dcStructField(st, 's', offsetof(struct A770, m1), 1);
		dcStructField(st, 'i', offsetof(struct A770, m2), 1);
		dcStructField(st, 'd', offsetof(struct A770, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A770, m4), 1, f_touchdcstA769());
		dcStructField(st, 'i', offsetof(struct A770, m5), 1);
		dcStructField(st, 'l', offsetof(struct A770, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdpff} */
struct A771 { j m0; d m1; p m2; f m3; f m4; };
void f_cpA771(struct A771 *x, const struct A771 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA771(const struct A771 *x, const struct A771 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA771() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A771), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A771, m0), 1);
		dcStructField(st, 'd', offsetof(struct A771, m1), 1);
		dcStructField(st, 'p', offsetof(struct A771, m2), 1);
		dcStructField(st, 'f', offsetof(struct A771, m3), 1);
		dcStructField(st, 'f', offsetof(struct A771, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppsdidfsjjcssslspjiicfsicpcicpjdliciipsidjjip} */
struct A772 { p m0; p m1; s m2; d m3; i m4; d m5; f m6; s m7; j m8; j m9; c m10; s m11; s m12; s m13; l m14; s m15; p m16; j m17; i m18; i m19; c m20; f m21; s m22; i m23; c m24; p m25; c m26; i m27; c m28; p m29; j m30; d m31; l m32; i m33; c m34; i m35; i m36; p m37; s m38; i m39; d m40; j m41; j m42; i m43; p m44; };
void f_cpA772(struct A772 *x, const struct A772 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; x->m42 = y->m42; x->m43 = y->m43; x->m44 = y->m44; };
int f_cmpA772(const struct A772 *x, const struct A772 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && x->m42 == y->m42 && x->m43 == y->m43 && x->m44 == y->m44; };
DCstruct* f_touchdcstA772() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(45, sizeof(struct A772), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A772, m0), 1);
		dcStructField(st, 'p', offsetof(struct A772, m1), 1);
		dcStructField(st, 's', offsetof(struct A772, m2), 1);
		dcStructField(st, 'd', offsetof(struct A772, m3), 1);
		dcStructField(st, 'i', offsetof(struct A772, m4), 1);
		dcStructField(st, 'd', offsetof(struct A772, m5), 1);
		dcStructField(st, 'f', offsetof(struct A772, m6), 1);
		dcStructField(st, 's', offsetof(struct A772, m7), 1);
		dcStructField(st, 'j', offsetof(struct A772, m8), 1);
		dcStructField(st, 'j', offsetof(struct A772, m9), 1);
		dcStructField(st, 'c', offsetof(struct A772, m10), 1);
		dcStructField(st, 's', offsetof(struct A772, m11), 1);
		dcStructField(st, 's', offsetof(struct A772, m12), 1);
		dcStructField(st, 's', offsetof(struct A772, m13), 1);
		dcStructField(st, 'l', offsetof(struct A772, m14), 1);
		dcStructField(st, 's', offsetof(struct A772, m15), 1);
		dcStructField(st, 'p', offsetof(struct A772, m16), 1);
		dcStructField(st, 'j', offsetof(struct A772, m17), 1);
		dcStructField(st, 'i', offsetof(struct A772, m18), 1);
		dcStructField(st, 'i', offsetof(struct A772, m19), 1);
		dcStructField(st, 'c', offsetof(struct A772, m20), 1);
		dcStructField(st, 'f', offsetof(struct A772, m21), 1);
		dcStructField(st, 's', offsetof(struct A772, m22), 1);
		dcStructField(st, 'i', offsetof(struct A772, m23), 1);
		dcStructField(st, 'c', offsetof(struct A772, m24), 1);
		dcStructField(st, 'p', offsetof(struct A772, m25), 1);
		dcStructField(st, 'c', offsetof(struct A772, m26), 1);
		dcStructField(st, 'i', offsetof(struct A772, m27), 1);
		dcStructField(st, 'c', offsetof(struct A772, m28), 1);
		dcStructField(st, 'p', offsetof(struct A772, m29), 1);
		dcStructField(st, 'j', offsetof(struct A772, m30), 1);
		dcStructField(st, 'd', offsetof(struct A772, m31), 1);
		dcStructField(st, 'l', offsetof(struct A772, m32), 1);
		dcStructField(st, 'i', offsetof(struct A772, m33), 1);
		dcStructField(st, 'c', offsetof(struct A772, m34), 1);
		dcStructField(st, 'i', offsetof(struct A772, m35), 1);
		dcStructField(st, 'i', offsetof(struct A772, m36), 1);
		dcStructField(st, 'p', offsetof(struct A772, m37), 1);
		dcStructField(st, 's', offsetof(struct A772, m38), 1);
		dcStructField(st, 'i', offsetof(struct A772, m39), 1);
		dcStructField(st, 'd', offsetof(struct A772, m40), 1);
		dcStructField(st, 'j', offsetof(struct A772, m41), 1);
		dcStructField(st, 'j', offsetof(struct A772, m42), 1);
		dcStructField(st, 'i', offsetof(struct A772, m43), 1);
		dcStructField(st, 'p', offsetof(struct A772, m44), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idp} */
struct A773 { i m0; d m1; p m2; };
void f_cpA773(struct A773 *x, const struct A773 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA773(const struct A773 *x, const struct A773 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA773() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A773), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A773, m0), 1);
		dcStructField(st, 'd', offsetof(struct A773, m1), 1);
		dcStructField(st, 'p', offsetof(struct A773, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjfi} */
struct A774 { c m0; j m1; f m2; i m3; };
void f_cpA774(struct A774 *x, const struct A774 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA774(const struct A774 *x, const struct A774 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA774() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A774), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A774, m0), 1);
		dcStructField(st, 'j', offsetof(struct A774, m1), 1);
		dcStructField(st, 'f', offsetof(struct A774, m2), 1);
		dcStructField(st, 'i', offsetof(struct A774, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plpsliifjfifpfj} */
struct A775 { p m0; l m1; p m2; s m3; l m4; i m5; i m6; f m7; j m8; f m9; i m10; f m11; p m12; f m13; j m14; };
void f_cpA775(struct A775 *x, const struct A775 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA775(const struct A775 *x, const struct A775 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA775() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A775), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A775, m0), 1);
		dcStructField(st, 'l', offsetof(struct A775, m1), 1);
		dcStructField(st, 'p', offsetof(struct A775, m2), 1);
		dcStructField(st, 's', offsetof(struct A775, m3), 1);
		dcStructField(st, 'l', offsetof(struct A775, m4), 1);
		dcStructField(st, 'i', offsetof(struct A775, m5), 1);
		dcStructField(st, 'i', offsetof(struct A775, m6), 1);
		dcStructField(st, 'f', offsetof(struct A775, m7), 1);
		dcStructField(st, 'j', offsetof(struct A775, m8), 1);
		dcStructField(st, 'f', offsetof(struct A775, m9), 1);
		dcStructField(st, 'i', offsetof(struct A775, m10), 1);
		dcStructField(st, 'f', offsetof(struct A775, m11), 1);
		dcStructField(st, 'p', offsetof(struct A775, m12), 1);
		dcStructField(st, 'f', offsetof(struct A775, m13), 1);
		dcStructField(st, 'j', offsetof(struct A775, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sifsp} */
struct A776 { s m0; i m1; f m2; s m3; p m4; };
void f_cpA776(struct A776 *x, const struct A776 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA776(const struct A776 *x, const struct A776 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA776() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A776), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A776, m0), 1);
		dcStructField(st, 'i', offsetof(struct A776, m1), 1);
		dcStructField(st, 'f', offsetof(struct A776, m2), 1);
		dcStructField(st, 's', offsetof(struct A776, m3), 1);
		dcStructField(st, 'p', offsetof(struct A776, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{sifsp}jjdc} */
struct A777 { struct A776 m0; j m1; j m2; d m3; c m4; };
void f_cpA777(struct A777 *x, const struct A777 *y) { f_cpA776(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA777(const struct A777 *x, const struct A777 *y) { return f_cmpA776(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA777() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A777), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A777, m0), 1, f_touchdcstA776());
		dcStructField(st, 'j', offsetof(struct A777, m1), 1);
		dcStructField(st, 'j', offsetof(struct A777, m2), 1);
		dcStructField(st, 'd', offsetof(struct A777, m3), 1);
		dcStructField(st, 'c', offsetof(struct A777, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfdfsslipfpcic} */
struct A778 { l m0; f m1; d m2; f m3; s m4; s m5; l m6; i m7; p m8; f m9; p m10; c m11; i m12; c m13; };
void f_cpA778(struct A778 *x, const struct A778 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA778(const struct A778 *x, const struct A778 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA778() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A778), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A778, m0), 1);
		dcStructField(st, 'f', offsetof(struct A778, m1), 1);
		dcStructField(st, 'd', offsetof(struct A778, m2), 1);
		dcStructField(st, 'f', offsetof(struct A778, m3), 1);
		dcStructField(st, 's', offsetof(struct A778, m4), 1);
		dcStructField(st, 's', offsetof(struct A778, m5), 1);
		dcStructField(st, 'l', offsetof(struct A778, m6), 1);
		dcStructField(st, 'i', offsetof(struct A778, m7), 1);
		dcStructField(st, 'p', offsetof(struct A778, m8), 1);
		dcStructField(st, 'f', offsetof(struct A778, m9), 1);
		dcStructField(st, 'p', offsetof(struct A778, m10), 1);
		dcStructField(st, 'c', offsetof(struct A778, m11), 1);
		dcStructField(st, 'i', offsetof(struct A778, m12), 1);
		dcStructField(st, 'c', offsetof(struct A778, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ii} */
struct A779 { i m0; i m1; };
void f_cpA779(struct A779 *x, const struct A779 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA779(const struct A779 *x, const struct A779 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA779() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A779), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A779, m0), 1);
		dcStructField(st, 'i', offsetof(struct A779, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcsi} */
struct A780 { f m0; c m1; s m2; i m3; };
void f_cpA780(struct A780 *x, const struct A780 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA780(const struct A780 *x, const struct A780 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA780() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A780), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A780, m0), 1);
		dcStructField(st, 'c', offsetof(struct A780, m1), 1);
		dcStructField(st, 's', offsetof(struct A780, m2), 1);
		dcStructField(st, 'i', offsetof(struct A780, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpsdlllpdcdjjis{fcsi}fiicl} */
struct A781 { j m0; p m1; s m2; d m3; l m4; l m5; l m6; p m7; d m8; c m9; d m10; j m11; j m12; i m13; s m14; struct A780 m15; f m16; i m17; i m18; c m19; l m20; };
void f_cpA781(struct A781 *x, const struct A781 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA780(&x->m15, &y->m15); x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA781(const struct A781 *x, const struct A781 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA780(&x->m15, &y->m15) && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA781() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A781), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A781, m0), 1);
		dcStructField(st, 'p', offsetof(struct A781, m1), 1);
		dcStructField(st, 's', offsetof(struct A781, m2), 1);
		dcStructField(st, 'd', offsetof(struct A781, m3), 1);
		dcStructField(st, 'l', offsetof(struct A781, m4), 1);
		dcStructField(st, 'l', offsetof(struct A781, m5), 1);
		dcStructField(st, 'l', offsetof(struct A781, m6), 1);
		dcStructField(st, 'p', offsetof(struct A781, m7), 1);
		dcStructField(st, 'd', offsetof(struct A781, m8), 1);
		dcStructField(st, 'c', offsetof(struct A781, m9), 1);
		dcStructField(st, 'd', offsetof(struct A781, m10), 1);
		dcStructField(st, 'j', offsetof(struct A781, m11), 1);
		dcStructField(st, 'j', offsetof(struct A781, m12), 1);
		dcStructField(st, 'i', offsetof(struct A781, m13), 1);
		dcStructField(st, 's', offsetof(struct A781, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A781, m15), 1, f_touchdcstA780());
		dcStructField(st, 'f', offsetof(struct A781, m16), 1);
		dcStructField(st, 'i', offsetof(struct A781, m17), 1);
		dcStructField(st, 'i', offsetof(struct A781, m18), 1);
		dcStructField(st, 'c', offsetof(struct A781, m19), 1);
		dcStructField(st, 'l', offsetof(struct A781, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j{s}} */
struct A782 { j m0; struct A27 m1; };
void f_cpA782(struct A782 *x, const struct A782 *y) { x->m0 = y->m0; f_cpA27(&x->m1, &y->m1); };
int f_cmpA782(const struct A782 *x, const struct A782 *y) { return x->m0 == y->m0 && f_cmpA27(&x->m1, &y->m1); };
DCstruct* f_touchdcstA782() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A782), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A782, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A782, m1), 1, f_touchdcstA27());
		dcCloseStruct(st);
	}
	return st;
};
/* {{jpsdlllpdcdjjis{fcsi}fiicl}{j{s}}jjj} */
struct A783 { struct A781 m0; struct A782 m1; j m2; j m3; j m4; };
void f_cpA783(struct A783 *x, const struct A783 *y) { f_cpA781(&x->m0, &y->m0); f_cpA782(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA783(const struct A783 *x, const struct A783 *y) { return f_cmpA781(&x->m0, &y->m0) && f_cmpA782(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA783() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A783), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A783, m0), 1, f_touchdcstA781());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A783, m1), 1, f_touchdcstA782());
		dcStructField(st, 'j', offsetof(struct A783, m2), 1);
		dcStructField(st, 'j', offsetof(struct A783, m3), 1);
		dcStructField(st, 'j', offsetof(struct A783, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdpipcdslilpi} */
struct A784 { j m0; d m1; p m2; i m3; p m4; c m5; d m6; s m7; l m8; i m9; l m10; p m11; i m12; };
void f_cpA784(struct A784 *x, const struct A784 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA784(const struct A784 *x, const struct A784 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA784() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A784), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A784, m0), 1);
		dcStructField(st, 'd', offsetof(struct A784, m1), 1);
		dcStructField(st, 'p', offsetof(struct A784, m2), 1);
		dcStructField(st, 'i', offsetof(struct A784, m3), 1);
		dcStructField(st, 'p', offsetof(struct A784, m4), 1);
		dcStructField(st, 'c', offsetof(struct A784, m5), 1);
		dcStructField(st, 'd', offsetof(struct A784, m6), 1);
		dcStructField(st, 's', offsetof(struct A784, m7), 1);
		dcStructField(st, 'l', offsetof(struct A784, m8), 1);
		dcStructField(st, 'i', offsetof(struct A784, m9), 1);
		dcStructField(st, 'l', offsetof(struct A784, m10), 1);
		dcStructField(st, 'p', offsetof(struct A784, m11), 1);
		dcStructField(st, 'i', offsetof(struct A784, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lspld} */
struct A785 { l m0; s m1; p m2; l m3; d m4; };
void f_cpA785(struct A785 *x, const struct A785 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA785(const struct A785 *x, const struct A785 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA785() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A785), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A785, m0), 1);
		dcStructField(st, 's', offsetof(struct A785, m1), 1);
		dcStructField(st, 'p', offsetof(struct A785, m2), 1);
		dcStructField(st, 'l', offsetof(struct A785, m3), 1);
		dcStructField(st, 'd', offsetof(struct A785, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccjclpspdllcddf} */
struct A786 { c m0; c m1; j m2; c m3; l m4; p m5; s m6; p m7; d m8; l m9; l m10; c m11; d m12; d m13; f m14; };
void f_cpA786(struct A786 *x, const struct A786 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA786(const struct A786 *x, const struct A786 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA786() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A786), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A786, m0), 1);
		dcStructField(st, 'c', offsetof(struct A786, m1), 1);
		dcStructField(st, 'j', offsetof(struct A786, m2), 1);
		dcStructField(st, 'c', offsetof(struct A786, m3), 1);
		dcStructField(st, 'l', offsetof(struct A786, m4), 1);
		dcStructField(st, 'p', offsetof(struct A786, m5), 1);
		dcStructField(st, 's', offsetof(struct A786, m6), 1);
		dcStructField(st, 'p', offsetof(struct A786, m7), 1);
		dcStructField(st, 'd', offsetof(struct A786, m8), 1);
		dcStructField(st, 'l', offsetof(struct A786, m9), 1);
		dcStructField(st, 'l', offsetof(struct A786, m10), 1);
		dcStructField(st, 'c', offsetof(struct A786, m11), 1);
		dcStructField(st, 'd', offsetof(struct A786, m12), 1);
		dcStructField(st, 'd', offsetof(struct A786, m13), 1);
		dcStructField(st, 'f', offsetof(struct A786, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilcpi} */
struct A787 { i m0; l m1; c m2; p m3; i m4; };
void f_cpA787(struct A787 *x, const struct A787 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA787(const struct A787 *x, const struct A787 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA787() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A787), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A787, m0), 1);
		dcStructField(st, 'l', offsetof(struct A787, m1), 1);
		dcStructField(st, 'c', offsetof(struct A787, m2), 1);
		dcStructField(st, 'p', offsetof(struct A787, m3), 1);
		dcStructField(st, 'i', offsetof(struct A787, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjfcpsjfp} */
struct A788 { p m0; j m1; f m2; c m3; p m4; s m5; j m6; f m7; p m8; };
void f_cpA788(struct A788 *x, const struct A788 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA788(const struct A788 *x, const struct A788 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA788() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A788), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A788, m0), 1);
		dcStructField(st, 'j', offsetof(struct A788, m1), 1);
		dcStructField(st, 'f', offsetof(struct A788, m2), 1);
		dcStructField(st, 'c', offsetof(struct A788, m3), 1);
		dcStructField(st, 'p', offsetof(struct A788, m4), 1);
		dcStructField(st, 's', offsetof(struct A788, m5), 1);
		dcStructField(st, 'j', offsetof(struct A788, m6), 1);
		dcStructField(st, 'f', offsetof(struct A788, m7), 1);
		dcStructField(st, 'p', offsetof(struct A788, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cll} */
struct A789 { c m0; l m1; l m2; };
void f_cpA789(struct A789 *x, const struct A789 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA789(const struct A789 *x, const struct A789 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA789() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A789), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A789, m0), 1);
		dcStructField(st, 'l', offsetof(struct A789, m1), 1);
		dcStructField(st, 'l', offsetof(struct A789, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdcdddiflsj} */
struct A790 { j m0; d m1; c m2; d m3; d m4; d m5; i m6; f m7; l m8; s m9; j m10; };
void f_cpA790(struct A790 *x, const struct A790 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA790(const struct A790 *x, const struct A790 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA790() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A790), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A790, m0), 1);
		dcStructField(st, 'd', offsetof(struct A790, m1), 1);
		dcStructField(st, 'c', offsetof(struct A790, m2), 1);
		dcStructField(st, 'd', offsetof(struct A790, m3), 1);
		dcStructField(st, 'd', offsetof(struct A790, m4), 1);
		dcStructField(st, 'd', offsetof(struct A790, m5), 1);
		dcStructField(st, 'i', offsetof(struct A790, m6), 1);
		dcStructField(st, 'f', offsetof(struct A790, m7), 1);
		dcStructField(st, 'l', offsetof(struct A790, m8), 1);
		dcStructField(st, 's', offsetof(struct A790, m9), 1);
		dcStructField(st, 'j', offsetof(struct A790, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlijij} */
struct A791 { j m0; l m1; i m2; j m3; i m4; j m5; };
void f_cpA791(struct A791 *x, const struct A791 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA791(const struct A791 *x, const struct A791 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA791() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A791), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A791, m0), 1);
		dcStructField(st, 'l', offsetof(struct A791, m1), 1);
		dcStructField(st, 'i', offsetof(struct A791, m2), 1);
		dcStructField(st, 'j', offsetof(struct A791, m3), 1);
		dcStructField(st, 'i', offsetof(struct A791, m4), 1);
		dcStructField(st, 'j', offsetof(struct A791, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lddsjc} */
struct A792 { l m0; d m1; d m2; s m3; j m4; c m5; };
void f_cpA792(struct A792 *x, const struct A792 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA792(const struct A792 *x, const struct A792 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA792() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A792), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A792, m0), 1);
		dcStructField(st, 'd', offsetof(struct A792, m1), 1);
		dcStructField(st, 'd', offsetof(struct A792, m2), 1);
		dcStructField(st, 's', offsetof(struct A792, m3), 1);
		dcStructField(st, 'j', offsetof(struct A792, m4), 1);
		dcStructField(st, 'c', offsetof(struct A792, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfsppdippffidpfccll} */
struct A793 { d m0; f m1; s m2; p m3; p m4; d m5; i m6; p m7; p m8; f m9; f m10; i m11; d m12; p m13; f m14; c m15; c m16; l m17; l m18; };
void f_cpA793(struct A793 *x, const struct A793 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA793(const struct A793 *x, const struct A793 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA793() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A793), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A793, m0), 1);
		dcStructField(st, 'f', offsetof(struct A793, m1), 1);
		dcStructField(st, 's', offsetof(struct A793, m2), 1);
		dcStructField(st, 'p', offsetof(struct A793, m3), 1);
		dcStructField(st, 'p', offsetof(struct A793, m4), 1);
		dcStructField(st, 'd', offsetof(struct A793, m5), 1);
		dcStructField(st, 'i', offsetof(struct A793, m6), 1);
		dcStructField(st, 'p', offsetof(struct A793, m7), 1);
		dcStructField(st, 'p', offsetof(struct A793, m8), 1);
		dcStructField(st, 'f', offsetof(struct A793, m9), 1);
		dcStructField(st, 'f', offsetof(struct A793, m10), 1);
		dcStructField(st, 'i', offsetof(struct A793, m11), 1);
		dcStructField(st, 'd', offsetof(struct A793, m12), 1);
		dcStructField(st, 'p', offsetof(struct A793, m13), 1);
		dcStructField(st, 'f', offsetof(struct A793, m14), 1);
		dcStructField(st, 'c', offsetof(struct A793, m15), 1);
		dcStructField(st, 'c', offsetof(struct A793, m16), 1);
		dcStructField(st, 'l', offsetof(struct A793, m17), 1);
		dcStructField(st, 'l', offsetof(struct A793, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdlij} */
struct A794 { s m0; d m1; l m2; i m3; j m4; };
void f_cpA794(struct A794 *x, const struct A794 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA794(const struct A794 *x, const struct A794 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA794() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A794), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A794, m0), 1);
		dcStructField(st, 'd', offsetof(struct A794, m1), 1);
		dcStructField(st, 'l', offsetof(struct A794, m2), 1);
		dcStructField(st, 'i', offsetof(struct A794, m3), 1);
		dcStructField(st, 'j', offsetof(struct A794, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jp{lddsjc}fjj{dfsppdippffidpfccll}ijflfdljc{sdlij}} */
struct A795 { j m0; p m1; struct A792 m2; f m3; j m4; j m5; struct A793 m6; i m7; j m8; f m9; l m10; f m11; d m12; l m13; j m14; c m15; struct A794 m16; };
void f_cpA795(struct A795 *x, const struct A795 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA792(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA793(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA794(&x->m16, &y->m16); };
int f_cmpA795(const struct A795 *x, const struct A795 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA792(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA793(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA794(&x->m16, &y->m16); };
DCstruct* f_touchdcstA795() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A795), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A795, m0), 1);
		dcStructField(st, 'p', offsetof(struct A795, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A795, m2), 1, f_touchdcstA792());
		dcStructField(st, 'f', offsetof(struct A795, m3), 1);
		dcStructField(st, 'j', offsetof(struct A795, m4), 1);
		dcStructField(st, 'j', offsetof(struct A795, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A795, m6), 1, f_touchdcstA793());
		dcStructField(st, 'i', offsetof(struct A795, m7), 1);
		dcStructField(st, 'j', offsetof(struct A795, m8), 1);
		dcStructField(st, 'f', offsetof(struct A795, m9), 1);
		dcStructField(st, 'l', offsetof(struct A795, m10), 1);
		dcStructField(st, 'f', offsetof(struct A795, m11), 1);
		dcStructField(st, 'd', offsetof(struct A795, m12), 1);
		dcStructField(st, 'l', offsetof(struct A795, m13), 1);
		dcStructField(st, 'j', offsetof(struct A795, m14), 1);
		dcStructField(st, 'c', offsetof(struct A795, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A795, m16), 1, f_touchdcstA794());
		dcCloseStruct(st);
	}
	return st;
};
/* {ijjdpflpdslli} */
struct A796 { i m0; j m1; j m2; d m3; p m4; f m5; l m6; p m7; d m8; s m9; l m10; l m11; i m12; };
void f_cpA796(struct A796 *x, const struct A796 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA796(const struct A796 *x, const struct A796 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA796() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A796), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A796, m0), 1);
		dcStructField(st, 'j', offsetof(struct A796, m1), 1);
		dcStructField(st, 'j', offsetof(struct A796, m2), 1);
		dcStructField(st, 'd', offsetof(struct A796, m3), 1);
		dcStructField(st, 'p', offsetof(struct A796, m4), 1);
		dcStructField(st, 'f', offsetof(struct A796, m5), 1);
		dcStructField(st, 'l', offsetof(struct A796, m6), 1);
		dcStructField(st, 'p', offsetof(struct A796, m7), 1);
		dcStructField(st, 'd', offsetof(struct A796, m8), 1);
		dcStructField(st, 's', offsetof(struct A796, m9), 1);
		dcStructField(st, 'l', offsetof(struct A796, m10), 1);
		dcStructField(st, 'l', offsetof(struct A796, m11), 1);
		dcStructField(st, 'i', offsetof(struct A796, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llj} */
struct A797 { l m0; l m1; j m2; };
void f_cpA797(struct A797 *x, const struct A797 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA797(const struct A797 *x, const struct A797 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA797() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A797), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A797, m0), 1);
		dcStructField(st, 'l', offsetof(struct A797, m1), 1);
		dcStructField(st, 'j', offsetof(struct A797, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slcjfcplcjcfpjjcs} */
struct A798 { s m0; l m1; c m2; j m3; f m4; c m5; p m6; l m7; c m8; j m9; c m10; f m11; p m12; j m13; j m14; c m15; s m16; };
void f_cpA798(struct A798 *x, const struct A798 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA798(const struct A798 *x, const struct A798 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA798() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A798), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A798, m0), 1);
		dcStructField(st, 'l', offsetof(struct A798, m1), 1);
		dcStructField(st, 'c', offsetof(struct A798, m2), 1);
		dcStructField(st, 'j', offsetof(struct A798, m3), 1);
		dcStructField(st, 'f', offsetof(struct A798, m4), 1);
		dcStructField(st, 'c', offsetof(struct A798, m5), 1);
		dcStructField(st, 'p', offsetof(struct A798, m6), 1);
		dcStructField(st, 'l', offsetof(struct A798, m7), 1);
		dcStructField(st, 'c', offsetof(struct A798, m8), 1);
		dcStructField(st, 'j', offsetof(struct A798, m9), 1);
		dcStructField(st, 'c', offsetof(struct A798, m10), 1);
		dcStructField(st, 'f', offsetof(struct A798, m11), 1);
		dcStructField(st, 'p', offsetof(struct A798, m12), 1);
		dcStructField(st, 'j', offsetof(struct A798, m13), 1);
		dcStructField(st, 'j', offsetof(struct A798, m14), 1);
		dcStructField(st, 'c', offsetof(struct A798, m15), 1);
		dcStructField(st, 's', offsetof(struct A798, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jidsiififd} */
struct A799 { j m0; i m1; d m2; s m3; i m4; i m5; f m6; i m7; f m8; d m9; };
void f_cpA799(struct A799 *x, const struct A799 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA799(const struct A799 *x, const struct A799 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA799() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A799), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A799, m0), 1);
		dcStructField(st, 'i', offsetof(struct A799, m1), 1);
		dcStructField(st, 'd', offsetof(struct A799, m2), 1);
		dcStructField(st, 's', offsetof(struct A799, m3), 1);
		dcStructField(st, 'i', offsetof(struct A799, m4), 1);
		dcStructField(st, 'i', offsetof(struct A799, m5), 1);
		dcStructField(st, 'f', offsetof(struct A799, m6), 1);
		dcStructField(st, 'i', offsetof(struct A799, m7), 1);
		dcStructField(st, 'f', offsetof(struct A799, m8), 1);
		dcStructField(st, 'd', offsetof(struct A799, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlfd} */
struct A800 { j m0; l m1; f m2; d m3; };
void f_cpA800(struct A800 *x, const struct A800 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA800(const struct A800 *x, const struct A800 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA800() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A800), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A800, m0), 1);
		dcStructField(st, 'l', offsetof(struct A800, m1), 1);
		dcStructField(st, 'f', offsetof(struct A800, m2), 1);
		dcStructField(st, 'd', offsetof(struct A800, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clff} */
struct A801 { c m0; l m1; f m2; f m3; };
void f_cpA801(struct A801 *x, const struct A801 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA801(const struct A801 *x, const struct A801 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA801() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A801), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A801, m0), 1);
		dcStructField(st, 'l', offsetof(struct A801, m1), 1);
		dcStructField(st, 'f', offsetof(struct A801, m2), 1);
		dcStructField(st, 'f', offsetof(struct A801, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ci{clff}ls} */
struct A802 { c m0; i m1; struct A801 m2; l m3; s m4; };
void f_cpA802(struct A802 *x, const struct A802 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA801(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA802(const struct A802 *x, const struct A802 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA801(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA802() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A802), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A802, m0), 1);
		dcStructField(st, 'i', offsetof(struct A802, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A802, m2), 1, f_touchdcstA801());
		dcStructField(st, 'l', offsetof(struct A802, m3), 1);
		dcStructField(st, 's', offsetof(struct A802, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dccllcdp} */
struct A803 { d m0; c m1; c m2; l m3; l m4; c m5; d m6; p m7; };
void f_cpA803(struct A803 *x, const struct A803 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA803(const struct A803 *x, const struct A803 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA803() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A803), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A803, m0), 1);
		dcStructField(st, 'c', offsetof(struct A803, m1), 1);
		dcStructField(st, 'c', offsetof(struct A803, m2), 1);
		dcStructField(st, 'l', offsetof(struct A803, m3), 1);
		dcStructField(st, 'l', offsetof(struct A803, m4), 1);
		dcStructField(st, 'c', offsetof(struct A803, m5), 1);
		dcStructField(st, 'd', offsetof(struct A803, m6), 1);
		dcStructField(st, 'p', offsetof(struct A803, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jp{dccllcdp}} */
struct A804 { j m0; p m1; struct A803 m2; };
void f_cpA804(struct A804 *x, const struct A804 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA803(&x->m2, &y->m2); };
int f_cmpA804(const struct A804 *x, const struct A804 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA803(&x->m2, &y->m2); };
DCstruct* f_touchdcstA804() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A804), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A804, m0), 1);
		dcStructField(st, 'p', offsetof(struct A804, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A804, m2), 1, f_touchdcstA803());
		dcCloseStruct(st);
	}
	return st;
};
/* {cdj} */
struct A805 { c m0; d m1; j m2; };
void f_cpA805(struct A805 *x, const struct A805 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA805(const struct A805 *x, const struct A805 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA805() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A805), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A805, m0), 1);
		dcStructField(st, 'd', offsetof(struct A805, m1), 1);
		dcStructField(st, 'j', offsetof(struct A805, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dljddp{cdj}sijdpldj} */
struct A806 { d m0; l m1; j m2; d m3; d m4; p m5; struct A805 m6; s m7; i m8; j m9; d m10; p m11; l m12; d m13; j m14; };
void f_cpA806(struct A806 *x, const struct A806 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA805(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA806(const struct A806 *x, const struct A806 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA805(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA806() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A806), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A806, m0), 1);
		dcStructField(st, 'l', offsetof(struct A806, m1), 1);
		dcStructField(st, 'j', offsetof(struct A806, m2), 1);
		dcStructField(st, 'd', offsetof(struct A806, m3), 1);
		dcStructField(st, 'd', offsetof(struct A806, m4), 1);
		dcStructField(st, 'p', offsetof(struct A806, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A806, m6), 1, f_touchdcstA805());
		dcStructField(st, 's', offsetof(struct A806, m7), 1);
		dcStructField(st, 'i', offsetof(struct A806, m8), 1);
		dcStructField(st, 'j', offsetof(struct A806, m9), 1);
		dcStructField(st, 'd', offsetof(struct A806, m10), 1);
		dcStructField(st, 'p', offsetof(struct A806, m11), 1);
		dcStructField(st, 'l', offsetof(struct A806, m12), 1);
		dcStructField(st, 'd', offsetof(struct A806, m13), 1);
		dcStructField(st, 'j', offsetof(struct A806, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfdjjiccssfd} */
struct A807 { s m0; f m1; d m2; j m3; j m4; i m5; c m6; c m7; s m8; s m9; f m10; d m11; };
void f_cpA807(struct A807 *x, const struct A807 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA807(const struct A807 *x, const struct A807 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA807() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A807), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A807, m0), 1);
		dcStructField(st, 'f', offsetof(struct A807, m1), 1);
		dcStructField(st, 'd', offsetof(struct A807, m2), 1);
		dcStructField(st, 'j', offsetof(struct A807, m3), 1);
		dcStructField(st, 'j', offsetof(struct A807, m4), 1);
		dcStructField(st, 'i', offsetof(struct A807, m5), 1);
		dcStructField(st, 'c', offsetof(struct A807, m6), 1);
		dcStructField(st, 'c', offsetof(struct A807, m7), 1);
		dcStructField(st, 's', offsetof(struct A807, m8), 1);
		dcStructField(st, 's', offsetof(struct A807, m9), 1);
		dcStructField(st, 'f', offsetof(struct A807, m10), 1);
		dcStructField(st, 'd', offsetof(struct A807, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psllccsfdpji} */
struct A808 { p m0; s m1; l m2; l m3; c m4; c m5; s m6; f m7; d m8; p m9; j m10; i m11; };
void f_cpA808(struct A808 *x, const struct A808 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA808(const struct A808 *x, const struct A808 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA808() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A808), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A808, m0), 1);
		dcStructField(st, 's', offsetof(struct A808, m1), 1);
		dcStructField(st, 'l', offsetof(struct A808, m2), 1);
		dcStructField(st, 'l', offsetof(struct A808, m3), 1);
		dcStructField(st, 'c', offsetof(struct A808, m4), 1);
		dcStructField(st, 'c', offsetof(struct A808, m5), 1);
		dcStructField(st, 's', offsetof(struct A808, m6), 1);
		dcStructField(st, 'f', offsetof(struct A808, m7), 1);
		dcStructField(st, 'd', offsetof(struct A808, m8), 1);
		dcStructField(st, 'p', offsetof(struct A808, m9), 1);
		dcStructField(st, 'j', offsetof(struct A808, m10), 1);
		dcStructField(st, 'i', offsetof(struct A808, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjj{sfdjjiccssfd}{psllccsfdpji}ijpcd{id}j} */
struct A809 { f m0; j m1; j m2; struct A807 m3; struct A808 m4; i m5; j m6; p m7; c m8; d m9; struct A178 m10; j m11; };
void f_cpA809(struct A809 *x, const struct A809 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA807(&x->m3, &y->m3); f_cpA808(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA178(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA809(const struct A809 *x, const struct A809 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA807(&x->m3, &y->m3) && f_cmpA808(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA178(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA809() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A809), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A809, m0), 1);
		dcStructField(st, 'j', offsetof(struct A809, m1), 1);
		dcStructField(st, 'j', offsetof(struct A809, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A809, m3), 1, f_touchdcstA807());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A809, m4), 1, f_touchdcstA808());
		dcStructField(st, 'i', offsetof(struct A809, m5), 1);
		dcStructField(st, 'j', offsetof(struct A809, m6), 1);
		dcStructField(st, 'p', offsetof(struct A809, m7), 1);
		dcStructField(st, 'c', offsetof(struct A809, m8), 1);
		dcStructField(st, 'd', offsetof(struct A809, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A809, m10), 1, f_touchdcstA178());
		dcStructField(st, 'j', offsetof(struct A809, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldsffjcsjdcfp} */
struct A810 { l m0; d m1; s m2; f m3; f m4; j m5; c m6; s m7; j m8; d m9; c m10; f m11; p m12; };
void f_cpA810(struct A810 *x, const struct A810 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA810(const struct A810 *x, const struct A810 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA810() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A810), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A810, m0), 1);
		dcStructField(st, 'd', offsetof(struct A810, m1), 1);
		dcStructField(st, 's', offsetof(struct A810, m2), 1);
		dcStructField(st, 'f', offsetof(struct A810, m3), 1);
		dcStructField(st, 'f', offsetof(struct A810, m4), 1);
		dcStructField(st, 'j', offsetof(struct A810, m5), 1);
		dcStructField(st, 'c', offsetof(struct A810, m6), 1);
		dcStructField(st, 's', offsetof(struct A810, m7), 1);
		dcStructField(st, 'j', offsetof(struct A810, m8), 1);
		dcStructField(st, 'd', offsetof(struct A810, m9), 1);
		dcStructField(st, 'c', offsetof(struct A810, m10), 1);
		dcStructField(st, 'f', offsetof(struct A810, m11), 1);
		dcStructField(st, 'p', offsetof(struct A810, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdpff{fjj{sfdjjiccssfd}{psllccsfdpji}ijpcd{id}j}piflipcjcllcfs{ldsffjcsjdcfp}clpjscpfc} */
struct A811 { p m0; d m1; p m2; f m3; f m4; struct A809 m5; p m6; i m7; f m8; l m9; i m10; p m11; c m12; j m13; c m14; l m15; l m16; c m17; f m18; s m19; struct A810 m20; c m21; l m22; p m23; j m24; s m25; c m26; p m27; f m28; c m29; };
void f_cpA811(struct A811 *x, const struct A811 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA809(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA810(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA811(const struct A811 *x, const struct A811 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA809(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA810(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA811() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A811), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A811, m0), 1);
		dcStructField(st, 'd', offsetof(struct A811, m1), 1);
		dcStructField(st, 'p', offsetof(struct A811, m2), 1);
		dcStructField(st, 'f', offsetof(struct A811, m3), 1);
		dcStructField(st, 'f', offsetof(struct A811, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A811, m5), 1, f_touchdcstA809());
		dcStructField(st, 'p', offsetof(struct A811, m6), 1);
		dcStructField(st, 'i', offsetof(struct A811, m7), 1);
		dcStructField(st, 'f', offsetof(struct A811, m8), 1);
		dcStructField(st, 'l', offsetof(struct A811, m9), 1);
		dcStructField(st, 'i', offsetof(struct A811, m10), 1);
		dcStructField(st, 'p', offsetof(struct A811, m11), 1);
		dcStructField(st, 'c', offsetof(struct A811, m12), 1);
		dcStructField(st, 'j', offsetof(struct A811, m13), 1);
		dcStructField(st, 'c', offsetof(struct A811, m14), 1);
		dcStructField(st, 'l', offsetof(struct A811, m15), 1);
		dcStructField(st, 'l', offsetof(struct A811, m16), 1);
		dcStructField(st, 'c', offsetof(struct A811, m17), 1);
		dcStructField(st, 'f', offsetof(struct A811, m18), 1);
		dcStructField(st, 's', offsetof(struct A811, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A811, m20), 1, f_touchdcstA810());
		dcStructField(st, 'c', offsetof(struct A811, m21), 1);
		dcStructField(st, 'l', offsetof(struct A811, m22), 1);
		dcStructField(st, 'p', offsetof(struct A811, m23), 1);
		dcStructField(st, 'j', offsetof(struct A811, m24), 1);
		dcStructField(st, 's', offsetof(struct A811, m25), 1);
		dcStructField(st, 'c', offsetof(struct A811, m26), 1);
		dcStructField(st, 'p', offsetof(struct A811, m27), 1);
		dcStructField(st, 'f', offsetof(struct A811, m28), 1);
		dcStructField(st, 'c', offsetof(struct A811, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jljlfcpij} */
struct A812 { j m0; l m1; j m2; l m3; f m4; c m5; p m6; i m7; j m8; };
void f_cpA812(struct A812 *x, const struct A812 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA812(const struct A812 *x, const struct A812 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA812() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A812), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A812, m0), 1);
		dcStructField(st, 'l', offsetof(struct A812, m1), 1);
		dcStructField(st, 'j', offsetof(struct A812, m2), 1);
		dcStructField(st, 'l', offsetof(struct A812, m3), 1);
		dcStructField(st, 'f', offsetof(struct A812, m4), 1);
		dcStructField(st, 'c', offsetof(struct A812, m5), 1);
		dcStructField(st, 'p', offsetof(struct A812, m6), 1);
		dcStructField(st, 'i', offsetof(struct A812, m7), 1);
		dcStructField(st, 'j', offsetof(struct A812, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* 0:jpdfj{lssfd}i{{i}spfcpplisp}{ssd}ic{jcdsppjld}cp */ j f0(p a1,d a2,f a3,j a4,struct A1 a5,i a6,struct A3 a7,struct A4 a8,i a9,c a10,struct A5 a11,c a12,p a13){V_p[1]=a1;V_d[2]=a2;V_f[3]=a3;V_j[4]=a4;f_cpA1(V_a[5],&a5);V_i[6]=a6;f_cpA3(V_a[7],&a7);f_cpA4(V_a[8],&a8);V_i[9]=a9;V_c[10]=a10;f_cpA5(V_a[11],&a11);V_c[12]=a12;V_p[13]=a13;ret_j(13)}
/* 1:v{{li}pp{pdfddcpl}}ppf */ v f1(struct A8 a1,p a2,p a3,f a4){f_cpA8(V_a[1],&a1);V_p[2]=a2;V_p[3]=a3;V_f[4]=a4;ret_v(4)}
/* 2:cjdjjsp{il{dsisjc}pjcfjs}fdjfsl */ c f2(j a1,d a2,j a3,j a4,s a5,p a6,struct A10 a7,f a8,d a9,j a10,f a11,s a12,l a13){V_j[1]=a1;V_d[2]=a2;V_j[3]=a3;V_j[4]=a4;V_s[5]=a5;V_p[6]=a6;f_cpA10(V_a[7],&a7);V_f[8]=a8;V_d[9]=a9;V_j[10]=a10;V_f[11]=a11;V_s[12]=a12;V_l[13]=a13;ret_c(13)}
/* 3:{l}lcls */ struct A11 f3(l a1,c a2,l a3,s a4){V_l[1]=a1;V_c[2]=a2;V_l[3]=a3;V_s[4]=a4;ret_a(4,struct A11)}
/* 4:sjcfsf{pjlil}is */ s f4(j a1,c a2,f a3,s a4,f a5,struct A12 a6,i a7,s a8){V_j[1]=a1;V_c[2]=a2;V_f[3]=a3;V_s[4]=a4;V_f[5]=a5;f_cpA12(V_a[6],&a6);V_i[7]=a7;V_s[8]=a8;ret_s(8)}
/* 5:cds{cdl}ls{ssfpp}pf */ c f5(d a1,s a2,struct A13 a3,l a4,s a5,struct A14 a6,p a7,f a8){V_d[1]=a1;V_s[2]=a2;f_cpA13(V_a[3],&a3);V_l[4]=a4;V_s[5]=a5;f_cpA14(V_a[6],&a6);V_p[7]=a7;V_f[8]=a8;ret_c(8)}
/* 6:pf{fipfcpisfjjjc}jcsf */ p f6(f a1,struct A15 a2,j a3,c a4,s a5,f a6){V_f[1]=a1;f_cpA15(V_a[2],&a2);V_j[3]=a3;V_c[4]=a4;V_s[5]=a5;V_f[6]=a6;ret_p(6)}
/* 7:vdpj{ffj{jldlpjpdipp}cjfllis{dcifdjpcil}j}j */ v f7(d a1,p a2,j a3,struct A18 a4,j a5){V_d[1]=a1;V_p[2]=a2;V_j[3]=a3;f_cpA18(V_a[4],&a4);V_j[5]=a5;ret_v(5)}
/* 8:pli{sppjffipdp}ppslsjdils */ p f8(l a1,i a2,struct A19 a3,p a4,p a5,s a6,l a7,s a8,j a9,d a10,i a11,l a12,s a13){V_l[1]=a1;V_i[2]=a2;f_cpA19(V_a[3],&a3);V_p[4]=a4;V_p[5]=a5;V_s[6]=a6;V_l[7]=a7;V_s[8]=a8;V_j[9]=a9;V_d[10]=a10;V_i[11]=a11;V_l[12]=a12;V_s[13]=a13;ret_p(13)}
/* 9:j{jcl}lclijcsipcspl */ j f9(struct A20 a1,l a2,c a3,l a4,i a5,j a6,c a7,s a8,i a9,p a10,c a11,s a12,p a13,l a14){f_cpA20(V_a[1],&a1);V_l[2]=a2;V_c[3]=a3;V_l[4]=a4;V_i[5]=a5;V_j[6]=a6;V_c[7]=a7;V_s[8]=a8;V_i[9]=a9;V_p[10]=a10;V_c[11]=a11;V_s[12]=a12;V_p[13]=a13;V_l[14]=a14;ret_j(14)}
/* 10:f{jdcl}df */ f f10(struct A21 a1,d a2,f a3){f_cpA21(V_a[1],&a1);V_d[2]=a2;V_f[3]=a3;ret_f(3)}
/* 11:c{cddcdclsspc}cd{plijsdfpdjdcppjcfsf}s{fllpfdfjlssspc}fd */ c f11(struct A22 a1,c a2,d a3,struct A23 a4,s a5,struct A24 a6,f a7,d a8){f_cpA22(V_a[1],&a1);V_c[2]=a2;V_d[3]=a3;f_cpA23(V_a[4],&a4);V_s[5]=a5;f_cpA24(V_a[6],&a6);V_f[7]=a7;V_d[8]=a8;ret_c(8)}
/* 12:{fjjpc}j */ struct A25 f12(j a1){V_j[1]=a1;ret_a(1,struct A25)}
/* 13:{ddij} */ struct A26 f13(){ret_a(0,struct A26)}
/* 14:pdj{s}cf{l{f{f}dpfpi}{splsjcpl{jpdljldip}di{ldp}cldi}sjjs{d}ijdfisc}jpfsp */ p f14(d a1,j a2,struct A27 a3,c a4,f a5,struct A34 a6,j a7,p a8,f a9,s a10,p a11){V_d[1]=a1;V_j[2]=a2;f_cpA27(V_a[3],&a3);V_c[4]=a4;V_f[5]=a5;f_cpA34(V_a[6],&a6);V_j[7]=a7;V_p[8]=a8;V_f[9]=a9;V_s[10]=a10;V_p[11]=a11;ret_p(11)}
/* 15:{i} */ struct A2 f15(){ret_a(0,struct A2)}
/* 16:ljd{icscispid{psc{sijpdfcfs}pp}lpildid{d}pfldfi{{fdljjl}pi}c{{ljs}cjf{spldcilisj}}{ijii{psjcjdsjp}ddpsppl}{pjdlscdlip}jljldcps{scp{fdlsslcfds}{jsljpf}fdpdpf{spl}fcjddsp{slfppcc}p}pipj{ss}df{di}s} */ l f16(j a1,d a2,struct A52 a3){V_j[1]=a1;V_d[2]=a2;f_cpA52(V_a[3],&a3);ret_l(3)}
/* 17:ljccici{d}dds */ l f17(j a1,c a2,c a3,i a4,c a5,i a6,struct A33 a7,d a8,d a9,s a10){V_j[1]=a1;V_c[2]=a2;V_c[3]=a3;V_i[4]=a4;V_c[5]=a5;V_i[6]=a6;f_cpA33(V_a[7],&a7);V_d[8]=a8;V_d[9]=a9;V_s[10]=a10;ret_l(10)}
/* 18:ssj{pdpflilpislldsiijcpiidlcifsp}jj */ s f18(s a1,j a2,struct A53 a3,j a4,j a5){V_s[1]=a1;V_j[2]=a2;f_cpA53(V_a[3],&a3);V_j[4]=a4;V_j[5]=a5;ret_s(5)}
/* 19:idd{djsidssj}dpdfjjj */ i f19(d a1,d a2,struct A54 a3,d a4,p a5,d a6,f a7,j a8,j a9,j a10){V_d[1]=a1;V_d[2]=a2;f_cpA54(V_a[3],&a3);V_d[4]=a4;V_p[5]=a5;V_d[6]=a6;V_f[7]=a7;V_j[8]=a8;V_j[9]=a9;V_j[10]=a10;ret_i(10)}
/* 20:{pjsicd}pdscdcspfpdidlcd */ struct A55 f20(p a1,d a2,s a3,c a4,d a5,c a6,s a7,p a8,f a9,p a10,d a11,i a12,d a13,l a14,c a15,d a16){V_p[1]=a1;V_d[2]=a2;V_s[3]=a3;V_c[4]=a4;V_d[5]=a5;V_c[6]=a6;V_s[7]=a7;V_p[8]=a8;V_f[9]=a9;V_p[10]=a10;V_d[11]=a11;V_i[12]=a12;V_d[13]=a13;V_l[14]=a14;V_c[15]=a15;V_d[16]=a16;ret_a(16,struct A55)}
/* 21:f{jjs}cdfcf{cljsff}sfijpjds */ f f21(struct A56 a1,c a2,d a3,f a4,c a5,f a6,struct A57 a7,s a8,f a9,i a10,j a11,p a12,j a13,d a14,s a15){f_cpA56(V_a[1],&a1);V_c[2]=a2;V_d[3]=a3;V_f[4]=a4;V_c[5]=a5;V_f[6]=a6;f_cpA57(V_a[7],&a7);V_s[8]=a8;V_f[9]=a9;V_i[10]=a10;V_j[11]=a11;V_p[12]=a12;V_j[13]=a13;V_d[14]=a14;V_s[15]=a15;ret_f(15)}
/* 22:c{sjldjfi} */ c f22(struct A58 a1){f_cpA58(V_a[1],&a1);ret_c(1)}
/* 23:vi{{l{pfjpjf}sdjjdjf}fds{cdlcpdjlps{ldpdils}ipjc}c}psd{lps{sjdpcijjcdlcccls}lcpis}cdlc */ v f23(i a1,struct A63 a2,p a3,s a4,d a5,struct A65 a6,c a7,d a8,l a9,c a10){V_i[1]=a1;f_cpA63(V_a[2],&a2);V_p[3]=a3;V_s[4]=a4;V_d[5]=a5;f_cpA65(V_a[6],&a6);V_c[7]=a7;V_d[8]=a8;V_l[9]=a9;V_c[10]=a10;ret_v(10)}
/* 24:s{pdlppjc{jjidliifp}}fjpclf */ s f24(struct A67 a1,f a2,j a3,p a4,c a5,l a6,f a7){f_cpA67(V_a[1],&a1);V_f[2]=a2;V_j[3]=a3;V_p[4]=a4;V_c[5]=a5;V_l[6]=a6;V_f[7]=a7;ret_s(7)}
/* 25:sc{plcipffp{ipijpidsp}jjf}lspddpdfc{ijlclc}{fd}sd */ s f25(c a1,struct A69 a2,l a3,s a4,p a5,d a6,d a7,p a8,d a9,f a10,c a11,struct A70 a12,struct A71 a13,s a14,d a15){V_c[1]=a1;f_cpA69(V_a[2],&a2);V_l[3]=a3;V_s[4]=a4;V_p[5]=a5;V_d[6]=a6;V_d[7]=a7;V_p[8]=a8;V_d[9]=a9;V_f[10]=a10;V_c[11]=a11;f_cpA70(V_a[12],&a12);f_cpA71(V_a[13],&a13);V_s[14]=a14;V_d[15]=a15;ret_s(15)}
/* 26:l{d{jlfjpsp}ppjfpicsccj}d */ l f26(struct A73 a1,d a2){f_cpA73(V_a[1],&a1);V_d[2]=a2;ret_l(2)}
/* 27:li{cllclcii} */ l f27(i a1,struct A74 a2){V_i[1]=a1;f_cpA74(V_a[2],&a2);ret_l(2)}
/* 28:j{dsiliiscdljldf} */ j f28(struct A75 a1){f_cpA75(V_a[1],&a1);ret_j(1)}
/* 29:ijpisspjspplp{jidpjcj}il */ i f29(j a1,p a2,i a3,s a4,s a5,p a6,j a7,s a8,p a9,p a10,l a11,p a12,struct A76 a13,i a14,l a15){V_j[1]=a1;V_p[2]=a2;V_i[3]=a3;V_s[4]=a4;V_s[5]=a5;V_p[6]=a6;V_j[7]=a7;V_s[8]=a8;V_p[9]=a9;V_p[10]=a10;V_l[11]=a11;V_p[12]=a12;f_cpA76(V_a[13],&a13);V_i[14]=a14;V_l[15]=a15;ret_i(15)}
/* 30:pccfdd{c}li */ p f30(c a1,c a2,f a3,d a4,d a5,struct A77 a6,l a7,i a8){V_c[1]=a1;V_c[2]=a2;V_f[3]=a3;V_d[4]=a4;V_d[5]=a5;f_cpA77(V_a[6],&a6);V_l[7]=a7;V_i[8]=a8;ret_p(8)}
/* 31:{ps{{diii}cijsl}jiisds{dcilj}}il{ssplcffjdsjsjficdcjjijipid}cspi */ struct A81 f31(i a1,l a2,struct A82 a3,c a4,s a5,p a6,i a7){V_i[1]=a1;V_l[2]=a2;f_cpA82(V_a[3],&a3);V_c[4]=a4;V_s[5]=a5;V_p[6]=a6;V_i[7]=a7;ret_a(7,struct A81)}
/* 32:pjcf{jdjdcpcjcjcclcsffd{dclfllfss}cpjd} */ p f32(j a1,c a2,f a3,struct A84 a4){V_j[1]=a1;V_c[2]=a2;V_f[3]=a3;f_cpA84(V_a[4],&a4);ret_p(4)}
/* 33:{lfp} */ struct A85 f33(){ret_a(0,struct A85)}
/* 34:cjij{iffcifi} */ c f34(j a1,i a2,j a3,struct A86 a4){V_j[1]=a1;V_i[2]=a2;V_j[3]=a3;f_cpA86(V_a[4],&a4);ret_c(4)}
/* 35:pljlcf{c} */ p f35(l a1,j a2,l a3,c a4,f a5,struct A77 a6){V_l[1]=a1;V_j[2]=a2;V_l[3]=a3;V_c[4]=a4;V_f[5]=a5;f_cpA77(V_a[6],&a6);ret_p(6)}
/* 36:jjf{lj}icdsc */ j f36(j a1,f a2,struct A87 a3,i a4,c a5,d a6,s a7,c a8){V_j[1]=a1;V_f[2]=a2;f_cpA87(V_a[3],&a3);V_i[4]=a4;V_c[5]=a5;V_d[6]=a6;V_s[7]=a7;V_c[8]=a8;ret_j(8)}
/* 37:{jiclfls}s */ struct A88 f37(s a1){V_s[1]=a1;ret_a(1,struct A88)}
/* 38:ldffdjs{lsspsscsj{lpcjspi}j}{spfliccjlspcjfcpc}pjlf */ l f38(d a1,f a2,f a3,d a4,j a5,s a6,struct A90 a7,struct A91 a8,p a9,j a10,l a11,f a12){V_d[1]=a1;V_f[2]=a2;V_f[3]=a3;V_d[4]=a4;V_j[5]=a5;V_s[6]=a6;f_cpA90(V_a[7],&a7);f_cpA91(V_a[8],&a8);V_p[9]=a9;V_j[10]=a10;V_l[11]=a11;V_f[12]=a12;ret_l(12)}
/* 39:lfliifpd{l{fjlpdc}jdd{sppi}fli}{pjsiiccf} */ l f39(f a1,l a2,i a3,i a4,f a5,p a6,d a7,struct A94 a8,struct A95 a9){V_f[1]=a1;V_l[2]=a2;V_i[3]=a3;V_i[4]=a4;V_f[5]=a5;V_p[6]=a6;V_d[7]=a7;f_cpA94(V_a[8],&a8);f_cpA95(V_a[9],&a9);ret_l(9)}
/* 40:cp{j}idpisdcl{lp{l}} */ c f40(p a1,struct A96 a2,i a3,d a4,p a5,i a6,s a7,d a8,c a9,l a10,struct A97 a11){V_p[1]=a1;f_cpA96(V_a[2],&a2);V_i[3]=a3;V_d[4]=a4;V_p[5]=a5;V_i[6]=a6;V_s[7]=a7;V_d[8]=a8;V_c[9]=a9;V_l[10]=a10;f_cpA97(V_a[11],&a11);ret_c(11)}
/* 41:{jscdfisciplfjpjjfscffdsfccdjscclifjcsdfpic}ccf */ struct A98 f41(c a1,c a2,f a3){V_c[1]=a1;V_c[2]=a2;V_f[3]=a3;ret_a(3,struct A98)}
/* 42:sjppps{dsspsjisifj}fip */ s f42(j a1,p a2,p a3,p a4,s a5,struct A99 a6,f a7,i a8,p a9){V_j[1]=a1;V_p[2]=a2;V_p[3]=a3;V_p[4]=a4;V_s[5]=a5;f_cpA99(V_a[6],&a6);V_f[7]=a7;V_i[8]=a8;V_p[9]=a9;ret_s(9)}
/* 43:{f} */ struct A28 f43(){ret_a(0,struct A28)}
/* 44:sjll{ljsli}c */ s f44(j a1,l a2,l a3,struct A100 a4,c a5){V_j[1]=a1;V_l[2]=a2;V_l[3]=a3;f_cpA100(V_a[4],&a4);V_c[5]=a5;ret_s(5)}
/* 45:ll{fpj{j}idsd}ci */ l f45(l a1,struct A101 a2,c a3,i a4){V_l[1]=a1;f_cpA101(V_a[2],&a2);V_c[3]=a3;V_i[4]=a4;ret_l(4)}
/* 46:djjijjc{dcdc}d */ d f46(j a1,j a2,i a3,j a4,j a5,c a6,struct A102 a7,d a8){V_j[1]=a1;V_j[2]=a2;V_i[3]=a3;V_j[4]=a4;V_j[5]=a5;V_c[6]=a6;f_cpA102(V_a[7],&a7);V_d[8]=a8;ret_d(8)}
/* 47:vfjc{ppsij}{jlpsf}sfj */ v f47(f a1,j a2,c a3,struct A103 a4,struct A104 a5,s a6,f a7,j a8){V_f[1]=a1;V_j[2]=a2;V_c[3]=a3;f_cpA103(V_a[4],&a4);f_cpA104(V_a[5],&a5);V_s[6]=a6;V_f[7]=a7;V_j[8]=a8;ret_v(8)}
/* 48:vcli{jldddjdlicfc}d */ v f48(c a1,l a2,i a3,struct A105 a4,d a5){V_c[1]=a1;V_l[2]=a2;V_i[3]=a3;f_cpA105(V_a[4],&a4);V_d[5]=a5;ret_v(5)}
/* 49:{cjjssilsdill{ssfipfsp}iidiiidc}{j}fji */ struct A107 f49(struct A96 a1,f a2,j a3,i a4){f_cpA96(V_a[1],&a1);V_f[2]=a2;V_j[3]=a3;V_i[4]=a4;ret_a(4,struct A107)}
/* 50:l{dli}{jll{ci}} */ l f50(struct A108 a1,struct A110 a2){f_cpA108(V_a[1],&a1);f_cpA110(V_a[2],&a2);ret_l(2)}
/* 51:jddfsc{{plclip{d}ddspds}ssdi}c */ j f51(d a1,d a2,f a3,s a4,c a5,struct A112 a6,c a7){V_d[1]=a1;V_d[2]=a2;V_f[3]=a3;V_s[4]=a4;V_c[5]=a5;f_cpA112(V_a[6],&a6);V_c[7]=a7;ret_j(7)}
/* 52:dcsipplcffipjs{df} */ d f52(c a1,s a2,i a3,p a4,p a5,l a6,c a7,f a8,f a9,i a10,p a11,j a12,s a13,struct A113 a14){V_c[1]=a1;V_s[2]=a2;V_i[3]=a3;V_p[4]=a4;V_p[5]=a5;V_l[6]=a6;V_c[7]=a7;V_f[8]=a8;V_f[9]=a9;V_i[10]=a10;V_p[11]=a11;V_j[12]=a12;V_s[13]=a13;f_cpA113(V_a[14],&a14);ret_d(14)}
/* 53:sdlssijiifils{ijsplj} */ s f53(d a1,l a2,s a3,s a4,i a5,j a6,i a7,i a8,f a9,i a10,l a11,s a12,struct A114 a13){V_d[1]=a1;V_l[2]=a2;V_s[3]=a3;V_s[4]=a4;V_i[5]=a5;V_j[6]=a6;V_i[7]=a7;V_i[8]=a8;V_f[9]=a9;V_i[10]=a10;V_l[11]=a11;V_s[12]=a12;f_cpA114(V_a[13],&a13);ret_s(13)}
/* 54:spifl{pscj{pcclp}}fjd */ s f54(p a1,i a2,f a3,l a4,struct A116 a5,f a6,j a7,d a8){V_p[1]=a1;V_i[2]=a2;V_f[3]=a3;V_l[4]=a4;f_cpA116(V_a[5],&a5);V_f[6]=a6;V_j[7]=a7;V_d[8]=a8;ret_s(8)}
/* 55:vd{ijfiipsdfii} */ v f55(d a1,struct A117 a2){V_d[1]=a1;f_cpA117(V_a[2],&a2);ret_v(2)}
/* 56:diclp{idppsjsjffpjpifcpdccpcj}clipisscs{p}i */ d f56(i a1,c a2,l a3,p a4,struct A118 a5,c a6,l a7,i a8,p a9,i a10,s a11,s a12,c a13,s a14,struct A119 a15,i a16){V_i[1]=a1;V_c[2]=a2;V_l[3]=a3;V_p[4]=a4;f_cpA118(V_a[5],&a5);V_c[6]=a6;V_l[7]=a7;V_i[8]=a8;V_p[9]=a9;V_i[10]=a10;V_s[11]=a11;V_s[12]=a12;V_c[13]=a13;V_s[14]=a14;f_cpA119(V_a[15],&a15);V_i[16]=a16;ret_d(16)}
/* 57:vji{pj{ijidlfdcfdlcd}dc{cc}slj}fddpp{jp}clc */ v f57(j a1,i a2,struct A122 a3,f a4,d a5,d a6,p a7,p a8,struct A123 a9,c a10,l a11,c a12){V_j[1]=a1;V_i[2]=a2;f_cpA122(V_a[3],&a3);V_f[4]=a4;V_d[5]=a5;V_d[6]=a6;V_p[7]=a7;V_p[8]=a8;f_cpA123(V_a[9],&a9);V_c[10]=a10;V_l[11]=a11;V_c[12]=a12;ret_v(12)}
/* 58:{sfjjcccijssjd}ilfpcc{ldccsls}psjijjc */ struct A124 f58(i a1,l a2,f a3,p a4,c a5,c a6,struct A125 a7,p a8,s a9,j a10,i a11,j a12,j a13,c a14){V_i[1]=a1;V_l[2]=a2;V_f[3]=a3;V_p[4]=a4;V_c[5]=a5;V_c[6]=a6;f_cpA125(V_a[7],&a7);V_p[8]=a8;V_s[9]=a9;V_j[10]=a10;V_i[11]=a11;V_j[12]=a12;V_j[13]=a13;V_c[14]=a14;ret_a(14,struct A124)}
/* 59:vjcs{s}d */ v f59(j a1,c a2,s a3,struct A27 a4,d a5){V_j[1]=a1;V_c[2]=a2;V_s[3]=a3;f_cpA27(V_a[4],&a4);V_d[5]=a5;ret_v(5)}
/* 60:{djl}fics{fsifjjcliidpsf} */ struct A126 f60(f a1,i a2,c a3,s a4,struct A127 a5){V_f[1]=a1;V_i[2]=a2;V_c[3]=a3;V_s[4]=a4;f_cpA127(V_a[5],&a5);ret_a(5,struct A126)}
/* 61:{dflipfcfdfissjjdc}p */ struct A128 f61(p a1){V_p[1]=a1;ret_a(1,struct A128)}
/* 62:iff{ifssd}ffijs */ i f62(f a1,f a2,struct A129 a3,f a4,f a5,i a6,j a7,s a8){V_f[1]=a1;V_f[2]=a2;f_cpA129(V_a[3],&a3);V_f[4]=a4;V_f[5]=a5;V_i[6]=a6;V_j[7]=a7;V_s[8]=a8;ret_i(8)}
/* 63:ljsppjlfi{icdjjdfflsccsj}jpfls */ l f63(j a1,s a2,p a3,p a4,j a5,l a6,f a7,i a8,struct A130 a9,j a10,p a11,f a12,l a13,s a14){V_j[1]=a1;V_s[2]=a2;V_p[3]=a3;V_p[4]=a4;V_j[5]=a5;V_l[6]=a6;V_f[7]=a7;V_i[8]=a8;f_cpA130(V_a[9],&a9);V_j[10]=a10;V_p[11]=a11;V_f[12]=a12;V_l[13]=a13;V_s[14]=a14;ret_l(14)}
/* 64:f{sjllc{sfdld}dpi}i{d}i */ f f64(struct A132 a1,i a2,struct A33 a3,i a4){f_cpA132(V_a[1],&a1);V_i[2]=a2;f_cpA33(V_a[3],&a3);V_i[4]=a4;ret_f(4)}
/* 65:djl{fjlis{i}cjlscifisdf{dcipdp}if{cjipfjj}jljdfjcjfscic{jilc{jjpsj}j{pdilcdjsddccsdjjslilddpsf}}ifidf}pj */ d f65(j a1,l a2,struct A138 a3,p a4,j a5){V_j[1]=a1;V_l[2]=a2;f_cpA138(V_a[3],&a3);V_p[4]=a4;V_j[5]=a5;ret_d(5)}
/* 66:vjsfcd{fijjslf}f */ v f66(j a1,s a2,f a3,c a4,d a5,struct A139 a6,f a7){V_j[1]=a1;V_s[2]=a2;V_f[3]=a3;V_c[4]=a4;V_d[5]=a5;f_cpA139(V_a[6],&a6);V_f[7]=a7;ret_v(7)}
/* 67:{lcp} */ struct A140 f67(){ret_a(0,struct A140)}
/* 68:s{ilss}{ci{pj{fidscispcsjsdpjsfp}ll{ipsccpdddpddcjsisi}dfsjsc{f}csscsf}}llp */ s f68(struct A141 a1,struct A145 a2,l a3,l a4,p a5){f_cpA141(V_a[1],&a1);f_cpA145(V_a[2],&a2);V_l[3]=a3;V_l[4]=a4;V_p[5]=a5;ret_s(5)}
/* 69:{psjdscjilpiisiiijilcijl}{lscjjplfjpdddsicljifff}csci */ struct A146 f69(struct A147 a1,c a2,s a3,c a4,i a5){f_cpA147(V_a[1],&a1);V_c[2]=a2;V_s[3]=a3;V_c[4]=a4;V_i[5]=a5;ret_a(5,struct A146)}
/* 70:vslcllci{j} */ v f70(s a1,l a2,c a3,l a4,l a5,c a6,i a7,struct A96 a8){V_s[1]=a1;V_l[2]=a2;V_c[3]=a3;V_l[4]=a4;V_l[5]=a5;V_c[6]=a6;V_i[7]=a7;f_cpA96(V_a[8],&a8);ret_v(8)}
/* 71:iscssjjiddlfsfd{i}j */ i f71(s a1,c a2,s a3,s a4,j a5,j a6,i a7,d a8,d a9,l a10,f a11,s a12,f a13,d a14,struct A2 a15,j a16){V_s[1]=a1;V_c[2]=a2;V_s[3]=a3;V_s[4]=a4;V_j[5]=a5;V_j[6]=a6;V_i[7]=a7;V_d[8]=a8;V_d[9]=a9;V_l[10]=a10;V_f[11]=a11;V_s[12]=a12;V_f[13]=a13;V_d[14]=a14;f_cpA2(V_a[15],&a15);V_j[16]=a16;ret_i(16)}
/* 72:f{lisssfdfdipffdllildl}{piil}pd */ f f72(struct A148 a1,struct A149 a2,p a3,d a4){f_cpA148(V_a[1],&a1);f_cpA149(V_a[2],&a2);V_p[3]=a3;V_d[4]=a4;ret_f(4)}
/* 73:d{c}dlfilpcff */ d f73(struct A77 a1,d a2,l a3,f a4,i a5,l a6,p a7,c a8,f a9,f a10){f_cpA77(V_a[1],&a1);V_d[2]=a2;V_l[3]=a3;V_f[4]=a4;V_i[5]=a5;V_l[6]=a6;V_p[7]=a7;V_c[8]=a8;V_f[9]=a9;V_f[10]=a10;ret_d(10)}
/* 74:l{cl}lf */ l f74(struct A150 a1,l a2,f a3){f_cpA150(V_a[1],&a1);V_l[2]=a2;V_f[3]=a3;ret_l(3)}
/* 75:lcccifdffsisi{fjjsllilsiljicscs{djc}pfcl}ip */ l f75(c a1,c a2,c a3,i a4,f a5,d a6,f a7,f a8,s a9,i a10,s a11,i a12,struct A152 a13,i a14,p a15){V_c[1]=a1;V_c[2]=a2;V_c[3]=a3;V_i[4]=a4;V_f[5]=a5;V_d[6]=a6;V_f[7]=a7;V_f[8]=a8;V_s[9]=a9;V_i[10]=a10;V_s[11]=a11;V_i[12]=a12;f_cpA152(V_a[13],&a13);V_i[14]=a14;V_p[15]=a15;ret_l(15)}
/* 76:lpp{d{ll{fc}jf{jflfjfidipi}sdlcpj{jdiiljs}}spj}ijpsjil */ l f76(p a1,p a2,struct A157 a3,i a4,j a5,p a6,s a7,j a8,i a9,l a10){V_p[1]=a1;V_p[2]=a2;f_cpA157(V_a[3],&a3);V_i[4]=a4;V_j[5]=a5;V_p[6]=a6;V_s[7]=a7;V_j[8]=a8;V_i[9]=a9;V_l[10]=a10;ret_l(10)}
/* 77:lfpiscsf{sp}l */ l f77(f a1,p a2,i a3,s a4,c a5,s a6,f a7,struct A158 a8,l a9){V_f[1]=a1;V_p[2]=a2;V_i[3]=a3;V_s[4]=a4;V_c[5]=a5;V_s[6]=a6;V_f[7]=a7;f_cpA158(V_a[8],&a8);V_l[9]=a9;ret_l(9)}
/* 78:c{dfcjj{fdid}ddpcpjsjissil{ipccsdfssc}cddildcsicdfic{lsccjlcjpcd}cd}disjjssccjjd */ c f78(struct A162 a1,d a2,i a3,s a4,j a5,j a6,s a7,s a8,c a9,c a10,j a11,j a12,d a13){f_cpA162(V_a[1],&a1);V_d[2]=a2;V_i[3]=a3;V_s[4]=a4;V_j[5]=a5;V_j[6]=a6;V_s[7]=a7;V_s[8]=a8;V_c[9]=a9;V_c[10]=a10;V_j[11]=a11;V_j[12]=a12;V_d[13]=a13;ret_c(13)}
/* 79:ds{p{sji}pllf}p{dl{jslppfjdddfsjljfjpp}c} */ d f79(s a1,struct A164 a2,p a3,struct A166 a4){V_s[1]=a1;f_cpA164(V_a[2],&a2);V_p[3]=a3;f_cpA166(V_a[4],&a4);ret_d(4)}
/* 80:lips{cs}isfddf */ l f80(i a1,p a2,s a3,struct A167 a4,i a5,s a6,f a7,d a8,d a9,f a10){V_i[1]=a1;V_p[2]=a2;V_s[3]=a3;f_cpA167(V_a[4],&a4);V_i[5]=a5;V_s[6]=a6;V_f[7]=a7;V_d[8]=a8;V_d[9]=a9;V_f[10]=a10;ret_l(10)}
/* 81:ls{lljlpdflplj}{{lissj}pjscli}jjljpds{pfi{{licf}csicpijjfifd{ppdifpjddis}csfcidiijlffs}j}dlp */ l f81(s a1,struct A168 a2,struct A170 a3,j a4,j a5,l a6,j a7,p a8,d a9,s a10,struct A174 a11,d a12,l a13,p a14){V_s[1]=a1;f_cpA168(V_a[2],&a2);f_cpA170(V_a[3],&a3);V_j[4]=a4;V_j[5]=a5;V_l[6]=a6;V_j[7]=a7;V_p[8]=a8;V_d[9]=a9;V_s[10]=a10;f_cpA174(V_a[11],&a11);V_d[12]=a12;V_l[13]=a13;V_p[14]=a14;ret_l(14)}
/* 82:vjl{jlsflsd}f{jisj} */ v f82(j a1,l a2,struct A175 a3,f a4,struct A176 a5){V_j[1]=a1;V_l[2]=a2;f_cpA175(V_a[3],&a3);V_f[4]=a4;f_cpA176(V_a[5],&a5);ret_v(5)}
/* 83:f{dpf}f{id}sjdpi */ f f83(struct A177 a1,f a2,struct A178 a3,s a4,j a5,d a6,p a7,i a8){f_cpA177(V_a[1],&a1);V_f[2]=a2;f_cpA178(V_a[3],&a3);V_s[4]=a4;V_j[5]=a5;V_d[6]=a6;V_p[7]=a7;V_i[8]=a8;ret_f(8)}
/* 84:d{dfpp}jfds{{cfipjjc}pp}jddfjlips */ d f84(struct A179 a1,j a2,f a3,d a4,s a5,struct A181 a6,j a7,d a8,d a9,f a10,j a11,l a12,i a13,p a14,s a15){f_cpA179(V_a[1],&a1);V_j[2]=a2;V_f[3]=a3;V_d[4]=a4;V_s[5]=a5;f_cpA181(V_a[6],&a6);V_j[7]=a7;V_d[8]=a8;V_d[9]=a9;V_f[10]=a10;V_j[11]=a11;V_l[12]=a12;V_i[13]=a13;V_p[14]=a14;V_s[15]=a15;ret_d(15)}
/* 85:f{slppfpfjpcccpjiss}spisj */ f f85(struct A182 a1,s a2,p a3,i a4,s a5,j a6){f_cpA182(V_a[1],&a1);V_s[2]=a2;V_p[3]=a3;V_i[4]=a4;V_s[5]=a5;V_j[6]=a6;ret_f(6)}
/* 86:j{clpfdsldspipdlfdfsj}lcijfdpjlsjs{{l}sljspdjfccii{{cisp}jcjdilp}ic}lj */ j f86(struct A183 a1,l a2,c a3,i a4,j a5,f a6,d a7,p a8,j a9,l a10,s a11,j a12,s a13,struct A186 a14,l a15,j a16){f_cpA183(V_a[1],&a1);V_l[2]=a2;V_c[3]=a3;V_i[4]=a4;V_j[5]=a5;V_f[6]=a6;V_d[7]=a7;V_p[8]=a8;V_j[9]=a9;V_l[10]=a10;V_s[11]=a11;V_j[12]=a12;V_s[13]=a13;f_cpA186(V_a[14],&a14);V_l[15]=a15;V_j[16]=a16;ret_j(16)}
/* 87:{fljidjsdffsfpjdsfcjf} */ struct A187 f87(){ret_a(0,struct A187)}
/* 88:{ccpji}scfdii */ struct A188 f88(s a1,c a2,f a3,d a4,i a5,i a6){V_s[1]=a1;V_c[2]=a2;V_f[3]=a3;V_d[4]=a4;V_i[5]=a5;V_i[6]=a6;ret_a(6,struct A188)}
/* 89:s{jjlff{jdcfcsdjjlcdjlipfji}csijld}sjf{disics}ljfs */ s f89(struct A190 a1,s a2,j a3,f a4,struct A191 a5,l a6,j a7,f a8,s a9){f_cpA190(V_a[1],&a1);V_s[2]=a2;V_j[3]=a3;V_f[4]=a4;f_cpA191(V_a[5],&a5);V_l[6]=a6;V_j[7]=a7;V_f[8]=a8;V_s[9]=a9;ret_s(9)}
/* 90:ciplfp{cffi{djsli}cic}icfpi{ldipl}dfsf */ c f90(i a1,p a2,l a3,f a4,p a5,struct A193 a6,i a7,c a8,f a9,p a10,i a11,struct A194 a12,d a13,f a14,s a15,f a16){V_i[1]=a1;V_p[2]=a2;V_l[3]=a3;V_f[4]=a4;V_p[5]=a5;f_cpA193(V_a[6],&a6);V_i[7]=a7;V_c[8]=a8;V_f[9]=a9;V_p[10]=a10;V_i[11]=a11;f_cpA194(V_a[12],&a12);V_d[13]=a13;V_f[14]=a14;V_s[15]=a15;V_f[16]=a16;ret_c(16)}
/* 91:{clcc{fss}sfs}cdi{idci}idjp{c}pssj */ struct A196 f91(c a1,d a2,i a3,struct A197 a4,i a5,d a6,j a7,p a8,struct A77 a9,p a10,s a11,s a12,j a13){V_c[1]=a1;V_d[2]=a2;V_i[3]=a3;f_cpA197(V_a[4],&a4);V_i[5]=a5;V_d[6]=a6;V_j[7]=a7;V_p[8]=a8;f_cpA77(V_a[9],&a9);V_p[10]=a10;V_s[11]=a11;V_s[12]=a12;V_j[13]=a13;ret_a(13,struct A196)}
/* 92:cdfcjfisj{iccisplfcpcdpdfpc}lpfd */ c f92(d a1,f a2,c a3,j a4,f a5,i a6,s a7,j a8,struct A198 a9,l a10,p a11,f a12,d a13){V_d[1]=a1;V_f[2]=a2;V_c[3]=a3;V_j[4]=a4;V_f[5]=a5;V_i[6]=a6;V_s[7]=a7;V_j[8]=a8;f_cpA198(V_a[9],&a9);V_l[10]=a10;V_p[11]=a11;V_f[12]=a12;V_d[13]=a13;ret_c(13)}
/* 93:pdsipf{di{dscs{j}}pf{cf{fdfcijllcpidjlfcfdilcsjpdifjcjsfj}ppi}}i */ p f93(d a1,s a2,i a3,p a4,f a5,struct A202 a6,i a7){V_d[1]=a1;V_s[2]=a2;V_i[3]=a3;V_p[4]=a4;V_f[5]=a5;f_cpA202(V_a[6],&a6);V_i[7]=a7;ret_p(7)}
/* 94:dc{slfcpflfljiiicippssjidddpc}c */ d f94(c a1,struct A203 a2,c a3){V_c[1]=a1;f_cpA203(V_a[2],&a2);V_c[3]=a3;ret_d(3)}
/* 95:vpdjcsdf{ijccj}{ld}{cffsjcpjsdlcldfifll} */ v f95(p a1,d a2,j a3,c a4,s a5,d a6,f a7,struct A204 a8,struct A205 a9,struct A206 a10){V_p[1]=a1;V_d[2]=a2;V_j[3]=a3;V_c[4]=a4;V_s[5]=a5;V_d[6]=a6;V_f[7]=a7;f_cpA204(V_a[8],&a8);f_cpA205(V_a[9],&a9);f_cpA206(V_a[10],&a10);ret_v(10)}
/* 96:ljfsfp{f}j */ l f96(j a1,f a2,s a3,f a4,p a5,struct A28 a6,j a7){V_j[1]=a1;V_f[2]=a2;V_s[3]=a3;V_f[4]=a4;V_p[5]=a5;f_cpA28(V_a[6],&a6);V_j[7]=a7;ret_l(7)}
/* 97:{{c}sffiiil{pjfsi}sicfjf} */ struct A208 f97(){ret_a(0,struct A208)}
/* 98:l{jcsljisfcdi} */ l f98(struct A209 a1){f_cpA209(V_a[1],&a1);ret_l(1)}
/* 99:lljfsj{lc{lsjjllspsljsjsscdicidjfc}fjlsp}jjjijjjslj */ l f99(l a1,j a2,f a3,s a4,j a5,struct A211 a6,j a7,j a8,j a9,i a10,j a11,j a12,j a13,s a14,l a15,j a16){V_l[1]=a1;V_j[2]=a2;V_f[3]=a3;V_s[4]=a4;V_j[5]=a5;f_cpA211(V_a[6],&a6);V_j[7]=a7;V_j[8]=a8;V_j[9]=a9;V_i[10]=a10;V_j[11]=a11;V_j[12]=a12;V_j[13]=a13;V_s[14]=a14;V_l[15]=a15;V_j[16]=a16;ret_l(16)}
/* 100:iciilppdffscl{cs}j */ i f100(c a1,i a2,i a3,l a4,p a5,p a6,d a7,f a8,f a9,s a10,c a11,l a12,struct A167 a13,j a14){V_c[1]=a1;V_i[2]=a2;V_i[3]=a3;V_l[4]=a4;V_p[5]=a5;V_p[6]=a6;V_d[7]=a7;V_f[8]=a8;V_f[9]=a9;V_s[10]=a10;V_c[11]=a11;V_l[12]=a12;f_cpA167(V_a[13],&a13);V_j[14]=a14;ret_i(14)}
/* 101:isjfi{jifci{j{sipisl}ddp}{{jljfiijflcff}pc{dl}dplfjisiccppjs{pplcfcdpcipcjicsldsf}ld}}is{p}jfpj{d{{fjpdcpidlscdjsf}fpjiss{cpii}dspcdjcipdfd{lc}ccfpl{dpdds}fj}jppji}jps */ i f101(s a1,j a2,f a3,i a4,struct A218 a5,i a6,s a7,struct A119 a8,j a9,f a10,p a11,j a12,struct A224 a13,j a14,p a15,s a16){V_s[1]=a1;V_j[2]=a2;V_f[3]=a3;V_i[4]=a4;f_cpA218(V_a[5],&a5);V_i[6]=a6;V_s[7]=a7;f_cpA119(V_a[8],&a8);V_j[9]=a9;V_f[10]=a10;V_p[11]=a11;V_j[12]=a12;f_cpA224(V_a[13],&a13);V_j[14]=a14;V_p[15]=a15;V_s[16]=a16;ret_i(16)}
/* 102:{fji{idddcljijllslfdljjcjifcpffpfs}} */ struct A226 f102(){ret_a(0,struct A226)}
/* 103:sjlfdc{iid{jjfssjdc}f}{ji}dp{cccpiiicppdddsplspsslclf}ipfjf */ s f103(j a1,l a2,f a3,d a4,c a5,struct A228 a6,struct A229 a7,d a8,p a9,struct A230 a10,i a11,p a12,f a13,j a14,f a15){V_j[1]=a1;V_l[2]=a2;V_f[3]=a3;V_d[4]=a4;V_c[5]=a5;f_cpA228(V_a[6],&a6);f_cpA229(V_a[7],&a7);V_d[8]=a8;V_p[9]=a9;f_cpA230(V_a[10],&a10);V_i[11]=a11;V_p[12]=a12;V_f[13]=a13;V_j[14]=a14;V_f[15]=a15;ret_s(15)}
/* 104:pfilfjl{fcipl{jd{jpfjpc}jfpf}csffpccc{{f}silcfs}}dipfdill{cdjdfpcsffippcsdid} */ p f104(f a1,i a2,l a3,f a4,j a5,l a6,struct A234 a7,d a8,i a9,p a10,f a11,d a12,i a13,l a14,l a15,struct A235 a16){V_f[1]=a1;V_i[2]=a2;V_l[3]=a3;V_f[4]=a4;V_j[5]=a5;V_l[6]=a6;f_cpA234(V_a[7],&a7);V_d[8]=a8;V_i[9]=a9;V_p[10]=a10;V_f[11]=a11;V_d[12]=a12;V_i[13]=a13;V_l[14]=a14;V_l[15]=a15;f_cpA235(V_a[16],&a16);ret_p(16)}
/* 105:ciffsjd{dif}dspsjl{{pdl}psijfcflijj} */ c f105(i a1,f a2,f a3,s a4,j a5,d a6,struct A236 a7,d a8,s a9,p a10,s a11,j a12,l a13,struct A238 a14){V_i[1]=a1;V_f[2]=a2;V_f[3]=a3;V_s[4]=a4;V_j[5]=a5;V_d[6]=a6;f_cpA236(V_a[7],&a7);V_d[8]=a8;V_s[9]=a9;V_p[10]=a10;V_s[11]=a11;V_j[12]=a12;V_l[13]=a13;f_cpA238(V_a[14],&a14);ret_c(14)}
/* 106:vi{{dplcf}cfl}isdsp{sifscscd}jpd */ v f106(i a1,struct A240 a2,i a3,s a4,d a5,s a6,p a7,struct A241 a8,j a9,p a10,d a11){V_i[1]=a1;f_cpA240(V_a[2],&a2);V_i[3]=a3;V_s[4]=a4;V_d[5]=a5;V_s[6]=a6;V_p[7]=a7;f_cpA241(V_a[8],&a8);V_j[9]=a9;V_p[10]=a10;V_d[11]=a11;ret_v(11)}
/* 107:vldfdfc{lldcc}cscdcc */ v f107(l a1,d a2,f a3,d a4,f a5,c a6,struct A242 a7,c a8,s a9,c a10,d a11,c a12,c a13){V_l[1]=a1;V_d[2]=a2;V_f[3]=a3;V_d[4]=a4;V_f[5]=a5;V_c[6]=a6;f_cpA242(V_a[7],&a7);V_c[8]=a8;V_s[9]=a9;V_c[10]=a10;V_d[11]=a11;V_c[12]=a12;V_c[13]=a13;ret_v(13)}
/* 108:fjd{i}sc */ f f108(j a1,d a2,struct A2 a3,s a4,c a5){V_j[1]=a1;V_d[2]=a2;f_cpA2(V_a[3],&a3);V_s[4]=a4;V_c[5]=a5;ret_f(5)}
/* 109:lfs{jfdpispdis}ffdpcldff */ l f109(f a1,s a2,struct A243 a3,f a4,f a5,d a6,p a7,c a8,l a9,d a10,f a11,f a12){V_f[1]=a1;V_s[2]=a2;f_cpA243(V_a[3],&a3);V_f[4]=a4;V_f[5]=a5;V_d[6]=a6;V_p[7]=a7;V_c[8]=a8;V_l[9]=a9;V_d[10]=a10;V_f[11]=a11;V_f[12]=a12;ret_l(12)}
/* 110:vlddc{cld}pci */ v f110(l a1,d a2,d a3,c a4,struct A244 a5,p a6,c a7,i a8){V_l[1]=a1;V_d[2]=a2;V_d[3]=a3;V_c[4]=a4;f_cpA244(V_a[5],&a5);V_p[6]=a6;V_c[7]=a7;V_i[8]=a8;ret_v(8)}
/* 111:fcsf{lsi{flipdiff}sc{sppicp}sif{s}iiic{dilppcslcjlpcfsiddi}{ds}jsci{jfl}dfjd}{p{jfscjj}isfjcfdsd}cfccij */ f f111(c a1,s a2,f a3,struct A250 a4,struct A252 a5,c a6,f a7,c a8,c a9,i a10,j a11){V_c[1]=a1;V_s[2]=a2;V_f[3]=a3;f_cpA250(V_a[4],&a4);f_cpA252(V_a[5],&a5);V_c[6]=a6;V_f[7]=a7;V_c[8]=a8;V_c[9]=a9;V_i[10]=a10;V_j[11]=a11;ret_f(11)}
/* 112:{l}dj{pclpcpfi{sfpiscildscj}dd}lipcfd */ struct A11 f112(d a1,j a2,struct A254 a3,l a4,i a5,p a6,c a7,f a8,d a9){V_d[1]=a1;V_j[2]=a2;f_cpA254(V_a[3],&a3);V_l[4]=a4;V_i[5]=a5;V_p[6]=a6;V_c[7]=a7;V_f[8]=a8;V_d[9]=a9;ret_a(9,struct A11)}
/* 113:pjll{csjccfsff} */ p f113(j a1,l a2,l a3,struct A255 a4){V_j[1]=a1;V_l[2]=a2;V_l[3]=a3;f_cpA255(V_a[4],&a4);ret_p(4)}
/* 114:cfijjisd{ls}jcslj */ c f114(f a1,i a2,j a3,j a4,i a5,s a6,d a7,struct A256 a8,j a9,c a10,s a11,l a12,j a13){V_f[1]=a1;V_i[2]=a2;V_j[3]=a3;V_j[4]=a4;V_i[5]=a5;V_s[6]=a6;V_d[7]=a7;f_cpA256(V_a[8],&a8);V_j[9]=a9;V_c[10]=a10;V_s[11]=a11;V_l[12]=a12;V_j[13]=a13;ret_c(13)}
/* 115:pdfij{{fsfpdd}j{ildddsssfi}p}cc */ p f115(d a1,f a2,i a3,j a4,struct A259 a5,c a6,c a7){V_d[1]=a1;V_f[2]=a2;V_i[3]=a3;V_j[4]=a4;f_cpA259(V_a[5],&a5);V_c[6]=a6;V_c[7]=a7;ret_p(7)}
/* 116:dd{fcp} */ d f116(d a1,struct A260 a2){V_d[1]=a1;f_cpA260(V_a[2],&a2);ret_d(2)}
/* 117:cpl{jfldicl}cjf{pi{cicfjdsisfc}cdldclscljlfccppf{jfcjilclfisdsipp}p}slclfdjpd */ c f117(p a1,l a2,struct A261 a3,c a4,j a5,f a6,struct A264 a7,s a8,l a9,c a10,l a11,f a12,d a13,j a14,p a15,d a16){V_p[1]=a1;V_l[2]=a2;f_cpA261(V_a[3],&a3);V_c[4]=a4;V_j[5]=a5;V_f[6]=a6;f_cpA264(V_a[7],&a7);V_s[8]=a8;V_l[9]=a9;V_c[10]=a10;V_l[11]=a11;V_f[12]=a12;V_d[13]=a13;V_j[14]=a14;V_p[15]=a15;V_d[16]=a16;ret_c(16)}
/* 118:pcjfjjfliilpdi{jl}l */ p f118(c a1,j a2,f a3,j a4,j a5,f a6,l a7,i a8,i a9,l a10,p a11,d a12,i a13,struct A265 a14,l a15){V_c[1]=a1;V_j[2]=a2;V_f[3]=a3;V_j[4]=a4;V_j[5]=a5;V_f[6]=a6;V_l[7]=a7;V_i[8]=a8;V_i[9]=a9;V_l[10]=a10;V_p[11]=a11;V_d[12]=a12;V_i[13]=a13;f_cpA265(V_a[14],&a14);V_l[15]=a15;ret_p(15)}
/* 119:ifl{jijis}i */ i f119(f a1,l a2,struct A266 a3,i a4){V_f[1]=a1;V_l[2]=a2;f_cpA266(V_a[3],&a3);V_i[4]=a4;ret_i(4)}
/* 120:{dspiflp} */ struct A267 f120(){ret_a(0,struct A267)}
/* 121:s{plijdllplsfs}d */ s f121(struct A268 a1,d a2){f_cpA268(V_a[1],&a1);V_d[2]=a2;ret_s(2)}
/* 122:cspicjdcfddi{isdip}cs */ c f122(s a1,p a2,i a3,c a4,j a5,d a6,c a7,f a8,d a9,d a10,i a11,struct A269 a12,c a13,s a14){V_s[1]=a1;V_p[2]=a2;V_i[3]=a3;V_c[4]=a4;V_j[5]=a5;V_d[6]=a6;V_c[7]=a7;V_f[8]=a8;V_d[9]=a9;V_d[10]=a10;V_i[11]=a11;f_cpA269(V_a[12],&a12);V_c[13]=a13;V_s[14]=a14;ret_c(14)}
/* 123:{lfjld}pfpcsis */ struct A270 f123(p a1,f a2,p a3,c a4,s a5,i a6,s a7){V_p[1]=a1;V_f[2]=a2;V_p[3]=a3;V_c[4]=a4;V_s[5]=a5;V_i[6]=a6;V_s[7]=a7;ret_a(7,struct A270)}
/* 124:lifjifdli{p} */ l f124(i a1,f a2,j a3,i a4,f a5,d a6,l a7,i a8,struct A119 a9){V_i[1]=a1;V_f[2]=a2;V_j[3]=a3;V_i[4]=a4;V_f[5]=a5;V_d[6]=a6;V_l[7]=a7;V_i[8]=a8;f_cpA119(V_a[9],&a9);ret_l(9)}
/* 125:fl{i{jllcdfdfis}p{siipjpjclc}{ilpfcsddflcdlpfpjjifjjdjs}sfl{ll}iid{ddfsjjfsicll}s{isljciipfi}}fddfilj{fdjcpdc} */ f f125(l a1,struct A277 a2,f a3,d a4,d a5,f a6,i a7,l a8,j a9,struct A278 a10){V_l[1]=a1;f_cpA277(V_a[2],&a2);V_f[3]=a3;V_d[4]=a4;V_d[5]=a5;V_f[6]=a6;V_i[7]=a7;V_l[8]=a8;V_j[9]=a9;f_cpA278(V_a[10],&a10);ret_f(10)}
/* 126:lsl{di}jpdccfs */ l f126(s a1,l a2,struct A51 a3,j a4,p a5,d a6,c a7,c a8,f a9,s a10){V_s[1]=a1;V_l[2]=a2;f_cpA51(V_a[3],&a3);V_j[4]=a4;V_p[5]=a5;V_d[6]=a6;V_c[7]=a7;V_c[8]=a8;V_f[9]=a9;V_s[10]=a10;ret_l(10)}
/* 127:{dpi}ls */ struct A279 f127(l a1,s a2){V_l[1]=a1;V_s[2]=a2;ret_a(2,struct A279)}
/* 128:ci{fdlfpijsiilccsi}l */ c f128(i a1,struct A280 a2,l a3){V_i[1]=a1;f_cpA280(V_a[2],&a2);V_l[3]=a3;ret_c(3)}
/* 129:lddfdipfsjpic{dcdi}l */ l f129(d a1,d a2,f a3,d a4,i a5,p a6,f a7,s a8,j a9,p a10,i a11,c a12,struct A281 a13,l a14){V_d[1]=a1;V_d[2]=a2;V_f[3]=a3;V_d[4]=a4;V_i[5]=a5;V_p[6]=a6;V_f[7]=a7;V_s[8]=a8;V_j[9]=a9;V_p[10]=a10;V_i[11]=a11;V_c[12]=a12;f_cpA281(V_a[13],&a13);V_l[14]=a14;ret_l(14)}
/* 130:ld{djpspljijjffs}dcciilclc */ l f130(d a1,struct A282 a2,d a3,c a4,c a5,i a6,i a7,l a8,c a9,l a10,c a11){V_d[1]=a1;f_cpA282(V_a[2],&a2);V_d[3]=a3;V_c[4]=a4;V_c[5]=a5;V_i[6]=a6;V_i[7]=a7;V_l[8]=a8;V_c[9]=a9;V_l[10]=a10;V_c[11]=a11;ret_l(11)}
/* 131:p{fclcdcsdidjssdl}icf */ p f131(struct A283 a1,i a2,c a3,f a4){f_cpA283(V_a[1],&a1);V_i[2]=a2;V_c[3]=a3;V_f[4]=a4;ret_p(4)}
/* 132:{sscisd}fippjdisd */ struct A284 f132(f a1,i a2,p a3,p a4,j a5,d a6,i a7,s a8,d a9){V_f[1]=a1;V_i[2]=a2;V_p[3]=a3;V_p[4]=a4;V_j[5]=a5;V_d[6]=a6;V_i[7]=a7;V_s[8]=a8;V_d[9]=a9;ret_a(9,struct A284)}
/* 133:illidfcdflp{p{pd}ldiiiddi} */ i f133(l a1,l a2,i a3,d a4,f a5,c a6,d a7,f a8,l a9,p a10,struct A286 a11){V_l[1]=a1;V_l[2]=a2;V_i[3]=a3;V_d[4]=a4;V_f[5]=a5;V_c[6]=a6;V_d[7]=a7;V_f[8]=a8;V_l[9]=a9;V_p[10]=a10;f_cpA286(V_a[11],&a11);ret_i(11)}
/* 134:{ji}icd{d}fp{jfsiijld{pfp}{lsspl{liissldljpd}dcscl}} */ struct A229 f134(i a1,c a2,d a3,struct A33 a4,f a5,p a6,struct A290 a7){V_i[1]=a1;V_c[2]=a2;V_d[3]=a3;f_cpA33(V_a[4],&a4);V_f[5]=a5;V_p[6]=a6;f_cpA290(V_a[7],&a7);ret_a(7,struct A229)}
/* 135:{fc} */ struct A153 f135(){ret_a(0,struct A153)}
/* 136:llj{pl}p{cddciicsfsfpdfjssspsld}fj */ l f136(l a1,j a2,struct A291 a3,p a4,struct A292 a5,f a6,j a7){V_l[1]=a1;V_j[2]=a2;f_cpA291(V_a[3],&a3);V_p[4]=a4;f_cpA292(V_a[5],&a5);V_f[6]=a6;V_j[7]=a7;ret_l(7)}
/* 137:iisfidfjcpss{{pfdj}}ps */ i f137(i a1,s a2,f a3,i a4,d a5,f a6,j a7,c a8,p a9,s a10,s a11,struct A294 a12,p a13,s a14){V_i[1]=a1;V_s[2]=a2;V_f[3]=a3;V_i[4]=a4;V_d[5]=a5;V_f[6]=a6;V_j[7]=a7;V_c[8]=a8;V_p[9]=a9;V_s[10]=a10;V_s[11]=a11;f_cpA294(V_a[12],&a12);V_p[13]=a13;V_s[14]=a14;ret_i(14)}
/* 138:c{d}{sdsisjjpfcicsdjfcplccj{ijfdcfpcdjscpplcspisfcliccdssc}jjfcljfps}flpj */ c f138(struct A33 a1,struct A296 a2,f a3,l a4,p a5,j a6){f_cpA33(V_a[1],&a1);f_cpA296(V_a[2],&a2);V_f[3]=a3;V_l[4]=a4;V_p[5]=a5;V_j[6]=a6;ret_c(6)}
/* 139:i{ccjscpcdp{lipsc{psl}j{fddicpscfslds}d}lpjdspdcc}ljdclcidlf{did} */ i f139(struct A300 a1,l a2,j a3,d a4,c a5,l a6,c a7,i a8,d a9,l a10,f a11,struct A301 a12){f_cpA300(V_a[1],&a1);V_l[2]=a2;V_j[3]=a3;V_d[4]=a4;V_c[5]=a5;V_l[6]=a6;V_c[7]=a7;V_i[8]=a8;V_d[9]=a9;V_l[10]=a10;V_f[11]=a11;f_cpA301(V_a[12],&a12);ret_i(12)}
/* 140:ds{sfjjdcppcffjljfdjsl}{ccsjs}icffcdscd */ d f140(s a1,struct A302 a2,struct A303 a3,i a4,c a5,f a6,f a7,c a8,d a9,s a10,c a11,d a12){V_s[1]=a1;f_cpA302(V_a[2],&a2);f_cpA303(V_a[3],&a3);V_i[4]=a4;V_c[5]=a5;V_f[6]=a6;V_f[7]=a7;V_c[8]=a8;V_d[9]=a9;V_s[10]=a10;V_c[11]=a11;V_d[12]=a12;ret_d(12)}
/* 141:ijscj{ifsjsfpi} */ i f141(j a1,s a2,c a3,j a4,struct A304 a5){V_j[1]=a1;V_s[2]=a2;V_c[3]=a3;V_j[4]=a4;f_cpA304(V_a[5],&a5);ret_i(5)}
/* 142:s{i} */ s f142(struct A2 a1){f_cpA2(V_a[1],&a1);ret_s(1)}
/* 143:flcicsscjccps{j{sccf}sdip{lfppdficlillccpisjplsdpilpjidcipfiicjdjdilddf}cili} */ f f143(l a1,c a2,i a3,c a4,s a5,s a6,c a7,j a8,c a9,c a10,p a11,s a12,struct A307 a13){V_l[1]=a1;V_c[2]=a2;V_i[3]=a3;V_c[4]=a4;V_s[5]=a5;V_s[6]=a6;V_c[7]=a7;V_j[8]=a8;V_c[9]=a9;V_c[10]=a10;V_p[11]=a11;V_s[12]=a12;f_cpA307(V_a[13],&a13);ret_f(13)}
/* 144:jljdp{ld{lsijijjic}iljljc{ilcpi{idfcfcdlp}d{ssilsifppc}p}sccdi}cff{isc}jscsfsd */ j f144(l a1,j a2,d a3,p a4,struct A312 a5,c a6,f a7,f a8,struct A313 a9,j a10,s a11,c a12,s a13,f a14,s a15,d a16){V_l[1]=a1;V_j[2]=a2;V_d[3]=a3;V_p[4]=a4;f_cpA312(V_a[5],&a5);V_c[6]=a6;V_f[7]=a7;V_f[8]=a8;f_cpA313(V_a[9],&a9);V_j[10]=a10;V_s[11]=a11;V_c[12]=a12;V_s[13]=a13;V_f[14]=a14;V_s[15]=a15;V_d[16]=a16;ret_j(16)}
/* 145:jl{jscp}icldjjc */ j f145(l a1,struct A314 a2,i a3,c a4,l a5,d a6,j a7,j a8,c a9){V_l[1]=a1;f_cpA314(V_a[2],&a2);V_i[3]=a3;V_c[4]=a4;V_l[5]=a5;V_d[6]=a6;V_j[7]=a7;V_j[8]=a8;V_c[9]=a9;ret_j(9)}
/* 146:isplppfl{ddj}dplijdi */ i f146(s a1,p a2,l a3,p a4,p a5,f a6,l a7,struct A315 a8,d a9,p a10,l a11,i a12,j a13,d a14,i a15){V_s[1]=a1;V_p[2]=a2;V_l[3]=a3;V_p[4]=a4;V_p[5]=a5;V_f[6]=a6;V_l[7]=a7;f_cpA315(V_a[8],&a8);V_d[9]=a9;V_p[10]=a10;V_l[11]=a11;V_i[12]=a12;V_j[13]=a13;V_d[14]=a14;V_i[15]=a15;ret_i(15)}
/* 147:p{jcsppljjisfs{pfdcf}pcljpff{jlfdf}islppffs{pdpidiijidfdljfddipl}pdscifd}{pps{ilcpfdilsfcjjljcplcsdd}jjlpsd}sfp */ p f147(struct A319 a1,struct A321 a2,s a3,f a4,p a5){f_cpA319(V_a[1],&a1);f_cpA321(V_a[2],&a2);V_s[3]=a3;V_f[4]=a4;V_p[5]=a5;ret_p(5)}
/* 148:j{i} */ j f148(struct A2 a1){f_cpA2(V_a[1],&a1);ret_j(1)}
/* 149:s{cl}sssffldl */ s f149(struct A150 a1,s a2,s a3,s a4,f a5,f a6,l a7,d a8,l a9){f_cpA150(V_a[1],&a1);V_s[2]=a2;V_s[3]=a3;V_s[4]=a4;V_f[5]=a5;V_f[6]=a6;V_l[7]=a7;V_d[8]=a8;V_l[9]=a9;ret_s(9)}
/* 150:cijp{jsdffp}ipf{s{lfcp{fsjflicp}{iplifsjdcj}{dp}jlpiidp{sdffd}iiic{ciiipdsjjcfdfcjl}lids{pcsdjifjpsj}}ficjcficcf}ld{d}ci */ c f150(i a1,j a2,p a3,struct A322 a4,i a5,p a6,f a7,struct A330 a8,l a9,d a10,struct A33 a11,c a12,i a13){V_i[1]=a1;V_j[2]=a2;V_p[3]=a3;f_cpA322(V_a[4],&a4);V_i[5]=a5;V_p[6]=a6;V_f[7]=a7;f_cpA330(V_a[8],&a8);V_l[9]=a9;V_d[10]=a10;f_cpA33(V_a[11],&a11);V_c[12]=a12;V_i[13]=a13;ret_c(13)}
/* 151:dp{ppff}dijd */ d f151(p a1,struct A331 a2,d a3,i a4,j a5,d a6){V_p[1]=a1;f_cpA331(V_a[2],&a2);V_d[3]=a3;V_i[4]=a4;V_j[5]=a5;V_d[6]=a6;ret_d(6)}
/* 152:l{jjfcsjllp}isjijdsd{fsc}dsl */ l f152(struct A332 a1,i a2,s a3,j a4,i a5,j a6,d a7,s a8,d a9,struct A333 a10,d a11,s a12,l a13){f_cpA332(V_a[1],&a1);V_i[2]=a2;V_s[3]=a3;V_j[4]=a4;V_i[5]=a5;V_j[6]=a6;V_d[7]=a7;V_s[8]=a8;V_d[9]=a9;f_cpA333(V_a[10],&a10);V_d[11]=a11;V_s[12]=a12;V_l[13]=a13;ret_l(13)}
/* 153:pd{s{iij}jf} */ p f153(d a1,struct A335 a2){V_d[1]=a1;f_cpA335(V_a[2],&a2);ret_p(2)}
/* 154:pli{djllicjpfissjslicd}cf */ p f154(l a1,i a2,struct A336 a3,c a4,f a5){V_l[1]=a1;V_i[2]=a2;f_cpA336(V_a[3],&a3);V_c[4]=a4;V_f[5]=a5;ret_p(5)}
/* 155:plcplpps{icfpcjdcc}ljjflcc{l} */ p f155(l a1,c a2,p a3,l a4,p a5,p a6,s a7,struct A337 a8,l a9,j a10,j a11,f a12,l a13,c a14,c a15,struct A11 a16){V_l[1]=a1;V_c[2]=a2;V_p[3]=a3;V_l[4]=a4;V_p[5]=a5;V_p[6]=a6;V_s[7]=a7;f_cpA337(V_a[8],&a8);V_l[9]=a9;V_j[10]=a10;V_j[11]=a11;V_f[12]=a12;V_l[13]=a13;V_c[14]=a14;V_c[15]=a15;f_cpA11(V_a[16],&a16);ret_p(16)}
/* 156:ps{pcpdc{dpsllpp}idl{dsljcp}pf}llplcpls */ p f156(s a1,struct A340 a2,l a3,l a4,p a5,l a6,c a7,p a8,l a9,s a10){V_s[1]=a1;f_cpA340(V_a[2],&a2);V_l[3]=a3;V_l[4]=a4;V_p[5]=a5;V_l[6]=a6;V_c[7]=a7;V_p[8]=a8;V_l[9]=a9;V_s[10]=a10;ret_p(10)}
/* 157:{if}ficssd */ struct A341 f157(f a1,i a2,c a3,s a4,s a5,d a6){V_f[1]=a1;V_i[2]=a2;V_c[3]=a3;V_s[4]=a4;V_s[5]=a5;V_d[6]=a6;ret_a(6,struct A341)}
/* 158:scj{s}ljijpjscpjdid */ s f158(c a1,j a2,struct A27 a3,l a4,j a5,i a6,j a7,p a8,j a9,s a10,c a11,p a12,j a13,d a14,i a15,d a16){V_c[1]=a1;V_j[2]=a2;f_cpA27(V_a[3],&a3);V_l[4]=a4;V_j[5]=a5;V_i[6]=a6;V_j[7]=a7;V_p[8]=a8;V_j[9]=a9;V_s[10]=a10;V_c[11]=a11;V_p[12]=a12;V_j[13]=a13;V_d[14]=a14;V_i[15]=a15;V_d[16]=a16;ret_s(16)}
/* 159:i{lpjslf} */ i f159(struct A342 a1){f_cpA342(V_a[1],&a1);ret_i(1)}
/* 160:ssipd{fp} */ s f160(s a1,i a2,p a3,d a4,struct A343 a5){V_s[1]=a1;V_i[2]=a2;V_p[3]=a3;V_d[4]=a4;f_cpA343(V_a[5],&a5);ret_s(5)}
/* 161:icdcld{jdfpfill{i}jcpp}clpifpl */ i f161(c a1,d a2,c a3,l a4,d a5,struct A344 a6,c a7,l a8,p a9,i a10,f a11,p a12,l a13){V_c[1]=a1;V_d[2]=a2;V_c[3]=a3;V_l[4]=a4;V_d[5]=a5;f_cpA344(V_a[6],&a6);V_c[7]=a7;V_l[8]=a8;V_p[9]=a9;V_i[10]=a10;V_f[11]=a11;V_p[12]=a12;V_l[13]=a13;ret_i(13)}
/* 162:fiffisjcfccfdl{cpfjdi} */ f f162(i a1,f a2,f a3,i a4,s a5,j a6,c a7,f a8,c a9,c a10,f a11,d a12,l a13,struct A345 a14){V_i[1]=a1;V_f[2]=a2;V_f[3]=a3;V_i[4]=a4;V_s[5]=a5;V_j[6]=a6;V_c[7]=a7;V_f[8]=a8;V_c[9]=a9;V_c[10]=a10;V_f[11]=a11;V_d[12]=a12;V_l[13]=a13;f_cpA345(V_a[14],&a14);ret_f(14)}
/* 163:d{p}dlsdip */ d f163(struct A119 a1,d a2,l a3,s a4,d a5,i a6,p a7){f_cpA119(V_a[1],&a1);V_d[2]=a2;V_l[3]=a3;V_s[4]=a4;V_d[5]=a5;V_i[6]=a6;V_p[7]=a7;ret_d(7)}
/* 164:cjjl{{fdp}} */ c f164(j a1,j a2,l a3,struct A347 a4){V_j[1]=a1;V_j[2]=a2;V_l[3]=a3;f_cpA347(V_a[4],&a4);ret_c(4)}
/* 165:dc{jlpjdclifl}ds */ d f165(c a1,struct A348 a2,d a3,s a4){V_c[1]=a1;f_cpA348(V_a[2],&a2);V_d[3]=a3;V_s[4]=a4;ret_d(4)}
/* 166:{ijjs}fcspf */ struct A349 f166(f a1,c a2,s a3,p a4,f a5){V_f[1]=a1;V_c[2]=a2;V_s[3]=a3;V_p[4]=a4;V_f[5]=a5;ret_a(5,struct A349)}
/* 167:ppddfdfsi{f}jiic */ p f167(p a1,d a2,d a3,f a4,d a5,f a6,s a7,i a8,struct A28 a9,j a10,i a11,i a12,c a13){V_p[1]=a1;V_d[2]=a2;V_d[3]=a3;V_f[4]=a4;V_d[5]=a5;V_f[6]=a6;V_s[7]=a7;V_i[8]=a8;f_cpA28(V_a[9],&a9);V_j[10]=a10;V_i[11]=a11;V_i[12]=a12;V_c[13]=a13;ret_p(13)}
/* 168:j{ffcip{pfflijiis}dd{ll{dpldldidldlfisjdjd}f}{lfd}sfffslc}sds */ j f168(struct A354 a1,s a2,d a3,s a4){f_cpA354(V_a[1],&a1);V_s[2]=a2;V_d[3]=a3;V_s[4]=a4;ret_j(4)}
/* 169:cc{scdfcdpssidfjpfjdfcicljspljllljpicjjd}lip */ c f169(c a1,struct A355 a2,l a3,i a4,p a5){V_c[1]=a1;f_cpA355(V_a[2],&a2);V_l[3]=a3;V_i[4]=a4;V_p[5]=a5;ret_c(5)}
/* 170:sslcidj{dilifcdcsjplscjj}ji{lp}ddp */ s f170(s a1,l a2,c a3,i a4,d a5,j a6,struct A356 a7,j a8,i a9,struct A357 a10,d a11,d a12,p a13){V_s[1]=a1;V_l[2]=a2;V_c[3]=a3;V_i[4]=a4;V_d[5]=a5;V_j[6]=a6;f_cpA356(V_a[7],&a7);V_j[8]=a8;V_i[9]=a9;f_cpA357(V_a[10],&a10);V_d[11]=a11;V_d[12]=a12;V_p[13]=a13;ret_s(13)}
/* 171:pjcjpp{dclc}sd */ p f171(j a1,c a2,j a3,p a4,p a5,struct A358 a6,s a7,d a8){V_j[1]=a1;V_c[2]=a2;V_j[3]=a3;V_p[4]=a4;V_p[5]=a5;f_cpA358(V_a[6],&a6);V_s[7]=a7;V_d[8]=a8;ret_p(8)}
/* 172:c{is} */ c f172(struct A359 a1){f_cpA359(V_a[1],&a1);ret_c(1)}
/* 173:{dcdf}{ics}{sl}{jclpjifsip}l */ struct A360 f173(struct A361 a1,struct A362 a2,struct A363 a3,l a4){f_cpA361(V_a[1],&a1);f_cpA362(V_a[2],&a2);f_cpA363(V_a[3],&a3);V_l[4]=a4;ret_a(4,struct A360)}
/* 174:{fldjdjpsilcpllsdd} */ struct A364 f174(){ret_a(0,struct A364)}
/* 175:{d}pdpcss */ struct A33 f175(p a1,d a2,p a3,c a4,s a5,s a6){V_p[1]=a1;V_d[2]=a2;V_p[3]=a3;V_c[4]=a4;V_s[5]=a5;V_s[6]=a6;ret_a(6,struct A33)}
/* 176:fcsci{dlslfdpsj{jjfdfcips}pidfjdspc}ijiscd{slplcdlp}sij{sffp} */ f f176(c a1,s a2,c a3,i a4,struct A366 a5,i a6,j a7,i a8,s a9,c a10,d a11,struct A367 a12,s a13,i a14,j a15,struct A368 a16){V_c[1]=a1;V_s[2]=a2;V_c[3]=a3;V_i[4]=a4;f_cpA366(V_a[5],&a5);V_i[6]=a6;V_j[7]=a7;V_i[8]=a8;V_s[9]=a9;V_c[10]=a10;V_d[11]=a11;f_cpA367(V_a[12],&a12);V_s[13]=a13;V_i[14]=a14;V_j[15]=a15;f_cpA368(V_a[16],&a16);ret_f(16)}
/* 177:jcps{ifpdcj}jil{jf{cjl}{ipsjdcdcfiddpdcp}{cffp}ijcpslp}fs{d} */ j f177(c a1,p a2,s a3,struct A369 a4,j a5,i a6,l a7,struct A373 a8,f a9,s a10,struct A33 a11){V_c[1]=a1;V_p[2]=a2;V_s[3]=a3;f_cpA369(V_a[4],&a4);V_j[5]=a5;V_i[6]=a6;V_l[7]=a7;f_cpA373(V_a[8],&a8);V_f[9]=a9;V_s[10]=a10;f_cpA33(V_a[11],&a11);ret_j(11)}
/* 178:{jlscflf} */ struct A374 f178(){ret_a(0,struct A374)}
/* 179:dl{ss{fp}ic}f{lf{{s}{lld}ipjljdppfsspjspc}jcl}{sccipijpidjdi}{pipcjljj{jispcipjdjpffsjlfflpccfcsclp}{dsldj}scjfdcdfliicd{sdfdjjis}f{ifcj}fccldld}l */ d f179(l a1,struct A375 a2,f a3,struct A378 a4,struct A379 a5,struct A384 a6,l a7){V_l[1]=a1;f_cpA375(V_a[2],&a2);V_f[3]=a3;f_cpA378(V_a[4],&a4);f_cpA379(V_a[5],&a5);f_cpA384(V_a[6],&a6);V_l[7]=a7;ret_d(7)}
/* 180:clcifscj{cscpss}lpjdd */ c f180(l a1,c a2,i a3,f a4,s a5,c a6,j a7,struct A385 a8,l a9,p a10,j a11,d a12,d a13){V_l[1]=a1;V_c[2]=a2;V_i[3]=a3;V_f[4]=a4;V_s[5]=a5;V_c[6]=a6;V_j[7]=a7;f_cpA385(V_a[8],&a8);V_l[9]=a9;V_p[10]=a10;V_j[11]=a11;V_d[12]=a12;V_d[13]=a13;ret_c(13)}
/* 181:ssfps{pd{sjsljcffipfpfijlslpdpcffslidscpiijpflssslcl}s}plpdjiid */ s f181(s a1,f a2,p a3,s a4,struct A387 a5,p a6,l a7,p a8,d a9,j a10,i a11,i a12,d a13){V_s[1]=a1;V_f[2]=a2;V_p[3]=a3;V_s[4]=a4;f_cpA387(V_a[5],&a5);V_p[6]=a6;V_l[7]=a7;V_p[8]=a8;V_d[9]=a9;V_j[10]=a10;V_i[11]=a11;V_i[12]=a12;V_d[13]=a13;ret_s(13)}
/* 182:ijdcf{discspscpjdfcj}jcci */ i f182(j a1,d a2,c a3,f a4,struct A388 a5,j a6,c a7,c a8,i a9){V_j[1]=a1;V_d[2]=a2;V_c[3]=a3;V_f[4]=a4;f_cpA388(V_a[5],&a5);V_j[6]=a6;V_c[7]=a7;V_c[8]=a8;V_i[9]=a9;ret_i(9)}
/* 183:{jcpfsfljsflf}ifiiplcp */ struct A389 f183(i a1,f a2,i a3,i a4,p a5,l a6,c a7,p a8){V_i[1]=a1;V_f[2]=a2;V_i[3]=a3;V_i[4]=a4;V_p[5]=a5;V_l[6]=a6;V_c[7]=a7;V_p[8]=a8;ret_a(8,struct A389)}
/* 184:lid{dcp}pfddjd */ l f184(i a1,d a2,struct A390 a3,p a4,f a5,d a6,d a7,j a8,d a9){V_i[1]=a1;V_d[2]=a2;f_cpA390(V_a[3],&a3);V_p[4]=a4;V_f[5]=a5;V_d[6]=a6;V_d[7]=a7;V_j[8]=a8;V_d[9]=a9;ret_l(9)}
/* 185:p{fss{ldfjisj}fd}fspddfl */ p f185(struct A392 a1,f a2,s a3,p a4,d a5,d a6,f a7,l a8){f_cpA392(V_a[1],&a1);V_f[2]=a2;V_s[3]=a3;V_p[4]=a4;V_d[5]=a5;V_d[6]=a6;V_f[7]=a7;V_l[8]=a8;ret_p(8)}
/* 186:{sfplfflfc}cs{djid}ifiilcsdc{lic} */ struct A393 f186(c a1,s a2,struct A394 a3,i a4,f a5,i a6,i a7,l a8,c a9,s a10,d a11,c a12,struct A395 a13){V_c[1]=a1;V_s[2]=a2;f_cpA394(V_a[3],&a3);V_i[4]=a4;V_f[5]=a5;V_i[6]=a6;V_i[7]=a7;V_l[8]=a8;V_c[9]=a9;V_s[10]=a10;V_d[11]=a11;V_c[12]=a12;f_cpA395(V_a[13],&a13);ret_a(13,struct A393)}
/* 187:{cclci}dd */ struct A396 f187(d a1,d a2){V_d[1]=a1;V_d[2]=a2;ret_a(2,struct A396)}
/* 188:{pp}pdd */ struct A397 f188(p a1,d a2,d a3){V_p[1]=a1;V_d[2]=a2;V_d[3]=a3;ret_a(3,struct A397)}
/* 189:s{idfpi}lcpplfjijjsjpds */ s f189(struct A398 a1,l a2,c a3,p a4,p a5,l a6,f a7,j a8,i a9,j a10,j a11,s a12,j a13,p a14,d a15,s a16){f_cpA398(V_a[1],&a1);V_l[2]=a2;V_c[3]=a3;V_p[4]=a4;V_p[5]=a5;V_l[6]=a6;V_f[7]=a7;V_j[8]=a8;V_i[9]=a9;V_j[10]=a10;V_j[11]=a11;V_s[12]=a12;V_j[13]=a13;V_p[14]=a14;V_d[15]=a15;V_s[16]=a16;ret_s(16)}
/* 190:{sfjl} */ struct A399 f190(){ret_a(0,struct A399)}
/* 191:s{d} */ s f191(struct A33 a1){f_cpA33(V_a[1],&a1);ret_s(1)}
/* 192:f{si}{fpldi}dfc{jcfssls}cdfdscs */ f f192(struct A400 a1,struct A401 a2,d a3,f a4,c a5,struct A402 a6,c a7,d a8,f a9,d a10,s a11,c a12,s a13){f_cpA400(V_a[1],&a1);f_cpA401(V_a[2],&a2);V_d[3]=a3;V_f[4]=a4;V_c[5]=a5;f_cpA402(V_a[6],&a6);V_c[7]=a7;V_d[8]=a8;V_f[9]=a9;V_d[10]=a10;V_s[11]=a11;V_c[12]=a12;V_s[13]=a13;ret_f(13)}
/* 193:cccfdd{dicsjsdj}ppj */ c f193(c a1,c a2,f a3,d a4,d a5,struct A403 a6,p a7,p a8,j a9){V_c[1]=a1;V_c[2]=a2;V_f[3]=a3;V_d[4]=a4;V_d[5]=a5;f_cpA403(V_a[6],&a6);V_p[7]=a7;V_p[8]=a8;V_j[9]=a9;ret_c(9)}
/* 194:difs{{scd{jpdffjdfspifll}ifsjippslj}flfldsij{pcdiiil{d}dcf}l{pc}}jpp */ d f194(i a1,f a2,s a3,struct A408 a4,j a5,p a6,p a7){V_i[1]=a1;V_f[2]=a2;V_s[3]=a3;f_cpA408(V_a[4],&a4);V_j[5]=a5;V_p[6]=a6;V_p[7]=a7;ret_d(7)}
/* 195:si{idid}{pljljijid{{fpclpsfdf}}lciij}idpsis */ s f195(i a1,struct A409 a2,struct A412 a3,i a4,d a5,p a6,s a7,i a8,s a9){V_i[1]=a1;f_cpA409(V_a[2],&a2);f_cpA412(V_a[3],&a3);V_i[4]=a4;V_d[5]=a5;V_p[6]=a6;V_s[7]=a7;V_i[8]=a8;V_s[9]=a9;ret_s(9)}
/* 196:v{iji}s{j}l */ v f196(struct A413 a1,s a2,struct A96 a3,l a4){f_cpA413(V_a[1],&a1);V_s[2]=a2;f_cpA96(V_a[3],&a3);V_l[4]=a4;ret_v(4)}
/* 197:s{i}ljj */ s f197(struct A2 a1,l a2,j a3,j a4){f_cpA2(V_a[1],&a1);V_l[2]=a2;V_j[3]=a3;V_j[4]=a4;ret_s(4)}
/* 198:ldpp{dlpdiclpsfp}ldiisl{fllpsicf}il */ l f198(d a1,p a2,p a3,struct A414 a4,l a5,d a6,i a7,i a8,s a9,l a10,struct A415 a11,i a12,l a13){V_d[1]=a1;V_p[2]=a2;V_p[3]=a3;f_cpA414(V_a[4],&a4);V_l[5]=a5;V_d[6]=a6;V_i[7]=a7;V_i[8]=a8;V_s[9]=a9;V_l[10]=a10;f_cpA415(V_a[11],&a11);V_i[12]=a12;V_l[13]=a13;ret_l(13)}
/* 199:dilccjfcpf{i}lslp */ d f199(i a1,l a2,c a3,c a4,j a5,f a6,c a7,p a8,f a9,struct A2 a10,l a11,s a12,l a13,p a14){V_i[1]=a1;V_l[2]=a2;V_c[3]=a3;V_c[4]=a4;V_j[5]=a5;V_f[6]=a6;V_c[7]=a7;V_p[8]=a8;V_f[9]=a9;f_cpA2(V_a[10],&a10);V_l[11]=a11;V_s[12]=a12;V_l[13]=a13;V_p[14]=a14;ret_d(14)}
/* 200:{s{fsi{pipsssjcpi}ls{cdljsdlppjdl}}ddlpccfss}iiscspi{ifiipcccpcssijslclds{djci{jpdsjcfilfipsjfjp}pc}}ddl */ struct A419 f200(i a1,i a2,s a3,c a4,s a5,p a6,i a7,struct A422 a8,d a9,d a10,l a11){V_i[1]=a1;V_i[2]=a2;V_s[3]=a3;V_c[4]=a4;V_s[5]=a5;V_p[6]=a6;V_i[7]=a7;f_cpA422(V_a[8],&a8);V_d[9]=a9;V_d[10]=a10;V_l[11]=a11;ret_a(11,struct A419)}
/* 201:vpsfspccddsdl{llil{dj}fccdlfcpicscl}f */ v f201(p a1,s a2,f a3,s a4,p a5,c a6,c a7,d a8,d a9,s a10,d a11,l a12,struct A424 a13,f a14){V_p[1]=a1;V_s[2]=a2;V_f[3]=a3;V_s[4]=a4;V_p[5]=a5;V_c[6]=a6;V_c[7]=a7;V_d[8]=a8;V_d[9]=a9;V_s[10]=a10;V_d[11]=a11;V_l[12]=a12;f_cpA424(V_a[13],&a13);V_f[14]=a14;ret_v(14)}
/* 202:flpjff{sj} */ f f202(l a1,p a2,j a3,f a4,f a5,struct A425 a6){V_l[1]=a1;V_p[2]=a2;V_j[3]=a3;V_f[4]=a4;V_f[5]=a5;f_cpA425(V_a[6],&a6);ret_f(6)}
/* 203:{sc} */ struct A426 f203(){ret_a(0,struct A426)}
/* 204:{ffipcsii} */ struct A427 f204(){ret_a(0,struct A427)}
/* 205:djfpii{clddpdcc}fi */ d f205(j a1,f a2,p a3,i a4,i a5,struct A428 a6,f a7,i a8){V_j[1]=a1;V_f[2]=a2;V_p[3]=a3;V_i[4]=a4;V_i[5]=a5;f_cpA428(V_a[6],&a6);V_f[7]=a7;V_i[8]=a8;ret_d(8)}
/* 206:pj{ffd}sici{cjpplp}c */ p f206(j a1,struct A429 a2,s a3,i a4,c a5,i a6,struct A430 a7,c a8){V_j[1]=a1;f_cpA429(V_a[2],&a2);V_s[3]=a3;V_i[4]=a4;V_c[5]=a5;V_i[6]=a6;f_cpA430(V_a[7],&a7);V_c[8]=a8;ret_p(8)}
/* 207:{pddd}dp */ struct A431 f207(d a1,p a2){V_d[1]=a1;V_p[2]=a2;ret_a(2,struct A431)}
/* 208:dlilff{p{dfcljpl}sflcc{l{jpf}ppjidscjcdcsijffidid{jpji}idpsdsfcljildisdjjcccj{icffpcpjfsljicldlfss}j}jd}j */ d f208(l a1,i a2,l a3,f a4,f a5,struct A437 a6,j a7){V_l[1]=a1;V_i[2]=a2;V_l[3]=a3;V_f[4]=a4;V_f[5]=a5;f_cpA437(V_a[6],&a6);V_j[7]=a7;ret_d(7)}
/* 209:cjf{pscfpl}ff */ c f209(j a1,f a2,struct A438 a3,f a4,f a5){V_j[1]=a1;V_f[2]=a2;f_cpA438(V_a[3],&a3);V_f[4]=a4;V_f[5]=a5;ret_c(5)}
/* 210:vsjc{spfjdjj}sfpcl */ v f210(s a1,j a2,c a3,struct A439 a4,s a5,f a6,p a7,c a8,l a9){V_s[1]=a1;V_j[2]=a2;V_c[3]=a3;f_cpA439(V_a[4],&a4);V_s[5]=a5;V_f[6]=a6;V_p[7]=a7;V_c[8]=a8;V_l[9]=a9;ret_v(9)}
/* 211:d{i}ssfss{iiildidldjslscpj}fssss */ d f211(struct A2 a1,s a2,s a3,f a4,s a5,s a6,struct A440 a7,f a8,s a9,s a10,s a11,s a12){f_cpA2(V_a[1],&a1);V_s[2]=a2;V_s[3]=a3;V_f[4]=a4;V_s[5]=a5;V_s[6]=a6;f_cpA440(V_a[7],&a7);V_f[8]=a8;V_s[9]=a9;V_s[10]=a10;V_s[11]=a11;V_s[12]=a12;ret_d(12)}
/* 212:i{d}csciis{p}f */ i f212(struct A33 a1,c a2,s a3,c a4,i a5,i a6,s a7,struct A119 a8,f a9){f_cpA33(V_a[1],&a1);V_c[2]=a2;V_s[3]=a3;V_c[4]=a4;V_i[5]=a5;V_i[6]=a6;V_s[7]=a7;f_cpA119(V_a[8],&a8);V_f[9]=a9;ret_i(9)}
/* 213:cps{d{ilijdfjjjpfiddjffi}lfpil{ddiplsldlis}{lffjplsjf}jcp}jd{pis}ci */ c f213(p a1,s a2,struct A444 a3,j a4,d a5,struct A445 a6,c a7,i a8){V_p[1]=a1;V_s[2]=a2;f_cpA444(V_a[3],&a3);V_j[4]=a4;V_d[5]=a5;f_cpA445(V_a[6],&a6);V_c[7]=a7;V_i[8]=a8;ret_c(8)}
/* 214:j{sfspcpclcispdpcifscdsjjd}ddpcjfjf */ j f214(struct A446 a1,d a2,d a3,p a4,c a5,j a6,f a7,j a8,f a9){f_cpA446(V_a[1],&a1);V_d[2]=a2;V_d[3]=a3;V_p[4]=a4;V_c[5]=a5;V_j[6]=a6;V_f[7]=a7;V_j[8]=a8;V_f[9]=a9;ret_j(9)}
/* 215:{jpdc}cdl */ struct A447 f215(c a1,d a2,l a3){V_c[1]=a1;V_d[2]=a2;V_l[3]=a3;ret_a(3,struct A447)}
/* 216:pppjislidjfdcp{ilffsf}{ccfld{jlcfjdss}scpd} */ p f216(p a1,p a2,j a3,i a4,s a5,l a6,i a7,d a8,j a9,f a10,d a11,c a12,p a13,struct A448 a14,struct A450 a15){V_p[1]=a1;V_p[2]=a2;V_j[3]=a3;V_i[4]=a4;V_s[5]=a5;V_l[6]=a6;V_i[7]=a7;V_d[8]=a8;V_j[9]=a9;V_f[10]=a10;V_d[11]=a11;V_c[12]=a12;V_p[13]=a13;f_cpA448(V_a[14],&a14);f_cpA450(V_a[15],&a15);ret_p(15)}
/* 217:dsscssclj{jd}iccsd */ d f217(s a1,s a2,c a3,s a4,s a5,c a6,l a7,j a8,struct A451 a9,i a10,c a11,c a12,s a13,d a14){V_s[1]=a1;V_s[2]=a2;V_c[3]=a3;V_s[4]=a4;V_s[5]=a5;V_c[6]=a6;V_l[7]=a7;V_j[8]=a8;f_cpA451(V_a[9],&a9);V_i[10]=a10;V_c[11]=a11;V_c[12]=a12;V_s[13]=a13;V_d[14]=a14;ret_d(14)}
/* 218:j{jpcsidji}pss */ j f218(struct A452 a1,p a2,s a3,s a4){f_cpA452(V_a[1],&a1);V_p[2]=a2;V_s[3]=a3;V_s[4]=a4;ret_j(4)}
/* 219:sdspf{fd}ccpp{f}dscj */ s f219(d a1,s a2,p a3,f a4,struct A71 a5,c a6,c a7,p a8,p a9,struct A28 a10,d a11,s a12,c a13,j a14){V_d[1]=a1;V_s[2]=a2;V_p[3]=a3;V_f[4]=a4;f_cpA71(V_a[5],&a5);V_c[6]=a6;V_c[7]=a7;V_p[8]=a8;V_p[9]=a9;f_cpA28(V_a[10],&a10);V_d[11]=a11;V_s[12]=a12;V_c[13]=a13;V_j[14]=a14;ret_s(14)}
/* 220:{i}lcspdccpffcjl */ struct A2 f220(l a1,c a2,s a3,p a4,d a5,c a6,c a7,p a8,f a9,f a10,c a11,j a12,l a13){V_l[1]=a1;V_c[2]=a2;V_s[3]=a3;V_p[4]=a4;V_d[5]=a5;V_c[6]=a6;V_c[7]=a7;V_p[8]=a8;V_f[9]=a9;V_f[10]=a10;V_c[11]=a11;V_j[12]=a12;V_l[13]=a13;ret_a(13,struct A2)}
/* 221:lssf{lf}ddpscscp */ l f221(s a1,s a2,f a3,struct A453 a4,d a5,d a6,p a7,s a8,c a9,s a10,c a11,p a12){V_s[1]=a1;V_s[2]=a2;V_f[3]=a3;f_cpA453(V_a[4],&a4);V_d[5]=a5;V_d[6]=a6;V_p[7]=a7;V_s[8]=a8;V_c[9]=a9;V_s[10]=a10;V_c[11]=a11;V_p[12]=a12;ret_l(12)}
/* 222:{fsspdid}li */ struct A454 f222(l a1,i a2){V_l[1]=a1;V_i[2]=a2;ret_a(2,struct A454)}
/* 223:{ilidifsjp}ss */ struct A455 f223(s a1,s a2){V_s[1]=a1;V_s[2]=a2;ret_a(2,struct A455)}
/* 224:{s}fcf{sppffp}fpp{fpdls}lpj{ifjdi}j{jjf} */ struct A27 f224(f a1,c a2,f a3,struct A456 a4,f a5,p a6,p a7,struct A457 a8,l a9,p a10,j a11,struct A458 a12,j a13,struct A459 a14){V_f[1]=a1;V_c[2]=a2;V_f[3]=a3;f_cpA456(V_a[4],&a4);V_f[5]=a5;V_p[6]=a6;V_p[7]=a7;f_cpA457(V_a[8],&a8);V_l[9]=a9;V_p[10]=a10;V_j[11]=a11;f_cpA458(V_a[12],&a12);V_j[13]=a13;f_cpA459(V_a[14],&a14);ret_a(14,struct A27)}
/* 225:scl{sd{dijs}p{c}pc{ssjcfd{p}pfi}}c */ s f225(c a1,l a2,struct A462 a3,c a4){V_c[1]=a1;V_l[2]=a2;f_cpA462(V_a[3],&a3);V_c[4]=a4;ret_s(4)}
/* 226:{dcs} */ struct A463 f226(){ret_a(0,struct A463)}
/* 227:j{sl{ildili}dl{jpc}{jljjcdilffpljdscj}idiildcdisdclsl{iscfdiic}si} */ j f227(struct A468 a1){f_cpA468(V_a[1],&a1);ret_j(1)}
/* 228:vjdsls{fs{s}}dj */ v f228(j a1,d a2,s a3,l a4,s a5,struct A469 a6,d a7,j a8){V_j[1]=a1;V_d[2]=a2;V_s[3]=a3;V_l[4]=a4;V_s[5]=a5;f_cpA469(V_a[6],&a6);V_d[7]=a7;V_j[8]=a8;ret_v(8)}
/* 229:s{si}jicj{jcfldlccii}did{jdcific}idp */ s f229(struct A400 a1,j a2,i a3,c a4,j a5,struct A470 a6,d a7,i a8,d a9,struct A471 a10,i a11,d a12,p a13){f_cpA400(V_a[1],&a1);V_j[2]=a2;V_i[3]=a3;V_c[4]=a4;V_j[5]=a5;f_cpA470(V_a[6],&a6);V_d[7]=a7;V_i[8]=a8;V_d[9]=a9;f_cpA471(V_a[10],&a10);V_i[11]=a11;V_d[12]=a12;V_p[13]=a13;ret_s(13)}
/* 230:cldjpjplp{{d{sjpicsijjccjljldl}}{{lsfj}ji{lfjffpp}}}i */ c f230(l a1,d a2,j a3,p a4,j a5,p a6,l a7,p a8,struct A477 a9,i a10){V_l[1]=a1;V_d[2]=a2;V_j[3]=a3;V_p[4]=a4;V_j[5]=a5;V_p[6]=a6;V_l[7]=a7;V_p[8]=a8;f_cpA477(V_a[9],&a9);V_i[10]=a10;ret_c(10)}
/* 231:vc{lflpidppcjcfddjijicisclfjppjcjjl}dsp */ v f231(c a1,struct A478 a2,d a3,s a4,p a5){V_c[1]=a1;f_cpA478(V_a[2],&a2);V_d[3]=a3;V_s[4]=a4;V_p[5]=a5;ret_v(5)}
/* 232:{ippp{{d}s}}fjsicldljs */ struct A480 f232(f a1,j a2,s a3,i a4,c a5,l a6,d a7,l a8,j a9,s a10){V_f[1]=a1;V_j[2]=a2;V_s[3]=a3;V_i[4]=a4;V_c[5]=a5;V_l[6]=a6;V_d[7]=a7;V_l[8]=a8;V_j[9]=a9;V_s[10]=a10;ret_a(10,struct A480)}
/* 233:ls{jifjlcslcidd}pl{psldl}i */ l f233(s a1,struct A481 a2,p a3,l a4,struct A482 a5,i a6){V_s[1]=a1;f_cpA481(V_a[2],&a2);V_p[3]=a3;V_l[4]=a4;f_cpA482(V_a[5],&a5);V_i[6]=a6;ret_l(6)}
/* 234:cl{pfilsi{lcscifddpcpdlipii}jfjpp{csspijldlffifjd}psssjjcfcjipijdj} */ c f234(l a1,struct A485 a2){V_l[1]=a1;f_cpA485(V_a[2],&a2);ret_c(2)}
/* 235:fdc{iis}sc{d{sdiljpcdcpsdslplfpf}idjcsc{jdsdcfpclicclpjl}}iffplpipij */ f f235(d a1,c a2,struct A486 a3,s a4,c a5,struct A489 a6,i a7,f a8,f a9,p a10,l a11,p a12,i a13,p a14,i a15,j a16){V_d[1]=a1;V_c[2]=a2;f_cpA486(V_a[3],&a3);V_s[4]=a4;V_c[5]=a5;f_cpA489(V_a[6],&a6);V_i[7]=a7;V_f[8]=a8;V_f[9]=a9;V_p[10]=a10;V_l[11]=a11;V_p[12]=a12;V_i[13]=a13;V_p[14]=a14;V_i[15]=a15;V_j[16]=a16;ret_f(16)}
/* 236:vcsls{f}p */ v f236(c a1,s a2,l a3,s a4,struct A28 a5,p a6){V_c[1]=a1;V_s[2]=a2;V_l[3]=a3;V_s[4]=a4;f_cpA28(V_a[5],&a5);V_p[6]=a6;ret_v(6)}
/* 237:vdfspd{dssisdfl}{ldfjdlsicdlljiisjpilllfsjjpjsd}ldjcpjf */ v f237(d a1,f a2,s a3,p a4,d a5,struct A490 a6,struct A491 a7,l a8,d a9,j a10,c a11,p a12,j a13,f a14){V_d[1]=a1;V_f[2]=a2;V_s[3]=a3;V_p[4]=a4;V_d[5]=a5;f_cpA490(V_a[6],&a6);f_cpA491(V_a[7],&a7);V_l[8]=a8;V_d[9]=a9;V_j[10]=a10;V_c[11]=a11;V_p[12]=a12;V_j[13]=a13;V_f[14]=a14;ret_v(14)}
/* 238:jjl{lslddcldlljfcfd}dspplcicccdc */ j f238(j a1,l a2,struct A492 a3,d a4,s a5,p a6,p a7,l a8,c a9,i a10,c a11,c a12,c a13,d a14,c a15){V_j[1]=a1;V_l[2]=a2;f_cpA492(V_a[3],&a3);V_d[4]=a4;V_s[5]=a5;V_p[6]=a6;V_p[7]=a7;V_l[8]=a8;V_c[9]=a9;V_i[10]=a10;V_c[11]=a11;V_c[12]=a12;V_c[13]=a13;V_d[14]=a14;V_c[15]=a15;ret_j(15)}
/* 239:sj{{d{ccpisiillcsfcjjspsld}{dddpfdfi}{ssc}ppcdi}dpi}cl */ s f239(j a1,struct A497 a2,c a3,l a4){V_j[1]=a1;f_cpA497(V_a[2],&a2);V_c[3]=a3;V_l[4]=a4;ret_s(4)}
/* 240:vi{sp}cpi */ v f240(i a1,struct A158 a2,c a3,p a4,i a5){V_i[1]=a1;f_cpA158(V_a[2],&a2);V_c[3]=a3;V_p[4]=a4;V_i[5]=a5;ret_v(5)}
/* 241:plpcpifj{isp{dldplippsippisfjcspjsspd}c}pdfl */ p f241(l a1,p a2,c a3,p a4,i a5,f a6,j a7,struct A499 a8,p a9,d a10,f a11,l a12){V_l[1]=a1;V_p[2]=a2;V_c[3]=a3;V_p[4]=a4;V_i[5]=a5;V_f[6]=a6;V_j[7]=a7;f_cpA499(V_a[8],&a8);V_p[9]=a9;V_d[10]=a10;V_f[11]=a11;V_l[12]=a12;ret_p(12)}
/* 242:f{ijl}jcdcisi{pssppdps}jijcjf */ f f242(struct A500 a1,j a2,c a3,d a4,c a5,i a6,s a7,i a8,struct A501 a9,j a10,i a11,j a12,c a13,j a14,f a15){f_cpA500(V_a[1],&a1);V_j[2]=a2;V_c[3]=a3;V_d[4]=a4;V_c[5]=a5;V_i[6]=a6;V_s[7]=a7;V_i[8]=a8;f_cpA501(V_a[9],&a9);V_j[10]=a10;V_i[11]=a11;V_j[12]=a12;V_c[13]=a13;V_j[14]=a14;V_f[15]=a15;ret_f(15)}
/* 243:c{llsfcflpj} */ c f243(struct A502 a1){f_cpA502(V_a[1],&a1);ret_c(1)}
/* 244:csss{{pddcdcccffilpccsll}lpff}dcdljjisc */ c f244(s a1,s a2,s a3,struct A504 a4,d a5,c a6,d a7,l a8,j a9,j a10,i a11,s a12,c a13){V_s[1]=a1;V_s[2]=a2;V_s[3]=a3;f_cpA504(V_a[4],&a4);V_d[5]=a5;V_c[6]=a6;V_d[7]=a7;V_l[8]=a8;V_j[9]=a9;V_j[10]=a10;V_i[11]=a11;V_s[12]=a12;V_c[13]=a13;ret_c(13)}
/* 245:s{fsjllpjpccd}isfsl */ s f245(struct A505 a1,i a2,s a3,f a4,s a5,l a6){f_cpA505(V_a[1],&a1);V_i[2]=a2;V_s[3]=a3;V_f[4]=a4;V_s[5]=a5;V_l[6]=a6;ret_s(6)}
/* 246:jscf{s}{i{pfllfdfp}{c}ipcdpljsjsjicdp{isisfsdjcj}i}{l}ili */ j f246(s a1,c a2,f a3,struct A27 a4,struct A508 a5,struct A11 a6,i a7,l a8,i a9){V_s[1]=a1;V_c[2]=a2;V_f[3]=a3;f_cpA27(V_a[4],&a4);f_cpA508(V_a[5],&a5);f_cpA11(V_a[6],&a6);V_i[7]=a7;V_l[8]=a8;V_i[9]=a9;ret_j(9)}
/* 247:dljjp{dsdfdlppli}sspljss{ff{llcssdffjc}jipp} */ d f247(l a1,j a2,j a3,p a4,struct A509 a5,s a6,s a7,p a8,l a9,j a10,s a11,s a12,struct A511 a13){V_l[1]=a1;V_j[2]=a2;V_j[3]=a3;V_p[4]=a4;f_cpA509(V_a[5],&a5);V_s[6]=a6;V_s[7]=a7;V_p[8]=a8;V_l[9]=a9;V_j[10]=a10;V_s[11]=a11;V_s[12]=a12;f_cpA511(V_a[13],&a13);ret_d(13)}
/* 248:v{j}p */ v f248(struct A96 a1,p a2){f_cpA96(V_a[1],&a1);V_p[2]=a2;ret_v(2)}
/* 249:lf{lcsdcsdccps{pflfjsc}spd}spfppd{f}cdjijd */ l f249(f a1,struct A513 a2,s a3,p a4,f a5,p a6,p a7,d a8,struct A28 a9,c a10,d a11,j a12,i a13,j a14,d a15){V_f[1]=a1;f_cpA513(V_a[2],&a2);V_s[3]=a3;V_p[4]=a4;V_f[5]=a5;V_p[6]=a6;V_p[7]=a7;V_d[8]=a8;f_cpA28(V_a[9],&a9);V_c[10]=a10;V_d[11]=a11;V_j[12]=a12;V_i[13]=a13;V_j[14]=a14;V_d[15]=a15;ret_l(15)}
/* 250:fifdlfcf{sifdlcf{j}}pfcsflc */ f f250(i a1,f a2,d a3,l a4,f a5,c a6,f a7,struct A514 a8,p a9,f a10,c a11,s a12,f a13,l a14,c a15){V_i[1]=a1;V_f[2]=a2;V_d[3]=a3;V_l[4]=a4;V_f[5]=a5;V_c[6]=a6;V_f[7]=a7;f_cpA514(V_a[8],&a8);V_p[9]=a9;V_f[10]=a10;V_c[11]=a11;V_s[12]=a12;V_f[13]=a13;V_l[14]=a14;V_c[15]=a15;ret_f(15)}
/* 251:spsdf{ds}ii */ s f251(p a1,s a2,d a3,f a4,struct A248 a5,i a6,i a7){V_p[1]=a1;V_s[2]=a2;V_d[3]=a3;V_f[4]=a4;f_cpA248(V_a[5],&a5);V_i[6]=a6;V_i[7]=a7;ret_s(7)}
/* 252:fi{dfpf}{dsispjsl}sl{cl} */ f f252(i a1,struct A515 a2,struct A516 a3,s a4,l a5,struct A150 a6){V_i[1]=a1;f_cpA515(V_a[2],&a2);f_cpA516(V_a[3],&a3);V_s[4]=a4;V_l[5]=a5;f_cpA150(V_a[6],&a6);ret_f(6)}
/* 253:{cdscfp}{d}{ls}sd */ struct A517 f253(struct A33 a1,struct A256 a2,s a3,d a4){f_cpA33(V_a[1],&a1);f_cpA256(V_a[2],&a2);V_s[3]=a3;V_d[4]=a4;ret_a(4,struct A517)}
/* 254:vj{jicpid}ccsjpjss */ v f254(j a1,struct A518 a2,c a3,c a4,s a5,j a6,p a7,j a8,s a9,s a10){V_j[1]=a1;f_cpA518(V_a[2],&a2);V_c[3]=a3;V_c[4]=a4;V_s[5]=a5;V_j[6]=a6;V_p[7]=a7;V_j[8]=a8;V_s[9]=a9;V_s[10]=a10;ret_v(10)}
/* 255:vdippsps{fpjplp}f{p{cpp}djpi{jli}pjllic}fl */ v f255(d a1,i a2,p a3,p a4,s a5,p a6,s a7,struct A519 a8,f a9,struct A522 a10,f a11,l a12){V_d[1]=a1;V_i[2]=a2;V_p[3]=a3;V_p[4]=a4;V_s[5]=a5;V_p[6]=a6;V_s[7]=a7;f_cpA519(V_a[8],&a8);V_f[9]=a9;f_cpA522(V_a[10],&a10);V_f[11]=a11;V_l[12]=a12;ret_v(12)}
/* 256:pccd{fllpiddcff{cfispdjfcjidldfp}l{f}jisc}sfdj */ p f256(c a1,c a2,d a3,struct A524 a4,s a5,f a6,d a7,j a8){V_c[1]=a1;V_c[2]=a2;V_d[3]=a3;f_cpA524(V_a[4],&a4);V_s[5]=a5;V_f[6]=a6;V_d[7]=a7;V_j[8]=a8;ret_p(8)}
/* 257:{i}j{fcspsjpfpididl}sdpj{pidjjjlpi}fpsspjcs */ struct A2 f257(j a1,struct A525 a2,s a3,d a4,p a5,j a6,struct A526 a7,f a8,p a9,s a10,s a11,p a12,j a13,c a14,s a15){V_j[1]=a1;f_cpA525(V_a[2],&a2);V_s[3]=a3;V_d[4]=a4;V_p[5]=a5;V_j[6]=a6;f_cpA526(V_a[7],&a7);V_f[8]=a8;V_p[9]=a9;V_s[10]=a10;V_s[11]=a11;V_p[12]=a12;V_j[13]=a13;V_c[14]=a14;V_s[15]=a15;ret_a(15,struct A2)}
/* 258:jcspd{scli}cspfipsidfp */ j f258(c a1,s a2,p a3,d a4,struct A527 a5,c a6,s a7,p a8,f a9,i a10,p a11,s a12,i a13,d a14,f a15,p a16){V_c[1]=a1;V_s[2]=a2;V_p[3]=a3;V_d[4]=a4;f_cpA527(V_a[5],&a5);V_c[6]=a6;V_s[7]=a7;V_p[8]=a8;V_f[9]=a9;V_i[10]=a10;V_p[11]=a11;V_s[12]=a12;V_i[13]=a13;V_d[14]=a14;V_f[15]=a15;V_p[16]=a16;ret_j(16)}
/* 259:lj{illclp}idjipilcfi{lds}i */ l f259(j a1,struct A528 a2,i a3,d a4,j a5,i a6,p a7,i a8,l a9,c a10,f a11,i a12,struct A529 a13,i a14){V_j[1]=a1;f_cpA528(V_a[2],&a2);V_i[3]=a3;V_d[4]=a4;V_j[5]=a5;V_i[6]=a6;V_p[7]=a7;V_i[8]=a8;V_l[9]=a9;V_c[10]=a10;V_f[11]=a11;V_i[12]=a12;f_cpA529(V_a[13],&a13);V_i[14]=a14;ret_l(14)}
/* 260:{fip}lci{dclslp}fp */ struct A530 f260(l a1,c a2,i a3,struct A531 a4,f a5,p a6){V_l[1]=a1;V_c[2]=a2;V_i[3]=a3;f_cpA531(V_a[4],&a4);V_f[5]=a5;V_p[6]=a6;ret_a(6,struct A530)}
/* 261:f{j}{l{cf}p}dcsc */ f f261(struct A96 a1,struct A533 a2,d a3,c a4,s a5,c a6){f_cpA96(V_a[1],&a1);f_cpA533(V_a[2],&a2);V_d[3]=a3;V_c[4]=a4;V_s[5]=a5;V_c[6]=a6;ret_f(6)}
/* 262:ps{ppjl{djdj{pjpllijldlpdcjcipisjffijc}f{lcl}}{iii}f{dl}slidil}fpl{pjs}jdi */ p f262(s a1,struct A538 a2,f a3,p a4,l a5,struct A539 a6,j a7,d a8,i a9){V_s[1]=a1;f_cpA538(V_a[2],&a2);V_f[3]=a3;V_p[4]=a4;V_l[5]=a5;f_cpA539(V_a[6],&a6);V_j[7]=a7;V_d[8]=a8;V_i[9]=a9;ret_p(9)}
/* 263:{ii{ldcs}lsfpdp}jcfdspps */ struct A541 f263(j a1,c a2,f a3,d a4,s a5,p a6,p a7,s a8){V_j[1]=a1;V_c[2]=a2;V_f[3]=a3;V_d[4]=a4;V_s[5]=a5;V_p[6]=a6;V_p[7]=a7;V_s[8]=a8;ret_a(8,struct A541)}
/* 264:{ls}{iillsplps}lsf */ struct A256 f264(struct A542 a1,l a2,s a3,f a4){f_cpA542(V_a[1],&a1);V_l[2]=a2;V_s[3]=a3;V_f[4]=a4;ret_a(4,struct A256)}
/* 265:l{dfci{cddidjcp}ljfd{il}}slscs */ l f265(struct A545 a1,s a2,l a3,s a4,c a5,s a6){f_cpA545(V_a[1],&a1);V_s[2]=a2;V_l[3]=a3;V_s[4]=a4;V_c[5]=a5;V_s[6]=a6;ret_l(6)}
/* 266:sjfiii{pfi}pcf */ s f266(j a1,f a2,i a3,i a4,i a5,struct A546 a6,p a7,c a8,f a9){V_j[1]=a1;V_f[2]=a2;V_i[3]=a3;V_i[4]=a4;V_i[5]=a5;f_cpA546(V_a[6],&a6);V_p[7]=a7;V_c[8]=a8;V_f[9]=a9;ret_s(9)}
/* 267:fcpj{c{j}}cfclp{fpl{id}}jipjjl */ f f267(c a1,p a2,j a3,struct A547 a4,c a5,f a6,c a7,l a8,p a9,struct A548 a10,j a11,i a12,p a13,j a14,j a15,l a16){V_c[1]=a1;V_p[2]=a2;V_j[3]=a3;f_cpA547(V_a[4],&a4);V_c[5]=a5;V_f[6]=a6;V_c[7]=a7;V_l[8]=a8;V_p[9]=a9;f_cpA548(V_a[10],&a10);V_j[11]=a11;V_i[12]=a12;V_p[13]=a13;V_j[14]=a14;V_j[15]=a15;V_l[16]=a16;ret_f(16)}
/* 268:fjci{picci}di */ f f268(j a1,c a2,i a3,struct A549 a4,d a5,i a6){V_j[1]=a1;V_c[2]=a2;V_i[3]=a3;f_cpA549(V_a[4],&a4);V_d[5]=a5;V_i[6]=a6;ret_f(6)}
/* 269:dldl{pd{sip}psij{jjdccjidc}iidjddicjc}llddll{jsdcidjplfii{jf}issdp}jc */ d f269(l a1,d a2,l a3,struct A552 a4,l a5,l a6,d a7,d a8,l a9,l a10,struct A554 a11,j a12,c a13){V_l[1]=a1;V_d[2]=a2;V_l[3]=a3;f_cpA552(V_a[4],&a4);V_l[5]=a5;V_l[6]=a6;V_d[7]=a7;V_d[8]=a8;V_l[9]=a9;V_l[10]=a10;f_cpA554(V_a[11],&a11);V_j[12]=a12;V_c[13]=a13;ret_d(13)}
/* 270:jpii{fsl}il */ j f270(p a1,i a2,i a3,struct A555 a4,i a5,l a6){V_p[1]=a1;V_i[2]=a2;V_i[3]=a3;f_cpA555(V_a[4],&a4);V_i[5]=a5;V_l[6]=a6;ret_j(6)}
/* 271:j{sflfipjdpicijlsfdfc}s */ j f271(struct A556 a1,s a2){f_cpA556(V_a[1],&a1);V_s[2]=a2;ret_j(2)}
/* 272:vis{ciifpjp}{cifspsjpjcilssfsij}js */ v f272(i a1,s a2,struct A557 a3,struct A558 a4,j a5,s a6){V_i[1]=a1;V_s[2]=a2;f_cpA557(V_a[3],&a3);f_cpA558(V_a[4],&a4);V_j[5]=a5;V_s[6]=a6;ret_v(6)}
/* 273:{slflccpilflc{fldcd}pdfpf{jjdjiilf}{f}j} */ struct A561 f273(){ret_a(0,struct A561)}
/* 274:sjfll{p}j */ s f274(j a1,f a2,l a3,l a4,struct A119 a5,j a6){V_j[1]=a1;V_f[2]=a2;V_l[3]=a3;V_l[4]=a4;f_cpA119(V_a[5],&a5);V_j[6]=a6;ret_s(6)}
/* 275:{fclfjcfi} */ struct A562 f275(){ret_a(0,struct A562)}
/* 276:lilssp{di{s}jiccf}f */ l f276(i a1,l a2,s a3,s a4,p a5,struct A563 a6,f a7){V_i[1]=a1;V_l[2]=a2;V_s[3]=a3;V_s[4]=a4;V_p[5]=a5;f_cpA563(V_a[6],&a6);V_f[7]=a7;ret_l(7)}
/* 277:fdsjisjdf{ijdc}pj{iplji{dp}{{jipijssp}licl{ddfdsislp}sc}c{jjjfsddjid{pjjpciijlc}ccccs{jli}f}d} */ f f277(d a1,s a2,j a3,i a4,s a5,j a6,d a7,f a8,struct A564 a9,p a10,j a11,struct A570 a12){V_d[1]=a1;V_s[2]=a2;V_j[3]=a3;V_i[4]=a4;V_s[5]=a5;V_j[6]=a6;V_d[7]=a7;V_f[8]=a8;f_cpA564(V_a[9],&a9);V_p[10]=a10;V_j[11]=a11;f_cpA570(V_a[12],&a12);ret_f(12)}
/* 278:lds{jccdpcflcfpsjliflpsdffpcdf} */ l f278(d a1,s a2,struct A571 a3){V_d[1]=a1;V_s[2]=a2;f_cpA571(V_a[3],&a3);ret_l(3)}
/* 279:dcj{lfdlcisfjllsdj{iilpdjcscissd}fspjffpdi}sccslcddlddid */ d f279(c a1,j a2,struct A573 a3,s a4,c a5,c a6,s a7,l a8,c a9,d a10,d a11,l a12,d a13,d a14,i a15,d a16){V_c[1]=a1;V_j[2]=a2;f_cpA573(V_a[3],&a3);V_s[4]=a4;V_c[5]=a5;V_c[6]=a6;V_s[7]=a7;V_l[8]=a8;V_c[9]=a9;V_d[10]=a10;V_d[11]=a11;V_l[12]=a12;V_d[13]=a13;V_d[14]=a14;V_i[15]=a15;V_d[16]=a16;ret_d(16)}
/* 280:isdj{sffsljls}{f}{isdcscfjilsfsccspfj}cspfcdljp{{ls}isc{{ldsddcjjcccip}fclj{jiilspfijlfci}}pcj{cl}j} */ i f280(s a1,d a2,j a3,struct A574 a4,struct A28 a5,struct A575 a6,c a7,s a8,p a9,f a10,c a11,d a12,l a13,j a14,p a15,struct A579 a16){V_s[1]=a1;V_d[2]=a2;V_j[3]=a3;f_cpA574(V_a[4],&a4);f_cpA28(V_a[5],&a5);f_cpA575(V_a[6],&a6);V_c[7]=a7;V_s[8]=a8;V_p[9]=a9;V_f[10]=a10;V_c[11]=a11;V_d[12]=a12;V_l[13]=a13;V_j[14]=a14;V_p[15]=a15;f_cpA579(V_a[16],&a16);ret_i(16)}
/* 281:sdjfsjd{jssfcjffpjpfs}ff{jliplfis}sjjj */ s f281(d a1,j a2,f a3,s a4,j a5,d a6,struct A580 a7,f a8,f a9,struct A581 a10,s a11,j a12,j a13,j a14){V_d[1]=a1;V_j[2]=a2;V_f[3]=a3;V_s[4]=a4;V_j[5]=a5;V_d[6]=a6;f_cpA580(V_a[7],&a7);V_f[8]=a8;V_f[9]=a9;f_cpA581(V_a[10],&a10);V_s[11]=a11;V_j[12]=a12;V_j[13]=a13;V_j[14]=a14;ret_s(14)}
/* 282:jcdpi{fji}{iscjcisi}iclj */ j f282(c a1,d a2,p a3,i a4,struct A582 a5,struct A583 a6,i a7,c a8,l a9,j a10){V_c[1]=a1;V_d[2]=a2;V_p[3]=a3;V_i[4]=a4;f_cpA582(V_a[5],&a5);f_cpA583(V_a[6],&a6);V_i[7]=a7;V_c[8]=a8;V_l[9]=a9;V_j[10]=a10;ret_j(10)}
/* 283:i{fdjisps}{s{sccjcilspi}iiiisd{sc}fi}lcplp{fjd}jsijcsc */ i f283(struct A584 a1,struct A586 a2,l a3,c a4,p a5,l a6,p a7,struct A587 a8,j a9,s a10,i a11,j a12,c a13,s a14,c a15){f_cpA584(V_a[1],&a1);f_cpA586(V_a[2],&a2);V_l[3]=a3;V_c[4]=a4;V_p[5]=a5;V_l[6]=a6;V_p[7]=a7;f_cpA587(V_a[8],&a8);V_j[9]=a9;V_s[10]=a10;V_i[11]=a11;V_j[12]=a12;V_c[13]=a13;V_s[14]=a14;V_c[15]=a15;ret_i(15)}
/* 284:dlcjsf{j}lisidpfd{p}s */ d f284(l a1,c a2,j a3,s a4,f a5,struct A96 a6,l a7,i a8,s a9,i a10,d a11,p a12,f a13,d a14,struct A119 a15,s a16){V_l[1]=a1;V_c[2]=a2;V_j[3]=a3;V_s[4]=a4;V_f[5]=a5;f_cpA96(V_a[6],&a6);V_l[7]=a7;V_i[8]=a8;V_s[9]=a9;V_i[10]=a10;V_d[11]=a11;V_p[12]=a12;V_f[13]=a13;V_d[14]=a14;f_cpA119(V_a[15],&a15);V_s[16]=a16;ret_d(16)}
/* 285:{ljlf{ldpcfijpcci}ci{flj}fjdp}s */ struct A590 f285(s a1){V_s[1]=a1;ret_a(1,struct A590)}
/* 286:{{fpjdspflsdplfffpic{idi}isssp}{jfjdjli}}lpjllf */ struct A594 f286(l a1,p a2,j a3,l a4,l a5,f a6){V_l[1]=a1;V_p[2]=a2;V_j[3]=a3;V_l[4]=a4;V_l[5]=a5;V_f[6]=a6;ret_a(6,struct A594)}
/* 287:{pcdfffpci{dfjcfjljifcdpliispsdcsldcijsf}pfp}c{p{ccjjjlls}fpflf}ic */ struct A596 f287(c a1,struct A598 a2,i a3,c a4){V_c[1]=a1;f_cpA598(V_a[2],&a2);V_i[3]=a3;V_c[4]=a4;ret_a(4,struct A596)}
/* 288:slpdilil{j}fdlppffs */ s f288(l a1,p a2,d a3,i a4,l a5,i a6,l a7,struct A96 a8,f a9,d a10,l a11,p a12,p a13,f a14,f a15,s a16){V_l[1]=a1;V_p[2]=a2;V_d[3]=a3;V_i[4]=a4;V_l[5]=a5;V_i[6]=a6;V_l[7]=a7;f_cpA96(V_a[8],&a8);V_f[9]=a9;V_d[10]=a10;V_l[11]=a11;V_p[12]=a12;V_p[13]=a13;V_f[14]=a14;V_f[15]=a15;V_s[16]=a16;ret_s(16)}
/* 289:sdf{i{id}fpjjfj}dcfjjpdlc */ s f289(d a1,f a2,struct A599 a3,d a4,c a5,f a6,j a7,j a8,p a9,d a10,l a11,c a12){V_d[1]=a1;V_f[2]=a2;f_cpA599(V_a[3],&a3);V_d[4]=a4;V_c[5]=a5;V_f[6]=a6;V_j[7]=a7;V_j[8]=a8;V_p[9]=a9;V_d[10]=a10;V_l[11]=a11;V_c[12]=a12;ret_s(12)}
/* 290:{cfsdipccplcpssjp}isf */ struct A600 f290(i a1,s a2,f a3){V_i[1]=a1;V_s[2]=a2;V_f[3]=a3;ret_a(3,struct A600)}
/* 291:llfsdp{s{sdpidcfifl}lcl}fjild */ l f291(l a1,f a2,s a3,d a4,p a5,struct A602 a6,f a7,j a8,i a9,l a10,d a11){V_l[1]=a1;V_f[2]=a2;V_s[3]=a3;V_d[4]=a4;V_p[5]=a5;f_cpA602(V_a[6],&a6);V_f[7]=a7;V_j[8]=a8;V_i[9]=a9;V_l[10]=a10;V_d[11]=a11;ret_l(11)}
/* 292:{ifpjijiisdspclipilsdffijjj}{ic}{ssfjilpdl}cisi{si}ssisiipss */ struct A603 f292(struct A604 a1,struct A605 a2,c a3,i a4,s a5,i a6,struct A400 a7,s a8,s a9,i a10,s a11,i a12,i a13,p a14,s a15,s a16){f_cpA604(V_a[1],&a1);f_cpA605(V_a[2],&a2);V_c[3]=a3;V_i[4]=a4;V_s[5]=a5;V_i[6]=a6;f_cpA400(V_a[7],&a7);V_s[8]=a8;V_s[9]=a9;V_i[10]=a10;V_s[11]=a11;V_i[12]=a12;V_i[13]=a13;V_p[14]=a14;V_s[15]=a15;V_s[16]=a16;ret_a(16,struct A603)}
/* 293:cfsfi{dl} */ c f293(f a1,s a2,f a3,i a4,struct A215 a5){V_f[1]=a1;V_s[2]=a2;V_f[3]=a3;V_i[4]=a4;f_cpA215(V_a[5],&a5);ret_c(5)}
/* 294:js{lclislf}c */ j f294(s a1,struct A606 a2,c a3){V_s[1]=a1;f_cpA606(V_a[2],&a2);V_c[3]=a3;ret_j(3)}
/* 295:s{fif{fppijfisdii}jslcclipfsjjdp}fpcddf */ s f295(struct A608 a1,f a2,p a3,c a4,d a5,d a6,f a7){f_cpA608(V_a[1],&a1);V_f[2]=a2;V_p[3]=a3;V_c[4]=a4;V_d[5]=a5;V_d[6]=a6;V_f[7]=a7;ret_s(7)}
/* 296:pllf{jjppf{ppidcjpcdcd}iffis}dpfjldlp */ p f296(l a1,l a2,f a3,struct A610 a4,d a5,p a6,f a7,j a8,l a9,d a10,l a11,p a12){V_l[1]=a1;V_l[2]=a2;V_f[3]=a3;f_cpA610(V_a[4],&a4);V_d[5]=a5;V_p[6]=a6;V_f[7]=a7;V_j[8]=a8;V_l[9]=a9;V_d[10]=a10;V_l[11]=a11;V_p[12]=a12;ret_p(12)}
/* 297:p{dppcpflflldp{fisfslccd}c{cdjfpijpccllpicjippj}fldplppi}ldsps */ p f297(struct A613 a1,l a2,d a3,s a4,p a5,s a6){f_cpA613(V_a[1],&a1);V_l[2]=a2;V_d[3]=a3;V_s[4]=a4;V_p[5]=a5;V_s[6]=a6;ret_p(6)}
/* 298:pdp{sicddjij}ljcf{jpscf{fslpifilpcddlfid}f{ijcs}lfsli} */ p f298(d a1,p a2,struct A614 a3,l a4,j a5,c a6,f a7,struct A617 a8){V_d[1]=a1;V_p[2]=a2;f_cpA614(V_a[3],&a3);V_l[4]=a4;V_j[5]=a5;V_c[6]=a6;V_f[7]=a7;f_cpA617(V_a[8],&a8);ret_p(8)}
/* 299:di{sppcl} */ d f299(i a1,struct A618 a2){V_i[1]=a1;f_cpA618(V_a[2],&a2);ret_d(2)}
/* 300:sicdsijffj{f} */ s f300(i a1,c a2,d a3,s a4,i a5,j a6,f a7,f a8,j a9,struct A28 a10){V_i[1]=a1;V_c[2]=a2;V_d[3]=a3;V_s[4]=a4;V_i[5]=a5;V_j[6]=a6;V_f[7]=a7;V_f[8]=a8;V_j[9]=a9;f_cpA28(V_a[10],&a10);ret_s(10)}
/* 301:cjipjpfs{pisllilpl}{f}{dciicfjf}c */ c f301(j a1,i a2,p a3,j a4,p a5,f a6,s a7,struct A619 a8,struct A28 a9,struct A620 a10,c a11){V_j[1]=a1;V_i[2]=a2;V_p[3]=a3;V_j[4]=a4;V_p[5]=a5;V_f[6]=a6;V_s[7]=a7;f_cpA619(V_a[8],&a8);f_cpA28(V_a[9],&a9);f_cpA620(V_a[10],&a10);V_c[11]=a11;ret_c(11)}
/* 302:c{issjdp} */ c f302(struct A621 a1){f_cpA621(V_a[1],&a1);ret_c(1)}
/* 303:l{icplliiclpcfdll}fdjildjifc */ l f303(struct A622 a1,f a2,d a3,j a4,i a5,l a6,d a7,j a8,i a9,f a10,c a11){f_cpA622(V_a[1],&a1);V_f[2]=a2;V_d[3]=a3;V_j[4]=a4;V_i[5]=a5;V_l[6]=a6;V_d[7]=a7;V_j[8]=a8;V_i[9]=a9;V_f[10]=a10;V_c[11]=a11;ret_l(11)}
/* 304:j{j}d */ j f304(struct A96 a1,d a2){f_cpA96(V_a[1],&a1);V_d[2]=a2;ret_j(2)}
/* 305:scjlpjjdid{jislsddcdlcl} */ s f305(c a1,j a2,l a3,p a4,j a5,j a6,d a7,i a8,d a9,struct A623 a10){V_c[1]=a1;V_j[2]=a2;V_l[3]=a3;V_p[4]=a4;V_j[5]=a5;V_j[6]=a6;V_d[7]=a7;V_i[8]=a8;V_d[9]=a9;f_cpA623(V_a[10],&a10);ret_s(10)}
/* 306:{lisplpjsc}fjpdclssfildf */ struct A624 f306(f a1,j a2,p a3,d a4,c a5,l a6,s a7,s a8,f a9,i a10,l a11,d a12,f a13){V_f[1]=a1;V_j[2]=a2;V_p[3]=a3;V_d[4]=a4;V_c[5]=a5;V_l[6]=a6;V_s[7]=a7;V_s[8]=a8;V_f[9]=a9;V_i[10]=a10;V_l[11]=a11;V_d[12]=a12;V_f[13]=a13;ret_a(13,struct A624)}
/* 307:s{piilljjj}pdflc{dccfpfilddd}ij */ s f307(struct A625 a1,p a2,d a3,f a4,l a5,c a6,struct A626 a7,i a8,j a9){f_cpA625(V_a[1],&a1);V_p[2]=a2;V_d[3]=a3;V_f[4]=a4;V_l[5]=a5;V_c[6]=a6;f_cpA626(V_a[7],&a7);V_i[8]=a8;V_j[9]=a9;ret_s(9)}
/* 308:lsd{flfi}sljl */ l f308(s a1,d a2,struct A627 a3,s a4,l a5,j a6,l a7){V_s[1]=a1;V_d[2]=a2;f_cpA627(V_a[3],&a3);V_s[4]=a4;V_l[5]=a5;V_j[6]=a6;V_l[7]=a7;ret_l(7)}
/* 309:dcisldl{dic{jpdcl}j}d */ d f309(c a1,i a2,s a3,l a4,d a5,l a6,struct A629 a7,d a8){V_c[1]=a1;V_i[2]=a2;V_s[3]=a3;V_l[4]=a4;V_d[5]=a5;V_l[6]=a6;f_cpA629(V_a[7],&a7);V_d[8]=a8;ret_d(8)}
/* 310:{ddisl} */ struct A630 f310(){ret_a(0,struct A630)}
/* 311:fcpddpcl{slpflli{{fppfscfdpcljdfjdddspdi}i{ldsipdsjcscddcis}csfd}didcic}fcjd */ f f311(c a1,p a2,d a3,d a4,p a5,c a6,l a7,struct A634 a8,f a9,c a10,j a11,d a12){V_c[1]=a1;V_p[2]=a2;V_d[3]=a3;V_d[4]=a4;V_p[5]=a5;V_c[6]=a6;V_l[7]=a7;f_cpA634(V_a[8],&a8);V_f[9]=a9;V_c[10]=a10;V_j[11]=a11;V_d[12]=a12;ret_f(12)}
/* 312:{ii{ipslsdlpi}sijdfdjjs{jds}cs{plsldfpidjdjffp}ilff{lsffsdd}jicdcfiilf}dfsp */ struct A639 f312(d a1,f a2,s a3,p a4){V_d[1]=a1;V_f[2]=a2;V_s[3]=a3;V_p[4]=a4;ret_a(4,struct A639)}
/* 313:{ls}pplji */ struct A256 f313(p a1,p a2,l a3,j a4,i a5){V_p[1]=a1;V_p[2]=a2;V_l[3]=a3;V_j[4]=a4;V_i[5]=a5;ret_a(5,struct A256)}
/* 314:fips{clcfd}flpfj */ f f314(i a1,p a2,s a3,struct A640 a4,f a5,l a6,p a7,f a8,j a9){V_i[1]=a1;V_p[2]=a2;V_s[3]=a3;f_cpA640(V_a[4],&a4);V_f[5]=a5;V_l[6]=a6;V_p[7]=a7;V_f[8]=a8;V_j[9]=a9;ret_f(9)}
/* 315:{jpssfcfjcidlij}lip */ struct A641 f315(l a1,i a2,p a3){V_l[1]=a1;V_i[2]=a2;V_p[3]=a3;ret_a(3,struct A641)}
/* 316:jcipsfddf{fcpsjppiisddpdisdjjpcjdpcjs}fc{lpcpidscc}ijj */ j f316(c a1,i a2,p a3,s a4,f a5,d a6,d a7,f a8,struct A642 a9,f a10,c a11,struct A643 a12,i a13,j a14,j a15){V_c[1]=a1;V_i[2]=a2;V_p[3]=a3;V_s[4]=a4;V_f[5]=a5;V_d[6]=a6;V_d[7]=a7;V_f[8]=a8;f_cpA642(V_a[9],&a9);V_f[10]=a10;V_c[11]=a11;f_cpA643(V_a[12],&a12);V_i[13]=a13;V_j[14]=a14;V_j[15]=a15;ret_j(15)}
/* 317:ss{djjplijdcljsciscicciifcclicjldfdjc}fcpj */ s f317(s a1,struct A644 a2,f a3,c a4,p a5,j a6){V_s[1]=a1;f_cpA644(V_a[2],&a2);V_f[3]=a3;V_c[4]=a4;V_p[5]=a5;V_j[6]=a6;ret_s(6)}
/* 318:ljfssfi{df{sjspiifssispilf}f{pddsf}ppjjsipplcdddf{clspscs}f}dpjc */ l f318(j a1,f a2,s a3,s a4,f a5,i a6,struct A648 a7,d a8,p a9,j a10,c a11){V_j[1]=a1;V_f[2]=a2;V_s[3]=a3;V_s[4]=a4;V_f[5]=a5;V_i[6]=a6;f_cpA648(V_a[7],&a7);V_d[8]=a8;V_p[9]=a9;V_j[10]=a10;V_c[11]=a11;ret_l(11)}
/* 319:{ljs}ls{sffdcdd}c */ struct A39 f319(l a1,s a2,struct A649 a3,c a4){V_l[1]=a1;V_s[2]=a2;f_cpA649(V_a[3],&a3);V_c[4]=a4;ret_a(4,struct A39)}
/* 320:isls{ps{spci{fifsplfs}lpifdscdjdpcid{lj}fifplijf{i}dfp}iisj}lpljfpcjj */ i f320(s a1,l a2,s a3,struct A652 a4,l a5,p a6,l a7,j a8,f a9,p a10,c a11,j a12,j a13){V_s[1]=a1;V_l[2]=a2;V_s[3]=a3;f_cpA652(V_a[4],&a4);V_l[5]=a5;V_p[6]=a6;V_l[7]=a7;V_j[8]=a8;V_f[9]=a9;V_p[10]=a10;V_c[11]=a11;V_j[12]=a12;V_j[13]=a13;ret_i(13)}
/* 321:j{spdlljcsfpii}c */ j f321(struct A653 a1,c a2){f_cpA653(V_a[1],&a1);V_c[2]=a2;ret_j(2)}
/* 322:lslclpd{icpipfscpsdc}iffsc */ l f322(s a1,l a2,c a3,l a4,p a5,d a6,struct A654 a7,i a8,f a9,f a10,s a11,c a12){V_s[1]=a1;V_l[2]=a2;V_c[3]=a3;V_l[4]=a4;V_p[5]=a5;V_d[6]=a6;f_cpA654(V_a[7],&a7);V_i[8]=a8;V_f[9]=a9;V_f[10]=a10;V_s[11]=a11;V_c[12]=a12;ret_l(12)}
/* 323:f{{c}j{spdsif}lsdcf{sippj}lif}cd */ f f323(struct A657 a1,c a2,d a3){f_cpA657(V_a[1],&a1);V_c[2]=a2;V_d[3]=a3;ret_f(3)}
/* 324:{id}fjc */ struct A178 f324(f a1,j a2,c a3){V_f[1]=a1;V_j[2]=a2;V_c[3]=a3;ret_a(3,struct A178)}
/* 325:csijpdcjfss{pjjcffcdcs{j}slliicjsj} */ c f325(s a1,i a2,j a3,p a4,d a5,c a6,j a7,f a8,s a9,s a10,struct A658 a11){V_s[1]=a1;V_i[2]=a2;V_j[3]=a3;V_p[4]=a4;V_d[5]=a5;V_c[6]=a6;V_j[7]=a7;V_f[8]=a8;V_s[9]=a9;V_s[10]=a10;f_cpA658(V_a[11],&a11);ret_c(11)}
/* 326:vidisjc{cfpdjj}sfc{iddlp}d */ v f326(i a1,d a2,i a3,s a4,j a5,c a6,struct A659 a7,s a8,f a9,c a10,struct A660 a11,d a12){V_i[1]=a1;V_d[2]=a2;V_i[3]=a3;V_s[4]=a4;V_j[5]=a5;V_c[6]=a6;f_cpA659(V_a[7],&a7);V_s[8]=a8;V_f[9]=a9;V_c[10]=a10;f_cpA660(V_a[11],&a11);V_d[12]=a12;ret_v(12)}
/* 327:{c}c */ struct A77 f327(c a1){V_c[1]=a1;ret_a(1,struct A77)}
/* 328:pfjjsfpij{f}l */ p f328(f a1,j a2,j a3,s a4,f a5,p a6,i a7,j a8,struct A28 a9,l a10){V_f[1]=a1;V_j[2]=a2;V_j[3]=a3;V_s[4]=a4;V_f[5]=a5;V_p[6]=a6;V_i[7]=a7;V_j[8]=a8;f_cpA28(V_a[9],&a9);V_l[10]=a10;ret_p(10)}
/* 329:j{sfffjlfd}cjl{fjjidj}scld */ j f329(struct A661 a1,c a2,j a3,l a4,struct A662 a5,s a6,c a7,l a8,d a9){f_cpA661(V_a[1],&a1);V_c[2]=a2;V_j[3]=a3;V_l[4]=a4;f_cpA662(V_a[5],&a5);V_s[6]=a6;V_c[7]=a7;V_l[8]=a8;V_d[9]=a9;ret_j(9)}
/* 330:j{ifjidjcij{ji}ljfc{pfjjcps}}dllisls{jif}j */ j f330(struct A664 a1,d a2,l a3,l a4,i a5,s a6,l a7,s a8,struct A665 a9,j a10){f_cpA664(V_a[1],&a1);V_d[2]=a2;V_l[3]=a3;V_l[4]=a4;V_i[5]=a5;V_s[6]=a6;V_l[7]=a7;V_s[8]=a8;f_cpA665(V_a[9],&a9);V_j[10]=a10;ret_j(10)}
/* 331:dsc{jlsssspcpl}fcsjlf */ d f331(s a1,c a2,struct A666 a3,f a4,c a5,s a6,j a7,l a8,f a9){V_s[1]=a1;V_c[2]=a2;f_cpA666(V_a[3],&a3);V_f[4]=a4;V_c[5]=a5;V_s[6]=a6;V_j[7]=a7;V_l[8]=a8;V_f[9]=a9;ret_d(9)}
/* 332:jdld{jlfldccifjissiljsdicildcjpisddildjfjf}pi */ j f332(d a1,l a2,d a3,struct A667 a4,p a5,i a6){V_d[1]=a1;V_l[2]=a2;V_d[3]=a3;f_cpA667(V_a[4],&a4);V_p[5]=a5;V_i[6]=a6;ret_j(6)}
/* 333:ji{ljcilcdiidlplliifjd} */ j f333(i a1,struct A668 a2){V_i[1]=a1;f_cpA668(V_a[2],&a2);ret_j(2)}
/* 334:ssc{lfjlcpd} */ s f334(s a1,c a2,struct A669 a3){V_s[1]=a1;V_c[2]=a2;f_cpA669(V_a[3],&a3);ret_s(3)}
/* 335:{ds}{spf{fpd}cl}lljsc{dd}p{pc{sldflcljips}pspl}j{cdsfdcdfppicjjlfpjlslldfcspjjjslsjc{j{l}jd}dsllfd} */ struct A248 f335(struct A671 a1,l a2,l a3,j a4,s a5,c a6,struct A672 a7,p a8,struct A674 a9,j a10,struct A676 a11){f_cpA671(V_a[1],&a1);V_l[2]=a2;V_l[3]=a3;V_j[4]=a4;V_s[5]=a5;V_c[6]=a6;f_cpA672(V_a[7],&a7);V_p[8]=a8;f_cpA674(V_a[9],&a9);V_j[10]=a10;f_cpA676(V_a[11],&a11);ret_a(11,struct A248)}
/* 336:jsdf{ipipp}fsllcfcpi */ j f336(s a1,d a2,f a3,struct A677 a4,f a5,s a6,l a7,l a8,c a9,f a10,c a11,p a12,i a13){V_s[1]=a1;V_d[2]=a2;V_f[3]=a3;f_cpA677(V_a[4],&a4);V_f[5]=a5;V_s[6]=a6;V_l[7]=a7;V_l[8]=a8;V_c[9]=a9;V_f[10]=a10;V_c[11]=a11;V_p[12]=a12;V_i[13]=a13;ret_j(13)}
/* 337:cjj{dffsp}jcilfcppci */ c f337(j a1,j a2,struct A678 a3,j a4,c a5,i a6,l a7,f a8,c a9,p a10,p a11,c a12,i a13){V_j[1]=a1;V_j[2]=a2;f_cpA678(V_a[3],&a3);V_j[4]=a4;V_c[5]=a5;V_i[6]=a6;V_l[7]=a7;V_f[8]=a8;V_c[9]=a9;V_p[10]=a10;V_p[11]=a11;V_c[12]=a12;V_i[13]=a13;ret_c(13)}
/* 338:{ppsippjlplfjfsd}dj{lpcjdc}jc */ struct A679 f338(d a1,j a2,struct A680 a3,j a4,c a5){V_d[1]=a1;V_j[2]=a2;f_cpA680(V_a[3],&a3);V_j[4]=a4;V_c[5]=a5;ret_a(5,struct A679)}
/* 339:isjfss{dfpdjpid}d */ i f339(s a1,j a2,f a3,s a4,s a5,struct A681 a6,d a7){V_s[1]=a1;V_j[2]=a2;V_f[3]=a3;V_s[4]=a4;V_s[5]=a5;f_cpA681(V_a[6],&a6);V_d[7]=a7;ret_i(7)}
/* 340:cicjiffijid{jdfj} */ c f340(i a1,c a2,j a3,i a4,f a5,f a6,i a7,j a8,i a9,d a10,struct A682 a11){V_i[1]=a1;V_c[2]=a2;V_j[3]=a3;V_i[4]=a4;V_f[5]=a5;V_f[6]=a6;V_i[7]=a7;V_j[8]=a8;V_i[9]=a9;V_d[10]=a10;f_cpA682(V_a[11],&a11);ret_c(11)}
/* 341:p{sjlplssipj}{pjf{dppcsddfj}pjc{{fjcdp}j{idfsjfs}}}fj */ p f341(struct A683 a1,struct A688 a2,f a3,j a4){f_cpA683(V_a[1],&a1);f_cpA688(V_a[2],&a2);V_f[3]=a3;V_j[4]=a4;ret_p(4)}
/* 342:f{jd} */ f f342(struct A451 a1){f_cpA451(V_a[1],&a1);ret_f(1)}
/* 343:dfspp{dl{cjlfplp}}pcccip */ d f343(f a1,s a2,p a3,p a4,struct A690 a5,p a6,c a7,c a8,c a9,i a10,p a11){V_f[1]=a1;V_s[2]=a2;V_p[3]=a3;V_p[4]=a4;f_cpA690(V_a[5],&a5);V_p[6]=a6;V_c[7]=a7;V_c[8]=a8;V_c[9]=a9;V_i[10]=a10;V_p[11]=a11;ret_d(11)}
/* 344:{cciflffdpfd}l */ struct A691 f344(l a1){V_l[1]=a1;ret_a(1,struct A691)}
/* 345:vjsfsdsi{cls{ffdji{ipdj}c}sdp{{spipcij}i{cclfd}fcllllpjpi{lsc}}il}l{f}{fffj}cjjcf */ v f345(j a1,s a2,f a3,s a4,d a5,s a6,i a7,struct A698 a8,l a9,struct A28 a10,struct A699 a11,c a12,j a13,j a14,c a15,f a16){V_j[1]=a1;V_s[2]=a2;V_f[3]=a3;V_s[4]=a4;V_d[5]=a5;V_s[6]=a6;V_i[7]=a7;f_cpA698(V_a[8],&a8);V_l[9]=a9;f_cpA28(V_a[10],&a10);f_cpA699(V_a[11],&a11);V_c[12]=a12;V_j[13]=a13;V_j[14]=a14;V_c[15]=a15;V_f[16]=a16;ret_v(16)}
/* 346:dfjjcd{jj{ji{dlldpsdlfpc}}{ji{dcspl}d{sfpfcip}dfdlclcsj}}d{i}cl{slpcjp} */ d f346(f a1,j a2,j a3,c a4,d a5,struct A705 a6,d a7,struct A2 a8,c a9,l a10,struct A706 a11){V_f[1]=a1;V_j[2]=a2;V_j[3]=a3;V_c[4]=a4;V_d[5]=a5;f_cpA705(V_a[6],&a6);V_d[7]=a7;f_cpA2(V_a[8],&a8);V_c[9]=a9;V_l[10]=a10;f_cpA706(V_a[11],&a11);ret_d(11)}
/* 347:idii{cjdcj{pjddpsfjdfdjldfdjccljijdifpjcjjcf}iijc{cjj}cfjsf{l}sii{dpcjss}sjillcp{ljl}spf}c */ i f347(d a1,i a2,i a3,struct A711 a4,c a5){V_d[1]=a1;V_i[2]=a2;V_i[3]=a3;f_cpA711(V_a[4],&a4);V_c[5]=a5;ret_i(5)}
/* 348:{lf}lp */ struct A453 f348(l a1,p a2){V_l[1]=a1;V_p[2]=a2;ret_a(2,struct A453)}
/* 349:fpsc{ci}dlcfcjsif */ f f349(p a1,s a2,c a3,struct A109 a4,d a5,l a6,c a7,f a8,c a9,j a10,s a11,i a12,f a13){V_p[1]=a1;V_s[2]=a2;V_c[3]=a3;f_cpA109(V_a[4],&a4);V_d[5]=a5;V_l[6]=a6;V_c[7]=a7;V_f[8]=a8;V_c[9]=a9;V_j[10]=a10;V_s[11]=a11;V_i[12]=a12;V_f[13]=a13;ret_f(13)}
/* 350:fi{lfip}isdl{cslsffjjji}fd{ssdsjcjsdppijcipljisfpp}plfpj */ f f350(i a1,struct A712 a2,i a3,s a4,d a5,l a6,struct A713 a7,f a8,d a9,struct A714 a10,p a11,l a12,f a13,p a14,j a15){V_i[1]=a1;f_cpA712(V_a[2],&a2);V_i[3]=a3;V_s[4]=a4;V_d[5]=a5;V_l[6]=a6;f_cpA713(V_a[7],&a7);V_f[8]=a8;V_d[9]=a9;f_cpA714(V_a[10],&a10);V_p[11]=a11;V_l[12]=a12;V_f[13]=a13;V_p[14]=a14;V_j[15]=a15;ret_f(15)}
/* 351:{c} */ struct A77 f351(){ret_a(0,struct A77)}
/* 352:cdsdldl{lssllsdi}jcs */ c f352(d a1,s a2,d a3,l a4,d a5,l a6,struct A715 a7,j a8,c a9,s a10){V_d[1]=a1;V_s[2]=a2;V_d[3]=a3;V_l[4]=a4;V_d[5]=a5;V_l[6]=a6;f_cpA715(V_a[7],&a7);V_j[8]=a8;V_c[9]=a9;V_s[10]=a10;ret_c(10)}
/* 353:{scl}ljldsl */ struct A716 f353(l a1,j a2,l a3,d a4,s a5,l a6){V_l[1]=a1;V_j[2]=a2;V_l[3]=a3;V_d[4]=a4;V_s[5]=a5;V_l[6]=a6;ret_a(6,struct A716)}
/* 354:ijcl{ff}cpfdpi */ i f354(j a1,c a2,l a3,struct A717 a4,c a5,p a6,f a7,d a8,p a9,i a10){V_j[1]=a1;V_c[2]=a2;V_l[3]=a3;f_cpA717(V_a[4],&a4);V_c[5]=a5;V_p[6]=a6;V_f[7]=a7;V_d[8]=a8;V_p[9]=a9;V_i[10]=a10;ret_i(10)}
/* 355:jspdpf{{ccsfds}dj} */ j f355(s a1,p a2,d a3,p a4,f a5,struct A719 a6){V_s[1]=a1;V_p[2]=a2;V_d[3]=a3;V_p[4]=a4;V_f[5]=a5;f_cpA719(V_a[6],&a6);ret_j(6)}
/* 356:jl{pficf}lflpj */ j f356(l a1,struct A720 a2,l a3,f a4,l a5,p a6,j a7){V_l[1]=a1;f_cpA720(V_a[2],&a2);V_l[3]=a3;V_f[4]=a4;V_l[5]=a5;V_p[6]=a6;V_j[7]=a7;ret_j(7)}
/* 357:{llf}sffil */ struct A721 f357(s a1,f a2,f a3,i a4,l a5){V_s[1]=a1;V_f[2]=a2;V_f[3]=a3;V_i[4]=a4;V_l[5]=a5;ret_a(5,struct A721)}
/* 358:{i}{fpijsl{ijpijdll}i{fsddjsfi}}sfjs */ struct A2 f358(struct A724 a1,s a2,f a3,j a4,s a5){f_cpA724(V_a[1],&a1);V_s[2]=a2;V_f[3]=a3;V_j[4]=a4;V_s[5]=a5;ret_a(5,struct A2)}
/* 359:ld{d}{isci}c{cfj}d */ l f359(d a1,struct A33 a2,struct A725 a3,c a4,struct A726 a5,d a6){V_d[1]=a1;f_cpA33(V_a[2],&a2);f_cpA725(V_a[3],&a3);V_c[4]=a4;f_cpA726(V_a[5],&a5);V_d[6]=a6;ret_l(6)}
/* 360:lsfppsjd{f}f */ l f360(s a1,f a2,p a3,p a4,s a5,j a6,d a7,struct A28 a8,f a9){V_s[1]=a1;V_f[2]=a2;V_p[3]=a3;V_p[4]=a4;V_s[5]=a5;V_j[6]=a6;V_d[7]=a7;f_cpA28(V_a[8],&a8);V_f[9]=a9;ret_l(9)}
/* 361:lifs{sf{ipjcfljlps}}sssfidipdf */ l f361(i a1,f a2,s a3,struct A728 a4,s a5,s a6,s a7,f a8,i a9,d a10,i a11,p a12,d a13,f a14){V_i[1]=a1;V_f[2]=a2;V_s[3]=a3;f_cpA728(V_a[4],&a4);V_s[5]=a5;V_s[6]=a6;V_s[7]=a7;V_f[8]=a8;V_i[9]=a9;V_d[10]=a10;V_i[11]=a11;V_p[12]=a12;V_d[13]=a13;V_f[14]=a14;ret_l(14)}
/* 362:{fcj}sisjjcifdjs{dfjlddj{ppdfpss}} */ struct A729 f362(s a1,i a2,s a3,j a4,j a5,c a6,i a7,f a8,d a9,j a10,s a11,struct A731 a12){V_s[1]=a1;V_i[2]=a2;V_s[3]=a3;V_j[4]=a4;V_j[5]=a5;V_c[6]=a6;V_i[7]=a7;V_f[8]=a8;V_d[9]=a9;V_j[10]=a10;V_s[11]=a11;f_cpA731(V_a[12],&a12);ret_a(12,struct A729)}
/* 363:{spf}{l}j */ struct A732 f363(struct A11 a1,j a2){f_cpA11(V_a[1],&a1);V_j[2]=a2;ret_a(2,struct A732)}
/* 364:ljsi{ssldjpjpjlsjcisplfcsspjpjp}f{j}pjj */ l f364(j a1,s a2,i a3,struct A733 a4,f a5,struct A96 a6,p a7,j a8,j a9){V_j[1]=a1;V_s[2]=a2;V_i[3]=a3;f_cpA733(V_a[4],&a4);V_f[5]=a5;f_cpA96(V_a[6],&a6);V_p[7]=a7;V_j[8]=a8;V_j[9]=a9;ret_l(9)}
/* 365:{{pficjlclpffis}}flcjjj */ struct A735 f365(f a1,l a2,c a3,j a4,j a5,j a6){V_f[1]=a1;V_l[2]=a2;V_c[3]=a3;V_j[4]=a4;V_j[5]=a5;V_j[6]=a6;ret_a(6,struct A735)}
/* 366:{pcclf} */ struct A736 f366(){ret_a(0,struct A736)}
/* 367:{dilsldsplcsidp}psplii{ifjfdj}lcfji{dlps}di */ struct A737 f367(p a1,s a2,p a3,l a4,i a5,i a6,struct A738 a7,l a8,c a9,f a10,j a11,i a12,struct A739 a13,d a14,i a15){V_p[1]=a1;V_s[2]=a2;V_p[3]=a3;V_l[4]=a4;V_i[5]=a5;V_i[6]=a6;f_cpA738(V_a[7],&a7);V_l[8]=a8;V_c[9]=a9;V_f[10]=a10;V_j[11]=a11;V_i[12]=a12;f_cpA739(V_a[13],&a13);V_d[14]=a14;V_i[15]=a15;ret_a(15,struct A737)}
/* 368:{ljj}sfijljiplpsllsp */ struct A740 f368(s a1,f a2,i a3,j a4,l a5,j a6,i a7,p a8,l a9,p a10,s a11,l a12,l a13,s a14,p a15){V_s[1]=a1;V_f[2]=a2;V_i[3]=a3;V_j[4]=a4;V_l[5]=a5;V_j[6]=a6;V_i[7]=a7;V_p[8]=a8;V_l[9]=a9;V_p[10]=a10;V_s[11]=a11;V_l[12]=a12;V_l[13]=a13;V_s[14]=a14;V_p[15]=a15;ret_a(15,struct A740)}
/* 369:sicpcp{{fsff}fljsl}jfc{cccisp{sjj}cisf}cjll */ s f369(i a1,c a2,p a3,c a4,p a5,struct A742 a6,j a7,f a8,c a9,struct A744 a10,c a11,j a12,l a13,l a14){V_i[1]=a1;V_c[2]=a2;V_p[3]=a3;V_c[4]=a4;V_p[5]=a5;f_cpA742(V_a[6],&a6);V_j[7]=a7;V_f[8]=a8;V_c[9]=a9;f_cpA744(V_a[10],&a10);V_c[11]=a11;V_j[12]=a12;V_l[13]=a13;V_l[14]=a14;ret_s(14)}
/* 370:{slf{lpslldjdpjf}pc}{fjfplcls}plspffjc{idssdlfdp}{is} */ struct A746 f370(struct A747 a1,p a2,l a3,s a4,p a5,f a6,f a7,j a8,c a9,struct A748 a10,struct A359 a11){f_cpA747(V_a[1],&a1);V_p[2]=a2;V_l[3]=a3;V_s[4]=a4;V_p[5]=a5;V_f[6]=a6;V_f[7]=a7;V_j[8]=a8;V_c[9]=a9;f_cpA748(V_a[10],&a10);f_cpA359(V_a[11],&a11);ret_a(11,struct A746)}
/* 371:d{l} */ d f371(struct A11 a1){f_cpA11(V_a[1],&a1);ret_d(1)}
/* 372:vfj{i{dlscjfl{sifdpdsjcdssllpcjijscdjsc}p}s{f{fsfpl}jjcl{lciicj}jlcj}cp{fjpdcjjlif{icfdcpfjdfddcsdjsd}}ljlij{p{ssfjiisjddpllilp}ddddficsljc}sss{pjsdd}lll}{jldssl{{f}ssccjsiidpjlii}dd{plscsisfccj}clscppsdd{jcjfjijsc}pi}dspd */ v f372(f a1,j a2,struct A759 a3,struct A763 a4,d a5,s a6,p a7,d a8){V_f[1]=a1;V_j[2]=a2;f_cpA759(V_a[3],&a3);f_cpA763(V_a[4],&a4);V_d[5]=a5;V_s[6]=a6;V_p[7]=a7;V_d[8]=a8;ret_v(8)}
/* 373:p{l{{csddpssc}fsiijclffj}pipsfjcci{sjp}{lsclcffi}}j */ p f373(struct A768 a1,j a2){f_cpA768(V_a[1],&a1);V_j[2]=a2;ret_p(2)}
/* 374:dcic{psid{ciiilcjfsilfld}il}s{jdpff}{si}lsfj */ d f374(c a1,i a2,c a3,struct A770 a4,s a5,struct A771 a6,struct A400 a7,l a8,s a9,f a10,j a11){V_c[1]=a1;V_i[2]=a2;V_c[3]=a3;f_cpA770(V_a[4],&a4);V_s[5]=a5;f_cpA771(V_a[6],&a6);f_cpA400(V_a[7],&a7);V_l[8]=a8;V_s[9]=a9;V_f[10]=a10;V_j[11]=a11;ret_d(11)}
/* 375:i{ppsdidfsjjcssslspjiicfsicpcicpjdliciipsidjjip}pidd */ i f375(struct A772 a1,p a2,i a3,d a4,d a5){f_cpA772(V_a[1],&a1);V_p[2]=a2;V_i[3]=a3;V_d[4]=a4;V_d[5]=a5;ret_i(5)}
/* 376:iips{idp}di{cjfi}jdsilcd{plpsliifjfifpfj}c */ i f376(i a1,p a2,s a3,struct A773 a4,d a5,i a6,struct A774 a7,j a8,d a9,s a10,i a11,l a12,c a13,d a14,struct A775 a15,c a16){V_i[1]=a1;V_p[2]=a2;V_s[3]=a3;f_cpA773(V_a[4],&a4);V_d[5]=a5;V_i[6]=a6;f_cpA774(V_a[7],&a7);V_j[8]=a8;V_d[9]=a9;V_s[10]=a10;V_i[11]=a11;V_l[12]=a12;V_c[13]=a13;V_d[14]=a14;f_cpA775(V_a[15],&a15);V_c[16]=a16;ret_i(16)}
/* 377:f{{sifsp}jjdc}sc */ f f377(struct A777 a1,s a2,c a3){f_cpA777(V_a[1],&a1);V_s[2]=a2;V_c[3]=a3;ret_f(3)}
/* 378:fssfiid{lfdfsslipfpcic}llcidpcs */ f f378(s a1,s a2,f a3,i a4,i a5,d a6,struct A778 a7,l a8,l a9,c a10,i a11,d a12,p a13,c a14,s a15){V_s[1]=a1;V_s[2]=a2;V_f[3]=a3;V_i[4]=a4;V_i[5]=a5;V_d[6]=a6;f_cpA778(V_a[7],&a7);V_l[8]=a8;V_l[9]=a9;V_c[10]=a10;V_i[11]=a11;V_d[12]=a12;V_p[13]=a13;V_c[14]=a14;V_s[15]=a15;ret_f(15)}
/* 379:icfplp{ii}ii{{jpsdlllpdcdjjis{fcsi}fiicl}{j{s}}jjj}sfdfpd */ i f379(c a1,f a2,p a3,l a4,p a5,struct A779 a6,i a7,i a8,struct A783 a9,s a10,f a11,d a12,f a13,p a14,d a15){V_c[1]=a1;V_f[2]=a2;V_p[3]=a3;V_l[4]=a4;V_p[5]=a5;f_cpA779(V_a[6],&a6);V_i[7]=a7;V_i[8]=a8;f_cpA783(V_a[9],&a9);V_s[10]=a10;V_f[11]=a11;V_d[12]=a12;V_f[13]=a13;V_p[14]=a14;V_d[15]=a15;ret_i(15)}
/* 380:cjjic{jdpipcdslilpi}sjccfcj{lspld}dsi */ c f380(j a1,j a2,i a3,c a4,struct A784 a5,s a6,j a7,c a8,c a9,f a10,c a11,j a12,struct A785 a13,d a14,s a15,i a16){V_j[1]=a1;V_j[2]=a2;V_i[3]=a3;V_c[4]=a4;f_cpA784(V_a[5],&a5);V_s[6]=a6;V_j[7]=a7;V_c[8]=a8;V_c[9]=a9;V_f[10]=a10;V_c[11]=a11;V_j[12]=a12;f_cpA785(V_a[13],&a13);V_d[14]=a14;V_s[15]=a15;V_i[16]=a16;ret_c(16)}
/* 381:{ccjclpspdllcddf} */ struct A786 f381(){ret_a(0,struct A786)}
/* 382:vsl{ilcpi}djildcfljcii */ v f382(s a1,l a2,struct A787 a3,d a4,j a5,i a6,l a7,d a8,c a9,f a10,l a11,j a12,c a13,i a14,i a15){V_s[1]=a1;V_l[2]=a2;f_cpA787(V_a[3],&a3);V_d[4]=a4;V_j[5]=a5;V_i[6]=a6;V_l[7]=a7;V_d[8]=a8;V_c[9]=a9;V_f[10]=a10;V_l[11]=a11;V_j[12]=a12;V_c[13]=a13;V_i[14]=a14;V_i[15]=a15;ret_v(15)}
/* 383:lpp{pjfcpsjfp}scl */ l f383(p a1,p a2,struct A788 a3,s a4,c a5,l a6){V_p[1]=a1;V_p[2]=a2;f_cpA788(V_a[3],&a3);V_s[4]=a4;V_c[5]=a5;V_l[6]=a6;ret_l(6)}
/* 384:s{cll}cpdfdfclpcci */ s f384(struct A789 a1,c a2,p a3,d a4,f a5,d a6,f a7,c a8,l a9,p a10,c a11,c a12,i a13){f_cpA789(V_a[1],&a1);V_c[2]=a2;V_p[3]=a3;V_d[4]=a4;V_f[5]=a5;V_d[6]=a6;V_f[7]=a7;V_c[8]=a8;V_l[9]=a9;V_p[10]=a10;V_c[11]=a11;V_c[12]=a12;V_i[13]=a13;ret_s(13)}
/* 385:jlcf{if}llffspsss */ j f385(l a1,c a2,f a3,struct A341 a4,l a5,l a6,f a7,f a8,s a9,p a10,s a11,s a12,s a13){V_l[1]=a1;V_c[2]=a2;V_f[3]=a3;f_cpA341(V_a[4],&a4);V_l[5]=a5;V_l[6]=a6;V_f[7]=a7;V_f[8]=a8;V_s[9]=a9;V_p[10]=a10;V_s[11]=a11;V_s[12]=a12;V_s[13]=a13;ret_j(13)}
/* 386:filjdpcsf{jdcdddiflsj}j */ f f386(i a1,l a2,j a3,d a4,p a5,c a6,s a7,f a8,struct A790 a9,j a10){V_i[1]=a1;V_l[2]=a2;V_j[3]=a3;V_d[4]=a4;V_p[5]=a5;V_c[6]=a6;V_s[7]=a7;V_f[8]=a8;f_cpA790(V_a[9],&a9);V_j[10]=a10;ret_f(10)}
/* 387:l{jlijij}pcjf{jp{lddsjc}fjj{dfsppdippffidpfccll}ijflfdljc{sdlij}} */ l f387(struct A791 a1,p a2,c a3,j a4,f a5,struct A795 a6){f_cpA791(V_a[1],&a1);V_p[2]=a2;V_c[3]=a3;V_j[4]=a4;V_f[5]=a5;f_cpA795(V_a[6],&a6);ret_l(6)}
/* 388:dfffpdp{ijjdpflpdslli}ic{llj} */ d f388(f a1,f a2,f a3,p a4,d a5,p a6,struct A796 a7,i a8,c a9,struct A797 a10){V_f[1]=a1;V_f[2]=a2;V_f[3]=a3;V_p[4]=a4;V_d[5]=a5;V_p[6]=a6;f_cpA796(V_a[7],&a7);V_i[8]=a8;V_c[9]=a9;f_cpA797(V_a[10],&a10);ret_d(10)}
/* 389:p{d}pil */ p f389(struct A33 a1,p a2,i a3,l a4){f_cpA33(V_a[1],&a1);V_p[2]=a2;V_i[3]=a3;V_l[4]=a4;ret_p(4)}
/* 390:{slcjfcplcjcfpjjcs}islpjc{jidsiififd}sj */ struct A798 f390(i a1,s a2,l a3,p a4,j a5,c a6,struct A799 a7,s a8,j a9){V_i[1]=a1;V_s[2]=a2;V_l[3]=a3;V_p[4]=a4;V_j[5]=a5;V_c[6]=a6;f_cpA799(V_a[7],&a7);V_s[8]=a8;V_j[9]=a9;ret_a(9,struct A798)}
/* 391:sl{jlfd}f */ s f391(l a1,struct A800 a2,f a3){V_l[1]=a1;f_cpA800(V_a[2],&a2);V_f[3]=a3;ret_s(3)}
/* 392:sjscipdlcdlp{lp}c */ s f392(j a1,s a2,c a3,i a4,p a5,d a6,l a7,c a8,d a9,l a10,p a11,struct A357 a12,c a13){V_j[1]=a1;V_s[2]=a2;V_c[3]=a3;V_i[4]=a4;V_p[5]=a5;V_d[6]=a6;V_l[7]=a7;V_c[8]=a8;V_d[9]=a9;V_l[10]=a10;V_p[11]=a11;f_cpA357(V_a[12],&a12);V_c[13]=a13;ret_s(13)}
/* 393:vc{ci{clff}ls} */ v f393(c a1,struct A802 a2){V_c[1]=a1;f_cpA802(V_a[2],&a2);ret_v(2)}
/* 394:fp{jp{dccllcdp}}js */ f f394(p a1,struct A804 a2,j a3,s a4){V_p[1]=a1;f_cpA804(V_a[2],&a2);V_j[3]=a3;V_s[4]=a4;ret_f(4)}
/* 395:i{dljddp{cdj}sijdpldj}p */ i f395(struct A806 a1,p a2){f_cpA806(V_a[1],&a1);V_p[2]=a2;ret_i(2)}
/* 396:c{pdpff{fjj{sfdjjiccssfd}{psllccsfdpji}ijpcd{id}j}piflipcjcllcfs{ldsffjcsjdcfp}clpjscpfc}dlipjlssiics */ c f396(struct A811 a1,d a2,l a3,i a4,p a5,j a6,l a7,s a8,s a9,i a10,i a11,c a12,s a13){f_cpA811(V_a[1],&a1);V_d[2]=a2;V_l[3]=a3;V_i[4]=a4;V_p[5]=a5;V_j[6]=a6;V_l[7]=a7;V_s[8]=a8;V_s[9]=a9;V_i[10]=a10;V_i[11]=a11;V_c[12]=a12;V_s[13]=a13;ret_c(13)}
/* 397:vfsiiffs{sc}p */ v f397(f a1,s a2,i a3,i a4,f a5,f a6,s a7,struct A426 a8,p a9){V_f[1]=a1;V_s[2]=a2;V_i[3]=a3;V_i[4]=a4;V_f[5]=a5;V_f[6]=a6;V_s[7]=a7;f_cpA426(V_a[8],&a8);V_p[9]=a9;ret_v(9)}
/* 398:ij{jljlfcpij}cfjfcjlpps */ i f398(j a1,struct A812 a2,c a3,f a4,j a5,f a6,c a7,j a8,l a9,p a10,p a11,s a12){V_j[1]=a1;f_cpA812(V_a[2],&a2);V_c[3]=a3;V_f[4]=a4;V_j[5]=a5;V_f[6]=a6;V_c[7]=a7;V_j[8]=a8;V_l[9]=a9;V_p[10]=a10;V_p[11]=a11;V_s[12]=a12;ret_i(12)}
/* 399:l{p}lj{c}lfss */ l f399(struct A119 a1,l a2,j a3,struct A77 a4,l a5,f a6,s a7,s a8){f_cpA119(V_a[1],&a1);V_l[2]=a2;V_j[3]=a3;f_cpA77(V_a[4],&a4);V_l[5]=a5;V_f[6]=a6;V_s[7]=a7;V_s[8]=a8;ret_l(8)}
funptr G_funtab[] = {
	(funptr)&f0,
	(funptr)&f1,
	(funptr)&f2,
	(funptr)&f3,
	(funptr)&f4,
	(funptr)&f5,
	(funptr)&f6,
	(funptr)&f7,
	(funptr)&f8,
	(funptr)&f9,
	(funptr)&f10,
	(funptr)&f11,
	(funptr)&f12,
	(funptr)&f13,
	(funptr)&f14,
	(funptr)&f15,
	(funptr)&f16,
	(funptr)&f17,
	(funptr)&f18,
	(funptr)&f19,
	(funptr)&f20,
	(funptr)&f21,
	(funptr)&f22,
	(funptr)&f23,
	(funptr)&f24,
	(funptr)&f25,
	(funptr)&f26,
	(funptr)&f27,
	(funptr)&f28,
	(funptr)&f29,
	(funptr)&f30,
	(funptr)&f31,
	(funptr)&f32,
	(funptr)&f33,
	(funptr)&f34,
	(funptr)&f35,
	(funptr)&f36,
	(funptr)&f37,
	(funptr)&f38,
	(funptr)&f39,
	(funptr)&f40,
	(funptr)&f41,
	(funptr)&f42,
	(funptr)&f43,
	(funptr)&f44,
	(funptr)&f45,
	(funptr)&f46,
	(funptr)&f47,
	(funptr)&f48,
	(funptr)&f49,
	(funptr)&f50,
	(funptr)&f51,
	(funptr)&f52,
	(funptr)&f53,
	(funptr)&f54,
	(funptr)&f55,
	(funptr)&f56,
	(funptr)&f57,
	(funptr)&f58,
	(funptr)&f59,
	(funptr)&f60,
	(funptr)&f61,
	(funptr)&f62,
	(funptr)&f63,
	(funptr)&f64,
	(funptr)&f65,
	(funptr)&f66,
	(funptr)&f67,
	(funptr)&f68,
	(funptr)&f69,
	(funptr)&f70,
	(funptr)&f71,
	(funptr)&f72,
	(funptr)&f73,
	(funptr)&f74,
	(funptr)&f75,
	(funptr)&f76,
	(funptr)&f77,
	(funptr)&f78,
	(funptr)&f79,
	(funptr)&f80,
	(funptr)&f81,
	(funptr)&f82,
	(funptr)&f83,
	(funptr)&f84,
	(funptr)&f85,
	(funptr)&f86,
	(funptr)&f87,
	(funptr)&f88,
	(funptr)&f89,
	(funptr)&f90,
	(funptr)&f91,
	(funptr)&f92,
	(funptr)&f93,
	(funptr)&f94,
	(funptr)&f95,
	(funptr)&f96,
	(funptr)&f97,
	(funptr)&f98,
	(funptr)&f99,
	(funptr)&f100,
	(funptr)&f101,
	(funptr)&f102,
	(funptr)&f103,
	(funptr)&f104,
	(funptr)&f105,
	(funptr)&f106,
	(funptr)&f107,
	(funptr)&f108,
	(funptr)&f109,
	(funptr)&f110,
	(funptr)&f111,
	(funptr)&f112,
	(funptr)&f113,
	(funptr)&f114,
	(funptr)&f115,
	(funptr)&f116,
	(funptr)&f117,
	(funptr)&f118,
	(funptr)&f119,
	(funptr)&f120,
	(funptr)&f121,
	(funptr)&f122,
	(funptr)&f123,
	(funptr)&f124,
	(funptr)&f125,
	(funptr)&f126,
	(funptr)&f127,
	(funptr)&f128,
	(funptr)&f129,
	(funptr)&f130,
	(funptr)&f131,
	(funptr)&f132,
	(funptr)&f133,
	(funptr)&f134,
	(funptr)&f135,
	(funptr)&f136,
	(funptr)&f137,
	(funptr)&f138,
	(funptr)&f139,
	(funptr)&f140,
	(funptr)&f141,
	(funptr)&f142,
	(funptr)&f143,
	(funptr)&f144,
	(funptr)&f145,
	(funptr)&f146,
	(funptr)&f147,
	(funptr)&f148,
	(funptr)&f149,
	(funptr)&f150,
	(funptr)&f151,
	(funptr)&f152,
	(funptr)&f153,
	(funptr)&f154,
	(funptr)&f155,
	(funptr)&f156,
	(funptr)&f157,
	(funptr)&f158,
	(funptr)&f159,
	(funptr)&f160,
	(funptr)&f161,
	(funptr)&f162,
	(funptr)&f163,
	(funptr)&f164,
	(funptr)&f165,
	(funptr)&f166,
	(funptr)&f167,
	(funptr)&f168,
	(funptr)&f169,
	(funptr)&f170,
	(funptr)&f171,
	(funptr)&f172,
	(funptr)&f173,
	(funptr)&f174,
	(funptr)&f175,
	(funptr)&f176,
	(funptr)&f177,
	(funptr)&f178,
	(funptr)&f179,
	(funptr)&f180,
	(funptr)&f181,
	(funptr)&f182,
	(funptr)&f183,
	(funptr)&f184,
	(funptr)&f185,
	(funptr)&f186,
	(funptr)&f187,
	(funptr)&f188,
	(funptr)&f189,
	(funptr)&f190,
	(funptr)&f191,
	(funptr)&f192,
	(funptr)&f193,
	(funptr)&f194,
	(funptr)&f195,
	(funptr)&f196,
	(funptr)&f197,
	(funptr)&f198,
	(funptr)&f199,
	(funptr)&f200,
	(funptr)&f201,
	(funptr)&f202,
	(funptr)&f203,
	(funptr)&f204,
	(funptr)&f205,
	(funptr)&f206,
	(funptr)&f207,
	(funptr)&f208,
	(funptr)&f209,
	(funptr)&f210,
	(funptr)&f211,
	(funptr)&f212,
	(funptr)&f213,
	(funptr)&f214,
	(funptr)&f215,
	(funptr)&f216,
	(funptr)&f217,
	(funptr)&f218,
	(funptr)&f219,
	(funptr)&f220,
	(funptr)&f221,
	(funptr)&f222,
	(funptr)&f223,
	(funptr)&f224,
	(funptr)&f225,
	(funptr)&f226,
	(funptr)&f227,
	(funptr)&f228,
	(funptr)&f229,
	(funptr)&f230,
	(funptr)&f231,
	(funptr)&f232,
	(funptr)&f233,
	(funptr)&f234,
	(funptr)&f235,
	(funptr)&f236,
	(funptr)&f237,
	(funptr)&f238,
	(funptr)&f239,
	(funptr)&f240,
	(funptr)&f241,
	(funptr)&f242,
	(funptr)&f243,
	(funptr)&f244,
	(funptr)&f245,
	(funptr)&f246,
	(funptr)&f247,
	(funptr)&f248,
	(funptr)&f249,
	(funptr)&f250,
	(funptr)&f251,
	(funptr)&f252,
	(funptr)&f253,
	(funptr)&f254,
	(funptr)&f255,
	(funptr)&f256,
	(funptr)&f257,
	(funptr)&f258,
	(funptr)&f259,
	(funptr)&f260,
	(funptr)&f261,
	(funptr)&f262,
	(funptr)&f263,
	(funptr)&f264,
	(funptr)&f265,
	(funptr)&f266,
	(funptr)&f267,
	(funptr)&f268,
	(funptr)&f269,
	(funptr)&f270,
	(funptr)&f271,
	(funptr)&f272,
	(funptr)&f273,
	(funptr)&f274,
	(funptr)&f275,
	(funptr)&f276,
	(funptr)&f277,
	(funptr)&f278,
	(funptr)&f279,
	(funptr)&f280,
	(funptr)&f281,
	(funptr)&f282,
	(funptr)&f283,
	(funptr)&f284,
	(funptr)&f285,
	(funptr)&f286,
	(funptr)&f287,
	(funptr)&f288,
	(funptr)&f289,
	(funptr)&f290,
	(funptr)&f291,
	(funptr)&f292,
	(funptr)&f293,
	(funptr)&f294,
	(funptr)&f295,
	(funptr)&f296,
	(funptr)&f297,
	(funptr)&f298,
	(funptr)&f299,
	(funptr)&f300,
	(funptr)&f301,
	(funptr)&f302,
	(funptr)&f303,
	(funptr)&f304,
	(funptr)&f305,
	(funptr)&f306,
	(funptr)&f307,
	(funptr)&f308,
	(funptr)&f309,
	(funptr)&f310,
	(funptr)&f311,
	(funptr)&f312,
	(funptr)&f313,
	(funptr)&f314,
	(funptr)&f315,
	(funptr)&f316,
	(funptr)&f317,
	(funptr)&f318,
	(funptr)&f319,
	(funptr)&f320,
	(funptr)&f321,
	(funptr)&f322,
	(funptr)&f323,
	(funptr)&f324,
	(funptr)&f325,
	(funptr)&f326,
	(funptr)&f327,
	(funptr)&f328,
	(funptr)&f329,
	(funptr)&f330,
	(funptr)&f331,
	(funptr)&f332,
	(funptr)&f333,
	(funptr)&f334,
	(funptr)&f335,
	(funptr)&f336,
	(funptr)&f337,
	(funptr)&f338,
	(funptr)&f339,
	(funptr)&f340,
	(funptr)&f341,
	(funptr)&f342,
	(funptr)&f343,
	(funptr)&f344,
	(funptr)&f345,
	(funptr)&f346,
	(funptr)&f347,
	(funptr)&f348,
	(funptr)&f349,
	(funptr)&f350,
	(funptr)&f351,
	(funptr)&f352,
	(funptr)&f353,
	(funptr)&f354,
	(funptr)&f355,
	(funptr)&f356,
	(funptr)&f357,
	(funptr)&f358,
	(funptr)&f359,
	(funptr)&f360,
	(funptr)&f361,
	(funptr)&f362,
	(funptr)&f363,
	(funptr)&f364,
	(funptr)&f365,
	(funptr)&f366,
	(funptr)&f367,
	(funptr)&f368,
	(funptr)&f369,
	(funptr)&f370,
	(funptr)&f371,
	(funptr)&f372,
	(funptr)&f373,
	(funptr)&f374,
	(funptr)&f375,
	(funptr)&f376,
	(funptr)&f377,
	(funptr)&f378,
	(funptr)&f379,
	(funptr)&f380,
	(funptr)&f381,
	(funptr)&f382,
	(funptr)&f383,
	(funptr)&f384,
	(funptr)&f385,
	(funptr)&f386,
	(funptr)&f387,
	(funptr)&f388,
	(funptr)&f389,
	(funptr)&f390,
	(funptr)&f391,
	(funptr)&f392,
	(funptr)&f393,
	(funptr)&f394,
	(funptr)&f395,
	(funptr)&f396,
	(funptr)&f397,
	(funptr)&f398,
	(funptr)&f399,
};
char const * G_sigtab[] = {
	"jpdfj{lssfd}i{{i}spfcpplisp}{ssd}ic{jcdsppjld}cp",
	"v{{li}pp{pdfddcpl}}ppf",
	"cjdjjsp{il{dsisjc}pjcfjs}fdjfsl",
	"{l}lcls",
	"sjcfsf{pjlil}is",
	"cds{cdl}ls{ssfpp}pf",
	"pf{fipfcpisfjjjc}jcsf",
	"vdpj{ffj{jldlpjpdipp}cjfllis{dcifdjpcil}j}j",
	"pli{sppjffipdp}ppslsjdils",
	"j{jcl}lclijcsipcspl",
	"f{jdcl}df",
	"c{cddcdclsspc}cd{plijsdfpdjdcppjcfsf}s{fllpfdfjlssspc}fd",
	"{fjjpc}j",
	"{ddij}",
	"pdj{s}cf{l{f{f}dpfpi}{splsjcpl{jpdljldip}di{ldp}cldi}sjjs{d}ijdfisc}jpfsp",
	"{i}",
	"ljd{icscispid{psc{sijpdfcfs}pp}lpildid{d}pfldfi{{fdljjl}pi}c{{ljs}cjf{spldcilisj}}{ijii{psjcjdsjp}ddpsppl}{pjdlscdlip}jljldcps{scp{fdlsslcfds}{jsljpf}fdpdpf{spl}fcjddsp{slfppcc}p}pipj{ss}df{di}s}",
	"ljccici{d}dds",
	"ssj{pdpflilpislldsiijcpiidlcifsp}jj",
	"idd{djsidssj}dpdfjjj",
	"{pjsicd}pdscdcspfpdidlcd",
	"f{jjs}cdfcf{cljsff}sfijpjds",
	"c{sjldjfi}",
	"vi{{l{pfjpjf}sdjjdjf}fds{cdlcpdjlps{ldpdils}ipjc}c}psd{lps{sjdpcijjcdlcccls}lcpis}cdlc",
	"s{pdlppjc{jjidliifp}}fjpclf",
	"sc{plcipffp{ipijpidsp}jjf}lspddpdfc{ijlclc}{fd}sd",
	"l{d{jlfjpsp}ppjfpicsccj}d",
	"li{cllclcii}",
	"j{dsiliiscdljldf}",
	"ijpisspjspplp{jidpjcj}il",
	"pccfdd{c}li",
	"{ps{{diii}cijsl}jiisds{dcilj}}il{ssplcffjdsjsjficdcjjijipid}cspi",
	"pjcf{jdjdcpcjcjcclcsffd{dclfllfss}cpjd}",
	"{lfp}",
	"cjij{iffcifi}",
	"pljlcf{c}",
	"jjf{lj}icdsc",
	"{jiclfls}s",
	"ldffdjs{lsspsscsj{lpcjspi}j}{spfliccjlspcjfcpc}pjlf",
	"lfliifpd{l{fjlpdc}jdd{sppi}fli}{pjsiiccf}",
	"cp{j}idpisdcl{lp{l}}",
	"{jscdfisciplfjpjjfscffdsfccdjscclifjcsdfpic}ccf",
	"sjppps{dsspsjisifj}fip",
	"{f}",
	"sjll{ljsli}c",
	"ll{fpj{j}idsd}ci",
	"djjijjc{dcdc}d",
	"vfjc{ppsij}{jlpsf}sfj",
	"vcli{jldddjdlicfc}d",
	"{cjjssilsdill{ssfipfsp}iidiiidc}{j}fji",
	"l{dli}{jll{ci}}",
	"jddfsc{{plclip{d}ddspds}ssdi}c",
	"dcsipplcffipjs{df}",
	"sdlssijiifils{ijsplj}",
	"spifl{pscj{pcclp}}fjd",
	"vd{ijfiipsdfii}",
	"diclp{idppsjsjffpjpifcpdccpcj}clipisscs{p}i",
	"vji{pj{ijidlfdcfdlcd}dc{cc}slj}fddpp{jp}clc",
	"{sfjjcccijssjd}ilfpcc{ldccsls}psjijjc",
	"vjcs{s}d",
	"{djl}fics{fsifjjcliidpsf}",
	"{dflipfcfdfissjjdc}p",
	"iff{ifssd}ffijs",
	"ljsppjlfi{icdjjdfflsccsj}jpfls",
	"f{sjllc{sfdld}dpi}i{d}i",
	"djl{fjlis{i}cjlscifisdf{dcipdp}if{cjipfjj}jljdfjcjfscic{jilc{jjpsj}j{pdilcdjsddccsdjjslilddpsf}}ifidf}pj",
	"vjsfcd{fijjslf}f",
	"{lcp}",
	"s{ilss}{ci{pj{fidscispcsjsdpjsfp}ll{ipsccpdddpddcjsisi}dfsjsc{f}csscsf}}llp",
	"{psjdscjilpiisiiijilcijl}{lscjjplfjpdddsicljifff}csci",
	"vslcllci{j}",
	"iscssjjiddlfsfd{i}j",
	"f{lisssfdfdipffdllildl}{piil}pd",
	"d{c}dlfilpcff",
	"l{cl}lf",
	"lcccifdffsisi{fjjsllilsiljicscs{djc}pfcl}ip",
	"lpp{d{ll{fc}jf{jflfjfidipi}sdlcpj{jdiiljs}}spj}ijpsjil",
	"lfpiscsf{sp}l",
	"c{dfcjj{fdid}ddpcpjsjissil{ipccsdfssc}cddildcsicdfic{lsccjlcjpcd}cd}disjjssccjjd",
	"ds{p{sji}pllf}p{dl{jslppfjdddfsjljfjpp}c}",
	"lips{cs}isfddf",
	"ls{lljlpdflplj}{{lissj}pjscli}jjljpds{pfi{{licf}csicpijjfifd{ppdifpjddis}csfcidiijlffs}j}dlp",
	"vjl{jlsflsd}f{jisj}",
	"f{dpf}f{id}sjdpi",
	"d{dfpp}jfds{{cfipjjc}pp}jddfjlips",
	"f{slppfpfjpcccpjiss}spisj",
	"j{clpfdsldspipdlfdfsj}lcijfdpjlsjs{{l}sljspdjfccii{{cisp}jcjdilp}ic}lj",
	"{fljidjsdffsfpjdsfcjf}",
	"{ccpji}scfdii",
	"s{jjlff{jdcfcsdjjlcdjlipfji}csijld}sjf{disics}ljfs",
	"ciplfp{cffi{djsli}cic}icfpi{ldipl}dfsf",
	"{clcc{fss}sfs}cdi{idci}idjp{c}pssj",
	"cdfcjfisj{iccisplfcpcdpdfpc}lpfd",
	"pdsipf{di{dscs{j}}pf{cf{fdfcijllcpidjlfcfdilcsjpdifjcjsfj}ppi}}i",
	"dc{slfcpflfljiiicippssjidddpc}c",
	"vpdjcsdf{ijccj}{ld}{cffsjcpjsdlcldfifll}",
	"ljfsfp{f}j",
	"{{c}sffiiil{pjfsi}sicfjf}",
	"l{jcsljisfcdi}",
	"lljfsj{lc{lsjjllspsljsjsscdicidjfc}fjlsp}jjjijjjslj",
	"iciilppdffscl{cs}j",
	"isjfi{jifci{j{sipisl}ddp}{{jljfiijflcff}pc{dl}dplfjisiccppjs{pplcfcdpcipcjicsldsf}ld}}is{p}jfpj{d{{fjpdcpidlscdjsf}fpjiss{cpii}dspcdjcipdfd{lc}ccfpl{dpdds}fj}jppji}jps",
	"{fji{idddcljijllslfdljjcjifcpffpfs}}",
	"sjlfdc{iid{jjfssjdc}f}{ji}dp{cccpiiicppdddsplspsslclf}ipfjf",
	"pfilfjl{fcipl{jd{jpfjpc}jfpf}csffpccc{{f}silcfs}}dipfdill{cdjdfpcsffippcsdid}",
	"ciffsjd{dif}dspsjl{{pdl}psijfcflijj}",
	"vi{{dplcf}cfl}isdsp{sifscscd}jpd",
	"vldfdfc{lldcc}cscdcc",
	"fjd{i}sc",
	"lfs{jfdpispdis}ffdpcldff",
	"vlddc{cld}pci",
	"fcsf{lsi{flipdiff}sc{sppicp}sif{s}iiic{dilppcslcjlpcfsiddi}{ds}jsci{jfl}dfjd}{p{jfscjj}isfjcfdsd}cfccij",
	"{l}dj{pclpcpfi{sfpiscildscj}dd}lipcfd",
	"pjll{csjccfsff}",
	"cfijjisd{ls}jcslj",
	"pdfij{{fsfpdd}j{ildddsssfi}p}cc",
	"dd{fcp}",
	"cpl{jfldicl}cjf{pi{cicfjdsisfc}cdldclscljlfccppf{jfcjilclfisdsipp}p}slclfdjpd",
	"pcjfjjfliilpdi{jl}l",
	"ifl{jijis}i",
	"{dspiflp}",
	"s{plijdllplsfs}d",
	"cspicjdcfddi{isdip}cs",
	"{lfjld}pfpcsis",
	"lifjifdli{p}",
	"fl{i{jllcdfdfis}p{siipjpjclc}{ilpfcsddflcdlpfpjjifjjdjs}sfl{ll}iid{ddfsjjfsicll}s{isljciipfi}}fddfilj{fdjcpdc}",
	"lsl{di}jpdccfs",
	"{dpi}ls",
	"ci{fdlfpijsiilccsi}l",
	"lddfdipfsjpic{dcdi}l",
	"ld{djpspljijjffs}dcciilclc",
	"p{fclcdcsdidjssdl}icf",
	"{sscisd}fippjdisd",
	"illidfcdflp{p{pd}ldiiiddi}",
	"{ji}icd{d}fp{jfsiijld{pfp}{lsspl{liissldljpd}dcscl}}",
	"{fc}",
	"llj{pl}p{cddciicsfsfpdfjssspsld}fj",
	"iisfidfjcpss{{pfdj}}ps",
	"c{d}{sdsisjjpfcicsdjfcplccj{ijfdcfpcdjscpplcspisfcliccdssc}jjfcljfps}flpj",
	"i{ccjscpcdp{lipsc{psl}j{fddicpscfslds}d}lpjdspdcc}ljdclcidlf{did}",
	"ds{sfjjdcppcffjljfdjsl}{ccsjs}icffcdscd",
	"ijscj{ifsjsfpi}",
	"s{i}",
	"flcicsscjccps{j{sccf}sdip{lfppdficlillccpisjplsdpilpjidcipfiicjdjdilddf}cili}",
	"jljdp{ld{lsijijjic}iljljc{ilcpi{idfcfcdlp}d{ssilsifppc}p}sccdi}cff{isc}jscsfsd",
	"jl{jscp}icldjjc",
	"isplppfl{ddj}dplijdi",
	"p{jcsppljjisfs{pfdcf}pcljpff{jlfdf}islppffs{pdpidiijidfdljfddipl}pdscifd}{pps{ilcpfdilsfcjjljcplcsdd}jjlpsd}sfp",
	"j{i}",
	"s{cl}sssffldl",
	"cijp{jsdffp}ipf{s{lfcp{fsjflicp}{iplifsjdcj}{dp}jlpiidp{sdffd}iiic{ciiipdsjjcfdfcjl}lids{pcsdjifjpsj}}ficjcficcf}ld{d}ci",
	"dp{ppff}dijd",
	"l{jjfcsjllp}isjijdsd{fsc}dsl",
	"pd{s{iij}jf}",
	"pli{djllicjpfissjslicd}cf",
	"plcplpps{icfpcjdcc}ljjflcc{l}",
	"ps{pcpdc{dpsllpp}idl{dsljcp}pf}llplcpls",
	"{if}ficssd",
	"scj{s}ljijpjscpjdid",
	"i{lpjslf}",
	"ssipd{fp}",
	"icdcld{jdfpfill{i}jcpp}clpifpl",
	"fiffisjcfccfdl{cpfjdi}",
	"d{p}dlsdip",
	"cjjl{{fdp}}",
	"dc{jlpjdclifl}ds",
	"{ijjs}fcspf",
	"ppddfdfsi{f}jiic",
	"j{ffcip{pfflijiis}dd{ll{dpldldidldlfisjdjd}f}{lfd}sfffslc}sds",
	"cc{scdfcdpssidfjpfjdfcicljspljllljpicjjd}lip",
	"sslcidj{dilifcdcsjplscjj}ji{lp}ddp",
	"pjcjpp{dclc}sd",
	"c{is}",
	"{dcdf}{ics}{sl}{jclpjifsip}l",
	"{fldjdjpsilcpllsdd}",
	"{d}pdpcss",
	"fcsci{dlslfdpsj{jjfdfcips}pidfjdspc}ijiscd{slplcdlp}sij{sffp}",
	"jcps{ifpdcj}jil{jf{cjl}{ipsjdcdcfiddpdcp}{cffp}ijcpslp}fs{d}",
	"{jlscflf}",
	"dl{ss{fp}ic}f{lf{{s}{lld}ipjljdppfsspjspc}jcl}{sccipijpidjdi}{pipcjljj{jispcipjdjpffsjlfflpccfcsclp}{dsldj}scjfdcdfliicd{sdfdjjis}f{ifcj}fccldld}l",
	"clcifscj{cscpss}lpjdd",
	"ssfps{pd{sjsljcffipfpfijlslpdpcffslidscpiijpflssslcl}s}plpdjiid",
	"ijdcf{discspscpjdfcj}jcci",
	"{jcpfsfljsflf}ifiiplcp",
	"lid{dcp}pfddjd",
	"p{fss{ldfjisj}fd}fspddfl",
	"{sfplfflfc}cs{djid}ifiilcsdc{lic}",
	"{cclci}dd",
	"{pp}pdd",
	"s{idfpi}lcpplfjijjsjpds",
	"{sfjl}",
	"s{d}",
	"f{si}{fpldi}dfc{jcfssls}cdfdscs",
	"cccfdd{dicsjsdj}ppj",
	"difs{{scd{jpdffjdfspifll}ifsjippslj}flfldsij{pcdiiil{d}dcf}l{pc}}jpp",
	"si{idid}{pljljijid{{fpclpsfdf}}lciij}idpsis",
	"v{iji}s{j}l",
	"s{i}ljj",
	"ldpp{dlpdiclpsfp}ldiisl{fllpsicf}il",
	"dilccjfcpf{i}lslp",
	"{s{fsi{pipsssjcpi}ls{cdljsdlppjdl}}ddlpccfss}iiscspi{ifiipcccpcssijslclds{djci{jpdsjcfilfipsjfjp}pc}}ddl",
	"vpsfspccddsdl{llil{dj}fccdlfcpicscl}f",
	"flpjff{sj}",
	"{sc}",
	"{ffipcsii}",
	"djfpii{clddpdcc}fi",
	"pj{ffd}sici{cjpplp}c",
	"{pddd}dp",
	"dlilff{p{dfcljpl}sflcc{l{jpf}ppjidscjcdcsijffidid{jpji}idpsdsfcljildisdjjcccj{icffpcpjfsljicldlfss}j}jd}j",
	"cjf{pscfpl}ff",
	"vsjc{spfjdjj}sfpcl",
	"d{i}ssfss{iiildidldjslscpj}fssss",
	"i{d}csciis{p}f",
	"cps{d{ilijdfjjjpfiddjffi}lfpil{ddiplsldlis}{lffjplsjf}jcp}jd{pis}ci",
	"j{sfspcpclcispdpcifscdsjjd}ddpcjfjf",
	"{jpdc}cdl",
	"pppjislidjfdcp{ilffsf}{ccfld{jlcfjdss}scpd}",
	"dsscssclj{jd}iccsd",
	"j{jpcsidji}pss",
	"sdspf{fd}ccpp{f}dscj",
	"{i}lcspdccpffcjl",
	"lssf{lf}ddpscscp",
	"{fsspdid}li",
	"{ilidifsjp}ss",
	"{s}fcf{sppffp}fpp{fpdls}lpj{ifjdi}j{jjf}",
	"scl{sd{dijs}p{c}pc{ssjcfd{p}pfi}}c",
	"{dcs}",
	"j{sl{ildili}dl{jpc}{jljjcdilffpljdscj}idiildcdisdclsl{iscfdiic}si}",
	"vjdsls{fs{s}}dj",
	"s{si}jicj{jcfldlccii}did{jdcific}idp",
	"cldjpjplp{{d{sjpicsijjccjljldl}}{{lsfj}ji{lfjffpp}}}i",
	"vc{lflpidppcjcfddjijicisclfjppjcjjl}dsp",
	"{ippp{{d}s}}fjsicldljs",
	"ls{jifjlcslcidd}pl{psldl}i",
	"cl{pfilsi{lcscifddpcpdlipii}jfjpp{csspijldlffifjd}psssjjcfcjipijdj}",
	"fdc{iis}sc{d{sdiljpcdcpsdslplfpf}idjcsc{jdsdcfpclicclpjl}}iffplpipij",
	"vcsls{f}p",
	"vdfspd{dssisdfl}{ldfjdlsicdlljiisjpilllfsjjpjsd}ldjcpjf",
	"jjl{lslddcldlljfcfd}dspplcicccdc",
	"sj{{d{ccpisiillcsfcjjspsld}{dddpfdfi}{ssc}ppcdi}dpi}cl",
	"vi{sp}cpi",
	"plpcpifj{isp{dldplippsippisfjcspjsspd}c}pdfl",
	"f{ijl}jcdcisi{pssppdps}jijcjf",
	"c{llsfcflpj}",
	"csss{{pddcdcccffilpccsll}lpff}dcdljjisc",
	"s{fsjllpjpccd}isfsl",
	"jscf{s}{i{pfllfdfp}{c}ipcdpljsjsjicdp{isisfsdjcj}i}{l}ili",
	"dljjp{dsdfdlppli}sspljss{ff{llcssdffjc}jipp}",
	"v{j}p",
	"lf{lcsdcsdccps{pflfjsc}spd}spfppd{f}cdjijd",
	"fifdlfcf{sifdlcf{j}}pfcsflc",
	"spsdf{ds}ii",
	"fi{dfpf}{dsispjsl}sl{cl}",
	"{cdscfp}{d}{ls}sd",
	"vj{jicpid}ccsjpjss",
	"vdippsps{fpjplp}f{p{cpp}djpi{jli}pjllic}fl",
	"pccd{fllpiddcff{cfispdjfcjidldfp}l{f}jisc}sfdj",
	"{i}j{fcspsjpfpididl}sdpj{pidjjjlpi}fpsspjcs",
	"jcspd{scli}cspfipsidfp",
	"lj{illclp}idjipilcfi{lds}i",
	"{fip}lci{dclslp}fp",
	"f{j}{l{cf}p}dcsc",
	"ps{ppjl{djdj{pjpllijldlpdcjcipisjffijc}f{lcl}}{iii}f{dl}slidil}fpl{pjs}jdi",
	"{ii{ldcs}lsfpdp}jcfdspps",
	"{ls}{iillsplps}lsf",
	"l{dfci{cddidjcp}ljfd{il}}slscs",
	"sjfiii{pfi}pcf",
	"fcpj{c{j}}cfclp{fpl{id}}jipjjl",
	"fjci{picci}di",
	"dldl{pd{sip}psij{jjdccjidc}iidjddicjc}llddll{jsdcidjplfii{jf}issdp}jc",
	"jpii{fsl}il",
	"j{sflfipjdpicijlsfdfc}s",
	"vis{ciifpjp}{cifspsjpjcilssfsij}js",
	"{slflccpilflc{fldcd}pdfpf{jjdjiilf}{f}j}",
	"sjfll{p}j",
	"{fclfjcfi}",
	"lilssp{di{s}jiccf}f",
	"fdsjisjdf{ijdc}pj{iplji{dp}{{jipijssp}licl{ddfdsislp}sc}c{jjjfsddjid{pjjpciijlc}ccccs{jli}f}d}",
	"lds{jccdpcflcfpsjliflpsdffpcdf}",
	"dcj{lfdlcisfjllsdj{iilpdjcscissd}fspjffpdi}sccslcddlddid",
	"isdj{sffsljls}{f}{isdcscfjilsfsccspfj}cspfcdljp{{ls}isc{{ldsddcjjcccip}fclj{jiilspfijlfci}}pcj{cl}j}",
	"sdjfsjd{jssfcjffpjpfs}ff{jliplfis}sjjj",
	"jcdpi{fji}{iscjcisi}iclj",
	"i{fdjisps}{s{sccjcilspi}iiiisd{sc}fi}lcplp{fjd}jsijcsc",
	"dlcjsf{j}lisidpfd{p}s",
	"{ljlf{ldpcfijpcci}ci{flj}fjdp}s",
	"{{fpjdspflsdplfffpic{idi}isssp}{jfjdjli}}lpjllf",
	"{pcdfffpci{dfjcfjljifcdpliispsdcsldcijsf}pfp}c{p{ccjjjlls}fpflf}ic",
	"slpdilil{j}fdlppffs",
	"sdf{i{id}fpjjfj}dcfjjpdlc",
	"{cfsdipccplcpssjp}isf",
	"llfsdp{s{sdpidcfifl}lcl}fjild",
	"{ifpjijiisdspclipilsdffijjj}{ic}{ssfjilpdl}cisi{si}ssisiipss",
	"cfsfi{dl}",
	"js{lclislf}c",
	"s{fif{fppijfisdii}jslcclipfsjjdp}fpcddf",
	"pllf{jjppf{ppidcjpcdcd}iffis}dpfjldlp",
	"p{dppcpflflldp{fisfslccd}c{cdjfpijpccllpicjippj}fldplppi}ldsps",
	"pdp{sicddjij}ljcf{jpscf{fslpifilpcddlfid}f{ijcs}lfsli}",
	"di{sppcl}",
	"sicdsijffj{f}",
	"cjipjpfs{pisllilpl}{f}{dciicfjf}c",
	"c{issjdp}",
	"l{icplliiclpcfdll}fdjildjifc",
	"j{j}d",
	"scjlpjjdid{jislsddcdlcl}",
	"{lisplpjsc}fjpdclssfildf",
	"s{piilljjj}pdflc{dccfpfilddd}ij",
	"lsd{flfi}sljl",
	"dcisldl{dic{jpdcl}j}d",
	"{ddisl}",
	"fcpddpcl{slpflli{{fppfscfdpcljdfjdddspdi}i{ldsipdsjcscddcis}csfd}didcic}fcjd",
	"{ii{ipslsdlpi}sijdfdjjs{jds}cs{plsldfpidjdjffp}ilff{lsffsdd}jicdcfiilf}dfsp",
	"{ls}pplji",
	"fips{clcfd}flpfj",
	"{jpssfcfjcidlij}lip",
	"jcipsfddf{fcpsjppiisddpdisdjjpcjdpcjs}fc{lpcpidscc}ijj",
	"ss{djjplijdcljsciscicciifcclicjldfdjc}fcpj",
	"ljfssfi{df{sjspiifssispilf}f{pddsf}ppjjsipplcdddf{clspscs}f}dpjc",
	"{ljs}ls{sffdcdd}c",
	"isls{ps{spci{fifsplfs}lpifdscdjdpcid{lj}fifplijf{i}dfp}iisj}lpljfpcjj",
	"j{spdlljcsfpii}c",
	"lslclpd{icpipfscpsdc}iffsc",
	"f{{c}j{spdsif}lsdcf{sippj}lif}cd",
	"{id}fjc",
	"csijpdcjfss{pjjcffcdcs{j}slliicjsj}",
	"vidisjc{cfpdjj}sfc{iddlp}d",
	"{c}c",
	"pfjjsfpij{f}l",
	"j{sfffjlfd}cjl{fjjidj}scld",
	"j{ifjidjcij{ji}ljfc{pfjjcps}}dllisls{jif}j",
	"dsc{jlsssspcpl}fcsjlf",
	"jdld{jlfldccifjissiljsdicildcjpisddildjfjf}pi",
	"ji{ljcilcdiidlplliifjd}",
	"ssc{lfjlcpd}",
	"{ds}{spf{fpd}cl}lljsc{dd}p{pc{sldflcljips}pspl}j{cdsfdcdfppicjjlfpjlslldfcspjjjslsjc{j{l}jd}dsllfd}",
	"jsdf{ipipp}fsllcfcpi",
	"cjj{dffsp}jcilfcppci",
	"{ppsippjlplfjfsd}dj{lpcjdc}jc",
	"isjfss{dfpdjpid}d",
	"cicjiffijid{jdfj}",
	"p{sjlplssipj}{pjf{dppcsddfj}pjc{{fjcdp}j{idfsjfs}}}fj",
	"f{jd}",
	"dfspp{dl{cjlfplp}}pcccip",
	"{cciflffdpfd}l",
	"vjsfsdsi{cls{ffdji{ipdj}c}sdp{{spipcij}i{cclfd}fcllllpjpi{lsc}}il}l{f}{fffj}cjjcf",
	"dfjjcd{jj{ji{dlldpsdlfpc}}{ji{dcspl}d{sfpfcip}dfdlclcsj}}d{i}cl{slpcjp}",
	"idii{cjdcj{pjddpsfjdfdjldfdjccljijdifpjcjjcf}iijc{cjj}cfjsf{l}sii{dpcjss}sjillcp{ljl}spf}c",
	"{lf}lp",
	"fpsc{ci}dlcfcjsif",
	"fi{lfip}isdl{cslsffjjji}fd{ssdsjcjsdppijcipljisfpp}plfpj",
	"{c}",
	"cdsdldl{lssllsdi}jcs",
	"{scl}ljldsl",
	"ijcl{ff}cpfdpi",
	"jspdpf{{ccsfds}dj}",
	"jl{pficf}lflpj",
	"{llf}sffil",
	"{i}{fpijsl{ijpijdll}i{fsddjsfi}}sfjs",
	"ld{d}{isci}c{cfj}d",
	"lsfppsjd{f}f",
	"lifs{sf{ipjcfljlps}}sssfidipdf",
	"{fcj}sisjjcifdjs{dfjlddj{ppdfpss}}",
	"{spf}{l}j",
	"ljsi{ssldjpjpjlsjcisplfcsspjpjp}f{j}pjj",
	"{{pficjlclpffis}}flcjjj",
	"{pcclf}",
	"{dilsldsplcsidp}psplii{ifjfdj}lcfji{dlps}di",
	"{ljj}sfijljiplpsllsp",
	"sicpcp{{fsff}fljsl}jfc{cccisp{sjj}cisf}cjll",
	"{slf{lpslldjdpjf}pc}{fjfplcls}plspffjc{idssdlfdp}{is}",
	"d{l}",
	"vfj{i{dlscjfl{sifdpdsjcdssllpcjijscdjsc}p}s{f{fsfpl}jjcl{lciicj}jlcj}cp{fjpdcjjlif{icfdcpfjdfddcsdjsd}}ljlij{p{ssfjiisjddpllilp}ddddficsljc}sss{pjsdd}lll}{jldssl{{f}ssccjsiidpjlii}dd{plscsisfccj}clscppsdd{jcjfjijsc}pi}dspd",
	"p{l{{csddpssc}fsiijclffj}pipsfjcci{sjp}{lsclcffi}}j",
	"dcic{psid{ciiilcjfsilfld}il}s{jdpff}{si}lsfj",
	"i{ppsdidfsjjcssslspjiicfsicpcicpjdliciipsidjjip}pidd",
	"iips{idp}di{cjfi}jdsilcd{plpsliifjfifpfj}c",
	"f{{sifsp}jjdc}sc",
	"fssfiid{lfdfsslipfpcic}llcidpcs",
	"icfplp{ii}ii{{jpsdlllpdcdjjis{fcsi}fiicl}{j{s}}jjj}sfdfpd",
	"cjjic{jdpipcdslilpi}sjccfcj{lspld}dsi",
	"{ccjclpspdllcddf}",
	"vsl{ilcpi}djildcfljcii",
	"lpp{pjfcpsjfp}scl",
	"s{cll}cpdfdfclpcci",
	"jlcf{if}llffspsss",
	"filjdpcsf{jdcdddiflsj}j",
	"l{jlijij}pcjf{jp{lddsjc}fjj{dfsppdippffidpfccll}ijflfdljc{sdlij}}",
	"dfffpdp{ijjdpflpdslli}ic{llj}",
	"p{d}pil",
	"{slcjfcplcjcfpjjcs}islpjc{jidsiififd}sj",
	"sl{jlfd}f",
	"sjscipdlcdlp{lp}c",
	"vc{ci{clff}ls}",
	"fp{jp{dccllcdp}}js",
	"i{dljddp{cdj}sijdpldj}p",
	"c{pdpff{fjj{sfdjjiccssfd}{psllccsfdpji}ijpcd{id}j}piflipcjcllcfs{ldsffjcsjdcfp}clpjscpfc}dlipjlssiics",
	"vfsiiffs{sc}p",
	"ij{jljlfcpij}cfjfcjlpps",
	"l{p}lj{c}lfss",
};
const char* G_agg_sigs[]  = {
	"{lssfd}",
	"{i}",
	"{{i}spfcpplisp}",
	"{ssd}",
	"{jcdsppjld}",
	"{li}",
	"{pdfddcpl}",
	"{{li}pp{pdfddcpl}}",
	"{dsisjc}",
	"{il{dsisjc}pjcfjs}",
	"{l}",
	"{pjlil}",
	"{cdl}",
	"{ssfpp}",
	"{fipfcpisfjjjc}",
	"{jldlpjpdipp}",
	"{dcifdjpcil}",
	"{ffj{jldlpjpdipp}cjfllis{dcifdjpcil}j}",
	"{sppjffipdp}",
	"{jcl}",
	"{jdcl}",
	"{cddcdclsspc}",
	"{plijsdfpdjdcppjcfsf}",
	"{fllpfdfjlssspc}",
	"{fjjpc}",
	"{ddij}",
	"{s}",
	"{f}",
	"{f{f}dpfpi}",
	"{jpdljldip}",
	"{ldp}",
	"{splsjcpl{jpdljldip}di{ldp}cldi}",
	"{d}",
	"{l{f{f}dpfpi}{splsjcpl{jpdljldip}di{ldp}cldi}sjjs{d}ijdfisc}",
	"{sijpdfcfs}",
	"{psc{sijpdfcfs}pp}",
	"{fdljjl}",
	"{{fdljjl}pi}",
	"{ljs}",
	"{spldcilisj}",
	"{{ljs}cjf{spldcilisj}}",
	"{psjcjdsjp}",
	"{ijii{psjcjdsjp}ddpsppl}",
	"{pjdlscdlip}",
	"{fdlsslcfds}",
	"{jsljpf}",
	"{spl}",
	"{slfppcc}",
	"{scp{fdlsslcfds}{jsljpf}fdpdpf{spl}fcjddsp{slfppcc}p}",
	"{ss}",
	"{di}",
	"{icscispid{psc{sijpdfcfs}pp}lpildid{d}pfldfi{{fdljjl}pi}c{{ljs}cjf{spldcilisj}}{ijii{psjcjdsjp}ddpsppl}{pjdlscdlip}jljldcps{scp{fdlsslcfds}{jsljpf}fdpdpf{spl}fcjddsp{slfppcc}p}pipj{ss}df{di}s}",
	"{pdpflilpislldsiijcpiidlcifsp}",
	"{djsidssj}",
	"{pjsicd}",
	"{jjs}",
	"{cljsff}",
	"{sjldjfi}",
	"{pfjpjf}",
	"{l{pfjpjf}sdjjdjf}",
	"{ldpdils}",
	"{cdlcpdjlps{ldpdils}ipjc}",
	"{{l{pfjpjf}sdjjdjf}fds{cdlcpdjlps{ldpdils}ipjc}c}",
	"{sjdpcijjcdlcccls}",
	"{lps{sjdpcijjcdlcccls}lcpis}",
	"{jjidliifp}",
	"{pdlppjc{jjidliifp}}",
	"{ipijpidsp}",
	"{plcipffp{ipijpidsp}jjf}",
	"{ijlclc}",
	"{fd}",
	"{jlfjpsp}",
	"{d{jlfjpsp}ppjfpicsccj}",
	"{cllclcii}",
	"{dsiliiscdljldf}",
	"{jidpjcj}",
	"{c}",
	"{diii}",
	"{{diii}cijsl}",
	"{dcilj}",
	"{ps{{diii}cijsl}jiisds{dcilj}}",
	"{ssplcffjdsjsjficdcjjijipid}",
	"{dclfllfss}",
	"{jdjdcpcjcjcclcsffd{dclfllfss}cpjd}",
	"{lfp}",
	"{iffcifi}",
	"{lj}",
	"{jiclfls}",
	"{lpcjspi}",
	"{lsspsscsj{lpcjspi}j}",
	"{spfliccjlspcjfcpc}",
	"{fjlpdc}",
	"{sppi}",
	"{l{fjlpdc}jdd{sppi}fli}",
	"{pjsiiccf}",
	"{j}",
	"{lp{l}}",
	"{jscdfisciplfjpjjfscffdsfccdjscclifjcsdfpic}",
	"{dsspsjisifj}",
	"{ljsli}",
	"{fpj{j}idsd}",
	"{dcdc}",
	"{ppsij}",
	"{jlpsf}",
	"{jldddjdlicfc}",
	"{ssfipfsp}",
	"{cjjssilsdill{ssfipfsp}iidiiidc}",
	"{dli}",
	"{ci}",
	"{jll{ci}}",
	"{plclip{d}ddspds}",
	"{{plclip{d}ddspds}ssdi}",
	"{df}",
	"{ijsplj}",
	"{pcclp}",
	"{pscj{pcclp}}",
	"{ijfiipsdfii}",
	"{idppsjsjffpjpifcpdccpcj}",
	"{p}",
	"{ijidlfdcfdlcd}",
	"{cc}",
	"{pj{ijidlfdcfdlcd}dc{cc}slj}",
	"{jp}",
	"{sfjjcccijssjd}",
	"{ldccsls}",
	"{djl}",
	"{fsifjjcliidpsf}",
	"{dflipfcfdfissjjdc}",
	"{ifssd}",
	"{icdjjdfflsccsj}",
	"{sfdld}",
	"{sjllc{sfdld}dpi}",
	"{dcipdp}",
	"{cjipfjj}",
	"{jjpsj}",
	"{pdilcdjsddccsdjjslilddpsf}",
	"{jilc{jjpsj}j{pdilcdjsddccsdjjslilddpsf}}",
	"{fjlis{i}cjlscifisdf{dcipdp}if{cjipfjj}jljdfjcjfscic{jilc{jjpsj}j{pdilcdjsddccsdjjslilddpsf}}ifidf}",
	"{fijjslf}",
	"{lcp}",
	"{ilss}",
	"{fidscispcsjsdpjsfp}",
	"{ipsccpdddpddcjsisi}",
	"{pj{fidscispcsjsdpjsfp}ll{ipsccpdddpddcjsisi}dfsjsc{f}csscsf}",
	"{ci{pj{fidscispcsjsdpjsfp}ll{ipsccpdddpddcjsisi}dfsjsc{f}csscsf}}",
	"{psjdscjilpiisiiijilcijl}",
	"{lscjjplfjpdddsicljifff}",
	"{lisssfdfdipffdllildl}",
	"{piil}",
	"{cl}",
	"{djc}",
	"{fjjsllilsiljicscs{djc}pfcl}",
	"{fc}",
	"{jflfjfidipi}",
	"{jdiiljs}",
	"{ll{fc}jf{jflfjfidipi}sdlcpj{jdiiljs}}",
	"{d{ll{fc}jf{jflfjfidipi}sdlcpj{jdiiljs}}spj}",
	"{sp}",
	"{fdid}",
	"{ipccsdfssc}",
	"{lsccjlcjpcd}",
	"{dfcjj{fdid}ddpcpjsjissil{ipccsdfssc}cddildcsicdfic{lsccjlcjpcd}cd}",
	"{sji}",
	"{p{sji}pllf}",
	"{jslppfjdddfsjljfjpp}",
	"{dl{jslppfjdddfsjljfjpp}c}",
	"{cs}",
	"{lljlpdflplj}",
	"{lissj}",
	"{{lissj}pjscli}",
	"{licf}",
	"{ppdifpjddis}",
	"{{licf}csicpijjfifd{ppdifpjddis}csfcidiijlffs}",
	"{pfi{{licf}csicpijjfifd{ppdifpjddis}csfcidiijlffs}j}",
	"{jlsflsd}",
	"{jisj}",
	"{dpf}",
	"{id}",
	"{dfpp}",
	"{cfipjjc}",
	"{{cfipjjc}pp}",
	"{slppfpfjpcccpjiss}",
	"{clpfdsldspipdlfdfsj}",
	"{cisp}",
	"{{cisp}jcjdilp}",
	"{{l}sljspdjfccii{{cisp}jcjdilp}ic}",
	"{fljidjsdffsfpjdsfcjf}",
	"{ccpji}",
	"{jdcfcsdjjlcdjlipfji}",
	"{jjlff{jdcfcsdjjlcdjlipfji}csijld}",
	"{disics}",
	"{djsli}",
	"{cffi{djsli}cic}",
	"{ldipl}",
	"{fss}",
	"{clcc{fss}sfs}",
	"{idci}",
	"{iccisplfcpcdpdfpc}",
	"{dscs{j}}",
	"{fdfcijllcpidjlfcfdilcsjpdifjcjsfj}",
	"{cf{fdfcijllcpidjlfcfdilcsjpdifjcjsfj}ppi}",
	"{di{dscs{j}}pf{cf{fdfcijllcpidjlfcfdilcsjpdifjcjsfj}ppi}}",
	"{slfcpflfljiiicippssjidddpc}",
	"{ijccj}",
	"{ld}",
	"{cffsjcpjsdlcldfifll}",
	"{pjfsi}",
	"{{c}sffiiil{pjfsi}sicfjf}",
	"{jcsljisfcdi}",
	"{lsjjllspsljsjsscdicidjfc}",
	"{lc{lsjjllspsljsjsscdicidjfc}fjlsp}",
	"{sipisl}",
	"{j{sipisl}ddp}",
	"{jljfiijflcff}",
	"{dl}",
	"{pplcfcdpcipcjicsldsf}",
	"{{jljfiijflcff}pc{dl}dplfjisiccppjs{pplcfcdpcipcjicsldsf}ld}",
	"{jifci{j{sipisl}ddp}{{jljfiijflcff}pc{dl}dplfjisiccppjs{pplcfcdpcipcjicsldsf}ld}}",
	"{fjpdcpidlscdjsf}",
	"{cpii}",
	"{lc}",
	"{dpdds}",
	"{{fjpdcpidlscdjsf}fpjiss{cpii}dspcdjcipdfd{lc}ccfpl{dpdds}fj}",
	"{d{{fjpdcpidlscdjsf}fpjiss{cpii}dspcdjcipdfd{lc}ccfpl{dpdds}fj}jppji}",
	"{idddcljijllslfdljjcjifcpffpfs}",
	"{fji{idddcljijllslfdljjcjifcpffpfs}}",
	"{jjfssjdc}",
	"{iid{jjfssjdc}f}",
	"{ji}",
	"{cccpiiicppdddsplspsslclf}",
	"{jpfjpc}",
	"{jd{jpfjpc}jfpf}",
	"{{f}silcfs}",
	"{fcipl{jd{jpfjpc}jfpf}csffpccc{{f}silcfs}}",
	"{cdjdfpcsffippcsdid}",
	"{dif}",
	"{pdl}",
	"{{pdl}psijfcflijj}",
	"{dplcf}",
	"{{dplcf}cfl}",
	"{sifscscd}",
	"{lldcc}",
	"{jfdpispdis}",
	"{cld}",
	"{flipdiff}",
	"{sppicp}",
	"{dilppcslcjlpcfsiddi}",
	"{ds}",
	"{jfl}",
	"{lsi{flipdiff}sc{sppicp}sif{s}iiic{dilppcslcjlpcfsiddi}{ds}jsci{jfl}dfjd}",
	"{jfscjj}",
	"{p{jfscjj}isfjcfdsd}",
	"{sfpiscildscj}",
	"{pclpcpfi{sfpiscildscj}dd}",
	"{csjccfsff}",
	"{ls}",
	"{fsfpdd}",
	"{ildddsssfi}",
	"{{fsfpdd}j{ildddsssfi}p}",
	"{fcp}",
	"{jfldicl}",
	"{cicfjdsisfc}",
	"{jfcjilclfisdsipp}",
	"{pi{cicfjdsisfc}cdldclscljlfccppf{jfcjilclfisdsipp}p}",
	"{jl}",
	"{jijis}",
	"{dspiflp}",
	"{plijdllplsfs}",
	"{isdip}",
	"{lfjld}",
	"{jllcdfdfis}",
	"{siipjpjclc}",
	"{ilpfcsddflcdlpfpjjifjjdjs}",
	"{ll}",
	"{ddfsjjfsicll}",
	"{isljciipfi}",
	"{i{jllcdfdfis}p{siipjpjclc}{ilpfcsddflcdlpfpjjifjjdjs}sfl{ll}iid{ddfsjjfsicll}s{isljciipfi}}",
	"{fdjcpdc}",
	"{dpi}",
	"{fdlfpijsiilccsi}",
	"{dcdi}",
	"{djpspljijjffs}",
	"{fclcdcsdidjssdl}",
	"{sscisd}",
	"{pd}",
	"{p{pd}ldiiiddi}",
	"{pfp}",
	"{liissldljpd}",
	"{lsspl{liissldljpd}dcscl}",
	"{jfsiijld{pfp}{lsspl{liissldljpd}dcscl}}",
	"{pl}",
	"{cddciicsfsfpdfjssspsld}",
	"{pfdj}",
	"{{pfdj}}",
	"{ijfdcfpcdjscpplcspisfcliccdssc}",
	"{sdsisjjpfcicsdjfcplccj{ijfdcfpcdjscpplcspisfcliccdssc}jjfcljfps}",
	"{psl}",
	"{fddicpscfslds}",
	"{lipsc{psl}j{fddicpscfslds}d}",
	"{ccjscpcdp{lipsc{psl}j{fddicpscfslds}d}lpjdspdcc}",
	"{did}",
	"{sfjjdcppcffjljfdjsl}",
	"{ccsjs}",
	"{ifsjsfpi}",
	"{sccf}",
	"{lfppdficlillccpisjplsdpilpjidcipfiicjdjdilddf}",
	"{j{sccf}sdip{lfppdficlillccpisjplsdpilpjidcipfiicjdjdilddf}cili}",
	"{lsijijjic}",
	"{idfcfcdlp}",
	"{ssilsifppc}",
	"{ilcpi{idfcfcdlp}d{ssilsifppc}p}",
	"{ld{lsijijjic}iljljc{ilcpi{idfcfcdlp}d{ssilsifppc}p}sccdi}",
	"{isc}",
	"{jscp}",
	"{ddj}",
	"{pfdcf}",
	"{jlfdf}",
	"{pdpidiijidfdljfddipl}",
	"{jcsppljjisfs{pfdcf}pcljpff{jlfdf}islppffs{pdpidiijidfdljfddipl}pdscifd}",
	"{ilcpfdilsfcjjljcplcsdd}",
	"{pps{ilcpfdilsfcjjljcplcsdd}jjlpsd}",
	"{jsdffp}",
	"{fsjflicp}",
	"{iplifsjdcj}",
	"{dp}",
	"{sdffd}",
	"{ciiipdsjjcfdfcjl}",
	"{pcsdjifjpsj}",
	"{lfcp{fsjflicp}{iplifsjdcj}{dp}jlpiidp{sdffd}iiic{ciiipdsjjcfdfcjl}lids{pcsdjifjpsj}}",
	"{s{lfcp{fsjflicp}{iplifsjdcj}{dp}jlpiidp{sdffd}iiic{ciiipdsjjcfdfcjl}lids{pcsdjifjpsj}}ficjcficcf}",
	"{ppff}",
	"{jjfcsjllp}",
	"{fsc}",
	"{iij}",
	"{s{iij}jf}",
	"{djllicjpfissjslicd}",
	"{icfpcjdcc}",
	"{dpsllpp}",
	"{dsljcp}",
	"{pcpdc{dpsllpp}idl{dsljcp}pf}",
	"{if}",
	"{lpjslf}",
	"{fp}",
	"{jdfpfill{i}jcpp}",
	"{cpfjdi}",
	"{fdp}",
	"{{fdp}}",
	"{jlpjdclifl}",
	"{ijjs}",
	"{pfflijiis}",
	"{dpldldidldlfisjdjd}",
	"{ll{dpldldidldlfisjdjd}f}",
	"{lfd}",
	"{ffcip{pfflijiis}dd{ll{dpldldidldlfisjdjd}f}{lfd}sfffslc}",
	"{scdfcdpssidfjpfjdfcicljspljllljpicjjd}",
	"{dilifcdcsjplscjj}",
	"{lp}",
	"{dclc}",
	"{is}",
	"{dcdf}",
	"{ics}",
	"{sl}",
	"{jclpjifsip}",
	"{fldjdjpsilcpllsdd}",
	"{jjfdfcips}",
	"{dlslfdpsj{jjfdfcips}pidfjdspc}",
	"{slplcdlp}",
	"{sffp}",
	"{ifpdcj}",
	"{cjl}",
	"{ipsjdcdcfiddpdcp}",
	"{cffp}",
	"{jf{cjl}{ipsjdcdcfiddpdcp}{cffp}ijcpslp}",
	"{jlscflf}",
	"{ss{fp}ic}",
	"{lld}",
	"{{s}{lld}ipjljdppfsspjspc}",
	"{lf{{s}{lld}ipjljdppfsspjspc}jcl}",
	"{sccipijpidjdi}",
	"{jispcipjdjpffsjlfflpccfcsclp}",
	"{dsldj}",
	"{sdfdjjis}",
	"{ifcj}",
	"{pipcjljj{jispcipjdjpffsjlfflpccfcsclp}{dsldj}scjfdcdfliicd{sdfdjjis}f{ifcj}fccldld}",
	"{cscpss}",
	"{sjsljcffipfpfijlslpdpcffslidscpiijpflssslcl}",
	"{pd{sjsljcffipfpfijlslpdpcffslidscpiijpflssslcl}s}",
	"{discspscpjdfcj}",
	"{jcpfsfljsflf}",
	"{dcp}",
	"{ldfjisj}",
	"{fss{ldfjisj}fd}",
	"{sfplfflfc}",
	"{djid}",
	"{lic}",
	"{cclci}",
	"{pp}",
	"{idfpi}",
	"{sfjl}",
	"{si}",
	"{fpldi}",
	"{jcfssls}",
	"{dicsjsdj}",
	"{jpdffjdfspifll}",
	"{scd{jpdffjdfspifll}ifsjippslj}",
	"{pcdiiil{d}dcf}",
	"{pc}",
	"{{scd{jpdffjdfspifll}ifsjippslj}flfldsij{pcdiiil{d}dcf}l{pc}}",
	"{idid}",
	"{fpclpsfdf}",
	"{{fpclpsfdf}}",
	"{pljljijid{{fpclpsfdf}}lciij}",
	"{iji}",
	"{dlpdiclpsfp}",
	"{fllpsicf}",
	"{pipsssjcpi}",
	"{cdljsdlppjdl}",
	"{fsi{pipsssjcpi}ls{cdljsdlppjdl}}",
	"{s{fsi{pipsssjcpi}ls{cdljsdlppjdl}}ddlpccfss}",
	"{jpdsjcfilfipsjfjp}",
	"{djci{jpdsjcfilfipsjfjp}pc}",
	"{ifiipcccpcssijslclds{djci{jpdsjcfilfipsjfjp}pc}}",
	"{dj}",
	"{llil{dj}fccdlfcpicscl}",
	"{sj}",
	"{sc}",
	"{ffipcsii}",
	"{clddpdcc}",
	"{ffd}",
	"{cjpplp}",
	"{pddd}",
	"{dfcljpl}",
	"{jpf}",
	"{jpji}",
	"{icffpcpjfsljicldlfss}",
	"{l{jpf}ppjidscjcdcsijffidid{jpji}idpsdsfcljildisdjjcccj{icffpcpjfsljicldlfss}j}",
	"{p{dfcljpl}sflcc{l{jpf}ppjidscjcdcsijffidid{jpji}idpsdsfcljildisdjjcccj{icffpcpjfsljicldlfss}j}jd}",
	"{pscfpl}",
	"{spfjdjj}",
	"{iiildidldjslscpj}",
	"{ilijdfjjjpfiddjffi}",
	"{ddiplsldlis}",
	"{lffjplsjf}",
	"{d{ilijdfjjjpfiddjffi}lfpil{ddiplsldlis}{lffjplsjf}jcp}",
	"{pis}",
	"{sfspcpclcispdpcifscdsjjd}",
	"{jpdc}",
	"{ilffsf}",
	"{jlcfjdss}",
	"{ccfld{jlcfjdss}scpd}",
	"{jd}",
	"{jpcsidji}",
	"{lf}",
	"{fsspdid}",
	"{ilidifsjp}",
	"{sppffp}",
	"{fpdls}",
	"{ifjdi}",
	"{jjf}",
	"{dijs}",
	"{ssjcfd{p}pfi}",
	"{sd{dijs}p{c}pc{ssjcfd{p}pfi}}",
	"{dcs}",
	"{ildili}",
	"{jpc}",
	"{jljjcdilffpljdscj}",
	"{iscfdiic}",
	"{sl{ildili}dl{jpc}{jljjcdilffpljdscj}idiildcdisdclsl{iscfdiic}si}",
	"{fs{s}}",
	"{jcfldlccii}",
	"{jdcific}",
	"{sjpicsijjccjljldl}",
	"{d{sjpicsijjccjljldl}}",
	"{lsfj}",
	"{lfjffpp}",
	"{{lsfj}ji{lfjffpp}}",
	"{{d{sjpicsijjccjljldl}}{{lsfj}ji{lfjffpp}}}",
	"{lflpidppcjcfddjijicisclfjppjcjjl}",
	"{{d}s}",
	"{ippp{{d}s}}",
	"{jifjlcslcidd}",
	"{psldl}",
	"{lcscifddpcpdlipii}",
	"{csspijldlffifjd}",
	"{pfilsi{lcscifddpcpdlipii}jfjpp{csspijldlffifjd}psssjjcfcjipijdj}",
	"{iis}",
	"{sdiljpcdcpsdslplfpf}",
	"{jdsdcfpclicclpjl}",
	"{d{sdiljpcdcpsdslplfpf}idjcsc{jdsdcfpclicclpjl}}",
	"{dssisdfl}",
	"{ldfjdlsicdlljiisjpilllfsjjpjsd}",
	"{lslddcldlljfcfd}",
	"{ccpisiillcsfcjjspsld}",
	"{dddpfdfi}",
	"{ssc}",
	"{d{ccpisiillcsfcjjspsld}{dddpfdfi}{ssc}ppcdi}",
	"{{d{ccpisiillcsfcjjspsld}{dddpfdfi}{ssc}ppcdi}dpi}",
	"{dldplippsippisfjcspjsspd}",
	"{isp{dldplippsippisfjcspjsspd}c}",
	"{ijl}",
	"{pssppdps}",
	"{llsfcflpj}",
	"{pddcdcccffilpccsll}",
	"{{pddcdcccffilpccsll}lpff}",
	"{fsjllpjpccd}",
	"{pfllfdfp}",
	"{isisfsdjcj}",
	"{i{pfllfdfp}{c}ipcdpljsjsjicdp{isisfsdjcj}i}",
	"{dsdfdlppli}",
	"{llcssdffjc}",
	"{ff{llcssdffjc}jipp}",
	"{pflfjsc}",
	"{lcsdcsdccps{pflfjsc}spd}",
	"{sifdlcf{j}}",
	"{dfpf}",
	"{dsispjsl}",
	"{cdscfp}",
	"{jicpid}",
	"{fpjplp}",
	"{cpp}",
	"{jli}",
	"{p{cpp}djpi{jli}pjllic}",
	"{cfispdjfcjidldfp}",
	"{fllpiddcff{cfispdjfcjidldfp}l{f}jisc}",
	"{fcspsjpfpididl}",
	"{pidjjjlpi}",
	"{scli}",
	"{illclp}",
	"{lds}",
	"{fip}",
	"{dclslp}",
	"{cf}",
	"{l{cf}p}",
	"{pjpllijldlpdcjcipisjffijc}",
	"{lcl}",
	"{djdj{pjpllijldlpdcjcipisjffijc}f{lcl}}",
	"{iii}",
	"{ppjl{djdj{pjpllijldlpdcjcipisjffijc}f{lcl}}{iii}f{dl}slidil}",
	"{pjs}",
	"{ldcs}",
	"{ii{ldcs}lsfpdp}",
	"{iillsplps}",
	"{cddidjcp}",
	"{il}",
	"{dfci{cddidjcp}ljfd{il}}",
	"{pfi}",
	"{c{j}}",
	"{fpl{id}}",
	"{picci}",
	"{sip}",
	"{jjdccjidc}",
	"{pd{sip}psij{jjdccjidc}iidjddicjc}",
	"{jf}",
	"{jsdcidjplfii{jf}issdp}",
	"{fsl}",
	"{sflfipjdpicijlsfdfc}",
	"{ciifpjp}",
	"{cifspsjpjcilssfsij}",
	"{fldcd}",
	"{jjdjiilf}",
	"{slflccpilflc{fldcd}pdfpf{jjdjiilf}{f}j}",
	"{fclfjcfi}",
	"{di{s}jiccf}",
	"{ijdc}",
	"{jipijssp}",
	"{ddfdsislp}",
	"{{jipijssp}licl{ddfdsislp}sc}",
	"{pjjpciijlc}",
	"{jjjfsddjid{pjjpciijlc}ccccs{jli}f}",
	"{iplji{dp}{{jipijssp}licl{ddfdsislp}sc}c{jjjfsddjid{pjjpciijlc}ccccs{jli}f}d}",
	"{jccdpcflcfpsjliflpsdffpcdf}",
	"{iilpdjcscissd}",
	"{lfdlcisfjllsdj{iilpdjcscissd}fspjffpdi}",
	"{sffsljls}",
	"{isdcscfjilsfsccspfj}",
	"{ldsddcjjcccip}",
	"{jiilspfijlfci}",
	"{{ldsddcjjcccip}fclj{jiilspfijlfci}}",
	"{{ls}isc{{ldsddcjjcccip}fclj{jiilspfijlfci}}pcj{cl}j}",
	"{jssfcjffpjpfs}",
	"{jliplfis}",
	"{fji}",
	"{iscjcisi}",
	"{fdjisps}",
	"{sccjcilspi}",
	"{s{sccjcilspi}iiiisd{sc}fi}",
	"{fjd}",
	"{ldpcfijpcci}",
	"{flj}",
	"{ljlf{ldpcfijpcci}ci{flj}fjdp}",
	"{idi}",
	"{fpjdspflsdplfffpic{idi}isssp}",
	"{jfjdjli}",
	"{{fpjdspflsdplfffpic{idi}isssp}{jfjdjli}}",
	"{dfjcfjljifcdpliispsdcsldcijsf}",
	"{pcdfffpci{dfjcfjljifcdpliispsdcsldcijsf}pfp}",
	"{ccjjjlls}",
	"{p{ccjjjlls}fpflf}",
	"{i{id}fpjjfj}",
	"{cfsdipccplcpssjp}",
	"{sdpidcfifl}",
	"{s{sdpidcfifl}lcl}",
	"{ifpjijiisdspclipilsdffijjj}",
	"{ic}",
	"{ssfjilpdl}",
	"{lclislf}",
	"{fppijfisdii}",
	"{fif{fppijfisdii}jslcclipfsjjdp}",
	"{ppidcjpcdcd}",
	"{jjppf{ppidcjpcdcd}iffis}",
	"{fisfslccd}",
	"{cdjfpijpccllpicjippj}",
	"{dppcpflflldp{fisfslccd}c{cdjfpijpccllpicjippj}fldplppi}",
	"{sicddjij}",
	"{fslpifilpcddlfid}",
	"{ijcs}",
	"{jpscf{fslpifilpcddlfid}f{ijcs}lfsli}",
	"{sppcl}",
	"{pisllilpl}",
	"{dciicfjf}",
	"{issjdp}",
	"{icplliiclpcfdll}",
	"{jislsddcdlcl}",
	"{lisplpjsc}",
	"{piilljjj}",
	"{dccfpfilddd}",
	"{flfi}",
	"{jpdcl}",
	"{dic{jpdcl}j}",
	"{ddisl}",
	"{fppfscfdpcljdfjdddspdi}",
	"{ldsipdsjcscddcis}",
	"{{fppfscfdpcljdfjdddspdi}i{ldsipdsjcscddcis}csfd}",
	"{slpflli{{fppfscfdpcljdfjdddspdi}i{ldsipdsjcscddcis}csfd}didcic}",
	"{ipslsdlpi}",
	"{jds}",
	"{plsldfpidjdjffp}",
	"{lsffsdd}",
	"{ii{ipslsdlpi}sijdfdjjs{jds}cs{plsldfpidjdjffp}ilff{lsffsdd}jicdcfiilf}",
	"{clcfd}",
	"{jpssfcfjcidlij}",
	"{fcpsjppiisddpdisdjjpcjdpcjs}",
	"{lpcpidscc}",
	"{djjplijdcljsciscicciifcclicjldfdjc}",
	"{sjspiifssispilf}",
	"{pddsf}",
	"{clspscs}",
	"{df{sjspiifssispilf}f{pddsf}ppjjsipplcdddf{clspscs}f}",
	"{sffdcdd}",
	"{fifsplfs}",
	"{spci{fifsplfs}lpifdscdjdpcid{lj}fifplijf{i}dfp}",
	"{ps{spci{fifsplfs}lpifdscdjdpcid{lj}fifplijf{i}dfp}iisj}",
	"{spdlljcsfpii}",
	"{icpipfscpsdc}",
	"{spdsif}",
	"{sippj}",
	"{{c}j{spdsif}lsdcf{sippj}lif}",
	"{pjjcffcdcs{j}slliicjsj}",
	"{cfpdjj}",
	"{iddlp}",
	"{sfffjlfd}",
	"{fjjidj}",
	"{pfjjcps}",
	"{ifjidjcij{ji}ljfc{pfjjcps}}",
	"{jif}",
	"{jlsssspcpl}",
	"{jlfldccifjissiljsdicildcjpisddildjfjf}",
	"{ljcilcdiidlplliifjd}",
	"{lfjlcpd}",
	"{fpd}",
	"{spf{fpd}cl}",
	"{dd}",
	"{sldflcljips}",
	"{pc{sldflcljips}pspl}",
	"{j{l}jd}",
	"{cdsfdcdfppicjjlfpjlslldfcspjjjslsjc{j{l}jd}dsllfd}",
	"{ipipp}",
	"{dffsp}",
	"{ppsippjlplfjfsd}",
	"{lpcjdc}",
	"{dfpdjpid}",
	"{jdfj}",
	"{sjlplssipj}",
	"{dppcsddfj}",
	"{fjcdp}",
	"{idfsjfs}",
	"{{fjcdp}j{idfsjfs}}",
	"{pjf{dppcsddfj}pjc{{fjcdp}j{idfsjfs}}}",
	"{cjlfplp}",
	"{dl{cjlfplp}}",
	"{cciflffdpfd}",
	"{ipdj}",
	"{ffdji{ipdj}c}",
	"{spipcij}",
	"{cclfd}",
	"{lsc}",
	"{{spipcij}i{cclfd}fcllllpjpi{lsc}}",
	"{cls{ffdji{ipdj}c}sdp{{spipcij}i{cclfd}fcllllpjpi{lsc}}il}",
	"{fffj}",
	"{dlldpsdlfpc}",
	"{ji{dlldpsdlfpc}}",
	"{dcspl}",
	"{sfpfcip}",
	"{ji{dcspl}d{sfpfcip}dfdlclcsj}",
	"{jj{ji{dlldpsdlfpc}}{ji{dcspl}d{sfpfcip}dfdlclcsj}}",
	"{slpcjp}",
	"{pjddpsfjdfdjldfdjccljijdifpjcjjcf}",
	"{cjj}",
	"{dpcjss}",
	"{ljl}",
	"{cjdcj{pjddpsfjdfdjldfdjccljijdifpjcjjcf}iijc{cjj}cfjsf{l}sii{dpcjss}sjillcp{ljl}spf}",
	"{lfip}",
	"{cslsffjjji}",
	"{ssdsjcjsdppijcipljisfpp}",
	"{lssllsdi}",
	"{scl}",
	"{ff}",
	"{ccsfds}",
	"{{ccsfds}dj}",
	"{pficf}",
	"{llf}",
	"{ijpijdll}",
	"{fsddjsfi}",
	"{fpijsl{ijpijdll}i{fsddjsfi}}",
	"{isci}",
	"{cfj}",
	"{ipjcfljlps}",
	"{sf{ipjcfljlps}}",
	"{fcj}",
	"{ppdfpss}",
	"{dfjlddj{ppdfpss}}",
	"{spf}",
	"{ssldjpjpjlsjcisplfcsspjpjp}",
	"{pficjlclpffis}",
	"{{pficjlclpffis}}",
	"{pcclf}",
	"{dilsldsplcsidp}",
	"{ifjfdj}",
	"{dlps}",
	"{ljj}",
	"{fsff}",
	"{{fsff}fljsl}",
	"{sjj}",
	"{cccisp{sjj}cisf}",
	"{lpslldjdpjf}",
	"{slf{lpslldjdpjf}pc}",
	"{fjfplcls}",
	"{idssdlfdp}",
	"{sifdpdsjcdssllpcjijscdjsc}",
	"{dlscjfl{sifdpdsjcdssllpcjijscdjsc}p}",
	"{fsfpl}",
	"{lciicj}",
	"{f{fsfpl}jjcl{lciicj}jlcj}",
	"{icfdcpfjdfddcsdjsd}",
	"{fjpdcjjlif{icfdcpfjdfddcsdjsd}}",
	"{ssfjiisjddpllilp}",
	"{p{ssfjiisjddpllilp}ddddficsljc}",
	"{pjsdd}",
	"{i{dlscjfl{sifdpdsjcdssllpcjijscdjsc}p}s{f{fsfpl}jjcl{lciicj}jlcj}cp{fjpdcjjlif{icfdcpfjdfddcsdjsd}}ljlij{p{ssfjiisjddpllilp}ddddficsljc}sss{pjsdd}lll}",
	"{{f}ssccjsiidpjlii}",
	"{plscsisfccj}",
	"{jcjfjijsc}",
	"{jldssl{{f}ssccjsiidpjlii}dd{plscsisfccj}clscppsdd{jcjfjijsc}pi}",
	"{csddpssc}",
	"{{csddpssc}fsiijclffj}",
	"{sjp}",
	"{lsclcffi}",
	"{l{{csddpssc}fsiijclffj}pipsfjcci{sjp}{lsclcffi}}",
	"{ciiilcjfsilfld}",
	"{psid{ciiilcjfsilfld}il}",
	"{jdpff}",
	"{ppsdidfsjjcssslspjiicfsicpcicpjdliciipsidjjip}",
	"{idp}",
	"{cjfi}",
	"{plpsliifjfifpfj}",
	"{sifsp}",
	"{{sifsp}jjdc}",
	"{lfdfsslipfpcic}",
	"{ii}",
	"{fcsi}",
	"{jpsdlllpdcdjjis{fcsi}fiicl}",
	"{j{s}}",
	"{{jpsdlllpdcdjjis{fcsi}fiicl}{j{s}}jjj}",
	"{jdpipcdslilpi}",
	"{lspld}",
	"{ccjclpspdllcddf}",
	"{ilcpi}",
	"{pjfcpsjfp}",
	"{cll}",
	"{jdcdddiflsj}",
	"{jlijij}",
	"{lddsjc}",
	"{dfsppdippffidpfccll}",
	"{sdlij}",
	"{jp{lddsjc}fjj{dfsppdippffidpfccll}ijflfdljc{sdlij}}",
	"{ijjdpflpdslli}",
	"{llj}",
	"{slcjfcplcjcfpjjcs}",
	"{jidsiififd}",
	"{jlfd}",
	"{clff}",
	"{ci{clff}ls}",
	"{dccllcdp}",
	"{jp{dccllcdp}}",
	"{cdj}",
	"{dljddp{cdj}sijdpldj}",
	"{sfdjjiccssfd}",
	"{psllccsfdpji}",
	"{fjj{sfdjjiccssfd}{psllccsfdpji}ijpcd{id}j}",
	"{ldsffjcsjdcfp}",
	"{pdpff{fjj{sfdjjiccssfd}{psllccsfdpji}ijpcd{id}j}piflipcjcllcfs{ldsffjcsjdcfp}clpjscpfc}",
	"{jljlfcpij}"
};
int G_agg_sizes[] = {
	sizeof(struct A1),
	sizeof(struct A2),
	sizeof(struct A3),
	sizeof(struct A4),
	sizeof(struct A5),
	sizeof(struct A6),
	sizeof(struct A7),
	sizeof(struct A8),
	sizeof(struct A9),
	sizeof(struct A10),
	sizeof(struct A11),
	sizeof(struct A12),
	sizeof(struct A13),
	sizeof(struct A14),
	sizeof(struct A15),
	sizeof(struct A16),
	sizeof(struct A17),
	sizeof(struct A18),
	sizeof(struct A19),
	sizeof(struct A20),
	sizeof(struct A21),
	sizeof(struct A22),
	sizeof(struct A23),
	sizeof(struct A24),
	sizeof(struct A25),
	sizeof(struct A26),
	sizeof(struct A27),
	sizeof(struct A28),
	sizeof(struct A29),
	sizeof(struct A30),
	sizeof(struct A31),
	sizeof(struct A32),
	sizeof(struct A33),
	sizeof(struct A34),
	sizeof(struct A35),
	sizeof(struct A36),
	sizeof(struct A37),
	sizeof(struct A38),
	sizeof(struct A39),
	sizeof(struct A40),
	sizeof(struct A41),
	sizeof(struct A42),
	sizeof(struct A43),
	sizeof(struct A44),
	sizeof(struct A45),
	sizeof(struct A46),
	sizeof(struct A47),
	sizeof(struct A48),
	sizeof(struct A49),
	sizeof(struct A50),
	sizeof(struct A51),
	sizeof(struct A52),
	sizeof(struct A53),
	sizeof(struct A54),
	sizeof(struct A55),
	sizeof(struct A56),
	sizeof(struct A57),
	sizeof(struct A58),
	sizeof(struct A59),
	sizeof(struct A60),
	sizeof(struct A61),
	sizeof(struct A62),
	sizeof(struct A63),
	sizeof(struct A64),
	sizeof(struct A65),
	sizeof(struct A66),
	sizeof(struct A67),
	sizeof(struct A68),
	sizeof(struct A69),
	sizeof(struct A70),
	sizeof(struct A71),
	sizeof(struct A72),
	sizeof(struct A73),
	sizeof(struct A74),
	sizeof(struct A75),
	sizeof(struct A76),
	sizeof(struct A77),
	sizeof(struct A78),
	sizeof(struct A79),
	sizeof(struct A80),
	sizeof(struct A81),
	sizeof(struct A82),
	sizeof(struct A83),
	sizeof(struct A84),
	sizeof(struct A85),
	sizeof(struct A86),
	sizeof(struct A87),
	sizeof(struct A88),
	sizeof(struct A89),
	sizeof(struct A90),
	sizeof(struct A91),
	sizeof(struct A92),
	sizeof(struct A93),
	sizeof(struct A94),
	sizeof(struct A95),
	sizeof(struct A96),
	sizeof(struct A97),
	sizeof(struct A98),
	sizeof(struct A99),
	sizeof(struct A100),
	sizeof(struct A101),
	sizeof(struct A102),
	sizeof(struct A103),
	sizeof(struct A104),
	sizeof(struct A105),
	sizeof(struct A106),
	sizeof(struct A107),
	sizeof(struct A108),
	sizeof(struct A109),
	sizeof(struct A110),
	sizeof(struct A111),
	sizeof(struct A112),
	sizeof(struct A113),
	sizeof(struct A114),
	sizeof(struct A115),
	sizeof(struct A116),
	sizeof(struct A117),
	sizeof(struct A118),
	sizeof(struct A119),
	sizeof(struct A120),
	sizeof(struct A121),
	sizeof(struct A122),
	sizeof(struct A123),
	sizeof(struct A124),
	sizeof(struct A125),
	sizeof(struct A126),
	sizeof(struct A127),
	sizeof(struct A128),
	sizeof(struct A129),
	sizeof(struct A130),
	sizeof(struct A131),
	sizeof(struct A132),
	sizeof(struct A133),
	sizeof(struct A134),
	sizeof(struct A135),
	sizeof(struct A136),
	sizeof(struct A137),
	sizeof(struct A138),
	sizeof(struct A139),
	sizeof(struct A140),
	sizeof(struct A141),
	sizeof(struct A142),
	sizeof(struct A143),
	sizeof(struct A144),
	sizeof(struct A145),
	sizeof(struct A146),
	sizeof(struct A147),
	sizeof(struct A148),
	sizeof(struct A149),
	sizeof(struct A150),
	sizeof(struct A151),
	sizeof(struct A152),
	sizeof(struct A153),
	sizeof(struct A154),
	sizeof(struct A155),
	sizeof(struct A156),
	sizeof(struct A157),
	sizeof(struct A158),
	sizeof(struct A159),
	sizeof(struct A160),
	sizeof(struct A161),
	sizeof(struct A162),
	sizeof(struct A163),
	sizeof(struct A164),
	sizeof(struct A165),
	sizeof(struct A166),
	sizeof(struct A167),
	sizeof(struct A168),
	sizeof(struct A169),
	sizeof(struct A170),
	sizeof(struct A171),
	sizeof(struct A172),
	sizeof(struct A173),
	sizeof(struct A174),
	sizeof(struct A175),
	sizeof(struct A176),
	sizeof(struct A177),
	sizeof(struct A178),
	sizeof(struct A179),
	sizeof(struct A180),
	sizeof(struct A181),
	sizeof(struct A182),
	sizeof(struct A183),
	sizeof(struct A184),
	sizeof(struct A185),
	sizeof(struct A186),
	sizeof(struct A187),
	sizeof(struct A188),
	sizeof(struct A189),
	sizeof(struct A190),
	sizeof(struct A191),
	sizeof(struct A192),
	sizeof(struct A193),
	sizeof(struct A194),
	sizeof(struct A195),
	sizeof(struct A196),
	sizeof(struct A197),
	sizeof(struct A198),
	sizeof(struct A199),
	sizeof(struct A200),
	sizeof(struct A201),
	sizeof(struct A202),
	sizeof(struct A203),
	sizeof(struct A204),
	sizeof(struct A205),
	sizeof(struct A206),
	sizeof(struct A207),
	sizeof(struct A208),
	sizeof(struct A209),
	sizeof(struct A210),
	sizeof(struct A211),
	sizeof(struct A212),
	sizeof(struct A213),
	sizeof(struct A214),
	sizeof(struct A215),
	sizeof(struct A216),
	sizeof(struct A217),
	sizeof(struct A218),
	sizeof(struct A219),
	sizeof(struct A220),
	sizeof(struct A221),
	sizeof(struct A222),
	sizeof(struct A223),
	sizeof(struct A224),
	sizeof(struct A225),
	sizeof(struct A226),
	sizeof(struct A227),
	sizeof(struct A228),
	sizeof(struct A229),
	sizeof(struct A230),
	sizeof(struct A231),
	sizeof(struct A232),
	sizeof(struct A233),
	sizeof(struct A234),
	sizeof(struct A235),
	sizeof(struct A236),
	sizeof(struct A237),
	sizeof(struct A238),
	sizeof(struct A239),
	sizeof(struct A240),
	sizeof(struct A241),
	sizeof(struct A242),
	sizeof(struct A243),
	sizeof(struct A244),
	sizeof(struct A245),
	sizeof(struct A246),
	sizeof(struct A247),
	sizeof(struct A248),
	sizeof(struct A249),
	sizeof(struct A250),
	sizeof(struct A251),
	sizeof(struct A252),
	sizeof(struct A253),
	sizeof(struct A254),
	sizeof(struct A255),
	sizeof(struct A256),
	sizeof(struct A257),
	sizeof(struct A258),
	sizeof(struct A259),
	sizeof(struct A260),
	sizeof(struct A261),
	sizeof(struct A262),
	sizeof(struct A263),
	sizeof(struct A264),
	sizeof(struct A265),
	sizeof(struct A266),
	sizeof(struct A267),
	sizeof(struct A268),
	sizeof(struct A269),
	sizeof(struct A270),
	sizeof(struct A271),
	sizeof(struct A272),
	sizeof(struct A273),
	sizeof(struct A274),
	sizeof(struct A275),
	sizeof(struct A276),
	sizeof(struct A277),
	sizeof(struct A278),
	sizeof(struct A279),
	sizeof(struct A280),
	sizeof(struct A281),
	sizeof(struct A282),
	sizeof(struct A283),
	sizeof(struct A284),
	sizeof(struct A285),
	sizeof(struct A286),
	sizeof(struct A287),
	sizeof(struct A288),
	sizeof(struct A289),
	sizeof(struct A290),
	sizeof(struct A291),
	sizeof(struct A292),
	sizeof(struct A293),
	sizeof(struct A294),
	sizeof(struct A295),
	sizeof(struct A296),
	sizeof(struct A297),
	sizeof(struct A298),
	sizeof(struct A299),
	sizeof(struct A300),
	sizeof(struct A301),
	sizeof(struct A302),
	sizeof(struct A303),
	sizeof(struct A304),
	sizeof(struct A305),
	sizeof(struct A306),
	sizeof(struct A307),
	sizeof(struct A308),
	sizeof(struct A309),
	sizeof(struct A310),
	sizeof(struct A311),
	sizeof(struct A312),
	sizeof(struct A313),
	sizeof(struct A314),
	sizeof(struct A315),
	sizeof(struct A316),
	sizeof(struct A317),
	sizeof(struct A318),
	sizeof(struct A319),
	sizeof(struct A320),
	sizeof(struct A321),
	sizeof(struct A322),
	sizeof(struct A323),
	sizeof(struct A324),
	sizeof(struct A325),
	sizeof(struct A326),
	sizeof(struct A327),
	sizeof(struct A328),
	sizeof(struct A329),
	sizeof(struct A330),
	sizeof(struct A331),
	sizeof(struct A332),
	sizeof(struct A333),
	sizeof(struct A334),
	sizeof(struct A335),
	sizeof(struct A336),
	sizeof(struct A337),
	sizeof(struct A338),
	sizeof(struct A339),
	sizeof(struct A340),
	sizeof(struct A341),
	sizeof(struct A342),
	sizeof(struct A343),
	sizeof(struct A344),
	sizeof(struct A345),
	sizeof(struct A346),
	sizeof(struct A347),
	sizeof(struct A348),
	sizeof(struct A349),
	sizeof(struct A350),
	sizeof(struct A351),
	sizeof(struct A352),
	sizeof(struct A353),
	sizeof(struct A354),
	sizeof(struct A355),
	sizeof(struct A356),
	sizeof(struct A357),
	sizeof(struct A358),
	sizeof(struct A359),
	sizeof(struct A360),
	sizeof(struct A361),
	sizeof(struct A362),
	sizeof(struct A363),
	sizeof(struct A364),
	sizeof(struct A365),
	sizeof(struct A366),
	sizeof(struct A367),
	sizeof(struct A368),
	sizeof(struct A369),
	sizeof(struct A370),
	sizeof(struct A371),
	sizeof(struct A372),
	sizeof(struct A373),
	sizeof(struct A374),
	sizeof(struct A375),
	sizeof(struct A376),
	sizeof(struct A377),
	sizeof(struct A378),
	sizeof(struct A379),
	sizeof(struct A380),
	sizeof(struct A381),
	sizeof(struct A382),
	sizeof(struct A383),
	sizeof(struct A384),
	sizeof(struct A385),
	sizeof(struct A386),
	sizeof(struct A387),
	sizeof(struct A388),
	sizeof(struct A389),
	sizeof(struct A390),
	sizeof(struct A391),
	sizeof(struct A392),
	sizeof(struct A393),
	sizeof(struct A394),
	sizeof(struct A395),
	sizeof(struct A396),
	sizeof(struct A397),
	sizeof(struct A398),
	sizeof(struct A399),
	sizeof(struct A400),
	sizeof(struct A401),
	sizeof(struct A402),
	sizeof(struct A403),
	sizeof(struct A404),
	sizeof(struct A405),
	sizeof(struct A406),
	sizeof(struct A407),
	sizeof(struct A408),
	sizeof(struct A409),
	sizeof(struct A410),
	sizeof(struct A411),
	sizeof(struct A412),
	sizeof(struct A413),
	sizeof(struct A414),
	sizeof(struct A415),
	sizeof(struct A416),
	sizeof(struct A417),
	sizeof(struct A418),
	sizeof(struct A419),
	sizeof(struct A420),
	sizeof(struct A421),
	sizeof(struct A422),
	sizeof(struct A423),
	sizeof(struct A424),
	sizeof(struct A425),
	sizeof(struct A426),
	sizeof(struct A427),
	sizeof(struct A428),
	sizeof(struct A429),
	sizeof(struct A430),
	sizeof(struct A431),
	sizeof(struct A432),
	sizeof(struct A433),
	sizeof(struct A434),
	sizeof(struct A435),
	sizeof(struct A436),
	sizeof(struct A437),
	sizeof(struct A438),
	sizeof(struct A439),
	sizeof(struct A440),
	sizeof(struct A441),
	sizeof(struct A442),
	sizeof(struct A443),
	sizeof(struct A444),
	sizeof(struct A445),
	sizeof(struct A446),
	sizeof(struct A447),
	sizeof(struct A448),
	sizeof(struct A449),
	sizeof(struct A450),
	sizeof(struct A451),
	sizeof(struct A452),
	sizeof(struct A453),
	sizeof(struct A454),
	sizeof(struct A455),
	sizeof(struct A456),
	sizeof(struct A457),
	sizeof(struct A458),
	sizeof(struct A459),
	sizeof(struct A460),
	sizeof(struct A461),
	sizeof(struct A462),
	sizeof(struct A463),
	sizeof(struct A464),
	sizeof(struct A465),
	sizeof(struct A466),
	sizeof(struct A467),
	sizeof(struct A468),
	sizeof(struct A469),
	sizeof(struct A470),
	sizeof(struct A471),
	sizeof(struct A472),
	sizeof(struct A473),
	sizeof(struct A474),
	sizeof(struct A475),
	sizeof(struct A476),
	sizeof(struct A477),
	sizeof(struct A478),
	sizeof(struct A479),
	sizeof(struct A480),
	sizeof(struct A481),
	sizeof(struct A482),
	sizeof(struct A483),
	sizeof(struct A484),
	sizeof(struct A485),
	sizeof(struct A486),
	sizeof(struct A487),
	sizeof(struct A488),
	sizeof(struct A489),
	sizeof(struct A490),
	sizeof(struct A491),
	sizeof(struct A492),
	sizeof(struct A493),
	sizeof(struct A494),
	sizeof(struct A495),
	sizeof(struct A496),
	sizeof(struct A497),
	sizeof(struct A498),
	sizeof(struct A499),
	sizeof(struct A500),
	sizeof(struct A501),
	sizeof(struct A502),
	sizeof(struct A503),
	sizeof(struct A504),
	sizeof(struct A505),
	sizeof(struct A506),
	sizeof(struct A507),
	sizeof(struct A508),
	sizeof(struct A509),
	sizeof(struct A510),
	sizeof(struct A511),
	sizeof(struct A512),
	sizeof(struct A513),
	sizeof(struct A514),
	sizeof(struct A515),
	sizeof(struct A516),
	sizeof(struct A517),
	sizeof(struct A518),
	sizeof(struct A519),
	sizeof(struct A520),
	sizeof(struct A521),
	sizeof(struct A522),
	sizeof(struct A523),
	sizeof(struct A524),
	sizeof(struct A525),
	sizeof(struct A526),
	sizeof(struct A527),
	sizeof(struct A528),
	sizeof(struct A529),
	sizeof(struct A530),
	sizeof(struct A531),
	sizeof(struct A532),
	sizeof(struct A533),
	sizeof(struct A534),
	sizeof(struct A535),
	sizeof(struct A536),
	sizeof(struct A537),
	sizeof(struct A538),
	sizeof(struct A539),
	sizeof(struct A540),
	sizeof(struct A541),
	sizeof(struct A542),
	sizeof(struct A543),
	sizeof(struct A544),
	sizeof(struct A545),
	sizeof(struct A546),
	sizeof(struct A547),
	sizeof(struct A548),
	sizeof(struct A549),
	sizeof(struct A550),
	sizeof(struct A551),
	sizeof(struct A552),
	sizeof(struct A553),
	sizeof(struct A554),
	sizeof(struct A555),
	sizeof(struct A556),
	sizeof(struct A557),
	sizeof(struct A558),
	sizeof(struct A559),
	sizeof(struct A560),
	sizeof(struct A561),
	sizeof(struct A562),
	sizeof(struct A563),
	sizeof(struct A564),
	sizeof(struct A565),
	sizeof(struct A566),
	sizeof(struct A567),
	sizeof(struct A568),
	sizeof(struct A569),
	sizeof(struct A570),
	sizeof(struct A571),
	sizeof(struct A572),
	sizeof(struct A573),
	sizeof(struct A574),
	sizeof(struct A575),
	sizeof(struct A576),
	sizeof(struct A577),
	sizeof(struct A578),
	sizeof(struct A579),
	sizeof(struct A580),
	sizeof(struct A581),
	sizeof(struct A582),
	sizeof(struct A583),
	sizeof(struct A584),
	sizeof(struct A585),
	sizeof(struct A586),
	sizeof(struct A587),
	sizeof(struct A588),
	sizeof(struct A589),
	sizeof(struct A590),
	sizeof(struct A591),
	sizeof(struct A592),
	sizeof(struct A593),
	sizeof(struct A594),
	sizeof(struct A595),
	sizeof(struct A596),
	sizeof(struct A597),
	sizeof(struct A598),
	sizeof(struct A599),
	sizeof(struct A600),
	sizeof(struct A601),
	sizeof(struct A602),
	sizeof(struct A603),
	sizeof(struct A604),
	sizeof(struct A605),
	sizeof(struct A606),
	sizeof(struct A607),
	sizeof(struct A608),
	sizeof(struct A609),
	sizeof(struct A610),
	sizeof(struct A611),
	sizeof(struct A612),
	sizeof(struct A613),
	sizeof(struct A614),
	sizeof(struct A615),
	sizeof(struct A616),
	sizeof(struct A617),
	sizeof(struct A618),
	sizeof(struct A619),
	sizeof(struct A620),
	sizeof(struct A621),
	sizeof(struct A622),
	sizeof(struct A623),
	sizeof(struct A624),
	sizeof(struct A625),
	sizeof(struct A626),
	sizeof(struct A627),
	sizeof(struct A628),
	sizeof(struct A629),
	sizeof(struct A630),
	sizeof(struct A631),
	sizeof(struct A632),
	sizeof(struct A633),
	sizeof(struct A634),
	sizeof(struct A635),
	sizeof(struct A636),
	sizeof(struct A637),
	sizeof(struct A638),
	sizeof(struct A639),
	sizeof(struct A640),
	sizeof(struct A641),
	sizeof(struct A642),
	sizeof(struct A643),
	sizeof(struct A644),
	sizeof(struct A645),
	sizeof(struct A646),
	sizeof(struct A647),
	sizeof(struct A648),
	sizeof(struct A649),
	sizeof(struct A650),
	sizeof(struct A651),
	sizeof(struct A652),
	sizeof(struct A653),
	sizeof(struct A654),
	sizeof(struct A655),
	sizeof(struct A656),
	sizeof(struct A657),
	sizeof(struct A658),
	sizeof(struct A659),
	sizeof(struct A660),
	sizeof(struct A661),
	sizeof(struct A662),
	sizeof(struct A663),
	sizeof(struct A664),
	sizeof(struct A665),
	sizeof(struct A666),
	sizeof(struct A667),
	sizeof(struct A668),
	sizeof(struct A669),
	sizeof(struct A670),
	sizeof(struct A671),
	sizeof(struct A672),
	sizeof(struct A673),
	sizeof(struct A674),
	sizeof(struct A675),
	sizeof(struct A676),
	sizeof(struct A677),
	sizeof(struct A678),
	sizeof(struct A679),
	sizeof(struct A680),
	sizeof(struct A681),
	sizeof(struct A682),
	sizeof(struct A683),
	sizeof(struct A684),
	sizeof(struct A685),
	sizeof(struct A686),
	sizeof(struct A687),
	sizeof(struct A688),
	sizeof(struct A689),
	sizeof(struct A690),
	sizeof(struct A691),
	sizeof(struct A692),
	sizeof(struct A693),
	sizeof(struct A694),
	sizeof(struct A695),
	sizeof(struct A696),
	sizeof(struct A697),
	sizeof(struct A698),
	sizeof(struct A699),
	sizeof(struct A700),
	sizeof(struct A701),
	sizeof(struct A702),
	sizeof(struct A703),
	sizeof(struct A704),
	sizeof(struct A705),
	sizeof(struct A706),
	sizeof(struct A707),
	sizeof(struct A708),
	sizeof(struct A709),
	sizeof(struct A710),
	sizeof(struct A711),
	sizeof(struct A712),
	sizeof(struct A713),
	sizeof(struct A714),
	sizeof(struct A715),
	sizeof(struct A716),
	sizeof(struct A717),
	sizeof(struct A718),
	sizeof(struct A719),
	sizeof(struct A720),
	sizeof(struct A721),
	sizeof(struct A722),
	sizeof(struct A723),
	sizeof(struct A724),
	sizeof(struct A725),
	sizeof(struct A726),
	sizeof(struct A727),
	sizeof(struct A728),
	sizeof(struct A729),
	sizeof(struct A730),
	sizeof(struct A731),
	sizeof(struct A732),
	sizeof(struct A733),
	sizeof(struct A734),
	sizeof(struct A735),
	sizeof(struct A736),
	sizeof(struct A737),
	sizeof(struct A738),
	sizeof(struct A739),
	sizeof(struct A740),
	sizeof(struct A741),
	sizeof(struct A742),
	sizeof(struct A743),
	sizeof(struct A744),
	sizeof(struct A745),
	sizeof(struct A746),
	sizeof(struct A747),
	sizeof(struct A748),
	sizeof(struct A749),
	sizeof(struct A750),
	sizeof(struct A751),
	sizeof(struct A752),
	sizeof(struct A753),
	sizeof(struct A754),
	sizeof(struct A755),
	sizeof(struct A756),
	sizeof(struct A757),
	sizeof(struct A758),
	sizeof(struct A759),
	sizeof(struct A760),
	sizeof(struct A761),
	sizeof(struct A762),
	sizeof(struct A763),
	sizeof(struct A764),
	sizeof(struct A765),
	sizeof(struct A766),
	sizeof(struct A767),
	sizeof(struct A768),
	sizeof(struct A769),
	sizeof(struct A770),
	sizeof(struct A771),
	sizeof(struct A772),
	sizeof(struct A773),
	sizeof(struct A774),
	sizeof(struct A775),
	sizeof(struct A776),
	sizeof(struct A777),
	sizeof(struct A778),
	sizeof(struct A779),
	sizeof(struct A780),
	sizeof(struct A781),
	sizeof(struct A782),
	sizeof(struct A783),
	sizeof(struct A784),
	sizeof(struct A785),
	sizeof(struct A786),
	sizeof(struct A787),
	sizeof(struct A788),
	sizeof(struct A789),
	sizeof(struct A790),
	sizeof(struct A791),
	sizeof(struct A792),
	sizeof(struct A793),
	sizeof(struct A794),
	sizeof(struct A795),
	sizeof(struct A796),
	sizeof(struct A797),
	sizeof(struct A798),
	sizeof(struct A799),
	sizeof(struct A800),
	sizeof(struct A801),
	sizeof(struct A802),
	sizeof(struct A803),
	sizeof(struct A804),
	sizeof(struct A805),
	sizeof(struct A806),
	sizeof(struct A807),
	sizeof(struct A808),
	sizeof(struct A809),
	sizeof(struct A810),
	sizeof(struct A811),
	sizeof(struct A812)
};
funptr G_agg_touchdcstfuncs[] = {
	(funptr)&f_touchdcstA1,
	(funptr)&f_touchdcstA2,
	(funptr)&f_touchdcstA3,
	(funptr)&f_touchdcstA4,
	(funptr)&f_touchdcstA5,
	(funptr)&f_touchdcstA6,
	(funptr)&f_touchdcstA7,
	(funptr)&f_touchdcstA8,
	(funptr)&f_touchdcstA9,
	(funptr)&f_touchdcstA10,
	(funptr)&f_touchdcstA11,
	(funptr)&f_touchdcstA12,
	(funptr)&f_touchdcstA13,
	(funptr)&f_touchdcstA14,
	(funptr)&f_touchdcstA15,
	(funptr)&f_touchdcstA16,
	(funptr)&f_touchdcstA17,
	(funptr)&f_touchdcstA18,
	(funptr)&f_touchdcstA19,
	(funptr)&f_touchdcstA20,
	(funptr)&f_touchdcstA21,
	(funptr)&f_touchdcstA22,
	(funptr)&f_touchdcstA23,
	(funptr)&f_touchdcstA24,
	(funptr)&f_touchdcstA25,
	(funptr)&f_touchdcstA26,
	(funptr)&f_touchdcstA27,
	(funptr)&f_touchdcstA28,
	(funptr)&f_touchdcstA29,
	(funptr)&f_touchdcstA30,
	(funptr)&f_touchdcstA31,
	(funptr)&f_touchdcstA32,
	(funptr)&f_touchdcstA33,
	(funptr)&f_touchdcstA34,
	(funptr)&f_touchdcstA35,
	(funptr)&f_touchdcstA36,
	(funptr)&f_touchdcstA37,
	(funptr)&f_touchdcstA38,
	(funptr)&f_touchdcstA39,
	(funptr)&f_touchdcstA40,
	(funptr)&f_touchdcstA41,
	(funptr)&f_touchdcstA42,
	(funptr)&f_touchdcstA43,
	(funptr)&f_touchdcstA44,
	(funptr)&f_touchdcstA45,
	(funptr)&f_touchdcstA46,
	(funptr)&f_touchdcstA47,
	(funptr)&f_touchdcstA48,
	(funptr)&f_touchdcstA49,
	(funptr)&f_touchdcstA50,
	(funptr)&f_touchdcstA51,
	(funptr)&f_touchdcstA52,
	(funptr)&f_touchdcstA53,
	(funptr)&f_touchdcstA54,
	(funptr)&f_touchdcstA55,
	(funptr)&f_touchdcstA56,
	(funptr)&f_touchdcstA57,
	(funptr)&f_touchdcstA58,
	(funptr)&f_touchdcstA59,
	(funptr)&f_touchdcstA60,
	(funptr)&f_touchdcstA61,
	(funptr)&f_touchdcstA62,
	(funptr)&f_touchdcstA63,
	(funptr)&f_touchdcstA64,
	(funptr)&f_touchdcstA65,
	(funptr)&f_touchdcstA66,
	(funptr)&f_touchdcstA67,
	(funptr)&f_touchdcstA68,
	(funptr)&f_touchdcstA69,
	(funptr)&f_touchdcstA70,
	(funptr)&f_touchdcstA71,
	(funptr)&f_touchdcstA72,
	(funptr)&f_touchdcstA73,
	(funptr)&f_touchdcstA74,
	(funptr)&f_touchdcstA75,
	(funptr)&f_touchdcstA76,
	(funptr)&f_touchdcstA77,
	(funptr)&f_touchdcstA78,
	(funptr)&f_touchdcstA79,
	(funptr)&f_touchdcstA80,
	(funptr)&f_touchdcstA81,
	(funptr)&f_touchdcstA82,
	(funptr)&f_touchdcstA83,
	(funptr)&f_touchdcstA84,
	(funptr)&f_touchdcstA85,
	(funptr)&f_touchdcstA86,
	(funptr)&f_touchdcstA87,
	(funptr)&f_touchdcstA88,
	(funptr)&f_touchdcstA89,
	(funptr)&f_touchdcstA90,
	(funptr)&f_touchdcstA91,
	(funptr)&f_touchdcstA92,
	(funptr)&f_touchdcstA93,
	(funptr)&f_touchdcstA94,
	(funptr)&f_touchdcstA95,
	(funptr)&f_touchdcstA96,
	(funptr)&f_touchdcstA97,
	(funptr)&f_touchdcstA98,
	(funptr)&f_touchdcstA99,
	(funptr)&f_touchdcstA100,
	(funptr)&f_touchdcstA101,
	(funptr)&f_touchdcstA102,
	(funptr)&f_touchdcstA103,
	(funptr)&f_touchdcstA104,
	(funptr)&f_touchdcstA105,
	(funptr)&f_touchdcstA106,
	(funptr)&f_touchdcstA107,
	(funptr)&f_touchdcstA108,
	(funptr)&f_touchdcstA109,
	(funptr)&f_touchdcstA110,
	(funptr)&f_touchdcstA111,
	(funptr)&f_touchdcstA112,
	(funptr)&f_touchdcstA113,
	(funptr)&f_touchdcstA114,
	(funptr)&f_touchdcstA115,
	(funptr)&f_touchdcstA116,
	(funptr)&f_touchdcstA117,
	(funptr)&f_touchdcstA118,
	(funptr)&f_touchdcstA119,
	(funptr)&f_touchdcstA120,
	(funptr)&f_touchdcstA121,
	(funptr)&f_touchdcstA122,
	(funptr)&f_touchdcstA123,
	(funptr)&f_touchdcstA124,
	(funptr)&f_touchdcstA125,
	(funptr)&f_touchdcstA126,
	(funptr)&f_touchdcstA127,
	(funptr)&f_touchdcstA128,
	(funptr)&f_touchdcstA129,
	(funptr)&f_touchdcstA130,
	(funptr)&f_touchdcstA131,
	(funptr)&f_touchdcstA132,
	(funptr)&f_touchdcstA133,
	(funptr)&f_touchdcstA134,
	(funptr)&f_touchdcstA135,
	(funptr)&f_touchdcstA136,
	(funptr)&f_touchdcstA137,
	(funptr)&f_touchdcstA138,
	(funptr)&f_touchdcstA139,
	(funptr)&f_touchdcstA140,
	(funptr)&f_touchdcstA141,
	(funptr)&f_touchdcstA142,
	(funptr)&f_touchdcstA143,
	(funptr)&f_touchdcstA144,
	(funptr)&f_touchdcstA145,
	(funptr)&f_touchdcstA146,
	(funptr)&f_touchdcstA147,
	(funptr)&f_touchdcstA148,
	(funptr)&f_touchdcstA149,
	(funptr)&f_touchdcstA150,
	(funptr)&f_touchdcstA151,
	(funptr)&f_touchdcstA152,
	(funptr)&f_touchdcstA153,
	(funptr)&f_touchdcstA154,
	(funptr)&f_touchdcstA155,
	(funptr)&f_touchdcstA156,
	(funptr)&f_touchdcstA157,
	(funptr)&f_touchdcstA158,
	(funptr)&f_touchdcstA159,
	(funptr)&f_touchdcstA160,
	(funptr)&f_touchdcstA161,
	(funptr)&f_touchdcstA162,
	(funptr)&f_touchdcstA163,
	(funptr)&f_touchdcstA164,
	(funptr)&f_touchdcstA165,
	(funptr)&f_touchdcstA166,
	(funptr)&f_touchdcstA167,
	(funptr)&f_touchdcstA168,
	(funptr)&f_touchdcstA169,
	(funptr)&f_touchdcstA170,
	(funptr)&f_touchdcstA171,
	(funptr)&f_touchdcstA172,
	(funptr)&f_touchdcstA173,
	(funptr)&f_touchdcstA174,
	(funptr)&f_touchdcstA175,
	(funptr)&f_touchdcstA176,
	(funptr)&f_touchdcstA177,
	(funptr)&f_touchdcstA178,
	(funptr)&f_touchdcstA179,
	(funptr)&f_touchdcstA180,
	(funptr)&f_touchdcstA181,
	(funptr)&f_touchdcstA182,
	(funptr)&f_touchdcstA183,
	(funptr)&f_touchdcstA184,
	(funptr)&f_touchdcstA185,
	(funptr)&f_touchdcstA186,
	(funptr)&f_touchdcstA187,
	(funptr)&f_touchdcstA188,
	(funptr)&f_touchdcstA189,
	(funptr)&f_touchdcstA190,
	(funptr)&f_touchdcstA191,
	(funptr)&f_touchdcstA192,
	(funptr)&f_touchdcstA193,
	(funptr)&f_touchdcstA194,
	(funptr)&f_touchdcstA195,
	(funptr)&f_touchdcstA196,
	(funptr)&f_touchdcstA197,
	(funptr)&f_touchdcstA198,
	(funptr)&f_touchdcstA199,
	(funptr)&f_touchdcstA200,
	(funptr)&f_touchdcstA201,
	(funptr)&f_touchdcstA202,
	(funptr)&f_touchdcstA203,
	(funptr)&f_touchdcstA204,
	(funptr)&f_touchdcstA205,
	(funptr)&f_touchdcstA206,
	(funptr)&f_touchdcstA207,
	(funptr)&f_touchdcstA208,
	(funptr)&f_touchdcstA209,
	(funptr)&f_touchdcstA210,
	(funptr)&f_touchdcstA211,
	(funptr)&f_touchdcstA212,
	(funptr)&f_touchdcstA213,
	(funptr)&f_touchdcstA214,
	(funptr)&f_touchdcstA215,
	(funptr)&f_touchdcstA216,
	(funptr)&f_touchdcstA217,
	(funptr)&f_touchdcstA218,
	(funptr)&f_touchdcstA219,
	(funptr)&f_touchdcstA220,
	(funptr)&f_touchdcstA221,
	(funptr)&f_touchdcstA222,
	(funptr)&f_touchdcstA223,
	(funptr)&f_touchdcstA224,
	(funptr)&f_touchdcstA225,
	(funptr)&f_touchdcstA226,
	(funptr)&f_touchdcstA227,
	(funptr)&f_touchdcstA228,
	(funptr)&f_touchdcstA229,
	(funptr)&f_touchdcstA230,
	(funptr)&f_touchdcstA231,
	(funptr)&f_touchdcstA232,
	(funptr)&f_touchdcstA233,
	(funptr)&f_touchdcstA234,
	(funptr)&f_touchdcstA235,
	(funptr)&f_touchdcstA236,
	(funptr)&f_touchdcstA237,
	(funptr)&f_touchdcstA238,
	(funptr)&f_touchdcstA239,
	(funptr)&f_touchdcstA240,
	(funptr)&f_touchdcstA241,
	(funptr)&f_touchdcstA242,
	(funptr)&f_touchdcstA243,
	(funptr)&f_touchdcstA244,
	(funptr)&f_touchdcstA245,
	(funptr)&f_touchdcstA246,
	(funptr)&f_touchdcstA247,
	(funptr)&f_touchdcstA248,
	(funptr)&f_touchdcstA249,
	(funptr)&f_touchdcstA250,
	(funptr)&f_touchdcstA251,
	(funptr)&f_touchdcstA252,
	(funptr)&f_touchdcstA253,
	(funptr)&f_touchdcstA254,
	(funptr)&f_touchdcstA255,
	(funptr)&f_touchdcstA256,
	(funptr)&f_touchdcstA257,
	(funptr)&f_touchdcstA258,
	(funptr)&f_touchdcstA259,
	(funptr)&f_touchdcstA260,
	(funptr)&f_touchdcstA261,
	(funptr)&f_touchdcstA262,
	(funptr)&f_touchdcstA263,
	(funptr)&f_touchdcstA264,
	(funptr)&f_touchdcstA265,
	(funptr)&f_touchdcstA266,
	(funptr)&f_touchdcstA267,
	(funptr)&f_touchdcstA268,
	(funptr)&f_touchdcstA269,
	(funptr)&f_touchdcstA270,
	(funptr)&f_touchdcstA271,
	(funptr)&f_touchdcstA272,
	(funptr)&f_touchdcstA273,
	(funptr)&f_touchdcstA274,
	(funptr)&f_touchdcstA275,
	(funptr)&f_touchdcstA276,
	(funptr)&f_touchdcstA277,
	(funptr)&f_touchdcstA278,
	(funptr)&f_touchdcstA279,
	(funptr)&f_touchdcstA280,
	(funptr)&f_touchdcstA281,
	(funptr)&f_touchdcstA282,
	(funptr)&f_touchdcstA283,
	(funptr)&f_touchdcstA284,
	(funptr)&f_touchdcstA285,
	(funptr)&f_touchdcstA286,
	(funptr)&f_touchdcstA287,
	(funptr)&f_touchdcstA288,
	(funptr)&f_touchdcstA289,
	(funptr)&f_touchdcstA290,
	(funptr)&f_touchdcstA291,
	(funptr)&f_touchdcstA292,
	(funptr)&f_touchdcstA293,
	(funptr)&f_touchdcstA294,
	(funptr)&f_touchdcstA295,
	(funptr)&f_touchdcstA296,
	(funptr)&f_touchdcstA297,
	(funptr)&f_touchdcstA298,
	(funptr)&f_touchdcstA299,
	(funptr)&f_touchdcstA300,
	(funptr)&f_touchdcstA301,
	(funptr)&f_touchdcstA302,
	(funptr)&f_touchdcstA303,
	(funptr)&f_touchdcstA304,
	(funptr)&f_touchdcstA305,
	(funptr)&f_touchdcstA306,
	(funptr)&f_touchdcstA307,
	(funptr)&f_touchdcstA308,
	(funptr)&f_touchdcstA309,
	(funptr)&f_touchdcstA310,
	(funptr)&f_touchdcstA311,
	(funptr)&f_touchdcstA312,
	(funptr)&f_touchdcstA313,
	(funptr)&f_touchdcstA314,
	(funptr)&f_touchdcstA315,
	(funptr)&f_touchdcstA316,
	(funptr)&f_touchdcstA317,
	(funptr)&f_touchdcstA318,
	(funptr)&f_touchdcstA319,
	(funptr)&f_touchdcstA320,
	(funptr)&f_touchdcstA321,
	(funptr)&f_touchdcstA322,
	(funptr)&f_touchdcstA323,
	(funptr)&f_touchdcstA324,
	(funptr)&f_touchdcstA325,
	(funptr)&f_touchdcstA326,
	(funptr)&f_touchdcstA327,
	(funptr)&f_touchdcstA328,
	(funptr)&f_touchdcstA329,
	(funptr)&f_touchdcstA330,
	(funptr)&f_touchdcstA331,
	(funptr)&f_touchdcstA332,
	(funptr)&f_touchdcstA333,
	(funptr)&f_touchdcstA334,
	(funptr)&f_touchdcstA335,
	(funptr)&f_touchdcstA336,
	(funptr)&f_touchdcstA337,
	(funptr)&f_touchdcstA338,
	(funptr)&f_touchdcstA339,
	(funptr)&f_touchdcstA340,
	(funptr)&f_touchdcstA341,
	(funptr)&f_touchdcstA342,
	(funptr)&f_touchdcstA343,
	(funptr)&f_touchdcstA344,
	(funptr)&f_touchdcstA345,
	(funptr)&f_touchdcstA346,
	(funptr)&f_touchdcstA347,
	(funptr)&f_touchdcstA348,
	(funptr)&f_touchdcstA349,
	(funptr)&f_touchdcstA350,
	(funptr)&f_touchdcstA351,
	(funptr)&f_touchdcstA352,
	(funptr)&f_touchdcstA353,
	(funptr)&f_touchdcstA354,
	(funptr)&f_touchdcstA355,
	(funptr)&f_touchdcstA356,
	(funptr)&f_touchdcstA357,
	(funptr)&f_touchdcstA358,
	(funptr)&f_touchdcstA359,
	(funptr)&f_touchdcstA360,
	(funptr)&f_touchdcstA361,
	(funptr)&f_touchdcstA362,
	(funptr)&f_touchdcstA363,
	(funptr)&f_touchdcstA364,
	(funptr)&f_touchdcstA365,
	(funptr)&f_touchdcstA366,
	(funptr)&f_touchdcstA367,
	(funptr)&f_touchdcstA368,
	(funptr)&f_touchdcstA369,
	(funptr)&f_touchdcstA370,
	(funptr)&f_touchdcstA371,
	(funptr)&f_touchdcstA372,
	(funptr)&f_touchdcstA373,
	(funptr)&f_touchdcstA374,
	(funptr)&f_touchdcstA375,
	(funptr)&f_touchdcstA376,
	(funptr)&f_touchdcstA377,
	(funptr)&f_touchdcstA378,
	(funptr)&f_touchdcstA379,
	(funptr)&f_touchdcstA380,
	(funptr)&f_touchdcstA381,
	(funptr)&f_touchdcstA382,
	(funptr)&f_touchdcstA383,
	(funptr)&f_touchdcstA384,
	(funptr)&f_touchdcstA385,
	(funptr)&f_touchdcstA386,
	(funptr)&f_touchdcstA387,
	(funptr)&f_touchdcstA388,
	(funptr)&f_touchdcstA389,
	(funptr)&f_touchdcstA390,
	(funptr)&f_touchdcstA391,
	(funptr)&f_touchdcstA392,
	(funptr)&f_touchdcstA393,
	(funptr)&f_touchdcstA394,
	(funptr)&f_touchdcstA395,
	(funptr)&f_touchdcstA396,
	(funptr)&f_touchdcstA397,
	(funptr)&f_touchdcstA398,
	(funptr)&f_touchdcstA399,
	(funptr)&f_touchdcstA400,
	(funptr)&f_touchdcstA401,
	(funptr)&f_touchdcstA402,
	(funptr)&f_touchdcstA403,
	(funptr)&f_touchdcstA404,
	(funptr)&f_touchdcstA405,
	(funptr)&f_touchdcstA406,
	(funptr)&f_touchdcstA407,
	(funptr)&f_touchdcstA408,
	(funptr)&f_touchdcstA409,
	(funptr)&f_touchdcstA410,
	(funptr)&f_touchdcstA411,
	(funptr)&f_touchdcstA412,
	(funptr)&f_touchdcstA413,
	(funptr)&f_touchdcstA414,
	(funptr)&f_touchdcstA415,
	(funptr)&f_touchdcstA416,
	(funptr)&f_touchdcstA417,
	(funptr)&f_touchdcstA418,
	(funptr)&f_touchdcstA419,
	(funptr)&f_touchdcstA420,
	(funptr)&f_touchdcstA421,
	(funptr)&f_touchdcstA422,
	(funptr)&f_touchdcstA423,
	(funptr)&f_touchdcstA424,
	(funptr)&f_touchdcstA425,
	(funptr)&f_touchdcstA426,
	(funptr)&f_touchdcstA427,
	(funptr)&f_touchdcstA428,
	(funptr)&f_touchdcstA429,
	(funptr)&f_touchdcstA430,
	(funptr)&f_touchdcstA431,
	(funptr)&f_touchdcstA432,
	(funptr)&f_touchdcstA433,
	(funptr)&f_touchdcstA434,
	(funptr)&f_touchdcstA435,
	(funptr)&f_touchdcstA436,
	(funptr)&f_touchdcstA437,
	(funptr)&f_touchdcstA438,
	(funptr)&f_touchdcstA439,
	(funptr)&f_touchdcstA440,
	(funptr)&f_touchdcstA441,
	(funptr)&f_touchdcstA442,
	(funptr)&f_touchdcstA443,
	(funptr)&f_touchdcstA444,
	(funptr)&f_touchdcstA445,
	(funptr)&f_touchdcstA446,
	(funptr)&f_touchdcstA447,
	(funptr)&f_touchdcstA448,
	(funptr)&f_touchdcstA449,
	(funptr)&f_touchdcstA450,
	(funptr)&f_touchdcstA451,
	(funptr)&f_touchdcstA452,
	(funptr)&f_touchdcstA453,
	(funptr)&f_touchdcstA454,
	(funptr)&f_touchdcstA455,
	(funptr)&f_touchdcstA456,
	(funptr)&f_touchdcstA457,
	(funptr)&f_touchdcstA458,
	(funptr)&f_touchdcstA459,
	(funptr)&f_touchdcstA460,
	(funptr)&f_touchdcstA461,
	(funptr)&f_touchdcstA462,
	(funptr)&f_touchdcstA463,
	(funptr)&f_touchdcstA464,
	(funptr)&f_touchdcstA465,
	(funptr)&f_touchdcstA466,
	(funptr)&f_touchdcstA467,
	(funptr)&f_touchdcstA468,
	(funptr)&f_touchdcstA469,
	(funptr)&f_touchdcstA470,
	(funptr)&f_touchdcstA471,
	(funptr)&f_touchdcstA472,
	(funptr)&f_touchdcstA473,
	(funptr)&f_touchdcstA474,
	(funptr)&f_touchdcstA475,
	(funptr)&f_touchdcstA476,
	(funptr)&f_touchdcstA477,
	(funptr)&f_touchdcstA478,
	(funptr)&f_touchdcstA479,
	(funptr)&f_touchdcstA480,
	(funptr)&f_touchdcstA481,
	(funptr)&f_touchdcstA482,
	(funptr)&f_touchdcstA483,
	(funptr)&f_touchdcstA484,
	(funptr)&f_touchdcstA485,
	(funptr)&f_touchdcstA486,
	(funptr)&f_touchdcstA487,
	(funptr)&f_touchdcstA488,
	(funptr)&f_touchdcstA489,
	(funptr)&f_touchdcstA490,
	(funptr)&f_touchdcstA491,
	(funptr)&f_touchdcstA492,
	(funptr)&f_touchdcstA493,
	(funptr)&f_touchdcstA494,
	(funptr)&f_touchdcstA495,
	(funptr)&f_touchdcstA496,
	(funptr)&f_touchdcstA497,
	(funptr)&f_touchdcstA498,
	(funptr)&f_touchdcstA499,
	(funptr)&f_touchdcstA500,
	(funptr)&f_touchdcstA501,
	(funptr)&f_touchdcstA502,
	(funptr)&f_touchdcstA503,
	(funptr)&f_touchdcstA504,
	(funptr)&f_touchdcstA505,
	(funptr)&f_touchdcstA506,
	(funptr)&f_touchdcstA507,
	(funptr)&f_touchdcstA508,
	(funptr)&f_touchdcstA509,
	(funptr)&f_touchdcstA510,
	(funptr)&f_touchdcstA511,
	(funptr)&f_touchdcstA512,
	(funptr)&f_touchdcstA513,
	(funptr)&f_touchdcstA514,
	(funptr)&f_touchdcstA515,
	(funptr)&f_touchdcstA516,
	(funptr)&f_touchdcstA517,
	(funptr)&f_touchdcstA518,
	(funptr)&f_touchdcstA519,
	(funptr)&f_touchdcstA520,
	(funptr)&f_touchdcstA521,
	(funptr)&f_touchdcstA522,
	(funptr)&f_touchdcstA523,
	(funptr)&f_touchdcstA524,
	(funptr)&f_touchdcstA525,
	(funptr)&f_touchdcstA526,
	(funptr)&f_touchdcstA527,
	(funptr)&f_touchdcstA528,
	(funptr)&f_touchdcstA529,
	(funptr)&f_touchdcstA530,
	(funptr)&f_touchdcstA531,
	(funptr)&f_touchdcstA532,
	(funptr)&f_touchdcstA533,
	(funptr)&f_touchdcstA534,
	(funptr)&f_touchdcstA535,
	(funptr)&f_touchdcstA536,
	(funptr)&f_touchdcstA537,
	(funptr)&f_touchdcstA538,
	(funptr)&f_touchdcstA539,
	(funptr)&f_touchdcstA540,
	(funptr)&f_touchdcstA541,
	(funptr)&f_touchdcstA542,
	(funptr)&f_touchdcstA543,
	(funptr)&f_touchdcstA544,
	(funptr)&f_touchdcstA545,
	(funptr)&f_touchdcstA546,
	(funptr)&f_touchdcstA547,
	(funptr)&f_touchdcstA548,
	(funptr)&f_touchdcstA549,
	(funptr)&f_touchdcstA550,
	(funptr)&f_touchdcstA551,
	(funptr)&f_touchdcstA552,
	(funptr)&f_touchdcstA553,
	(funptr)&f_touchdcstA554,
	(funptr)&f_touchdcstA555,
	(funptr)&f_touchdcstA556,
	(funptr)&f_touchdcstA557,
	(funptr)&f_touchdcstA558,
	(funptr)&f_touchdcstA559,
	(funptr)&f_touchdcstA560,
	(funptr)&f_touchdcstA561,
	(funptr)&f_touchdcstA562,
	(funptr)&f_touchdcstA563,
	(funptr)&f_touchdcstA564,
	(funptr)&f_touchdcstA565,
	(funptr)&f_touchdcstA566,
	(funptr)&f_touchdcstA567,
	(funptr)&f_touchdcstA568,
	(funptr)&f_touchdcstA569,
	(funptr)&f_touchdcstA570,
	(funptr)&f_touchdcstA571,
	(funptr)&f_touchdcstA572,
	(funptr)&f_touchdcstA573,
	(funptr)&f_touchdcstA574,
	(funptr)&f_touchdcstA575,
	(funptr)&f_touchdcstA576,
	(funptr)&f_touchdcstA577,
	(funptr)&f_touchdcstA578,
	(funptr)&f_touchdcstA579,
	(funptr)&f_touchdcstA580,
	(funptr)&f_touchdcstA581,
	(funptr)&f_touchdcstA582,
	(funptr)&f_touchdcstA583,
	(funptr)&f_touchdcstA584,
	(funptr)&f_touchdcstA585,
	(funptr)&f_touchdcstA586,
	(funptr)&f_touchdcstA587,
	(funptr)&f_touchdcstA588,
	(funptr)&f_touchdcstA589,
	(funptr)&f_touchdcstA590,
	(funptr)&f_touchdcstA591,
	(funptr)&f_touchdcstA592,
	(funptr)&f_touchdcstA593,
	(funptr)&f_touchdcstA594,
	(funptr)&f_touchdcstA595,
	(funptr)&f_touchdcstA596,
	(funptr)&f_touchdcstA597,
	(funptr)&f_touchdcstA598,
	(funptr)&f_touchdcstA599,
	(funptr)&f_touchdcstA600,
	(funptr)&f_touchdcstA601,
	(funptr)&f_touchdcstA602,
	(funptr)&f_touchdcstA603,
	(funptr)&f_touchdcstA604,
	(funptr)&f_touchdcstA605,
	(funptr)&f_touchdcstA606,
	(funptr)&f_touchdcstA607,
	(funptr)&f_touchdcstA608,
	(funptr)&f_touchdcstA609,
	(funptr)&f_touchdcstA610,
	(funptr)&f_touchdcstA611,
	(funptr)&f_touchdcstA612,
	(funptr)&f_touchdcstA613,
	(funptr)&f_touchdcstA614,
	(funptr)&f_touchdcstA615,
	(funptr)&f_touchdcstA616,
	(funptr)&f_touchdcstA617,
	(funptr)&f_touchdcstA618,
	(funptr)&f_touchdcstA619,
	(funptr)&f_touchdcstA620,
	(funptr)&f_touchdcstA621,
	(funptr)&f_touchdcstA622,
	(funptr)&f_touchdcstA623,
	(funptr)&f_touchdcstA624,
	(funptr)&f_touchdcstA625,
	(funptr)&f_touchdcstA626,
	(funptr)&f_touchdcstA627,
	(funptr)&f_touchdcstA628,
	(funptr)&f_touchdcstA629,
	(funptr)&f_touchdcstA630,
	(funptr)&f_touchdcstA631,
	(funptr)&f_touchdcstA632,
	(funptr)&f_touchdcstA633,
	(funptr)&f_touchdcstA634,
	(funptr)&f_touchdcstA635,
	(funptr)&f_touchdcstA636,
	(funptr)&f_touchdcstA637,
	(funptr)&f_touchdcstA638,
	(funptr)&f_touchdcstA639,
	(funptr)&f_touchdcstA640,
	(funptr)&f_touchdcstA641,
	(funptr)&f_touchdcstA642,
	(funptr)&f_touchdcstA643,
	(funptr)&f_touchdcstA644,
	(funptr)&f_touchdcstA645,
	(funptr)&f_touchdcstA646,
	(funptr)&f_touchdcstA647,
	(funptr)&f_touchdcstA648,
	(funptr)&f_touchdcstA649,
	(funptr)&f_touchdcstA650,
	(funptr)&f_touchdcstA651,
	(funptr)&f_touchdcstA652,
	(funptr)&f_touchdcstA653,
	(funptr)&f_touchdcstA654,
	(funptr)&f_touchdcstA655,
	(funptr)&f_touchdcstA656,
	(funptr)&f_touchdcstA657,
	(funptr)&f_touchdcstA658,
	(funptr)&f_touchdcstA659,
	(funptr)&f_touchdcstA660,
	(funptr)&f_touchdcstA661,
	(funptr)&f_touchdcstA662,
	(funptr)&f_touchdcstA663,
	(funptr)&f_touchdcstA664,
	(funptr)&f_touchdcstA665,
	(funptr)&f_touchdcstA666,
	(funptr)&f_touchdcstA667,
	(funptr)&f_touchdcstA668,
	(funptr)&f_touchdcstA669,
	(funptr)&f_touchdcstA670,
	(funptr)&f_touchdcstA671,
	(funptr)&f_touchdcstA672,
	(funptr)&f_touchdcstA673,
	(funptr)&f_touchdcstA674,
	(funptr)&f_touchdcstA675,
	(funptr)&f_touchdcstA676,
	(funptr)&f_touchdcstA677,
	(funptr)&f_touchdcstA678,
	(funptr)&f_touchdcstA679,
	(funptr)&f_touchdcstA680,
	(funptr)&f_touchdcstA681,
	(funptr)&f_touchdcstA682,
	(funptr)&f_touchdcstA683,
	(funptr)&f_touchdcstA684,
	(funptr)&f_touchdcstA685,
	(funptr)&f_touchdcstA686,
	(funptr)&f_touchdcstA687,
	(funptr)&f_touchdcstA688,
	(funptr)&f_touchdcstA689,
	(funptr)&f_touchdcstA690,
	(funptr)&f_touchdcstA691,
	(funptr)&f_touchdcstA692,
	(funptr)&f_touchdcstA693,
	(funptr)&f_touchdcstA694,
	(funptr)&f_touchdcstA695,
	(funptr)&f_touchdcstA696,
	(funptr)&f_touchdcstA697,
	(funptr)&f_touchdcstA698,
	(funptr)&f_touchdcstA699,
	(funptr)&f_touchdcstA700,
	(funptr)&f_touchdcstA701,
	(funptr)&f_touchdcstA702,
	(funptr)&f_touchdcstA703,
	(funptr)&f_touchdcstA704,
	(funptr)&f_touchdcstA705,
	(funptr)&f_touchdcstA706,
	(funptr)&f_touchdcstA707,
	(funptr)&f_touchdcstA708,
	(funptr)&f_touchdcstA709,
	(funptr)&f_touchdcstA710,
	(funptr)&f_touchdcstA711,
	(funptr)&f_touchdcstA712,
	(funptr)&f_touchdcstA713,
	(funptr)&f_touchdcstA714,
	(funptr)&f_touchdcstA715,
	(funptr)&f_touchdcstA716,
	(funptr)&f_touchdcstA717,
	(funptr)&f_touchdcstA718,
	(funptr)&f_touchdcstA719,
	(funptr)&f_touchdcstA720,
	(funptr)&f_touchdcstA721,
	(funptr)&f_touchdcstA722,
	(funptr)&f_touchdcstA723,
	(funptr)&f_touchdcstA724,
	(funptr)&f_touchdcstA725,
	(funptr)&f_touchdcstA726,
	(funptr)&f_touchdcstA727,
	(funptr)&f_touchdcstA728,
	(funptr)&f_touchdcstA729,
	(funptr)&f_touchdcstA730,
	(funptr)&f_touchdcstA731,
	(funptr)&f_touchdcstA732,
	(funptr)&f_touchdcstA733,
	(funptr)&f_touchdcstA734,
	(funptr)&f_touchdcstA735,
	(funptr)&f_touchdcstA736,
	(funptr)&f_touchdcstA737,
	(funptr)&f_touchdcstA738,
	(funptr)&f_touchdcstA739,
	(funptr)&f_touchdcstA740,
	(funptr)&f_touchdcstA741,
	(funptr)&f_touchdcstA742,
	(funptr)&f_touchdcstA743,
	(funptr)&f_touchdcstA744,
	(funptr)&f_touchdcstA745,
	(funptr)&f_touchdcstA746,
	(funptr)&f_touchdcstA747,
	(funptr)&f_touchdcstA748,
	(funptr)&f_touchdcstA749,
	(funptr)&f_touchdcstA750,
	(funptr)&f_touchdcstA751,
	(funptr)&f_touchdcstA752,
	(funptr)&f_touchdcstA753,
	(funptr)&f_touchdcstA754,
	(funptr)&f_touchdcstA755,
	(funptr)&f_touchdcstA756,
	(funptr)&f_touchdcstA757,
	(funptr)&f_touchdcstA758,
	(funptr)&f_touchdcstA759,
	(funptr)&f_touchdcstA760,
	(funptr)&f_touchdcstA761,
	(funptr)&f_touchdcstA762,
	(funptr)&f_touchdcstA763,
	(funptr)&f_touchdcstA764,
	(funptr)&f_touchdcstA765,
	(funptr)&f_touchdcstA766,
	(funptr)&f_touchdcstA767,
	(funptr)&f_touchdcstA768,
	(funptr)&f_touchdcstA769,
	(funptr)&f_touchdcstA770,
	(funptr)&f_touchdcstA771,
	(funptr)&f_touchdcstA772,
	(funptr)&f_touchdcstA773,
	(funptr)&f_touchdcstA774,
	(funptr)&f_touchdcstA775,
	(funptr)&f_touchdcstA776,
	(funptr)&f_touchdcstA777,
	(funptr)&f_touchdcstA778,
	(funptr)&f_touchdcstA779,
	(funptr)&f_touchdcstA780,
	(funptr)&f_touchdcstA781,
	(funptr)&f_touchdcstA782,
	(funptr)&f_touchdcstA783,
	(funptr)&f_touchdcstA784,
	(funptr)&f_touchdcstA785,
	(funptr)&f_touchdcstA786,
	(funptr)&f_touchdcstA787,
	(funptr)&f_touchdcstA788,
	(funptr)&f_touchdcstA789,
	(funptr)&f_touchdcstA790,
	(funptr)&f_touchdcstA791,
	(funptr)&f_touchdcstA792,
	(funptr)&f_touchdcstA793,
	(funptr)&f_touchdcstA794,
	(funptr)&f_touchdcstA795,
	(funptr)&f_touchdcstA796,
	(funptr)&f_touchdcstA797,
	(funptr)&f_touchdcstA798,
	(funptr)&f_touchdcstA799,
	(funptr)&f_touchdcstA800,
	(funptr)&f_touchdcstA801,
	(funptr)&f_touchdcstA802,
	(funptr)&f_touchdcstA803,
	(funptr)&f_touchdcstA804,
	(funptr)&f_touchdcstA805,
	(funptr)&f_touchdcstA806,
	(funptr)&f_touchdcstA807,
	(funptr)&f_touchdcstA808,
	(funptr)&f_touchdcstA809,
	(funptr)&f_touchdcstA810,
	(funptr)&f_touchdcstA811,
	(funptr)&f_touchdcstA812
};
funptr G_agg_cmpfuncs[] = {
	(funptr)&f_cmpA1,
	(funptr)&f_cmpA2,
	(funptr)&f_cmpA3,
	(funptr)&f_cmpA4,
	(funptr)&f_cmpA5,
	(funptr)&f_cmpA6,
	(funptr)&f_cmpA7,
	(funptr)&f_cmpA8,
	(funptr)&f_cmpA9,
	(funptr)&f_cmpA10,
	(funptr)&f_cmpA11,
	(funptr)&f_cmpA12,
	(funptr)&f_cmpA13,
	(funptr)&f_cmpA14,
	(funptr)&f_cmpA15,
	(funptr)&f_cmpA16,
	(funptr)&f_cmpA17,
	(funptr)&f_cmpA18,
	(funptr)&f_cmpA19,
	(funptr)&f_cmpA20,
	(funptr)&f_cmpA21,
	(funptr)&f_cmpA22,
	(funptr)&f_cmpA23,
	(funptr)&f_cmpA24,
	(funptr)&f_cmpA25,
	(funptr)&f_cmpA26,
	(funptr)&f_cmpA27,
	(funptr)&f_cmpA28,
	(funptr)&f_cmpA29,
	(funptr)&f_cmpA30,
	(funptr)&f_cmpA31,
	(funptr)&f_cmpA32,
	(funptr)&f_cmpA33,
	(funptr)&f_cmpA34,
	(funptr)&f_cmpA35,
	(funptr)&f_cmpA36,
	(funptr)&f_cmpA37,
	(funptr)&f_cmpA38,
	(funptr)&f_cmpA39,
	(funptr)&f_cmpA40,
	(funptr)&f_cmpA41,
	(funptr)&f_cmpA42,
	(funptr)&f_cmpA43,
	(funptr)&f_cmpA44,
	(funptr)&f_cmpA45,
	(funptr)&f_cmpA46,
	(funptr)&f_cmpA47,
	(funptr)&f_cmpA48,
	(funptr)&f_cmpA49,
	(funptr)&f_cmpA50,
	(funptr)&f_cmpA51,
	(funptr)&f_cmpA52,
	(funptr)&f_cmpA53,
	(funptr)&f_cmpA54,
	(funptr)&f_cmpA55,
	(funptr)&f_cmpA56,
	(funptr)&f_cmpA57,
	(funptr)&f_cmpA58,
	(funptr)&f_cmpA59,
	(funptr)&f_cmpA60,
	(funptr)&f_cmpA61,
	(funptr)&f_cmpA62,
	(funptr)&f_cmpA63,
	(funptr)&f_cmpA64,
	(funptr)&f_cmpA65,
	(funptr)&f_cmpA66,
	(funptr)&f_cmpA67,
	(funptr)&f_cmpA68,
	(funptr)&f_cmpA69,
	(funptr)&f_cmpA70,
	(funptr)&f_cmpA71,
	(funptr)&f_cmpA72,
	(funptr)&f_cmpA73,
	(funptr)&f_cmpA74,
	(funptr)&f_cmpA75,
	(funptr)&f_cmpA76,
	(funptr)&f_cmpA77,
	(funptr)&f_cmpA78,
	(funptr)&f_cmpA79,
	(funptr)&f_cmpA80,
	(funptr)&f_cmpA81,
	(funptr)&f_cmpA82,
	(funptr)&f_cmpA83,
	(funptr)&f_cmpA84,
	(funptr)&f_cmpA85,
	(funptr)&f_cmpA86,
	(funptr)&f_cmpA87,
	(funptr)&f_cmpA88,
	(funptr)&f_cmpA89,
	(funptr)&f_cmpA90,
	(funptr)&f_cmpA91,
	(funptr)&f_cmpA92,
	(funptr)&f_cmpA93,
	(funptr)&f_cmpA94,
	(funptr)&f_cmpA95,
	(funptr)&f_cmpA96,
	(funptr)&f_cmpA97,
	(funptr)&f_cmpA98,
	(funptr)&f_cmpA99,
	(funptr)&f_cmpA100,
	(funptr)&f_cmpA101,
	(funptr)&f_cmpA102,
	(funptr)&f_cmpA103,
	(funptr)&f_cmpA104,
	(funptr)&f_cmpA105,
	(funptr)&f_cmpA106,
	(funptr)&f_cmpA107,
	(funptr)&f_cmpA108,
	(funptr)&f_cmpA109,
	(funptr)&f_cmpA110,
	(funptr)&f_cmpA111,
	(funptr)&f_cmpA112,
	(funptr)&f_cmpA113,
	(funptr)&f_cmpA114,
	(funptr)&f_cmpA115,
	(funptr)&f_cmpA116,
	(funptr)&f_cmpA117,
	(funptr)&f_cmpA118,
	(funptr)&f_cmpA119,
	(funptr)&f_cmpA120,
	(funptr)&f_cmpA121,
	(funptr)&f_cmpA122,
	(funptr)&f_cmpA123,
	(funptr)&f_cmpA124,
	(funptr)&f_cmpA125,
	(funptr)&f_cmpA126,
	(funptr)&f_cmpA127,
	(funptr)&f_cmpA128,
	(funptr)&f_cmpA129,
	(funptr)&f_cmpA130,
	(funptr)&f_cmpA131,
	(funptr)&f_cmpA132,
	(funptr)&f_cmpA133,
	(funptr)&f_cmpA134,
	(funptr)&f_cmpA135,
	(funptr)&f_cmpA136,
	(funptr)&f_cmpA137,
	(funptr)&f_cmpA138,
	(funptr)&f_cmpA139,
	(funptr)&f_cmpA140,
	(funptr)&f_cmpA141,
	(funptr)&f_cmpA142,
	(funptr)&f_cmpA143,
	(funptr)&f_cmpA144,
	(funptr)&f_cmpA145,
	(funptr)&f_cmpA146,
	(funptr)&f_cmpA147,
	(funptr)&f_cmpA148,
	(funptr)&f_cmpA149,
	(funptr)&f_cmpA150,
	(funptr)&f_cmpA151,
	(funptr)&f_cmpA152,
	(funptr)&f_cmpA153,
	(funptr)&f_cmpA154,
	(funptr)&f_cmpA155,
	(funptr)&f_cmpA156,
	(funptr)&f_cmpA157,
	(funptr)&f_cmpA158,
	(funptr)&f_cmpA159,
	(funptr)&f_cmpA160,
	(funptr)&f_cmpA161,
	(funptr)&f_cmpA162,
	(funptr)&f_cmpA163,
	(funptr)&f_cmpA164,
	(funptr)&f_cmpA165,
	(funptr)&f_cmpA166,
	(funptr)&f_cmpA167,
	(funptr)&f_cmpA168,
	(funptr)&f_cmpA169,
	(funptr)&f_cmpA170,
	(funptr)&f_cmpA171,
	(funptr)&f_cmpA172,
	(funptr)&f_cmpA173,
	(funptr)&f_cmpA174,
	(funptr)&f_cmpA175,
	(funptr)&f_cmpA176,
	(funptr)&f_cmpA177,
	(funptr)&f_cmpA178,
	(funptr)&f_cmpA179,
	(funptr)&f_cmpA180,
	(funptr)&f_cmpA181,
	(funptr)&f_cmpA182,
	(funptr)&f_cmpA183,
	(funptr)&f_cmpA184,
	(funptr)&f_cmpA185,
	(funptr)&f_cmpA186,
	(funptr)&f_cmpA187,
	(funptr)&f_cmpA188,
	(funptr)&f_cmpA189,
	(funptr)&f_cmpA190,
	(funptr)&f_cmpA191,
	(funptr)&f_cmpA192,
	(funptr)&f_cmpA193,
	(funptr)&f_cmpA194,
	(funptr)&f_cmpA195,
	(funptr)&f_cmpA196,
	(funptr)&f_cmpA197,
	(funptr)&f_cmpA198,
	(funptr)&f_cmpA199,
	(funptr)&f_cmpA200,
	(funptr)&f_cmpA201,
	(funptr)&f_cmpA202,
	(funptr)&f_cmpA203,
	(funptr)&f_cmpA204,
	(funptr)&f_cmpA205,
	(funptr)&f_cmpA206,
	(funptr)&f_cmpA207,
	(funptr)&f_cmpA208,
	(funptr)&f_cmpA209,
	(funptr)&f_cmpA210,
	(funptr)&f_cmpA211,
	(funptr)&f_cmpA212,
	(funptr)&f_cmpA213,
	(funptr)&f_cmpA214,
	(funptr)&f_cmpA215,
	(funptr)&f_cmpA216,
	(funptr)&f_cmpA217,
	(funptr)&f_cmpA218,
	(funptr)&f_cmpA219,
	(funptr)&f_cmpA220,
	(funptr)&f_cmpA221,
	(funptr)&f_cmpA222,
	(funptr)&f_cmpA223,
	(funptr)&f_cmpA224,
	(funptr)&f_cmpA225,
	(funptr)&f_cmpA226,
	(funptr)&f_cmpA227,
	(funptr)&f_cmpA228,
	(funptr)&f_cmpA229,
	(funptr)&f_cmpA230,
	(funptr)&f_cmpA231,
	(funptr)&f_cmpA232,
	(funptr)&f_cmpA233,
	(funptr)&f_cmpA234,
	(funptr)&f_cmpA235,
	(funptr)&f_cmpA236,
	(funptr)&f_cmpA237,
	(funptr)&f_cmpA238,
	(funptr)&f_cmpA239,
	(funptr)&f_cmpA240,
	(funptr)&f_cmpA241,
	(funptr)&f_cmpA242,
	(funptr)&f_cmpA243,
	(funptr)&f_cmpA244,
	(funptr)&f_cmpA245,
	(funptr)&f_cmpA246,
	(funptr)&f_cmpA247,
	(funptr)&f_cmpA248,
	(funptr)&f_cmpA249,
	(funptr)&f_cmpA250,
	(funptr)&f_cmpA251,
	(funptr)&f_cmpA252,
	(funptr)&f_cmpA253,
	(funptr)&f_cmpA254,
	(funptr)&f_cmpA255,
	(funptr)&f_cmpA256,
	(funptr)&f_cmpA257,
	(funptr)&f_cmpA258,
	(funptr)&f_cmpA259,
	(funptr)&f_cmpA260,
	(funptr)&f_cmpA261,
	(funptr)&f_cmpA262,
	(funptr)&f_cmpA263,
	(funptr)&f_cmpA264,
	(funptr)&f_cmpA265,
	(funptr)&f_cmpA266,
	(funptr)&f_cmpA267,
	(funptr)&f_cmpA268,
	(funptr)&f_cmpA269,
	(funptr)&f_cmpA270,
	(funptr)&f_cmpA271,
	(funptr)&f_cmpA272,
	(funptr)&f_cmpA273,
	(funptr)&f_cmpA274,
	(funptr)&f_cmpA275,
	(funptr)&f_cmpA276,
	(funptr)&f_cmpA277,
	(funptr)&f_cmpA278,
	(funptr)&f_cmpA279,
	(funptr)&f_cmpA280,
	(funptr)&f_cmpA281,
	(funptr)&f_cmpA282,
	(funptr)&f_cmpA283,
	(funptr)&f_cmpA284,
	(funptr)&f_cmpA285,
	(funptr)&f_cmpA286,
	(funptr)&f_cmpA287,
	(funptr)&f_cmpA288,
	(funptr)&f_cmpA289,
	(funptr)&f_cmpA290,
	(funptr)&f_cmpA291,
	(funptr)&f_cmpA292,
	(funptr)&f_cmpA293,
	(funptr)&f_cmpA294,
	(funptr)&f_cmpA295,
	(funptr)&f_cmpA296,
	(funptr)&f_cmpA297,
	(funptr)&f_cmpA298,
	(funptr)&f_cmpA299,
	(funptr)&f_cmpA300,
	(funptr)&f_cmpA301,
	(funptr)&f_cmpA302,
	(funptr)&f_cmpA303,
	(funptr)&f_cmpA304,
	(funptr)&f_cmpA305,
	(funptr)&f_cmpA306,
	(funptr)&f_cmpA307,
	(funptr)&f_cmpA308,
	(funptr)&f_cmpA309,
	(funptr)&f_cmpA310,
	(funptr)&f_cmpA311,
	(funptr)&f_cmpA312,
	(funptr)&f_cmpA313,
	(funptr)&f_cmpA314,
	(funptr)&f_cmpA315,
	(funptr)&f_cmpA316,
	(funptr)&f_cmpA317,
	(funptr)&f_cmpA318,
	(funptr)&f_cmpA319,
	(funptr)&f_cmpA320,
	(funptr)&f_cmpA321,
	(funptr)&f_cmpA322,
	(funptr)&f_cmpA323,
	(funptr)&f_cmpA324,
	(funptr)&f_cmpA325,
	(funptr)&f_cmpA326,
	(funptr)&f_cmpA327,
	(funptr)&f_cmpA328,
	(funptr)&f_cmpA329,
	(funptr)&f_cmpA330,
	(funptr)&f_cmpA331,
	(funptr)&f_cmpA332,
	(funptr)&f_cmpA333,
	(funptr)&f_cmpA334,
	(funptr)&f_cmpA335,
	(funptr)&f_cmpA336,
	(funptr)&f_cmpA337,
	(funptr)&f_cmpA338,
	(funptr)&f_cmpA339,
	(funptr)&f_cmpA340,
	(funptr)&f_cmpA341,
	(funptr)&f_cmpA342,
	(funptr)&f_cmpA343,
	(funptr)&f_cmpA344,
	(funptr)&f_cmpA345,
	(funptr)&f_cmpA346,
	(funptr)&f_cmpA347,
	(funptr)&f_cmpA348,
	(funptr)&f_cmpA349,
	(funptr)&f_cmpA350,
	(funptr)&f_cmpA351,
	(funptr)&f_cmpA352,
	(funptr)&f_cmpA353,
	(funptr)&f_cmpA354,
	(funptr)&f_cmpA355,
	(funptr)&f_cmpA356,
	(funptr)&f_cmpA357,
	(funptr)&f_cmpA358,
	(funptr)&f_cmpA359,
	(funptr)&f_cmpA360,
	(funptr)&f_cmpA361,
	(funptr)&f_cmpA362,
	(funptr)&f_cmpA363,
	(funptr)&f_cmpA364,
	(funptr)&f_cmpA365,
	(funptr)&f_cmpA366,
	(funptr)&f_cmpA367,
	(funptr)&f_cmpA368,
	(funptr)&f_cmpA369,
	(funptr)&f_cmpA370,
	(funptr)&f_cmpA371,
	(funptr)&f_cmpA372,
	(funptr)&f_cmpA373,
	(funptr)&f_cmpA374,
	(funptr)&f_cmpA375,
	(funptr)&f_cmpA376,
	(funptr)&f_cmpA377,
	(funptr)&f_cmpA378,
	(funptr)&f_cmpA379,
	(funptr)&f_cmpA380,
	(funptr)&f_cmpA381,
	(funptr)&f_cmpA382,
	(funptr)&f_cmpA383,
	(funptr)&f_cmpA384,
	(funptr)&f_cmpA385,
	(funptr)&f_cmpA386,
	(funptr)&f_cmpA387,
	(funptr)&f_cmpA388,
	(funptr)&f_cmpA389,
	(funptr)&f_cmpA390,
	(funptr)&f_cmpA391,
	(funptr)&f_cmpA392,
	(funptr)&f_cmpA393,
	(funptr)&f_cmpA394,
	(funptr)&f_cmpA395,
	(funptr)&f_cmpA396,
	(funptr)&f_cmpA397,
	(funptr)&f_cmpA398,
	(funptr)&f_cmpA399,
	(funptr)&f_cmpA400,
	(funptr)&f_cmpA401,
	(funptr)&f_cmpA402,
	(funptr)&f_cmpA403,
	(funptr)&f_cmpA404,
	(funptr)&f_cmpA405,
	(funptr)&f_cmpA406,
	(funptr)&f_cmpA407,
	(funptr)&f_cmpA408,
	(funptr)&f_cmpA409,
	(funptr)&f_cmpA410,
	(funptr)&f_cmpA411,
	(funptr)&f_cmpA412,
	(funptr)&f_cmpA413,
	(funptr)&f_cmpA414,
	(funptr)&f_cmpA415,
	(funptr)&f_cmpA416,
	(funptr)&f_cmpA417,
	(funptr)&f_cmpA418,
	(funptr)&f_cmpA419,
	(funptr)&f_cmpA420,
	(funptr)&f_cmpA421,
	(funptr)&f_cmpA422,
	(funptr)&f_cmpA423,
	(funptr)&f_cmpA424,
	(funptr)&f_cmpA425,
	(funptr)&f_cmpA426,
	(funptr)&f_cmpA427,
	(funptr)&f_cmpA428,
	(funptr)&f_cmpA429,
	(funptr)&f_cmpA430,
	(funptr)&f_cmpA431,
	(funptr)&f_cmpA432,
	(funptr)&f_cmpA433,
	(funptr)&f_cmpA434,
	(funptr)&f_cmpA435,
	(funptr)&f_cmpA436,
	(funptr)&f_cmpA437,
	(funptr)&f_cmpA438,
	(funptr)&f_cmpA439,
	(funptr)&f_cmpA440,
	(funptr)&f_cmpA441,
	(funptr)&f_cmpA442,
	(funptr)&f_cmpA443,
	(funptr)&f_cmpA444,
	(funptr)&f_cmpA445,
	(funptr)&f_cmpA446,
	(funptr)&f_cmpA447,
	(funptr)&f_cmpA448,
	(funptr)&f_cmpA449,
	(funptr)&f_cmpA450,
	(funptr)&f_cmpA451,
	(funptr)&f_cmpA452,
	(funptr)&f_cmpA453,
	(funptr)&f_cmpA454,
	(funptr)&f_cmpA455,
	(funptr)&f_cmpA456,
	(funptr)&f_cmpA457,
	(funptr)&f_cmpA458,
	(funptr)&f_cmpA459,
	(funptr)&f_cmpA460,
	(funptr)&f_cmpA461,
	(funptr)&f_cmpA462,
	(funptr)&f_cmpA463,
	(funptr)&f_cmpA464,
	(funptr)&f_cmpA465,
	(funptr)&f_cmpA466,
	(funptr)&f_cmpA467,
	(funptr)&f_cmpA468,
	(funptr)&f_cmpA469,
	(funptr)&f_cmpA470,
	(funptr)&f_cmpA471,
	(funptr)&f_cmpA472,
	(funptr)&f_cmpA473,
	(funptr)&f_cmpA474,
	(funptr)&f_cmpA475,
	(funptr)&f_cmpA476,
	(funptr)&f_cmpA477,
	(funptr)&f_cmpA478,
	(funptr)&f_cmpA479,
	(funptr)&f_cmpA480,
	(funptr)&f_cmpA481,
	(funptr)&f_cmpA482,
	(funptr)&f_cmpA483,
	(funptr)&f_cmpA484,
	(funptr)&f_cmpA485,
	(funptr)&f_cmpA486,
	(funptr)&f_cmpA487,
	(funptr)&f_cmpA488,
	(funptr)&f_cmpA489,
	(funptr)&f_cmpA490,
	(funptr)&f_cmpA491,
	(funptr)&f_cmpA492,
	(funptr)&f_cmpA493,
	(funptr)&f_cmpA494,
	(funptr)&f_cmpA495,
	(funptr)&f_cmpA496,
	(funptr)&f_cmpA497,
	(funptr)&f_cmpA498,
	(funptr)&f_cmpA499,
	(funptr)&f_cmpA500,
	(funptr)&f_cmpA501,
	(funptr)&f_cmpA502,
	(funptr)&f_cmpA503,
	(funptr)&f_cmpA504,
	(funptr)&f_cmpA505,
	(funptr)&f_cmpA506,
	(funptr)&f_cmpA507,
	(funptr)&f_cmpA508,
	(funptr)&f_cmpA509,
	(funptr)&f_cmpA510,
	(funptr)&f_cmpA511,
	(funptr)&f_cmpA512,
	(funptr)&f_cmpA513,
	(funptr)&f_cmpA514,
	(funptr)&f_cmpA515,
	(funptr)&f_cmpA516,
	(funptr)&f_cmpA517,
	(funptr)&f_cmpA518,
	(funptr)&f_cmpA519,
	(funptr)&f_cmpA520,
	(funptr)&f_cmpA521,
	(funptr)&f_cmpA522,
	(funptr)&f_cmpA523,
	(funptr)&f_cmpA524,
	(funptr)&f_cmpA525,
	(funptr)&f_cmpA526,
	(funptr)&f_cmpA527,
	(funptr)&f_cmpA528,
	(funptr)&f_cmpA529,
	(funptr)&f_cmpA530,
	(funptr)&f_cmpA531,
	(funptr)&f_cmpA532,
	(funptr)&f_cmpA533,
	(funptr)&f_cmpA534,
	(funptr)&f_cmpA535,
	(funptr)&f_cmpA536,
	(funptr)&f_cmpA537,
	(funptr)&f_cmpA538,
	(funptr)&f_cmpA539,
	(funptr)&f_cmpA540,
	(funptr)&f_cmpA541,
	(funptr)&f_cmpA542,
	(funptr)&f_cmpA543,
	(funptr)&f_cmpA544,
	(funptr)&f_cmpA545,
	(funptr)&f_cmpA546,
	(funptr)&f_cmpA547,
	(funptr)&f_cmpA548,
	(funptr)&f_cmpA549,
	(funptr)&f_cmpA550,
	(funptr)&f_cmpA551,
	(funptr)&f_cmpA552,
	(funptr)&f_cmpA553,
	(funptr)&f_cmpA554,
	(funptr)&f_cmpA555,
	(funptr)&f_cmpA556,
	(funptr)&f_cmpA557,
	(funptr)&f_cmpA558,
	(funptr)&f_cmpA559,
	(funptr)&f_cmpA560,
	(funptr)&f_cmpA561,
	(funptr)&f_cmpA562,
	(funptr)&f_cmpA563,
	(funptr)&f_cmpA564,
	(funptr)&f_cmpA565,
	(funptr)&f_cmpA566,
	(funptr)&f_cmpA567,
	(funptr)&f_cmpA568,
	(funptr)&f_cmpA569,
	(funptr)&f_cmpA570,
	(funptr)&f_cmpA571,
	(funptr)&f_cmpA572,
	(funptr)&f_cmpA573,
	(funptr)&f_cmpA574,
	(funptr)&f_cmpA575,
	(funptr)&f_cmpA576,
	(funptr)&f_cmpA577,
	(funptr)&f_cmpA578,
	(funptr)&f_cmpA579,
	(funptr)&f_cmpA580,
	(funptr)&f_cmpA581,
	(funptr)&f_cmpA582,
	(funptr)&f_cmpA583,
	(funptr)&f_cmpA584,
	(funptr)&f_cmpA585,
	(funptr)&f_cmpA586,
	(funptr)&f_cmpA587,
	(funptr)&f_cmpA588,
	(funptr)&f_cmpA589,
	(funptr)&f_cmpA590,
	(funptr)&f_cmpA591,
	(funptr)&f_cmpA592,
	(funptr)&f_cmpA593,
	(funptr)&f_cmpA594,
	(funptr)&f_cmpA595,
	(funptr)&f_cmpA596,
	(funptr)&f_cmpA597,
	(funptr)&f_cmpA598,
	(funptr)&f_cmpA599,
	(funptr)&f_cmpA600,
	(funptr)&f_cmpA601,
	(funptr)&f_cmpA602,
	(funptr)&f_cmpA603,
	(funptr)&f_cmpA604,
	(funptr)&f_cmpA605,
	(funptr)&f_cmpA606,
	(funptr)&f_cmpA607,
	(funptr)&f_cmpA608,
	(funptr)&f_cmpA609,
	(funptr)&f_cmpA610,
	(funptr)&f_cmpA611,
	(funptr)&f_cmpA612,
	(funptr)&f_cmpA613,
	(funptr)&f_cmpA614,
	(funptr)&f_cmpA615,
	(funptr)&f_cmpA616,
	(funptr)&f_cmpA617,
	(funptr)&f_cmpA618,
	(funptr)&f_cmpA619,
	(funptr)&f_cmpA620,
	(funptr)&f_cmpA621,
	(funptr)&f_cmpA622,
	(funptr)&f_cmpA623,
	(funptr)&f_cmpA624,
	(funptr)&f_cmpA625,
	(funptr)&f_cmpA626,
	(funptr)&f_cmpA627,
	(funptr)&f_cmpA628,
	(funptr)&f_cmpA629,
	(funptr)&f_cmpA630,
	(funptr)&f_cmpA631,
	(funptr)&f_cmpA632,
	(funptr)&f_cmpA633,
	(funptr)&f_cmpA634,
	(funptr)&f_cmpA635,
	(funptr)&f_cmpA636,
	(funptr)&f_cmpA637,
	(funptr)&f_cmpA638,
	(funptr)&f_cmpA639,
	(funptr)&f_cmpA640,
	(funptr)&f_cmpA641,
	(funptr)&f_cmpA642,
	(funptr)&f_cmpA643,
	(funptr)&f_cmpA644,
	(funptr)&f_cmpA645,
	(funptr)&f_cmpA646,
	(funptr)&f_cmpA647,
	(funptr)&f_cmpA648,
	(funptr)&f_cmpA649,
	(funptr)&f_cmpA650,
	(funptr)&f_cmpA651,
	(funptr)&f_cmpA652,
	(funptr)&f_cmpA653,
	(funptr)&f_cmpA654,
	(funptr)&f_cmpA655,
	(funptr)&f_cmpA656,
	(funptr)&f_cmpA657,
	(funptr)&f_cmpA658,
	(funptr)&f_cmpA659,
	(funptr)&f_cmpA660,
	(funptr)&f_cmpA661,
	(funptr)&f_cmpA662,
	(funptr)&f_cmpA663,
	(funptr)&f_cmpA664,
	(funptr)&f_cmpA665,
	(funptr)&f_cmpA666,
	(funptr)&f_cmpA667,
	(funptr)&f_cmpA668,
	(funptr)&f_cmpA669,
	(funptr)&f_cmpA670,
	(funptr)&f_cmpA671,
	(funptr)&f_cmpA672,
	(funptr)&f_cmpA673,
	(funptr)&f_cmpA674,
	(funptr)&f_cmpA675,
	(funptr)&f_cmpA676,
	(funptr)&f_cmpA677,
	(funptr)&f_cmpA678,
	(funptr)&f_cmpA679,
	(funptr)&f_cmpA680,
	(funptr)&f_cmpA681,
	(funptr)&f_cmpA682,
	(funptr)&f_cmpA683,
	(funptr)&f_cmpA684,
	(funptr)&f_cmpA685,
	(funptr)&f_cmpA686,
	(funptr)&f_cmpA687,
	(funptr)&f_cmpA688,
	(funptr)&f_cmpA689,
	(funptr)&f_cmpA690,
	(funptr)&f_cmpA691,
	(funptr)&f_cmpA692,
	(funptr)&f_cmpA693,
	(funptr)&f_cmpA694,
	(funptr)&f_cmpA695,
	(funptr)&f_cmpA696,
	(funptr)&f_cmpA697,
	(funptr)&f_cmpA698,
	(funptr)&f_cmpA699,
	(funptr)&f_cmpA700,
	(funptr)&f_cmpA701,
	(funptr)&f_cmpA702,
	(funptr)&f_cmpA703,
	(funptr)&f_cmpA704,
	(funptr)&f_cmpA705,
	(funptr)&f_cmpA706,
	(funptr)&f_cmpA707,
	(funptr)&f_cmpA708,
	(funptr)&f_cmpA709,
	(funptr)&f_cmpA710,
	(funptr)&f_cmpA711,
	(funptr)&f_cmpA712,
	(funptr)&f_cmpA713,
	(funptr)&f_cmpA714,
	(funptr)&f_cmpA715,
	(funptr)&f_cmpA716,
	(funptr)&f_cmpA717,
	(funptr)&f_cmpA718,
	(funptr)&f_cmpA719,
	(funptr)&f_cmpA720,
	(funptr)&f_cmpA721,
	(funptr)&f_cmpA722,
	(funptr)&f_cmpA723,
	(funptr)&f_cmpA724,
	(funptr)&f_cmpA725,
	(funptr)&f_cmpA726,
	(funptr)&f_cmpA727,
	(funptr)&f_cmpA728,
	(funptr)&f_cmpA729,
	(funptr)&f_cmpA730,
	(funptr)&f_cmpA731,
	(funptr)&f_cmpA732,
	(funptr)&f_cmpA733,
	(funptr)&f_cmpA734,
	(funptr)&f_cmpA735,
	(funptr)&f_cmpA736,
	(funptr)&f_cmpA737,
	(funptr)&f_cmpA738,
	(funptr)&f_cmpA739,
	(funptr)&f_cmpA740,
	(funptr)&f_cmpA741,
	(funptr)&f_cmpA742,
	(funptr)&f_cmpA743,
	(funptr)&f_cmpA744,
	(funptr)&f_cmpA745,
	(funptr)&f_cmpA746,
	(funptr)&f_cmpA747,
	(funptr)&f_cmpA748,
	(funptr)&f_cmpA749,
	(funptr)&f_cmpA750,
	(funptr)&f_cmpA751,
	(funptr)&f_cmpA752,
	(funptr)&f_cmpA753,
	(funptr)&f_cmpA754,
	(funptr)&f_cmpA755,
	(funptr)&f_cmpA756,
	(funptr)&f_cmpA757,
	(funptr)&f_cmpA758,
	(funptr)&f_cmpA759,
	(funptr)&f_cmpA760,
	(funptr)&f_cmpA761,
	(funptr)&f_cmpA762,
	(funptr)&f_cmpA763,
	(funptr)&f_cmpA764,
	(funptr)&f_cmpA765,
	(funptr)&f_cmpA766,
	(funptr)&f_cmpA767,
	(funptr)&f_cmpA768,
	(funptr)&f_cmpA769,
	(funptr)&f_cmpA770,
	(funptr)&f_cmpA771,
	(funptr)&f_cmpA772,
	(funptr)&f_cmpA773,
	(funptr)&f_cmpA774,
	(funptr)&f_cmpA775,
	(funptr)&f_cmpA776,
	(funptr)&f_cmpA777,
	(funptr)&f_cmpA778,
	(funptr)&f_cmpA779,
	(funptr)&f_cmpA780,
	(funptr)&f_cmpA781,
	(funptr)&f_cmpA782,
	(funptr)&f_cmpA783,
	(funptr)&f_cmpA784,
	(funptr)&f_cmpA785,
	(funptr)&f_cmpA786,
	(funptr)&f_cmpA787,
	(funptr)&f_cmpA788,
	(funptr)&f_cmpA789,
	(funptr)&f_cmpA790,
	(funptr)&f_cmpA791,
	(funptr)&f_cmpA792,
	(funptr)&f_cmpA793,
	(funptr)&f_cmpA794,
	(funptr)&f_cmpA795,
	(funptr)&f_cmpA796,
	(funptr)&f_cmpA797,
	(funptr)&f_cmpA798,
	(funptr)&f_cmpA799,
	(funptr)&f_cmpA800,
	(funptr)&f_cmpA801,
	(funptr)&f_cmpA802,
	(funptr)&f_cmpA803,
	(funptr)&f_cmpA804,
	(funptr)&f_cmpA805,
	(funptr)&f_cmpA806,
	(funptr)&f_cmpA807,
	(funptr)&f_cmpA808,
	(funptr)&f_cmpA809,
	(funptr)&f_cmpA810,
	(funptr)&f_cmpA811,
	(funptr)&f_cmpA812
};
int G_maxargs = 16;
