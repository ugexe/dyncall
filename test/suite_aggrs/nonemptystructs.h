/* <icllcsfdlp> */
union  A1 { i m0; c m1; l m2; l m3; c m4; s m5; f m6; d m7; l m8; p m9; };
void f_cpA1(union  A1 *x, const union  A1 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1(const union  A1 *x, const union  A1 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1, m4), 1);
		dcStructField(st, 's', offsetof(union  A1, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdcfcjs} */
struct A2 { c m0; d m1; c m2; f m3; c m4; j m5; s m6; };
void f_cpA2(struct A2 *x, const struct A2 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA2(const struct A2 *x, const struct A2 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA2() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A2), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A2, m0), 1);
		dcStructField(st, 'd', offsetof(struct A2, m1), 1);
		dcStructField(st, 'c', offsetof(struct A2, m2), 1);
		dcStructField(st, 'f', offsetof(struct A2, m3), 1);
		dcStructField(st, 'c', offsetof(struct A2, m4), 1);
		dcStructField(st, 'j', offsetof(struct A2, m5), 1);
		dcStructField(st, 's', offsetof(struct A2, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <c> */
union  A3 { c m0; };
void f_cpA3(union  A3 *x, const union  A3 *y) { x->m0 = y->m0; };
int f_cmpA3(const union  A3 *x, const union  A3 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA3() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A3), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A3, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {s} */
struct A4 { s m0; };
void f_cpA4(struct A4 *x, const struct A4 *y) { x->m0 = y->m0; };
int f_cmpA4(const struct A4 *x, const struct A4 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA4() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A4), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A4, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ldllip> */
union  A5 { l m0; d m1; l m2; l m3; i m4; p m5; };
void f_cpA5(union  A5 *x, const union  A5 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA5(const union  A5 *x, const union  A5 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA5() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A5), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A5, m0), 1);
		dcStructField(st, 'd', offsetof(union  A5, m1), 1);
		dcStructField(st, 'l', offsetof(union  A5, m2), 1);
		dcStructField(st, 'l', offsetof(union  A5, m3), 1);
		dcStructField(st, 'i', offsetof(union  A5, m4), 1);
		dcStructField(st, 'p', offsetof(union  A5, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjpsi} */
struct A6 { s m0; j m1; p m2; s m3; i m4; };
void f_cpA6(struct A6 *x, const struct A6 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA6(const struct A6 *x, const struct A6 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA6() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A6), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A6, m0), 1);
		dcStructField(st, 'j', offsetof(struct A6, m1), 1);
		dcStructField(st, 'p', offsetof(struct A6, m2), 1);
		dcStructField(st, 's', offsetof(struct A6, m3), 1);
		dcStructField(st, 'i', offsetof(struct A6, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lcp> */
union  A7 { l m0; c m1; p m2; };
void f_cpA7(union  A7 *x, const union  A7 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA7(const union  A7 *x, const union  A7 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA7() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A7), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A7, m0), 1);
		dcStructField(st, 'c', offsetof(union  A7, m1), 1);
		dcStructField(st, 'p', offsetof(union  A7, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <csidff> */
union  A8 { c m0; s m1; i m2; d m3; f m4; f m5; };
void f_cpA8(union  A8 *x, const union  A8 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA8(const union  A8 *x, const union  A8 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA8() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A8), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A8, m0), 1);
		dcStructField(st, 's', offsetof(union  A8, m1), 1);
		dcStructField(st, 'i', offsetof(union  A8, m2), 1);
		dcStructField(st, 'd', offsetof(union  A8, m3), 1);
		dcStructField(st, 'f', offsetof(union  A8, m4), 1);
		dcStructField(st, 'f', offsetof(union  A8, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ls} */
struct A9 { l m0; s m1; };
void f_cpA9(struct A9 *x, const struct A9 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA9(const struct A9 *x, const struct A9 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA9() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A9), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A9, m0), 1);
		dcStructField(st, 's', offsetof(struct A9, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjsfcdfp} */
struct A10 { f m0; j m1; s m2; f m3; c m4; d m5; f m6; p m7; };
void f_cpA10(struct A10 *x, const struct A10 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA10(const struct A10 *x, const struct A10 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA10() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A10), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A10, m0), 1);
		dcStructField(st, 'j', offsetof(struct A10, m1), 1);
		dcStructField(st, 's', offsetof(struct A10, m2), 1);
		dcStructField(st, 'f', offsetof(struct A10, m3), 1);
		dcStructField(st, 'c', offsetof(struct A10, m4), 1);
		dcStructField(st, 'd', offsetof(struct A10, m5), 1);
		dcStructField(st, 'f', offsetof(struct A10, m6), 1);
		dcStructField(st, 'p', offsetof(struct A10, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dd} */
struct A11 { d m0; d m1; };
void f_cpA11(struct A11 *x, const struct A11 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA11(const struct A11 *x, const struct A11 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA11() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A11), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A11, m0), 1);
		dcStructField(st, 'd', offsetof(struct A11, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{s}d<ldllip>j{sjpsi}dsd<lcp>pisi<csidff>fs{ls}dp{fjsfcdfp}d{dd}} */
struct A12 { struct A4 m0; d m1; union  A5 m2; j m3; struct A6 m4; d m5; s m6; d m7; union  A7 m8; p m9; i m10; s m11; i m12; union  A8 m13; f m14; s m15; struct A9 m16; d m17; p m18; struct A10 m19; d m20; struct A11 m21; };
void f_cpA12(struct A12 *x, const struct A12 *y) { f_cpA4(&x->m0, &y->m0); x->m1 = y->m1; f_cpA5(&x->m2, &y->m2); x->m3 = y->m3; f_cpA6(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA7(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA8(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; f_cpA9(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; f_cpA10(&x->m19, &y->m19); x->m20 = y->m20; f_cpA11(&x->m21, &y->m21); };
int f_cmpA12(const struct A12 *x, const struct A12 *y) { return f_cmpA4(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA5(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA6(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA7(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA8(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA9(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA10(&x->m19, &y->m19) && x->m20 == y->m20 && f_cmpA11(&x->m21, &y->m21); };
DCstruct* f_touchdcstA12() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A12), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m0), 1, f_touchdcstA4());
		dcStructField(st, 'd', offsetof(struct A12, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m2), 1, f_touchdcstA5());
		dcStructField(st, 'j', offsetof(struct A12, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m4), 1, f_touchdcstA6());
		dcStructField(st, 'd', offsetof(struct A12, m5), 1);
		dcStructField(st, 's', offsetof(struct A12, m6), 1);
		dcStructField(st, 'd', offsetof(struct A12, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m8), 1, f_touchdcstA7());
		dcStructField(st, 'p', offsetof(struct A12, m9), 1);
		dcStructField(st, 'i', offsetof(struct A12, m10), 1);
		dcStructField(st, 's', offsetof(struct A12, m11), 1);
		dcStructField(st, 'i', offsetof(struct A12, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m13), 1, f_touchdcstA8());
		dcStructField(st, 'f', offsetof(struct A12, m14), 1);
		dcStructField(st, 's', offsetof(struct A12, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m16), 1, f_touchdcstA9());
		dcStructField(st, 'd', offsetof(struct A12, m17), 1);
		dcStructField(st, 'p', offsetof(struct A12, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m19), 1, f_touchdcstA10());
		dcStructField(st, 'd', offsetof(struct A12, m20), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A12, m21), 1, f_touchdcstA11());
		dcCloseStruct(st);
	}
	return st;
};
/* <ijl<c>{{s}d<ldllip>j{sjpsi}dsd<lcp>pisi<csidff>fs{ls}dp{fjsfcdfp}d{dd}}jjlsj> */
union  A13 { i m0; j m1; l m2; union  A3 m3; struct A12 m4; j m5; j m6; l m7; s m8; j m9; };
void f_cpA13(union  A13 *x, const union  A13 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA3(&x->m3, &y->m3); f_cpA12(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA13(const union  A13 *x, const union  A13 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA3(&x->m3, &y->m3) && f_cmpA12(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA13() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A13), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A13, m0), 1);
		dcStructField(st, 'j', offsetof(union  A13, m1), 1);
		dcStructField(st, 'l', offsetof(union  A13, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A13, m3), 1, f_touchdcstA3());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A13, m4), 1, f_touchdcstA12());
		dcStructField(st, 'j', offsetof(union  A13, m5), 1);
		dcStructField(st, 'j', offsetof(union  A13, m6), 1);
		dcStructField(st, 'l', offsetof(union  A13, m7), 1);
		dcStructField(st, 's', offsetof(union  A13, m8), 1);
		dcStructField(st, 'j', offsetof(union  A13, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lj> */
union  A14 { l m0; j m1; };
void f_cpA14(union  A14 *x, const union  A14 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA14(const union  A14 *x, const union  A14 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA14() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A14), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A14, m0), 1);
		dcStructField(st, 'j', offsetof(union  A14, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlpjjcslfdilfddsicd> */
union  A15 { d m0; l m1; p m2; j m3; j m4; c m5; s m6; l m7; f m8; d m9; i m10; l m11; f m12; d m13; d m14; s m15; i m16; c m17; d m18; };
void f_cpA15(union  A15 *x, const union  A15 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA15(const union  A15 *x, const union  A15 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA15() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A15), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A15, m0), 1);
		dcStructField(st, 'l', offsetof(union  A15, m1), 1);
		dcStructField(st, 'p', offsetof(union  A15, m2), 1);
		dcStructField(st, 'j', offsetof(union  A15, m3), 1);
		dcStructField(st, 'j', offsetof(union  A15, m4), 1);
		dcStructField(st, 'c', offsetof(union  A15, m5), 1);
		dcStructField(st, 's', offsetof(union  A15, m6), 1);
		dcStructField(st, 'l', offsetof(union  A15, m7), 1);
		dcStructField(st, 'f', offsetof(union  A15, m8), 1);
		dcStructField(st, 'd', offsetof(union  A15, m9), 1);
		dcStructField(st, 'i', offsetof(union  A15, m10), 1);
		dcStructField(st, 'l', offsetof(union  A15, m11), 1);
		dcStructField(st, 'f', offsetof(union  A15, m12), 1);
		dcStructField(st, 'd', offsetof(union  A15, m13), 1);
		dcStructField(st, 'd', offsetof(union  A15, m14), 1);
		dcStructField(st, 's', offsetof(union  A15, m15), 1);
		dcStructField(st, 'i', offsetof(union  A15, m16), 1);
		dcStructField(st, 'c', offsetof(union  A15, m17), 1);
		dcStructField(st, 'd', offsetof(union  A15, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjp} */
struct A16 { c m0; j m1; p m2; };
void f_cpA16(struct A16 *x, const struct A16 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA16(const struct A16 *x, const struct A16 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA16() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A16), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A16, m0), 1);
		dcStructField(st, 'j', offsetof(struct A16, m1), 1);
		dcStructField(st, 'p', offsetof(struct A16, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfdcds} */
struct A17 { c m0; f m1; d m2; c m3; d m4; s m5; };
void f_cpA17(struct A17 *x, const struct A17 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA17(const struct A17 *x, const struct A17 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA17() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A17), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A17, m0), 1);
		dcStructField(st, 'f', offsetof(struct A17, m1), 1);
		dcStructField(st, 'd', offsetof(struct A17, m2), 1);
		dcStructField(st, 'c', offsetof(struct A17, m3), 1);
		dcStructField(st, 'd', offsetof(struct A17, m4), 1);
		dcStructField(st, 's', offsetof(struct A17, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pc> */
union  A18 { p m0; c m1; };
void f_cpA18(union  A18 *x, const union  A18 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA18(const union  A18 *x, const union  A18 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA18() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A18), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A18, m0), 1);
		dcStructField(st, 'c', offsetof(union  A18, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <idf> */
union  A19 { i m0; d m1; f m2; };
void f_cpA19(union  A19 *x, const union  A19 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA19(const union  A19 *x, const union  A19 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA19() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A19), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A19, m0), 1);
		dcStructField(st, 'd', offsetof(union  A19, m1), 1);
		dcStructField(st, 'f', offsetof(union  A19, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l<idf>} */
struct A20 { l m0; union  A19 m1; };
void f_cpA20(struct A20 *x, const struct A20 *y) { x->m0 = y->m0; f_cpA19(&x->m1, &y->m1); };
int f_cmpA20(const struct A20 *x, const struct A20 *y) { return x->m0 == y->m0 && f_cmpA19(&x->m1, &y->m1); };
DCstruct* f_touchdcstA20() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A20), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A20, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A20, m1), 1, f_touchdcstA19());
		dcCloseStruct(st);
	}
	return st;
};
/* {{l<idf>}dfpdsfldjsclcjlj} */
struct A21 { struct A20 m0; d m1; f m2; p m3; d m4; s m5; f m6; l m7; d m8; j m9; s m10; c m11; l m12; c m13; j m14; l m15; j m16; };
void f_cpA21(struct A21 *x, const struct A21 *y) { f_cpA20(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA21(const struct A21 *x, const struct A21 *y) { return f_cmpA20(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA21() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A21), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A21, m0), 1, f_touchdcstA20());
		dcStructField(st, 'd', offsetof(struct A21, m1), 1);
		dcStructField(st, 'f', offsetof(struct A21, m2), 1);
		dcStructField(st, 'p', offsetof(struct A21, m3), 1);
		dcStructField(st, 'd', offsetof(struct A21, m4), 1);
		dcStructField(st, 's', offsetof(struct A21, m5), 1);
		dcStructField(st, 'f', offsetof(struct A21, m6), 1);
		dcStructField(st, 'l', offsetof(struct A21, m7), 1);
		dcStructField(st, 'd', offsetof(struct A21, m8), 1);
		dcStructField(st, 'j', offsetof(struct A21, m9), 1);
		dcStructField(st, 's', offsetof(struct A21, m10), 1);
		dcStructField(st, 'c', offsetof(struct A21, m11), 1);
		dcStructField(st, 'l', offsetof(struct A21, m12), 1);
		dcStructField(st, 'c', offsetof(struct A21, m13), 1);
		dcStructField(st, 'j', offsetof(struct A21, m14), 1);
		dcStructField(st, 'l', offsetof(struct A21, m15), 1);
		dcStructField(st, 'j', offsetof(struct A21, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <i> */
union  A22 { i m0; };
void f_cpA22(union  A22 *x, const union  A22 *y) { x->m0 = y->m0; };
int f_cmpA22(const union  A22 *x, const union  A22 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA22() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A22), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A22, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dicpdi} */
struct A23 { d m0; i m1; c m2; p m3; d m4; i m5; };
void f_cpA23(struct A23 *x, const struct A23 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA23(const struct A23 *x, const struct A23 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA23() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A23), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A23, m0), 1);
		dcStructField(st, 'i', offsetof(struct A23, m1), 1);
		dcStructField(st, 'c', offsetof(struct A23, m2), 1);
		dcStructField(st, 'p', offsetof(struct A23, m3), 1);
		dcStructField(st, 'd', offsetof(struct A23, m4), 1);
		dcStructField(st, 'i', offsetof(struct A23, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jsfdjpli} */
struct A24 { j m0; s m1; f m2; d m3; j m4; p m5; l m6; i m7; };
void f_cpA24(struct A24 *x, const struct A24 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA24(const struct A24 *x, const struct A24 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA24() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A24), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A24, m0), 1);
		dcStructField(st, 's', offsetof(struct A24, m1), 1);
		dcStructField(st, 'f', offsetof(struct A24, m2), 1);
		dcStructField(st, 'd', offsetof(struct A24, m3), 1);
		dcStructField(st, 'j', offsetof(struct A24, m4), 1);
		dcStructField(st, 'p', offsetof(struct A24, m5), 1);
		dcStructField(st, 'l', offsetof(struct A24, m6), 1);
		dcStructField(st, 'i', offsetof(struct A24, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pcslsijpjdj> */
union  A25 { p m0; c m1; s m2; l m3; s m4; i m5; j m6; p m7; j m8; d m9; j m10; };
void f_cpA25(union  A25 *x, const union  A25 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA25(const union  A25 *x, const union  A25 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA25() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A25), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A25, m0), 1);
		dcStructField(st, 'c', offsetof(union  A25, m1), 1);
		dcStructField(st, 's', offsetof(union  A25, m2), 1);
		dcStructField(st, 'l', offsetof(union  A25, m3), 1);
		dcStructField(st, 's', offsetof(union  A25, m4), 1);
		dcStructField(st, 'i', offsetof(union  A25, m5), 1);
		dcStructField(st, 'j', offsetof(union  A25, m6), 1);
		dcStructField(st, 'p', offsetof(union  A25, m7), 1);
		dcStructField(st, 'j', offsetof(union  A25, m8), 1);
		dcStructField(st, 'd', offsetof(union  A25, m9), 1);
		dcStructField(st, 'j', offsetof(union  A25, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifjlspijsjsjsjfdcjj} */
struct A26 { i m0; f m1; j m2; l m3; s m4; p m5; i m6; j m7; s m8; j m9; s m10; j m11; s m12; j m13; f m14; d m15; c m16; j m17; j m18; };
void f_cpA26(struct A26 *x, const struct A26 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA26(const struct A26 *x, const struct A26 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA26() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A26), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A26, m0), 1);
		dcStructField(st, 'f', offsetof(struct A26, m1), 1);
		dcStructField(st, 'j', offsetof(struct A26, m2), 1);
		dcStructField(st, 'l', offsetof(struct A26, m3), 1);
		dcStructField(st, 's', offsetof(struct A26, m4), 1);
		dcStructField(st, 'p', offsetof(struct A26, m5), 1);
		dcStructField(st, 'i', offsetof(struct A26, m6), 1);
		dcStructField(st, 'j', offsetof(struct A26, m7), 1);
		dcStructField(st, 's', offsetof(struct A26, m8), 1);
		dcStructField(st, 'j', offsetof(struct A26, m9), 1);
		dcStructField(st, 's', offsetof(struct A26, m10), 1);
		dcStructField(st, 'j', offsetof(struct A26, m11), 1);
		dcStructField(st, 's', offsetof(struct A26, m12), 1);
		dcStructField(st, 'j', offsetof(struct A26, m13), 1);
		dcStructField(st, 'f', offsetof(struct A26, m14), 1);
		dcStructField(st, 'd', offsetof(struct A26, m15), 1);
		dcStructField(st, 'c', offsetof(struct A26, m16), 1);
		dcStructField(st, 'j', offsetof(struct A26, m17), 1);
		dcStructField(st, 'j', offsetof(struct A26, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfdlfj> */
union  A27 { p m0; f m1; d m2; l m3; f m4; j m5; };
void f_cpA27(union  A27 *x, const union  A27 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA27(const union  A27 *x, const union  A27 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA27() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A27), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A27, m0), 1);
		dcStructField(st, 'f', offsetof(union  A27, m1), 1);
		dcStructField(st, 'd', offsetof(union  A27, m2), 1);
		dcStructField(st, 'l', offsetof(union  A27, m3), 1);
		dcStructField(st, 'f', offsetof(union  A27, m4), 1);
		dcStructField(st, 'j', offsetof(union  A27, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipdj{jsfdjpli}cl<pcslsijpjdj>dfd{ifjlspijsjsjsjfdcjj}<pfdlfj>s} */
struct A28 { i m0; p m1; d m2; j m3; struct A24 m4; c m5; l m6; union  A25 m7; d m8; f m9; d m10; struct A26 m11; union  A27 m12; s m13; };
void f_cpA28(struct A28 *x, const struct A28 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA24(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA25(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA26(&x->m11, &y->m11); f_cpA27(&x->m12, &y->m12); x->m13 = y->m13; };
int f_cmpA28(const struct A28 *x, const struct A28 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA24(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA25(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA26(&x->m11, &y->m11) && f_cmpA27(&x->m12, &y->m12) && x->m13 == y->m13; };
DCstruct* f_touchdcstA28() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A28), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A28, m0), 1);
		dcStructField(st, 'p', offsetof(struct A28, m1), 1);
		dcStructField(st, 'd', offsetof(struct A28, m2), 1);
		dcStructField(st, 'j', offsetof(struct A28, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A28, m4), 1, f_touchdcstA24());
		dcStructField(st, 'c', offsetof(struct A28, m5), 1);
		dcStructField(st, 'l', offsetof(struct A28, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A28, m7), 1, f_touchdcstA25());
		dcStructField(st, 'd', offsetof(struct A28, m8), 1);
		dcStructField(st, 'f', offsetof(struct A28, m9), 1);
		dcStructField(st, 'd', offsetof(struct A28, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A28, m11), 1, f_touchdcstA26());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A28, m12), 1, f_touchdcstA27());
		dcStructField(st, 's', offsetof(struct A28, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lfips> */
union  A29 { l m0; f m1; i m2; p m3; s m4; };
void f_cpA29(union  A29 *x, const union  A29 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA29(const union  A29 *x, const union  A29 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA29() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A29), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A29, m0), 1);
		dcStructField(st, 'f', offsetof(union  A29, m1), 1);
		dcStructField(st, 'i', offsetof(union  A29, m2), 1);
		dcStructField(st, 'p', offsetof(union  A29, m3), 1);
		dcStructField(st, 's', offsetof(union  A29, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldi<lfips>jflccd} */
struct A30 { l m0; d m1; i m2; union  A29 m3; j m4; f m5; l m6; c m7; c m8; d m9; };
void f_cpA30(struct A30 *x, const struct A30 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA29(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA30(const struct A30 *x, const struct A30 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA29(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA30() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A30), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A30, m0), 1);
		dcStructField(st, 'd', offsetof(struct A30, m1), 1);
		dcStructField(st, 'i', offsetof(struct A30, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A30, m3), 1, f_touchdcstA29());
		dcStructField(st, 'j', offsetof(struct A30, m4), 1);
		dcStructField(st, 'f', offsetof(struct A30, m5), 1);
		dcStructField(st, 'l', offsetof(struct A30, m6), 1);
		dcStructField(st, 'c', offsetof(struct A30, m7), 1);
		dcStructField(st, 'c', offsetof(struct A30, m8), 1);
		dcStructField(st, 'd', offsetof(struct A30, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psflpi} */
struct A31 { p m0; s m1; f m2; l m3; p m4; i m5; };
void f_cpA31(struct A31 *x, const struct A31 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA31(const struct A31 *x, const struct A31 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA31() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A31), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A31, m0), 1);
		dcStructField(st, 's', offsetof(struct A31, m1), 1);
		dcStructField(st, 'f', offsetof(struct A31, m2), 1);
		dcStructField(st, 'l', offsetof(struct A31, m3), 1);
		dcStructField(st, 'p', offsetof(struct A31, m4), 1);
		dcStructField(st, 'i', offsetof(struct A31, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iidpi> */
union  A32 { i m0; i m1; d m2; p m3; i m4; };
void f_cpA32(union  A32 *x, const union  A32 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA32(const union  A32 *x, const union  A32 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA32() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A32), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A32, m0), 1);
		dcStructField(st, 'i', offsetof(union  A32, m1), 1);
		dcStructField(st, 'd', offsetof(union  A32, m2), 1);
		dcStructField(st, 'p', offsetof(union  A32, m3), 1);
		dcStructField(st, 'i', offsetof(union  A32, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <il> */
union  A33 { i m0; l m1; };
void f_cpA33(union  A33 *x, const union  A33 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA33(const union  A33 *x, const union  A33 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA33() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A33), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A33, m0), 1);
		dcStructField(st, 'l', offsetof(union  A33, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jddspfldpdils} */
struct A34 { j m0; d m1; d m2; s m3; p m4; f m5; l m6; d m7; p m8; d m9; i m10; l m11; s m12; };
void f_cpA34(struct A34 *x, const struct A34 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA34(const struct A34 *x, const struct A34 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA34() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A34), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A34, m0), 1);
		dcStructField(st, 'd', offsetof(struct A34, m1), 1);
		dcStructField(st, 'd', offsetof(struct A34, m2), 1);
		dcStructField(st, 's', offsetof(struct A34, m3), 1);
		dcStructField(st, 'p', offsetof(struct A34, m4), 1);
		dcStructField(st, 'f', offsetof(struct A34, m5), 1);
		dcStructField(st, 'l', offsetof(struct A34, m6), 1);
		dcStructField(st, 'd', offsetof(struct A34, m7), 1);
		dcStructField(st, 'p', offsetof(struct A34, m8), 1);
		dcStructField(st, 'd', offsetof(struct A34, m9), 1);
		dcStructField(st, 'i', offsetof(struct A34, m10), 1);
		dcStructField(st, 'l', offsetof(struct A34, m11), 1);
		dcStructField(st, 's', offsetof(struct A34, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{psflpi}lpjsc<iidpi>if<il>{jddspfldpdils}csd> */
union  A35 { struct A31 m0; l m1; p m2; j m3; s m4; c m5; union  A32 m6; i m7; f m8; union  A33 m9; struct A34 m10; c m11; s m12; d m13; };
void f_cpA35(union  A35 *x, const union  A35 *y) { f_cpA31(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA32(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; f_cpA33(&x->m9, &y->m9); f_cpA34(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA35(const union  A35 *x, const union  A35 *y) { return f_cmpA31(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA32(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA33(&x->m9, &y->m9) && f_cmpA34(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA35() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A35), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A35, m0), 1, f_touchdcstA31());
		dcStructField(st, 'l', offsetof(union  A35, m1), 1);
		dcStructField(st, 'p', offsetof(union  A35, m2), 1);
		dcStructField(st, 'j', offsetof(union  A35, m3), 1);
		dcStructField(st, 's', offsetof(union  A35, m4), 1);
		dcStructField(st, 'c', offsetof(union  A35, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A35, m6), 1, f_touchdcstA32());
		dcStructField(st, 'i', offsetof(union  A35, m7), 1);
		dcStructField(st, 'f', offsetof(union  A35, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A35, m9), 1, f_touchdcstA33());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A35, m10), 1, f_touchdcstA34());
		dcStructField(st, 'c', offsetof(union  A35, m11), 1);
		dcStructField(st, 's', offsetof(union  A35, m12), 1);
		dcStructField(st, 'd', offsetof(union  A35, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jiccfddifjl> */
union  A36 { j m0; i m1; c m2; c m3; f m4; d m5; d m6; i m7; f m8; j m9; l m10; };
void f_cpA36(union  A36 *x, const union  A36 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA36(const union  A36 *x, const union  A36 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA36() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A36), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A36, m0), 1);
		dcStructField(st, 'i', offsetof(union  A36, m1), 1);
		dcStructField(st, 'c', offsetof(union  A36, m2), 1);
		dcStructField(st, 'c', offsetof(union  A36, m3), 1);
		dcStructField(st, 'f', offsetof(union  A36, m4), 1);
		dcStructField(st, 'd', offsetof(union  A36, m5), 1);
		dcStructField(st, 'd', offsetof(union  A36, m6), 1);
		dcStructField(st, 'i', offsetof(union  A36, m7), 1);
		dcStructField(st, 'f', offsetof(union  A36, m8), 1);
		dcStructField(st, 'j', offsetof(union  A36, m9), 1);
		dcStructField(st, 'l', offsetof(union  A36, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfjpfdjfdlijjdpisji> */
union  A37 { d m0; f m1; j m2; p m3; f m4; d m5; j m6; f m7; d m8; l m9; i m10; j m11; j m12; d m13; p m14; i m15; s m16; j m17; i m18; };
void f_cpA37(union  A37 *x, const union  A37 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA37(const union  A37 *x, const union  A37 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA37() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A37), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A37, m0), 1);
		dcStructField(st, 'f', offsetof(union  A37, m1), 1);
		dcStructField(st, 'j', offsetof(union  A37, m2), 1);
		dcStructField(st, 'p', offsetof(union  A37, m3), 1);
		dcStructField(st, 'f', offsetof(union  A37, m4), 1);
		dcStructField(st, 'd', offsetof(union  A37, m5), 1);
		dcStructField(st, 'j', offsetof(union  A37, m6), 1);
		dcStructField(st, 'f', offsetof(union  A37, m7), 1);
		dcStructField(st, 'd', offsetof(union  A37, m8), 1);
		dcStructField(st, 'l', offsetof(union  A37, m9), 1);
		dcStructField(st, 'i', offsetof(union  A37, m10), 1);
		dcStructField(st, 'j', offsetof(union  A37, m11), 1);
		dcStructField(st, 'j', offsetof(union  A37, m12), 1);
		dcStructField(st, 'd', offsetof(union  A37, m13), 1);
		dcStructField(st, 'p', offsetof(union  A37, m14), 1);
		dcStructField(st, 'i', offsetof(union  A37, m15), 1);
		dcStructField(st, 's', offsetof(union  A37, m16), 1);
		dcStructField(st, 'j', offsetof(union  A37, m17), 1);
		dcStructField(st, 'i', offsetof(union  A37, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <csidcscjff> */
union  A38 { c m0; s m1; i m2; d m3; c m4; s m5; c m6; j m7; f m8; f m9; };
void f_cpA38(union  A38 *x, const union  A38 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA38(const union  A38 *x, const union  A38 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA38() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A38), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A38, m0), 1);
		dcStructField(st, 's', offsetof(union  A38, m1), 1);
		dcStructField(st, 'i', offsetof(union  A38, m2), 1);
		dcStructField(st, 'd', offsetof(union  A38, m3), 1);
		dcStructField(st, 'c', offsetof(union  A38, m4), 1);
		dcStructField(st, 's', offsetof(union  A38, m5), 1);
		dcStructField(st, 'c', offsetof(union  A38, m6), 1);
		dcStructField(st, 'j', offsetof(union  A38, m7), 1);
		dcStructField(st, 'f', offsetof(union  A38, m8), 1);
		dcStructField(st, 'f', offsetof(union  A38, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpllijlp} */
struct A39 { j m0; p m1; l m2; l m3; i m4; j m5; l m6; p m7; };
void f_cpA39(struct A39 *x, const struct A39 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA39(const struct A39 *x, const struct A39 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA39() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A39), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A39, m0), 1);
		dcStructField(st, 'p', offsetof(struct A39, m1), 1);
		dcStructField(st, 'l', offsetof(struct A39, m2), 1);
		dcStructField(st, 'l', offsetof(struct A39, m3), 1);
		dcStructField(st, 'i', offsetof(struct A39, m4), 1);
		dcStructField(st, 'j', offsetof(struct A39, m5), 1);
		dcStructField(st, 'l', offsetof(struct A39, m6), 1);
		dcStructField(st, 'p', offsetof(struct A39, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jiiccfcidlcildislll} */
struct A40 { j m0; i m1; i m2; c m3; c m4; f m5; c m6; i m7; d m8; l m9; c m10; i m11; l m12; d m13; i m14; s m15; l m16; l m17; l m18; };
void f_cpA40(struct A40 *x, const struct A40 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA40(const struct A40 *x, const struct A40 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA40() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A40), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A40, m0), 1);
		dcStructField(st, 'i', offsetof(struct A40, m1), 1);
		dcStructField(st, 'i', offsetof(struct A40, m2), 1);
		dcStructField(st, 'c', offsetof(struct A40, m3), 1);
		dcStructField(st, 'c', offsetof(struct A40, m4), 1);
		dcStructField(st, 'f', offsetof(struct A40, m5), 1);
		dcStructField(st, 'c', offsetof(struct A40, m6), 1);
		dcStructField(st, 'i', offsetof(struct A40, m7), 1);
		dcStructField(st, 'd', offsetof(struct A40, m8), 1);
		dcStructField(st, 'l', offsetof(struct A40, m9), 1);
		dcStructField(st, 'c', offsetof(struct A40, m10), 1);
		dcStructField(st, 'i', offsetof(struct A40, m11), 1);
		dcStructField(st, 'l', offsetof(struct A40, m12), 1);
		dcStructField(st, 'd', offsetof(struct A40, m13), 1);
		dcStructField(st, 'i', offsetof(struct A40, m14), 1);
		dcStructField(st, 's', offsetof(struct A40, m15), 1);
		dcStructField(st, 'l', offsetof(struct A40, m16), 1);
		dcStructField(st, 'l', offsetof(struct A40, m17), 1);
		dcStructField(st, 'l', offsetof(struct A40, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djppf<csidcscjff>{jpllijlp}cldcp{jiiccfcidlcildislll}fpii} */
struct A41 { d m0; j m1; p m2; p m3; f m4; union  A38 m5; struct A39 m6; c m7; l m8; d m9; c m10; p m11; struct A40 m12; f m13; p m14; i m15; i m16; };
void f_cpA41(struct A41 *x, const struct A41 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA38(&x->m5, &y->m5); f_cpA39(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA40(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA41(const struct A41 *x, const struct A41 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA38(&x->m5, &y->m5) && f_cmpA39(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA40(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA41() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A41), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A41, m0), 1);
		dcStructField(st, 'j', offsetof(struct A41, m1), 1);
		dcStructField(st, 'p', offsetof(struct A41, m2), 1);
		dcStructField(st, 'p', offsetof(struct A41, m3), 1);
		dcStructField(st, 'f', offsetof(struct A41, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A41, m5), 1, f_touchdcstA38());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A41, m6), 1, f_touchdcstA39());
		dcStructField(st, 'c', offsetof(struct A41, m7), 1);
		dcStructField(st, 'l', offsetof(struct A41, m8), 1);
		dcStructField(st, 'd', offsetof(struct A41, m9), 1);
		dcStructField(st, 'c', offsetof(struct A41, m10), 1);
		dcStructField(st, 'p', offsetof(struct A41, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A41, m12), 1, f_touchdcstA40());
		dcStructField(st, 'f', offsetof(struct A41, m13), 1);
		dcStructField(st, 'p', offsetof(struct A41, m14), 1);
		dcStructField(st, 'i', offsetof(struct A41, m15), 1);
		dcStructField(st, 'i', offsetof(struct A41, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsisddcjjp} */
struct A42 { d m0; s m1; i m2; s m3; d m4; d m5; c m6; j m7; j m8; p m9; };
void f_cpA42(struct A42 *x, const struct A42 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA42(const struct A42 *x, const struct A42 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA42() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A42), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A42, m0), 1);
		dcStructField(st, 's', offsetof(struct A42, m1), 1);
		dcStructField(st, 'i', offsetof(struct A42, m2), 1);
		dcStructField(st, 's', offsetof(struct A42, m3), 1);
		dcStructField(st, 'd', offsetof(struct A42, m4), 1);
		dcStructField(st, 'd', offsetof(struct A42, m5), 1);
		dcStructField(st, 'c', offsetof(struct A42, m6), 1);
		dcStructField(st, 'j', offsetof(struct A42, m7), 1);
		dcStructField(st, 'j', offsetof(struct A42, m8), 1);
		dcStructField(st, 'p', offsetof(struct A42, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jspplpf> */
union  A43 { j m0; s m1; p m2; p m3; l m4; p m5; f m6; };
void f_cpA43(union  A43 *x, const union  A43 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA43(const union  A43 *x, const union  A43 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA43() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A43), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A43, m0), 1);
		dcStructField(st, 's', offsetof(union  A43, m1), 1);
		dcStructField(st, 'p', offsetof(union  A43, m2), 1);
		dcStructField(st, 'p', offsetof(union  A43, m3), 1);
		dcStructField(st, 'l', offsetof(union  A43, m4), 1);
		dcStructField(st, 'p', offsetof(union  A43, m5), 1);
		dcStructField(st, 'f', offsetof(union  A43, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pili> */
union  A44 { p m0; i m1; l m2; i m3; };
void f_cpA44(union  A44 *x, const union  A44 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA44(const union  A44 *x, const union  A44 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA44() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A44), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A44, m0), 1);
		dcStructField(st, 'i', offsetof(union  A44, m1), 1);
		dcStructField(st, 'l', offsetof(union  A44, m2), 1);
		dcStructField(st, 'i', offsetof(union  A44, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iisjcppsjj<jspplpf>iscs<pili>cpis} */
struct A45 { i m0; i m1; s m2; j m3; c m4; p m5; p m6; s m7; j m8; j m9; union  A43 m10; i m11; s m12; c m13; s m14; union  A44 m15; c m16; p m17; i m18; s m19; };
void f_cpA45(struct A45 *x, const struct A45 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA43(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA44(&x->m15, &y->m15); x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA45(const struct A45 *x, const struct A45 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA43(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA44(&x->m15, &y->m15) && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA45() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A45), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A45, m0), 1);
		dcStructField(st, 'i', offsetof(struct A45, m1), 1);
		dcStructField(st, 's', offsetof(struct A45, m2), 1);
		dcStructField(st, 'j', offsetof(struct A45, m3), 1);
		dcStructField(st, 'c', offsetof(struct A45, m4), 1);
		dcStructField(st, 'p', offsetof(struct A45, m5), 1);
		dcStructField(st, 'p', offsetof(struct A45, m6), 1);
		dcStructField(st, 's', offsetof(struct A45, m7), 1);
		dcStructField(st, 'j', offsetof(struct A45, m8), 1);
		dcStructField(st, 'j', offsetof(struct A45, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A45, m10), 1, f_touchdcstA43());
		dcStructField(st, 'i', offsetof(struct A45, m11), 1);
		dcStructField(st, 's', offsetof(struct A45, m12), 1);
		dcStructField(st, 'c', offsetof(struct A45, m13), 1);
		dcStructField(st, 's', offsetof(struct A45, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A45, m15), 1, f_touchdcstA44());
		dcStructField(st, 'c', offsetof(struct A45, m16), 1);
		dcStructField(st, 'p', offsetof(struct A45, m17), 1);
		dcStructField(st, 'i', offsetof(struct A45, m18), 1);
		dcStructField(st, 's', offsetof(struct A45, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jidd> */
union  A46 { j m0; i m1; d m2; d m3; };
void f_cpA46(union  A46 *x, const union  A46 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA46(const union  A46 *x, const union  A46 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA46() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A46), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A46, m0), 1);
		dcStructField(st, 'i', offsetof(union  A46, m1), 1);
		dcStructField(st, 'd', offsetof(union  A46, m2), 1);
		dcStructField(st, 'd', offsetof(union  A46, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <j> */
union  A47 { j m0; };
void f_cpA47(union  A47 *x, const union  A47 *y) { x->m0 = y->m0; };
int f_cmpA47(const union  A47 *x, const union  A47 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA47() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A47), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A47, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lccfpc} */
struct A48 { l m0; c m1; c m2; f m3; p m4; c m5; };
void f_cpA48(struct A48 *x, const struct A48 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA48(const struct A48 *x, const struct A48 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA48() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A48), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A48, m0), 1);
		dcStructField(st, 'c', offsetof(struct A48, m1), 1);
		dcStructField(st, 'c', offsetof(struct A48, m2), 1);
		dcStructField(st, 'f', offsetof(struct A48, m3), 1);
		dcStructField(st, 'p', offsetof(struct A48, m4), 1);
		dcStructField(st, 'c', offsetof(struct A48, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jpfpjpij> */
union  A49 { j m0; p m1; f m2; p m3; j m4; p m5; i m6; j m7; };
void f_cpA49(union  A49 *x, const union  A49 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA49(const union  A49 *x, const union  A49 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA49() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A49), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A49, m0), 1);
		dcStructField(st, 'p', offsetof(union  A49, m1), 1);
		dcStructField(st, 'f', offsetof(union  A49, m2), 1);
		dcStructField(st, 'p', offsetof(union  A49, m3), 1);
		dcStructField(st, 'j', offsetof(union  A49, m4), 1);
		dcStructField(st, 'p', offsetof(union  A49, m5), 1);
		dcStructField(st, 'i', offsetof(union  A49, m6), 1);
		dcStructField(st, 'j', offsetof(union  A49, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsj} */
struct A50 { l m0; s m1; j m2; };
void f_cpA50(struct A50 *x, const struct A50 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA50(const struct A50 *x, const struct A50 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA50() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A50), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A50, m0), 1);
		dcStructField(st, 's', offsetof(struct A50, m1), 1);
		dcStructField(st, 'j', offsetof(struct A50, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l} */
struct A51 { l m0; };
void f_cpA51(struct A51 *x, const struct A51 *y) { x->m0 = y->m0; };
int f_cmpA51(const struct A51 *x, const struct A51 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA51() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A51), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A51, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <spsc{lsj}{l}i> */
union  A52 { s m0; p m1; s m2; c m3; struct A50 m4; struct A51 m5; i m6; };
void f_cpA52(union  A52 *x, const union  A52 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA50(&x->m4, &y->m4); f_cpA51(&x->m5, &y->m5); x->m6 = y->m6; };
int f_cmpA52(const union  A52 *x, const union  A52 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA50(&x->m4, &y->m4) && f_cmpA51(&x->m5, &y->m5) && x->m6 == y->m6; };
DCstruct* f_touchdcstA52() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A52), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A52, m0), 1);
		dcStructField(st, 'p', offsetof(union  A52, m1), 1);
		dcStructField(st, 's', offsetof(union  A52, m2), 1);
		dcStructField(st, 'c', offsetof(union  A52, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A52, m4), 1, f_touchdcstA50());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A52, m5), 1, f_touchdcstA51());
		dcStructField(st, 'i', offsetof(union  A52, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lijljpjplcjidcdcslpjljfc> */
union  A53 { l m0; i m1; j m2; l m3; j m4; p m5; j m6; p m7; l m8; c m9; j m10; i m11; d m12; c m13; d m14; c m15; s m16; l m17; p m18; j m19; l m20; j m21; f m22; c m23; };
void f_cpA53(union  A53 *x, const union  A53 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA53(const union  A53 *x, const union  A53 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA53() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(union  A53), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A53, m0), 1);
		dcStructField(st, 'i', offsetof(union  A53, m1), 1);
		dcStructField(st, 'j', offsetof(union  A53, m2), 1);
		dcStructField(st, 'l', offsetof(union  A53, m3), 1);
		dcStructField(st, 'j', offsetof(union  A53, m4), 1);
		dcStructField(st, 'p', offsetof(union  A53, m5), 1);
		dcStructField(st, 'j', offsetof(union  A53, m6), 1);
		dcStructField(st, 'p', offsetof(union  A53, m7), 1);
		dcStructField(st, 'l', offsetof(union  A53, m8), 1);
		dcStructField(st, 'c', offsetof(union  A53, m9), 1);
		dcStructField(st, 'j', offsetof(union  A53, m10), 1);
		dcStructField(st, 'i', offsetof(union  A53, m11), 1);
		dcStructField(st, 'd', offsetof(union  A53, m12), 1);
		dcStructField(st, 'c', offsetof(union  A53, m13), 1);
		dcStructField(st, 'd', offsetof(union  A53, m14), 1);
		dcStructField(st, 'c', offsetof(union  A53, m15), 1);
		dcStructField(st, 's', offsetof(union  A53, m16), 1);
		dcStructField(st, 'l', offsetof(union  A53, m17), 1);
		dcStructField(st, 'p', offsetof(union  A53, m18), 1);
		dcStructField(st, 'j', offsetof(union  A53, m19), 1);
		dcStructField(st, 'l', offsetof(union  A53, m20), 1);
		dcStructField(st, 'j', offsetof(union  A53, m21), 1);
		dcStructField(st, 'f', offsetof(union  A53, m22), 1);
		dcStructField(st, 'c', offsetof(union  A53, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cldlfl} */
struct A54 { c m0; l m1; d m2; l m3; f m4; l m5; };
void f_cpA54(struct A54 *x, const struct A54 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA54(const struct A54 *x, const struct A54 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA54() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A54), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A54, m0), 1);
		dcStructField(st, 'l', offsetof(struct A54, m1), 1);
		dcStructField(st, 'd', offsetof(struct A54, m2), 1);
		dcStructField(st, 'l', offsetof(struct A54, m3), 1);
		dcStructField(st, 'f', offsetof(struct A54, m4), 1);
		dcStructField(st, 'l', offsetof(struct A54, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pjjpisilcf> */
union  A55 { p m0; j m1; j m2; p m3; i m4; s m5; i m6; l m7; c m8; f m9; };
void f_cpA55(union  A55 *x, const union  A55 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA55(const union  A55 *x, const union  A55 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA55() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A55), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A55, m0), 1);
		dcStructField(st, 'j', offsetof(union  A55, m1), 1);
		dcStructField(st, 'j', offsetof(union  A55, m2), 1);
		dcStructField(st, 'p', offsetof(union  A55, m3), 1);
		dcStructField(st, 'i', offsetof(union  A55, m4), 1);
		dcStructField(st, 's', offsetof(union  A55, m5), 1);
		dcStructField(st, 'i', offsetof(union  A55, m6), 1);
		dcStructField(st, 'l', offsetof(union  A55, m7), 1);
		dcStructField(st, 'c', offsetof(union  A55, m8), 1);
		dcStructField(st, 'f', offsetof(union  A55, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slp} */
struct A56 { s m0; l m1; p m2; };
void f_cpA56(struct A56 *x, const struct A56 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA56(const struct A56 *x, const struct A56 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA56() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A56), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A56, m0), 1);
		dcStructField(st, 'l', offsetof(struct A56, m1), 1);
		dcStructField(st, 'p', offsetof(struct A56, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jj} */
struct A57 { j m0; j m1; };
void f_cpA57(struct A57 *x, const struct A57 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA57(const struct A57 *x, const struct A57 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA57() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A57), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A57, m0), 1);
		dcStructField(st, 'j', offsetof(struct A57, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cfdppfc> */
union  A58 { c m0; f m1; d m2; p m3; p m4; f m5; c m6; };
void f_cpA58(union  A58 *x, const union  A58 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA58(const union  A58 *x, const union  A58 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA58() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A58), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A58, m0), 1);
		dcStructField(st, 'f', offsetof(union  A58, m1), 1);
		dcStructField(st, 'd', offsetof(union  A58, m2), 1);
		dcStructField(st, 'p', offsetof(union  A58, m3), 1);
		dcStructField(st, 'p', offsetof(union  A58, m4), 1);
		dcStructField(st, 'f', offsetof(union  A58, m5), 1);
		dcStructField(st, 'c', offsetof(union  A58, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jpsfidpljsijdpfi> */
union  A59 { j m0; p m1; s m2; f m3; i m4; d m5; p m6; l m7; j m8; s m9; i m10; j m11; d m12; p m13; f m14; i m15; };
void f_cpA59(union  A59 *x, const union  A59 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA59(const union  A59 *x, const union  A59 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA59() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A59), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A59, m0), 1);
		dcStructField(st, 'p', offsetof(union  A59, m1), 1);
		dcStructField(st, 's', offsetof(union  A59, m2), 1);
		dcStructField(st, 'f', offsetof(union  A59, m3), 1);
		dcStructField(st, 'i', offsetof(union  A59, m4), 1);
		dcStructField(st, 'd', offsetof(union  A59, m5), 1);
		dcStructField(st, 'p', offsetof(union  A59, m6), 1);
		dcStructField(st, 'l', offsetof(union  A59, m7), 1);
		dcStructField(st, 'j', offsetof(union  A59, m8), 1);
		dcStructField(st, 's', offsetof(union  A59, m9), 1);
		dcStructField(st, 'i', offsetof(union  A59, m10), 1);
		dcStructField(st, 'j', offsetof(union  A59, m11), 1);
		dcStructField(st, 'd', offsetof(union  A59, m12), 1);
		dcStructField(st, 'p', offsetof(union  A59, m13), 1);
		dcStructField(st, 'f', offsetof(union  A59, m14), 1);
		dcStructField(st, 'i', offsetof(union  A59, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcjsffj{slp}s{jj}pd<cfdppfc>fjcs<jpsfidpljsijdpfi>difjd} */
struct A60 { p m0; c m1; j m2; s m3; f m4; f m5; j m6; struct A56 m7; s m8; struct A57 m9; p m10; d m11; union  A58 m12; f m13; j m14; c m15; s m16; union  A59 m17; d m18; i m19; f m20; j m21; d m22; };
void f_cpA60(struct A60 *x, const struct A60 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA56(&x->m7, &y->m7); x->m8 = y->m8; f_cpA57(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; f_cpA58(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA59(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA60(const struct A60 *x, const struct A60 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA56(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA57(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA58(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA59(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA60() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A60), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A60, m0), 1);
		dcStructField(st, 'c', offsetof(struct A60, m1), 1);
		dcStructField(st, 'j', offsetof(struct A60, m2), 1);
		dcStructField(st, 's', offsetof(struct A60, m3), 1);
		dcStructField(st, 'f', offsetof(struct A60, m4), 1);
		dcStructField(st, 'f', offsetof(struct A60, m5), 1);
		dcStructField(st, 'j', offsetof(struct A60, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A60, m7), 1, f_touchdcstA56());
		dcStructField(st, 's', offsetof(struct A60, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A60, m9), 1, f_touchdcstA57());
		dcStructField(st, 'p', offsetof(struct A60, m10), 1);
		dcStructField(st, 'd', offsetof(struct A60, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A60, m12), 1, f_touchdcstA58());
		dcStructField(st, 'f', offsetof(struct A60, m13), 1);
		dcStructField(st, 'j', offsetof(struct A60, m14), 1);
		dcStructField(st, 'c', offsetof(struct A60, m15), 1);
		dcStructField(st, 's', offsetof(struct A60, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A60, m17), 1, f_touchdcstA59());
		dcStructField(st, 'd', offsetof(struct A60, m18), 1);
		dcStructField(st, 'i', offsetof(struct A60, m19), 1);
		dcStructField(st, 'f', offsetof(struct A60, m20), 1);
		dcStructField(st, 'j', offsetof(struct A60, m21), 1);
		dcStructField(st, 'd', offsetof(struct A60, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pp> */
union  A61 { p m0; p m1; };
void f_cpA61(union  A61 *x, const union  A61 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA61(const union  A61 *x, const union  A61 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA61() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A61), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A61, m0), 1);
		dcStructField(st, 'p', offsetof(union  A61, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fifjjppjilsdisf> */
union  A62 { f m0; i m1; f m2; j m3; j m4; p m5; p m6; j m7; i m8; l m9; s m10; d m11; i m12; s m13; f m14; };
void f_cpA62(union  A62 *x, const union  A62 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA62(const union  A62 *x, const union  A62 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA62() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A62), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A62, m0), 1);
		dcStructField(st, 'i', offsetof(union  A62, m1), 1);
		dcStructField(st, 'f', offsetof(union  A62, m2), 1);
		dcStructField(st, 'j', offsetof(union  A62, m3), 1);
		dcStructField(st, 'j', offsetof(union  A62, m4), 1);
		dcStructField(st, 'p', offsetof(union  A62, m5), 1);
		dcStructField(st, 'p', offsetof(union  A62, m6), 1);
		dcStructField(st, 'j', offsetof(union  A62, m7), 1);
		dcStructField(st, 'i', offsetof(union  A62, m8), 1);
		dcStructField(st, 'l', offsetof(union  A62, m9), 1);
		dcStructField(st, 's', offsetof(union  A62, m10), 1);
		dcStructField(st, 'd', offsetof(union  A62, m11), 1);
		dcStructField(st, 'i', offsetof(union  A62, m12), 1);
		dcStructField(st, 's', offsetof(union  A62, m13), 1);
		dcStructField(st, 'f', offsetof(union  A62, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfijccjipscf} */
struct A63 { c m0; f m1; i m2; j m3; c m4; c m5; j m6; i m7; p m8; s m9; c m10; f m11; };
void f_cpA63(struct A63 *x, const struct A63 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA63(const struct A63 *x, const struct A63 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA63() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A63), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A63, m0), 1);
		dcStructField(st, 'f', offsetof(struct A63, m1), 1);
		dcStructField(st, 'i', offsetof(struct A63, m2), 1);
		dcStructField(st, 'j', offsetof(struct A63, m3), 1);
		dcStructField(st, 'c', offsetof(struct A63, m4), 1);
		dcStructField(st, 'c', offsetof(struct A63, m5), 1);
		dcStructField(st, 'j', offsetof(struct A63, m6), 1);
		dcStructField(st, 'i', offsetof(struct A63, m7), 1);
		dcStructField(st, 'p', offsetof(struct A63, m8), 1);
		dcStructField(st, 's', offsetof(struct A63, m9), 1);
		dcStructField(st, 'c', offsetof(struct A63, m10), 1);
		dcStructField(st, 'f', offsetof(struct A63, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <s{cfijccjipscf}> */
union  A64 { s m0; struct A63 m1; };
void f_cpA64(union  A64 *x, const union  A64 *y) { x->m0 = y->m0; f_cpA63(&x->m1, &y->m1); };
int f_cmpA64(const union  A64 *x, const union  A64 *y) { return x->m0 == y->m0 && f_cmpA63(&x->m1, &y->m1); };
DCstruct* f_touchdcstA64() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A64), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A64, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A64, m1), 1, f_touchdcstA63());
		dcCloseStruct(st);
	}
	return st;
};
/* {djpdi} */
struct A65 { d m0; j m1; p m2; d m3; i m4; };
void f_cpA65(struct A65 *x, const struct A65 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA65(const struct A65 *x, const struct A65 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA65() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A65), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A65, m0), 1);
		dcStructField(st, 'j', offsetof(struct A65, m1), 1);
		dcStructField(st, 'p', offsetof(struct A65, m2), 1);
		dcStructField(st, 'd', offsetof(struct A65, m3), 1);
		dcStructField(st, 'i', offsetof(struct A65, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cp> */
union  A66 { c m0; p m1; };
void f_cpA66(union  A66 *x, const union  A66 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA66(const union  A66 *x, const union  A66 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA66() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A66), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A66, m0), 1);
		dcStructField(st, 'p', offsetof(union  A66, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcljjfc} */
struct A67 { p m0; c m1; l m2; j m3; j m4; f m5; c m6; };
void f_cpA67(struct A67 *x, const struct A67 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA67(const struct A67 *x, const struct A67 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA67() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A67), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A67, m0), 1);
		dcStructField(st, 'c', offsetof(struct A67, m1), 1);
		dcStructField(st, 'l', offsetof(struct A67, m2), 1);
		dcStructField(st, 'j', offsetof(struct A67, m3), 1);
		dcStructField(st, 'j', offsetof(struct A67, m4), 1);
		dcStructField(st, 'f', offsetof(struct A67, m5), 1);
		dcStructField(st, 'c', offsetof(struct A67, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jidfdl{pcljjfc}i} */
struct A68 { j m0; i m1; d m2; f m3; d m4; l m5; struct A67 m6; i m7; };
void f_cpA68(struct A68 *x, const struct A68 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA67(&x->m6, &y->m6); x->m7 = y->m7; };
int f_cmpA68(const struct A68 *x, const struct A68 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA67(&x->m6, &y->m6) && x->m7 == y->m7; };
DCstruct* f_touchdcstA68() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A68), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A68, m0), 1);
		dcStructField(st, 'i', offsetof(struct A68, m1), 1);
		dcStructField(st, 'd', offsetof(struct A68, m2), 1);
		dcStructField(st, 'f', offsetof(struct A68, m3), 1);
		dcStructField(st, 'd', offsetof(struct A68, m4), 1);
		dcStructField(st, 'l', offsetof(struct A68, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A68, m6), 1, f_touchdcstA67());
		dcStructField(st, 'i', offsetof(struct A68, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcd> */
union  A69 { d m0; c m1; d m2; };
void f_cpA69(union  A69 *x, const union  A69 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA69(const union  A69 *x, const union  A69 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA69() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A69), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A69, m0), 1);
		dcStructField(st, 'c', offsetof(union  A69, m1), 1);
		dcStructField(st, 'd', offsetof(union  A69, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <p<cp>{jidfdl{pcljjfc}i}is<dcd>jif> */
union  A70 { p m0; union  A66 m1; struct A68 m2; i m3; s m4; union  A69 m5; j m6; i m7; f m8; };
void f_cpA70(union  A70 *x, const union  A70 *y) { x->m0 = y->m0; f_cpA66(&x->m1, &y->m1); f_cpA68(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA69(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA70(const union  A70 *x, const union  A70 *y) { return x->m0 == y->m0 && f_cmpA66(&x->m1, &y->m1) && f_cmpA68(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA69(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA70() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A70), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A70, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A70, m1), 1, f_touchdcstA66());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A70, m2), 1, f_touchdcstA68());
		dcStructField(st, 'i', offsetof(union  A70, m3), 1);
		dcStructField(st, 's', offsetof(union  A70, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A70, m5), 1, f_touchdcstA69());
		dcStructField(st, 'j', offsetof(union  A70, m6), 1);
		dcStructField(st, 'i', offsetof(union  A70, m7), 1);
		dcStructField(st, 'f', offsetof(union  A70, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i} */
struct A71 { i m0; };
void f_cpA71(struct A71 *x, const struct A71 *y) { x->m0 = y->m0; };
int f_cmpA71(const struct A71 *x, const struct A71 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA71() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A71), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A71, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppi} */
struct A72 { p m0; p m1; i m2; };
void f_cpA72(struct A72 *x, const struct A72 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA72(const struct A72 *x, const struct A72 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA72() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A72), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A72, m0), 1);
		dcStructField(st, 'p', offsetof(struct A72, m1), 1);
		dcStructField(st, 'i', offsetof(struct A72, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dllpjjjpsp> */
union  A73 { d m0; l m1; l m2; p m3; j m4; j m5; j m6; p m7; s m8; p m9; };
void f_cpA73(union  A73 *x, const union  A73 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA73(const union  A73 *x, const union  A73 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA73() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A73), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A73, m0), 1);
		dcStructField(st, 'l', offsetof(union  A73, m1), 1);
		dcStructField(st, 'l', offsetof(union  A73, m2), 1);
		dcStructField(st, 'p', offsetof(union  A73, m3), 1);
		dcStructField(st, 'j', offsetof(union  A73, m4), 1);
		dcStructField(st, 'j', offsetof(union  A73, m5), 1);
		dcStructField(st, 'j', offsetof(union  A73, m6), 1);
		dcStructField(st, 'p', offsetof(union  A73, m7), 1);
		dcStructField(st, 's', offsetof(union  A73, m8), 1);
		dcStructField(st, 'p', offsetof(union  A73, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dl} */
struct A74 { d m0; l m1; };
void f_cpA74(struct A74 *x, const struct A74 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA74(const struct A74 *x, const struct A74 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA74() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A74), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A74, m0), 1);
		dcStructField(st, 'l', offsetof(struct A74, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <s> */
union  A75 { s m0; };
void f_cpA75(union  A75 *x, const union  A75 *y) { x->m0 = y->m0; };
int f_cmpA75(const union  A75 *x, const union  A75 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA75() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A75), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A75, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <llcj> */
union  A76 { l m0; l m1; c m2; j m3; };
void f_cpA76(union  A76 *x, const union  A76 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA76(const union  A76 *x, const union  A76 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA76() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A76), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A76, m0), 1);
		dcStructField(st, 'l', offsetof(union  A76, m1), 1);
		dcStructField(st, 'c', offsetof(union  A76, m2), 1);
		dcStructField(st, 'j', offsetof(union  A76, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sll<llcj>} */
struct A77 { s m0; l m1; l m2; union  A76 m3; };
void f_cpA77(struct A77 *x, const struct A77 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA76(&x->m3, &y->m3); };
int f_cmpA77(const struct A77 *x, const struct A77 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA76(&x->m3, &y->m3); };
DCstruct* f_touchdcstA77() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A77), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A77, m0), 1);
		dcStructField(st, 'l', offsetof(struct A77, m1), 1);
		dcStructField(st, 'l', offsetof(struct A77, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A77, m3), 1, f_touchdcstA76());
		dcCloseStruct(st);
	}
	return st;
};
/* {fcsddflsdpfcicscppdjsslilifdccdfi} */
struct A78 { f m0; c m1; s m2; d m3; d m4; f m5; l m6; s m7; d m8; p m9; f m10; c m11; i m12; c m13; s m14; c m15; p m16; p m17; d m18; j m19; s m20; s m21; l m22; i m23; l m24; i m25; f m26; d m27; c m28; c m29; d m30; f m31; i m32; };
void f_cpA78(struct A78 *x, const struct A78 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; };
int f_cmpA78(const struct A78 *x, const struct A78 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32; };
DCstruct* f_touchdcstA78() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(33, sizeof(struct A78), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A78, m0), 1);
		dcStructField(st, 'c', offsetof(struct A78, m1), 1);
		dcStructField(st, 's', offsetof(struct A78, m2), 1);
		dcStructField(st, 'd', offsetof(struct A78, m3), 1);
		dcStructField(st, 'd', offsetof(struct A78, m4), 1);
		dcStructField(st, 'f', offsetof(struct A78, m5), 1);
		dcStructField(st, 'l', offsetof(struct A78, m6), 1);
		dcStructField(st, 's', offsetof(struct A78, m7), 1);
		dcStructField(st, 'd', offsetof(struct A78, m8), 1);
		dcStructField(st, 'p', offsetof(struct A78, m9), 1);
		dcStructField(st, 'f', offsetof(struct A78, m10), 1);
		dcStructField(st, 'c', offsetof(struct A78, m11), 1);
		dcStructField(st, 'i', offsetof(struct A78, m12), 1);
		dcStructField(st, 'c', offsetof(struct A78, m13), 1);
		dcStructField(st, 's', offsetof(struct A78, m14), 1);
		dcStructField(st, 'c', offsetof(struct A78, m15), 1);
		dcStructField(st, 'p', offsetof(struct A78, m16), 1);
		dcStructField(st, 'p', offsetof(struct A78, m17), 1);
		dcStructField(st, 'd', offsetof(struct A78, m18), 1);
		dcStructField(st, 'j', offsetof(struct A78, m19), 1);
		dcStructField(st, 's', offsetof(struct A78, m20), 1);
		dcStructField(st, 's', offsetof(struct A78, m21), 1);
		dcStructField(st, 'l', offsetof(struct A78, m22), 1);
		dcStructField(st, 'i', offsetof(struct A78, m23), 1);
		dcStructField(st, 'l', offsetof(struct A78, m24), 1);
		dcStructField(st, 'i', offsetof(struct A78, m25), 1);
		dcStructField(st, 'f', offsetof(struct A78, m26), 1);
		dcStructField(st, 'd', offsetof(struct A78, m27), 1);
		dcStructField(st, 'c', offsetof(struct A78, m28), 1);
		dcStructField(st, 'c', offsetof(struct A78, m29), 1);
		dcStructField(st, 'd', offsetof(struct A78, m30), 1);
		dcStructField(st, 'f', offsetof(struct A78, m31), 1);
		dcStructField(st, 'i', offsetof(struct A78, m32), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plfjf{fcsddflsdpfcicscppdjsslilifdccdfi}} */
struct A79 { p m0; l m1; f m2; j m3; f m4; struct A78 m5; };
void f_cpA79(struct A79 *x, const struct A79 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA78(&x->m5, &y->m5); };
int f_cmpA79(const struct A79 *x, const struct A79 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA78(&x->m5, &y->m5); };
DCstruct* f_touchdcstA79() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A79), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A79, m0), 1);
		dcStructField(st, 'l', offsetof(struct A79, m1), 1);
		dcStructField(st, 'f', offsetof(struct A79, m2), 1);
		dcStructField(st, 'j', offsetof(struct A79, m3), 1);
		dcStructField(st, 'f', offsetof(struct A79, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A79, m5), 1, f_touchdcstA78());
		dcCloseStruct(st);
	}
	return st;
};
/* {spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl} */
struct A80 { s m0; p m1; d m2; j m3; s m4; p m5; i m6; d m7; s m8; d m9; p m10; d m11; s m12; i m13; c m14; c m15; i m16; c m17; f m18; d m19; l m20; p m21; c m22; j m23; f m24; d m25; d m26; f m27; c m28; i m29; s m30; f m31; c m32; d m33; i m34; i m35; d m36; l m37; i m38; d m39; f m40; i m41; j m42; l m43; };
void f_cpA80(struct A80 *x, const struct A80 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; x->m42 = y->m42; x->m43 = y->m43; };
int f_cmpA80(const struct A80 *x, const struct A80 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && x->m42 == y->m42 && x->m43 == y->m43; };
DCstruct* f_touchdcstA80() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(44, sizeof(struct A80), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A80, m0), 1);
		dcStructField(st, 'p', offsetof(struct A80, m1), 1);
		dcStructField(st, 'd', offsetof(struct A80, m2), 1);
		dcStructField(st, 'j', offsetof(struct A80, m3), 1);
		dcStructField(st, 's', offsetof(struct A80, m4), 1);
		dcStructField(st, 'p', offsetof(struct A80, m5), 1);
		dcStructField(st, 'i', offsetof(struct A80, m6), 1);
		dcStructField(st, 'd', offsetof(struct A80, m7), 1);
		dcStructField(st, 's', offsetof(struct A80, m8), 1);
		dcStructField(st, 'd', offsetof(struct A80, m9), 1);
		dcStructField(st, 'p', offsetof(struct A80, m10), 1);
		dcStructField(st, 'd', offsetof(struct A80, m11), 1);
		dcStructField(st, 's', offsetof(struct A80, m12), 1);
		dcStructField(st, 'i', offsetof(struct A80, m13), 1);
		dcStructField(st, 'c', offsetof(struct A80, m14), 1);
		dcStructField(st, 'c', offsetof(struct A80, m15), 1);
		dcStructField(st, 'i', offsetof(struct A80, m16), 1);
		dcStructField(st, 'c', offsetof(struct A80, m17), 1);
		dcStructField(st, 'f', offsetof(struct A80, m18), 1);
		dcStructField(st, 'd', offsetof(struct A80, m19), 1);
		dcStructField(st, 'l', offsetof(struct A80, m20), 1);
		dcStructField(st, 'p', offsetof(struct A80, m21), 1);
		dcStructField(st, 'c', offsetof(struct A80, m22), 1);
		dcStructField(st, 'j', offsetof(struct A80, m23), 1);
		dcStructField(st, 'f', offsetof(struct A80, m24), 1);
		dcStructField(st, 'd', offsetof(struct A80, m25), 1);
		dcStructField(st, 'd', offsetof(struct A80, m26), 1);
		dcStructField(st, 'f', offsetof(struct A80, m27), 1);
		dcStructField(st, 'c', offsetof(struct A80, m28), 1);
		dcStructField(st, 'i', offsetof(struct A80, m29), 1);
		dcStructField(st, 's', offsetof(struct A80, m30), 1);
		dcStructField(st, 'f', offsetof(struct A80, m31), 1);
		dcStructField(st, 'c', offsetof(struct A80, m32), 1);
		dcStructField(st, 'd', offsetof(struct A80, m33), 1);
		dcStructField(st, 'i', offsetof(struct A80, m34), 1);
		dcStructField(st, 'i', offsetof(struct A80, m35), 1);
		dcStructField(st, 'd', offsetof(struct A80, m36), 1);
		dcStructField(st, 'l', offsetof(struct A80, m37), 1);
		dcStructField(st, 'i', offsetof(struct A80, m38), 1);
		dcStructField(st, 'd', offsetof(struct A80, m39), 1);
		dcStructField(st, 'f', offsetof(struct A80, m40), 1);
		dcStructField(st, 'i', offsetof(struct A80, m41), 1);
		dcStructField(st, 'j', offsetof(struct A80, m42), 1);
		dcStructField(st, 'l', offsetof(struct A80, m43), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl}scs> */
union  A81 { struct A80 m0; s m1; c m2; s m3; };
void f_cpA81(union  A81 *x, const union  A81 *y) { f_cpA80(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA81(const union  A81 *x, const union  A81 *y) { return f_cmpA80(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA81() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A81), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A81, m0), 1, f_touchdcstA80());
		dcStructField(st, 's', offsetof(union  A81, m1), 1);
		dcStructField(st, 'c', offsetof(union  A81, m2), 1);
		dcStructField(st, 's', offsetof(union  A81, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{plfjf{fcsddflsdpfcicscppdjsslilifdccdfi}}c<{spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl}scs>pi> */
union  A82 { struct A79 m0; c m1; union  A81 m2; p m3; i m4; };
void f_cpA82(union  A82 *x, const union  A82 *y) { f_cpA79(&x->m0, &y->m0); x->m1 = y->m1; f_cpA81(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA82(const union  A82 *x, const union  A82 *y) { return f_cmpA79(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA81(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA82() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A82), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A82, m0), 1, f_touchdcstA79());
		dcStructField(st, 'c', offsetof(union  A82, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A82, m2), 1, f_touchdcstA81());
		dcStructField(st, 'p', offsetof(union  A82, m3), 1);
		dcStructField(st, 'i', offsetof(union  A82, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpcdjdl} */
struct A83 { c m0; p m1; c m2; d m3; j m4; d m5; l m6; };
void f_cpA83(struct A83 *x, const struct A83 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA83(const struct A83 *x, const struct A83 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA83() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A83), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A83, m0), 1);
		dcStructField(st, 'p', offsetof(struct A83, m1), 1);
		dcStructField(st, 'c', offsetof(struct A83, m2), 1);
		dcStructField(st, 'd', offsetof(struct A83, m3), 1);
		dcStructField(st, 'j', offsetof(struct A83, m4), 1);
		dcStructField(st, 'd', offsetof(struct A83, m5), 1);
		dcStructField(st, 'l', offsetof(struct A83, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pijj} */
struct A84 { p m0; i m1; j m2; j m3; };
void f_cpA84(struct A84 *x, const struct A84 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA84(const struct A84 *x, const struct A84 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA84() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A84), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A84, m0), 1);
		dcStructField(st, 'i', offsetof(struct A84, m1), 1);
		dcStructField(st, 'j', offsetof(struct A84, m2), 1);
		dcStructField(st, 'j', offsetof(struct A84, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ffssflcjd> */
union  A85 { f m0; f m1; s m2; s m3; f m4; l m5; c m6; j m7; d m8; };
void f_cpA85(union  A85 *x, const union  A85 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA85(const union  A85 *x, const union  A85 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA85() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A85), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A85, m0), 1);
		dcStructField(st, 'f', offsetof(union  A85, m1), 1);
		dcStructField(st, 's', offsetof(union  A85, m2), 1);
		dcStructField(st, 's', offsetof(union  A85, m3), 1);
		dcStructField(st, 'f', offsetof(union  A85, m4), 1);
		dcStructField(st, 'l', offsetof(union  A85, m5), 1);
		dcStructField(st, 'c', offsetof(union  A85, m6), 1);
		dcStructField(st, 'j', offsetof(union  A85, m7), 1);
		dcStructField(st, 'd', offsetof(union  A85, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<ffssflcjd>lspdlij} */
struct A86 { union  A85 m0; l m1; s m2; p m3; d m4; l m5; i m6; j m7; };
void f_cpA86(struct A86 *x, const struct A86 *y) { f_cpA85(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA86(const struct A86 *x, const struct A86 *y) { return f_cmpA85(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA86() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A86), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A86, m0), 1, f_touchdcstA85());
		dcStructField(st, 'l', offsetof(struct A86, m1), 1);
		dcStructField(st, 's', offsetof(struct A86, m2), 1);
		dcStructField(st, 'p', offsetof(struct A86, m3), 1);
		dcStructField(st, 'd', offsetof(struct A86, m4), 1);
		dcStructField(st, 'l', offsetof(struct A86, m5), 1);
		dcStructField(st, 'i', offsetof(struct A86, m6), 1);
		dcStructField(st, 'j', offsetof(struct A86, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ifilfisd> */
union  A87 { i m0; f m1; i m2; l m3; f m4; i m5; s m6; d m7; };
void f_cpA87(union  A87 *x, const union  A87 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA87(const union  A87 *x, const union  A87 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA87() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A87), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A87, m0), 1);
		dcStructField(st, 'f', offsetof(union  A87, m1), 1);
		dcStructField(st, 'i', offsetof(union  A87, m2), 1);
		dcStructField(st, 'l', offsetof(union  A87, m3), 1);
		dcStructField(st, 'f', offsetof(union  A87, m4), 1);
		dcStructField(st, 'i', offsetof(union  A87, m5), 1);
		dcStructField(st, 's', offsetof(union  A87, m6), 1);
		dcStructField(st, 'd', offsetof(union  A87, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfidipsf> */
union  A88 { p m0; f m1; i m2; d m3; i m4; p m5; s m6; f m7; };
void f_cpA88(union  A88 *x, const union  A88 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA88(const union  A88 *x, const union  A88 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA88() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A88), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A88, m0), 1);
		dcStructField(st, 'f', offsetof(union  A88, m1), 1);
		dcStructField(st, 'i', offsetof(union  A88, m2), 1);
		dcStructField(st, 'd', offsetof(union  A88, m3), 1);
		dcStructField(st, 'i', offsetof(union  A88, m4), 1);
		dcStructField(st, 'p', offsetof(union  A88, m5), 1);
		dcStructField(st, 's', offsetof(union  A88, m6), 1);
		dcStructField(st, 'f', offsetof(union  A88, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdjciilpcpcpd} */
struct A89 { s m0; d m1; j m2; c m3; i m4; i m5; l m6; p m7; c m8; p m9; c m10; p m11; d m12; };
void f_cpA89(struct A89 *x, const struct A89 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA89(const struct A89 *x, const struct A89 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA89() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A89), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A89, m0), 1);
		dcStructField(st, 'd', offsetof(struct A89, m1), 1);
		dcStructField(st, 'j', offsetof(struct A89, m2), 1);
		dcStructField(st, 'c', offsetof(struct A89, m3), 1);
		dcStructField(st, 'i', offsetof(struct A89, m4), 1);
		dcStructField(st, 'i', offsetof(struct A89, m5), 1);
		dcStructField(st, 'l', offsetof(struct A89, m6), 1);
		dcStructField(st, 'p', offsetof(struct A89, m7), 1);
		dcStructField(st, 'c', offsetof(struct A89, m8), 1);
		dcStructField(st, 'p', offsetof(struct A89, m9), 1);
		dcStructField(st, 'c', offsetof(struct A89, m10), 1);
		dcStructField(st, 'p', offsetof(struct A89, m11), 1);
		dcStructField(st, 'd', offsetof(struct A89, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pcjfddd<ifilfisd>lld<pfidipsf>{sdjciilpcpcpd}> */
union  A90 { p m0; c m1; j m2; f m3; d m4; d m5; d m6; union  A87 m7; l m8; l m9; d m10; union  A88 m11; struct A89 m12; };
void f_cpA90(union  A90 *x, const union  A90 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA87(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA88(&x->m11, &y->m11); f_cpA89(&x->m12, &y->m12); };
int f_cmpA90(const union  A90 *x, const union  A90 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA87(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA88(&x->m11, &y->m11) && f_cmpA89(&x->m12, &y->m12); };
DCstruct* f_touchdcstA90() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A90), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A90, m0), 1);
		dcStructField(st, 'c', offsetof(union  A90, m1), 1);
		dcStructField(st, 'j', offsetof(union  A90, m2), 1);
		dcStructField(st, 'f', offsetof(union  A90, m3), 1);
		dcStructField(st, 'd', offsetof(union  A90, m4), 1);
		dcStructField(st, 'd', offsetof(union  A90, m5), 1);
		dcStructField(st, 'd', offsetof(union  A90, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A90, m7), 1, f_touchdcstA87());
		dcStructField(st, 'l', offsetof(union  A90, m8), 1);
		dcStructField(st, 'l', offsetof(union  A90, m9), 1);
		dcStructField(st, 'd', offsetof(union  A90, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A90, m11), 1, f_touchdcstA88());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A90, m12), 1, f_touchdcstA89());
		dcCloseStruct(st);
	}
	return st;
};
/* <pjfsfffldfjssccl> */
union  A91 { p m0; j m1; f m2; s m3; f m4; f m5; f m6; l m7; d m8; f m9; j m10; s m11; s m12; c m13; c m14; l m15; };
void f_cpA91(union  A91 *x, const union  A91 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA91(const union  A91 *x, const union  A91 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA91() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A91), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A91, m0), 1);
		dcStructField(st, 'j', offsetof(union  A91, m1), 1);
		dcStructField(st, 'f', offsetof(union  A91, m2), 1);
		dcStructField(st, 's', offsetof(union  A91, m3), 1);
		dcStructField(st, 'f', offsetof(union  A91, m4), 1);
		dcStructField(st, 'f', offsetof(union  A91, m5), 1);
		dcStructField(st, 'f', offsetof(union  A91, m6), 1);
		dcStructField(st, 'l', offsetof(union  A91, m7), 1);
		dcStructField(st, 'd', offsetof(union  A91, m8), 1);
		dcStructField(st, 'f', offsetof(union  A91, m9), 1);
		dcStructField(st, 'j', offsetof(union  A91, m10), 1);
		dcStructField(st, 's', offsetof(union  A91, m11), 1);
		dcStructField(st, 's', offsetof(union  A91, m12), 1);
		dcStructField(st, 'c', offsetof(union  A91, m13), 1);
		dcStructField(st, 'c', offsetof(union  A91, m14), 1);
		dcStructField(st, 'l', offsetof(union  A91, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<pjfsfffldfjssccl>ssij> */
union  A92 { union  A91 m0; s m1; s m2; i m3; j m4; };
void f_cpA92(union  A92 *x, const union  A92 *y) { f_cpA91(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA92(const union  A92 *x, const union  A92 *y) { return f_cmpA91(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA92() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A92), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A92, m0), 1, f_touchdcstA91());
		dcStructField(st, 's', offsetof(union  A92, m1), 1);
		dcStructField(st, 's', offsetof(union  A92, m2), 1);
		dcStructField(st, 'i', offsetof(union  A92, m3), 1);
		dcStructField(st, 'j', offsetof(union  A92, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ijdpijpcj> */
union  A93 { i m0; j m1; d m2; p m3; i m4; j m5; p m6; c m7; j m8; };
void f_cpA93(union  A93 *x, const union  A93 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA93(const union  A93 *x, const union  A93 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA93() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A93), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A93, m0), 1);
		dcStructField(st, 'j', offsetof(union  A93, m1), 1);
		dcStructField(st, 'd', offsetof(union  A93, m2), 1);
		dcStructField(st, 'p', offsetof(union  A93, m3), 1);
		dcStructField(st, 'i', offsetof(union  A93, m4), 1);
		dcStructField(st, 'j', offsetof(union  A93, m5), 1);
		dcStructField(st, 'p', offsetof(union  A93, m6), 1);
		dcStructField(st, 'c', offsetof(union  A93, m7), 1);
		dcStructField(st, 'j', offsetof(union  A93, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d> */
union  A94 { d m0; };
void f_cpA94(union  A94 *x, const union  A94 *y) { x->m0 = y->m0; };
int f_cmpA94(const union  A94 *x, const union  A94 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA94() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A94), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A94, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ic> */
union  A95 { i m0; c m1; };
void f_cpA95(union  A95 *x, const union  A95 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA95(const union  A95 *x, const union  A95 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA95() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A95), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A95, m0), 1);
		dcStructField(st, 'c', offsetof(union  A95, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d<d><ic>p<c>s} */
struct A96 { d m0; union  A94 m1; union  A95 m2; p m3; union  A3 m4; s m5; };
void f_cpA96(struct A96 *x, const struct A96 *y) { x->m0 = y->m0; f_cpA94(&x->m1, &y->m1); f_cpA95(&x->m2, &y->m2); x->m3 = y->m3; f_cpA3(&x->m4, &y->m4); x->m5 = y->m5; };
int f_cmpA96(const struct A96 *x, const struct A96 *y) { return x->m0 == y->m0 && f_cmpA94(&x->m1, &y->m1) && f_cmpA95(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA3(&x->m4, &y->m4) && x->m5 == y->m5; };
DCstruct* f_touchdcstA96() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A96), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A96, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A96, m1), 1, f_touchdcstA94());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A96, m2), 1, f_touchdcstA95());
		dcStructField(st, 'p', offsetof(struct A96, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A96, m4), 1, f_touchdcstA3());
		dcStructField(st, 's', offsetof(struct A96, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <splpd> */
union  A97 { s m0; p m1; l m2; p m3; d m4; };
void f_cpA97(union  A97 *x, const union  A97 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA97(const union  A97 *x, const union  A97 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA97() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A97), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A97, m0), 1);
		dcStructField(st, 'p', offsetof(union  A97, m1), 1);
		dcStructField(st, 'l', offsetof(union  A97, m2), 1);
		dcStructField(st, 'p', offsetof(union  A97, m3), 1);
		dcStructField(st, 'd', offsetof(union  A97, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cc> */
union  A98 { c m0; c m1; };
void f_cpA98(union  A98 *x, const union  A98 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA98(const union  A98 *x, const union  A98 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA98() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A98), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A98, m0), 1);
		dcStructField(st, 'c', offsetof(union  A98, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djiljflllcp} */
struct A99 { d m0; j m1; i m2; l m3; j m4; f m5; l m6; l m7; l m8; c m9; p m10; };
void f_cpA99(struct A99 *x, const struct A99 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA99(const struct A99 *x, const struct A99 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA99() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A99), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A99, m0), 1);
		dcStructField(st, 'j', offsetof(struct A99, m1), 1);
		dcStructField(st, 'i', offsetof(struct A99, m2), 1);
		dcStructField(st, 'l', offsetof(struct A99, m3), 1);
		dcStructField(st, 'j', offsetof(struct A99, m4), 1);
		dcStructField(st, 'f', offsetof(struct A99, m5), 1);
		dcStructField(st, 'l', offsetof(struct A99, m6), 1);
		dcStructField(st, 'l', offsetof(struct A99, m7), 1);
		dcStructField(st, 'l', offsetof(struct A99, m8), 1);
		dcStructField(st, 'c', offsetof(struct A99, m9), 1);
		dcStructField(st, 'p', offsetof(struct A99, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ds{djiljflllcp}lcdi} */
struct A100 { d m0; s m1; struct A99 m2; l m3; c m4; d m5; i m6; };
void f_cpA100(struct A100 *x, const struct A100 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA99(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA100(const struct A100 *x, const struct A100 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA99(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA100() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A100), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A100, m0), 1);
		dcStructField(st, 's', offsetof(struct A100, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A100, m2), 1, f_touchdcstA99());
		dcStructField(st, 'l', offsetof(struct A100, m3), 1);
		dcStructField(st, 'c', offsetof(struct A100, m4), 1);
		dcStructField(st, 'd', offsetof(struct A100, m5), 1);
		dcStructField(st, 'i', offsetof(struct A100, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jiidppdjdlfclp} */
struct A101 { j m0; i m1; i m2; d m3; p m4; p m5; d m6; j m7; d m8; l m9; f m10; c m11; l m12; p m13; };
void f_cpA101(struct A101 *x, const struct A101 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA101(const struct A101 *x, const struct A101 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA101() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A101), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A101, m0), 1);
		dcStructField(st, 'i', offsetof(struct A101, m1), 1);
		dcStructField(st, 'i', offsetof(struct A101, m2), 1);
		dcStructField(st, 'd', offsetof(struct A101, m3), 1);
		dcStructField(st, 'p', offsetof(struct A101, m4), 1);
		dcStructField(st, 'p', offsetof(struct A101, m5), 1);
		dcStructField(st, 'd', offsetof(struct A101, m6), 1);
		dcStructField(st, 'j', offsetof(struct A101, m7), 1);
		dcStructField(st, 'd', offsetof(struct A101, m8), 1);
		dcStructField(st, 'l', offsetof(struct A101, m9), 1);
		dcStructField(st, 'f', offsetof(struct A101, m10), 1);
		dcStructField(st, 'c', offsetof(struct A101, m11), 1);
		dcStructField(st, 'l', offsetof(struct A101, m12), 1);
		dcStructField(st, 'p', offsetof(struct A101, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jppccslcicfipicccf> */
union  A102 { j m0; p m1; p m2; c m3; c m4; s m5; l m6; c m7; i m8; c m9; f m10; i m11; p m12; i m13; c m14; c m15; c m16; f m17; };
void f_cpA102(union  A102 *x, const union  A102 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA102(const union  A102 *x, const union  A102 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA102() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A102), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A102, m0), 1);
		dcStructField(st, 'p', offsetof(union  A102, m1), 1);
		dcStructField(st, 'p', offsetof(union  A102, m2), 1);
		dcStructField(st, 'c', offsetof(union  A102, m3), 1);
		dcStructField(st, 'c', offsetof(union  A102, m4), 1);
		dcStructField(st, 's', offsetof(union  A102, m5), 1);
		dcStructField(st, 'l', offsetof(union  A102, m6), 1);
		dcStructField(st, 'c', offsetof(union  A102, m7), 1);
		dcStructField(st, 'i', offsetof(union  A102, m8), 1);
		dcStructField(st, 'c', offsetof(union  A102, m9), 1);
		dcStructField(st, 'f', offsetof(union  A102, m10), 1);
		dcStructField(st, 'i', offsetof(union  A102, m11), 1);
		dcStructField(st, 'p', offsetof(union  A102, m12), 1);
		dcStructField(st, 'i', offsetof(union  A102, m13), 1);
		dcStructField(st, 'c', offsetof(union  A102, m14), 1);
		dcStructField(st, 'c', offsetof(union  A102, m15), 1);
		dcStructField(st, 'c', offsetof(union  A102, m16), 1);
		dcStructField(st, 'f', offsetof(union  A102, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjpsipddpdlf} */
struct A103 { s m0; j m1; p m2; s m3; i m4; p m5; d m6; d m7; p m8; d m9; l m10; f m11; };
void f_cpA103(struct A103 *x, const struct A103 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA103(const struct A103 *x, const struct A103 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA103() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A103), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A103, m0), 1);
		dcStructField(st, 'j', offsetof(struct A103, m1), 1);
		dcStructField(st, 'p', offsetof(struct A103, m2), 1);
		dcStructField(st, 's', offsetof(struct A103, m3), 1);
		dcStructField(st, 'i', offsetof(struct A103, m4), 1);
		dcStructField(st, 'p', offsetof(struct A103, m5), 1);
		dcStructField(st, 'd', offsetof(struct A103, m6), 1);
		dcStructField(st, 'd', offsetof(struct A103, m7), 1);
		dcStructField(st, 'p', offsetof(struct A103, m8), 1);
		dcStructField(st, 'd', offsetof(struct A103, m9), 1);
		dcStructField(st, 'l', offsetof(struct A103, m10), 1);
		dcStructField(st, 'f', offsetof(struct A103, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfdsdp> */
union  A104 { p m0; f m1; d m2; s m3; d m4; p m5; };
void f_cpA104(union  A104 *x, const union  A104 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA104(const union  A104 *x, const union  A104 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA104() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A104), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A104, m0), 1);
		dcStructField(st, 'f', offsetof(union  A104, m1), 1);
		dcStructField(st, 'd', offsetof(union  A104, m2), 1);
		dcStructField(st, 's', offsetof(union  A104, m3), 1);
		dcStructField(st, 'd', offsetof(union  A104, m4), 1);
		dcStructField(st, 'p', offsetof(union  A104, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spicji{sjpsipddpdlf}<pfdsdp>lfjiclc} */
struct A105 { s m0; p m1; i m2; c m3; j m4; i m5; struct A103 m6; union  A104 m7; l m8; f m9; j m10; i m11; c m12; l m13; c m14; };
void f_cpA105(struct A105 *x, const struct A105 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA103(&x->m6, &y->m6); f_cpA104(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA105(const struct A105 *x, const struct A105 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA103(&x->m6, &y->m6) && f_cmpA104(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA105() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A105), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A105, m0), 1);
		dcStructField(st, 'p', offsetof(struct A105, m1), 1);
		dcStructField(st, 'i', offsetof(struct A105, m2), 1);
		dcStructField(st, 'c', offsetof(struct A105, m3), 1);
		dcStructField(st, 'j', offsetof(struct A105, m4), 1);
		dcStructField(st, 'i', offsetof(struct A105, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A105, m6), 1, f_touchdcstA103());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A105, m7), 1, f_touchdcstA104());
		dcStructField(st, 'l', offsetof(struct A105, m8), 1);
		dcStructField(st, 'f', offsetof(struct A105, m9), 1);
		dcStructField(st, 'j', offsetof(struct A105, m10), 1);
		dcStructField(st, 'i', offsetof(struct A105, m11), 1);
		dcStructField(st, 'c', offsetof(struct A105, m12), 1);
		dcStructField(st, 'l', offsetof(struct A105, m13), 1);
		dcStructField(st, 'c', offsetof(struct A105, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{spicji{sjpsipddpdlf}<pfdsdp>lfjiclc}ffdiid> */
union  A106 { struct A105 m0; f m1; f m2; d m3; i m4; i m5; d m6; };
void f_cpA106(union  A106 *x, const union  A106 *y) { f_cpA105(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA106(const union  A106 *x, const union  A106 *y) { return f_cmpA105(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA106() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A106), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A106, m0), 1, f_touchdcstA105());
		dcStructField(st, 'f', offsetof(union  A106, m1), 1);
		dcStructField(st, 'f', offsetof(union  A106, m2), 1);
		dcStructField(st, 'd', offsetof(union  A106, m3), 1);
		dcStructField(st, 'i', offsetof(union  A106, m4), 1);
		dcStructField(st, 'i', offsetof(union  A106, m5), 1);
		dcStructField(st, 'd', offsetof(union  A106, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fjdlsccddiljldjdjccflfjllj> */
union  A107 { f m0; j m1; d m2; l m3; s m4; c m5; c m6; d m7; d m8; i m9; l m10; j m11; l m12; d m13; j m14; d m15; j m16; c m17; c m18; f m19; l m20; f m21; j m22; l m23; l m24; j m25; };
void f_cpA107(union  A107 *x, const union  A107 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA107(const union  A107 *x, const union  A107 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA107() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(union  A107), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A107, m0), 1);
		dcStructField(st, 'j', offsetof(union  A107, m1), 1);
		dcStructField(st, 'd', offsetof(union  A107, m2), 1);
		dcStructField(st, 'l', offsetof(union  A107, m3), 1);
		dcStructField(st, 's', offsetof(union  A107, m4), 1);
		dcStructField(st, 'c', offsetof(union  A107, m5), 1);
		dcStructField(st, 'c', offsetof(union  A107, m6), 1);
		dcStructField(st, 'd', offsetof(union  A107, m7), 1);
		dcStructField(st, 'd', offsetof(union  A107, m8), 1);
		dcStructField(st, 'i', offsetof(union  A107, m9), 1);
		dcStructField(st, 'l', offsetof(union  A107, m10), 1);
		dcStructField(st, 'j', offsetof(union  A107, m11), 1);
		dcStructField(st, 'l', offsetof(union  A107, m12), 1);
		dcStructField(st, 'd', offsetof(union  A107, m13), 1);
		dcStructField(st, 'j', offsetof(union  A107, m14), 1);
		dcStructField(st, 'd', offsetof(union  A107, m15), 1);
		dcStructField(st, 'j', offsetof(union  A107, m16), 1);
		dcStructField(st, 'c', offsetof(union  A107, m17), 1);
		dcStructField(st, 'c', offsetof(union  A107, m18), 1);
		dcStructField(st, 'f', offsetof(union  A107, m19), 1);
		dcStructField(st, 'l', offsetof(union  A107, m20), 1);
		dcStructField(st, 'f', offsetof(union  A107, m21), 1);
		dcStructField(st, 'j', offsetof(union  A107, m22), 1);
		dcStructField(st, 'l', offsetof(union  A107, m23), 1);
		dcStructField(st, 'l', offsetof(union  A107, m24), 1);
		dcStructField(st, 'j', offsetof(union  A107, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <li> */
union  A108 { l m0; i m1; };
void f_cpA108(union  A108 *x, const union  A108 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA108(const union  A108 *x, const union  A108 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA108() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A108), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A108, m0), 1);
		dcStructField(st, 'i', offsetof(union  A108, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcdfppp} */
struct A109 { j m0; c m1; d m2; f m3; p m4; p m5; p m6; };
void f_cpA109(struct A109 *x, const struct A109 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA109(const struct A109 *x, const struct A109 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA109() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A109), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A109, m0), 1);
		dcStructField(st, 'c', offsetof(struct A109, m1), 1);
		dcStructField(st, 'd', offsetof(struct A109, m2), 1);
		dcStructField(st, 'f', offsetof(struct A109, m3), 1);
		dcStructField(st, 'p', offsetof(struct A109, m4), 1);
		dcStructField(st, 'p', offsetof(struct A109, m5), 1);
		dcStructField(st, 'p', offsetof(struct A109, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpf} */
struct A110 { l m0; p m1; f m2; };
void f_cpA110(struct A110 *x, const struct A110 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA110(const struct A110 *x, const struct A110 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA110() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A110), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A110, m0), 1);
		dcStructField(st, 'p', offsetof(struct A110, m1), 1);
		dcStructField(st, 'f', offsetof(struct A110, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ip{jcdfppp}s{lpf}f> */
union  A111 { i m0; p m1; struct A109 m2; s m3; struct A110 m4; f m5; };
void f_cpA111(union  A111 *x, const union  A111 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA109(&x->m2, &y->m2); x->m3 = y->m3; f_cpA110(&x->m4, &y->m4); x->m5 = y->m5; };
int f_cmpA111(const union  A111 *x, const union  A111 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA109(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA110(&x->m4, &y->m4) && x->m5 == y->m5; };
DCstruct* f_touchdcstA111() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A111), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A111, m0), 1);
		dcStructField(st, 'p', offsetof(union  A111, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A111, m2), 1, f_touchdcstA109());
		dcStructField(st, 's', offsetof(union  A111, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A111, m4), 1, f_touchdcstA110());
		dcStructField(st, 'f', offsetof(union  A111, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<ip{jcdfppp}s{lpf}f>} */
struct A112 { union  A111 m0; };
void f_cpA112(struct A112 *x, const struct A112 *y) { f_cpA111(&x->m0, &y->m0); };
int f_cmpA112(const struct A112 *x, const struct A112 *y) { return f_cmpA111(&x->m0, &y->m0); };
DCstruct* f_touchdcstA112() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A112), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A112, m0), 1, f_touchdcstA111());
		dcCloseStruct(st);
	}
	return st;
};
/* {fdcdlpfjs} */
struct A113 { f m0; d m1; c m2; d m3; l m4; p m5; f m6; j m7; s m8; };
void f_cpA113(struct A113 *x, const struct A113 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA113(const struct A113 *x, const struct A113 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA113() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A113), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A113, m0), 1);
		dcStructField(st, 'd', offsetof(struct A113, m1), 1);
		dcStructField(st, 'c', offsetof(struct A113, m2), 1);
		dcStructField(st, 'd', offsetof(struct A113, m3), 1);
		dcStructField(st, 'l', offsetof(struct A113, m4), 1);
		dcStructField(st, 'p', offsetof(struct A113, m5), 1);
		dcStructField(st, 'f', offsetof(struct A113, m6), 1);
		dcStructField(st, 'j', offsetof(struct A113, m7), 1);
		dcStructField(st, 's', offsetof(struct A113, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {diifiijf} */
struct A114 { d m0; i m1; i m2; f m3; i m4; i m5; j m6; f m7; };
void f_cpA114(struct A114 *x, const struct A114 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA114(const struct A114 *x, const struct A114 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA114() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A114), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A114, m0), 1);
		dcStructField(st, 'i', offsetof(struct A114, m1), 1);
		dcStructField(st, 'i', offsetof(struct A114, m2), 1);
		dcStructField(st, 'f', offsetof(struct A114, m3), 1);
		dcStructField(st, 'i', offsetof(struct A114, m4), 1);
		dcStructField(st, 'i', offsetof(struct A114, m5), 1);
		dcStructField(st, 'j', offsetof(struct A114, m6), 1);
		dcStructField(st, 'f', offsetof(struct A114, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfi} */
struct A115 { p m0; f m1; i m2; };
void f_cpA115(struct A115 *x, const struct A115 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA115(const struct A115 *x, const struct A115 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA115() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A115), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A115, m0), 1);
		dcStructField(st, 'f', offsetof(struct A115, m1), 1);
		dcStructField(st, 'i', offsetof(struct A115, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jidjsjjfppfd} */
struct A116 { j m0; i m1; d m2; j m3; s m4; j m5; j m6; f m7; p m8; p m9; f m10; d m11; };
void f_cpA116(struct A116 *x, const struct A116 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA116(const struct A116 *x, const struct A116 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA116() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A116), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A116, m0), 1);
		dcStructField(st, 'i', offsetof(struct A116, m1), 1);
		dcStructField(st, 'd', offsetof(struct A116, m2), 1);
		dcStructField(st, 'j', offsetof(struct A116, m3), 1);
		dcStructField(st, 's', offsetof(struct A116, m4), 1);
		dcStructField(st, 'j', offsetof(struct A116, m5), 1);
		dcStructField(st, 'j', offsetof(struct A116, m6), 1);
		dcStructField(st, 'f', offsetof(struct A116, m7), 1);
		dcStructField(st, 'p', offsetof(struct A116, m8), 1);
		dcStructField(st, 'p', offsetof(struct A116, m9), 1);
		dcStructField(st, 'f', offsetof(struct A116, m10), 1);
		dcStructField(st, 'd', offsetof(struct A116, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {f{pfi}{jidjsjjfppfd}cpcidj} */
struct A117 { f m0; struct A115 m1; struct A116 m2; c m3; p m4; c m5; i m6; d m7; j m8; };
void f_cpA117(struct A117 *x, const struct A117 *y) { x->m0 = y->m0; f_cpA115(&x->m1, &y->m1); f_cpA116(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA117(const struct A117 *x, const struct A117 *y) { return x->m0 == y->m0 && f_cmpA115(&x->m1, &y->m1) && f_cmpA116(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA117() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A117), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A117, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A117, m1), 1, f_touchdcstA115());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A117, m2), 1, f_touchdcstA116());
		dcStructField(st, 'c', offsetof(struct A117, m3), 1);
		dcStructField(st, 'p', offsetof(struct A117, m4), 1);
		dcStructField(st, 'c', offsetof(struct A117, m5), 1);
		dcStructField(st, 'i', offsetof(struct A117, m6), 1);
		dcStructField(st, 'd', offsetof(struct A117, m7), 1);
		dcStructField(st, 'j', offsetof(struct A117, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isljsl{diifiijf}jsiid{f{pfi}{jidjsjjfppfd}cpcidj}j} */
struct A118 { i m0; s m1; l m2; j m3; s m4; l m5; struct A114 m6; j m7; s m8; i m9; i m10; d m11; struct A117 m12; j m13; };
void f_cpA118(struct A118 *x, const struct A118 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA114(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA117(&x->m12, &y->m12); x->m13 = y->m13; };
int f_cmpA118(const struct A118 *x, const struct A118 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA114(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA117(&x->m12, &y->m12) && x->m13 == y->m13; };
DCstruct* f_touchdcstA118() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A118), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A118, m0), 1);
		dcStructField(st, 's', offsetof(struct A118, m1), 1);
		dcStructField(st, 'l', offsetof(struct A118, m2), 1);
		dcStructField(st, 'j', offsetof(struct A118, m3), 1);
		dcStructField(st, 's', offsetof(struct A118, m4), 1);
		dcStructField(st, 'l', offsetof(struct A118, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A118, m6), 1, f_touchdcstA114());
		dcStructField(st, 'j', offsetof(struct A118, m7), 1);
		dcStructField(st, 's', offsetof(struct A118, m8), 1);
		dcStructField(st, 'i', offsetof(struct A118, m9), 1);
		dcStructField(st, 'i', offsetof(struct A118, m10), 1);
		dcStructField(st, 'd', offsetof(struct A118, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A118, m12), 1, f_touchdcstA117());
		dcStructField(st, 'j', offsetof(struct A118, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsljs} */
struct A119 { l m0; s m1; l m2; j m3; s m4; };
void f_cpA119(struct A119 *x, const struct A119 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA119(const struct A119 *x, const struct A119 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA119() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A119), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A119, m0), 1);
		dcStructField(st, 's', offsetof(struct A119, m1), 1);
		dcStructField(st, 'l', offsetof(struct A119, m2), 1);
		dcStructField(st, 'j', offsetof(struct A119, m3), 1);
		dcStructField(st, 's', offsetof(struct A119, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssiffisjdlc} */
struct A120 { s m0; s m1; i m2; f m3; f m4; i m5; s m6; j m7; d m8; l m9; c m10; };
void f_cpA120(struct A120 *x, const struct A120 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA120(const struct A120 *x, const struct A120 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA120() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A120), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A120, m0), 1);
		dcStructField(st, 's', offsetof(struct A120, m1), 1);
		dcStructField(st, 'i', offsetof(struct A120, m2), 1);
		dcStructField(st, 'f', offsetof(struct A120, m3), 1);
		dcStructField(st, 'f', offsetof(struct A120, m4), 1);
		dcStructField(st, 'i', offsetof(struct A120, m5), 1);
		dcStructField(st, 's', offsetof(struct A120, m6), 1);
		dcStructField(st, 'j', offsetof(struct A120, m7), 1);
		dcStructField(st, 'd', offsetof(struct A120, m8), 1);
		dcStructField(st, 'l', offsetof(struct A120, m9), 1);
		dcStructField(st, 'c', offsetof(struct A120, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pljcfcjclccpciddcplpss> */
union  A121 { p m0; l m1; j m2; c m3; f m4; c m5; j m6; c m7; l m8; c m9; c m10; p m11; c m12; i m13; d m14; d m15; c m16; p m17; l m18; p m19; s m20; s m21; };
void f_cpA121(union  A121 *x, const union  A121 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA121(const union  A121 *x, const union  A121 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA121() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(union  A121), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A121, m0), 1);
		dcStructField(st, 'l', offsetof(union  A121, m1), 1);
		dcStructField(st, 'j', offsetof(union  A121, m2), 1);
		dcStructField(st, 'c', offsetof(union  A121, m3), 1);
		dcStructField(st, 'f', offsetof(union  A121, m4), 1);
		dcStructField(st, 'c', offsetof(union  A121, m5), 1);
		dcStructField(st, 'j', offsetof(union  A121, m6), 1);
		dcStructField(st, 'c', offsetof(union  A121, m7), 1);
		dcStructField(st, 'l', offsetof(union  A121, m8), 1);
		dcStructField(st, 'c', offsetof(union  A121, m9), 1);
		dcStructField(st, 'c', offsetof(union  A121, m10), 1);
		dcStructField(st, 'p', offsetof(union  A121, m11), 1);
		dcStructField(st, 'c', offsetof(union  A121, m12), 1);
		dcStructField(st, 'i', offsetof(union  A121, m13), 1);
		dcStructField(st, 'd', offsetof(union  A121, m14), 1);
		dcStructField(st, 'd', offsetof(union  A121, m15), 1);
		dcStructField(st, 'c', offsetof(union  A121, m16), 1);
		dcStructField(st, 'p', offsetof(union  A121, m17), 1);
		dcStructField(st, 'l', offsetof(union  A121, m18), 1);
		dcStructField(st, 'p', offsetof(union  A121, m19), 1);
		dcStructField(st, 's', offsetof(union  A121, m20), 1);
		dcStructField(st, 's', offsetof(union  A121, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c} */
struct A122 { c m0; };
void f_cpA122(struct A122 *x, const struct A122 *y) { x->m0 = y->m0; };
int f_cmpA122(const struct A122 *x, const struct A122 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA122() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A122), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A122, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <liljfj{ssiffisjdlc}dj<pljcfcjclccpciddcplpss>cdj{c}pssfpsf> */
union  A123 { l m0; i m1; l m2; j m3; f m4; j m5; struct A120 m6; d m7; j m8; union  A121 m9; c m10; d m11; j m12; struct A122 m13; p m14; s m15; s m16; f m17; p m18; s m19; f m20; };
void f_cpA123(union  A123 *x, const union  A123 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA120(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; f_cpA121(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA122(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA123(const union  A123 *x, const union  A123 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA120(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA121(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA122(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA123() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A123), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A123, m0), 1);
		dcStructField(st, 'i', offsetof(union  A123, m1), 1);
		dcStructField(st, 'l', offsetof(union  A123, m2), 1);
		dcStructField(st, 'j', offsetof(union  A123, m3), 1);
		dcStructField(st, 'f', offsetof(union  A123, m4), 1);
		dcStructField(st, 'j', offsetof(union  A123, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A123, m6), 1, f_touchdcstA120());
		dcStructField(st, 'd', offsetof(union  A123, m7), 1);
		dcStructField(st, 'j', offsetof(union  A123, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A123, m9), 1, f_touchdcstA121());
		dcStructField(st, 'c', offsetof(union  A123, m10), 1);
		dcStructField(st, 'd', offsetof(union  A123, m11), 1);
		dcStructField(st, 'j', offsetof(union  A123, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A123, m13), 1, f_touchdcstA122());
		dcStructField(st, 'p', offsetof(union  A123, m14), 1);
		dcStructField(st, 's', offsetof(union  A123, m15), 1);
		dcStructField(st, 's', offsetof(union  A123, m16), 1);
		dcStructField(st, 'f', offsetof(union  A123, m17), 1);
		dcStructField(st, 'p', offsetof(union  A123, m18), 1);
		dcStructField(st, 's', offsetof(union  A123, m19), 1);
		dcStructField(st, 'f', offsetof(union  A123, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iisjffldcdcll> */
union  A124 { i m0; i m1; s m2; j m3; f m4; f m5; l m6; d m7; c m8; d m9; c m10; l m11; l m12; };
void f_cpA124(union  A124 *x, const union  A124 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA124(const union  A124 *x, const union  A124 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA124() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A124), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A124, m0), 1);
		dcStructField(st, 'i', offsetof(union  A124, m1), 1);
		dcStructField(st, 's', offsetof(union  A124, m2), 1);
		dcStructField(st, 'j', offsetof(union  A124, m3), 1);
		dcStructField(st, 'f', offsetof(union  A124, m4), 1);
		dcStructField(st, 'f', offsetof(union  A124, m5), 1);
		dcStructField(st, 'l', offsetof(union  A124, m6), 1);
		dcStructField(st, 'd', offsetof(union  A124, m7), 1);
		dcStructField(st, 'c', offsetof(union  A124, m8), 1);
		dcStructField(st, 'd', offsetof(union  A124, m9), 1);
		dcStructField(st, 'c', offsetof(union  A124, m10), 1);
		dcStructField(st, 'l', offsetof(union  A124, m11), 1);
		dcStructField(st, 'l', offsetof(union  A124, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cscslfc> */
union  A125 { c m0; s m1; c m2; s m3; l m4; f m5; c m6; };
void f_cpA125(union  A125 *x, const union  A125 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA125(const union  A125 *x, const union  A125 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA125() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A125), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A125, m0), 1);
		dcStructField(st, 's', offsetof(union  A125, m1), 1);
		dcStructField(st, 'c', offsetof(union  A125, m2), 1);
		dcStructField(st, 's', offsetof(union  A125, m3), 1);
		dcStructField(st, 'l', offsetof(union  A125, m4), 1);
		dcStructField(st, 'f', offsetof(union  A125, m5), 1);
		dcStructField(st, 'c', offsetof(union  A125, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldj<s>dfsls<cscslfc>jls} */
struct A126 { l m0; d m1; j m2; union  A75 m3; d m4; f m5; s m6; l m7; s m8; union  A125 m9; j m10; l m11; s m12; };
void f_cpA126(struct A126 *x, const struct A126 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA75(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA125(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA126(const struct A126 *x, const struct A126 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA75(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA125(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA126() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A126), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A126, m0), 1);
		dcStructField(st, 'd', offsetof(struct A126, m1), 1);
		dcStructField(st, 'j', offsetof(struct A126, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A126, m3), 1, f_touchdcstA75());
		dcStructField(st, 'd', offsetof(struct A126, m4), 1);
		dcStructField(st, 'f', offsetof(struct A126, m5), 1);
		dcStructField(st, 's', offsetof(struct A126, m6), 1);
		dcStructField(st, 'l', offsetof(struct A126, m7), 1);
		dcStructField(st, 's', offsetof(struct A126, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A126, m9), 1, f_touchdcstA125());
		dcStructField(st, 'j', offsetof(struct A126, m10), 1);
		dcStructField(st, 'l', offsetof(struct A126, m11), 1);
		dcStructField(st, 's', offsetof(struct A126, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <l> */
union  A127 { l m0; };
void f_cpA127(union  A127 *x, const union  A127 *y) { x->m0 = y->m0; };
int f_cmpA127(const union  A127 *x, const union  A127 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA127() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A127), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A127, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilscjcjilfcfcdjcdl} */
struct A128 { i m0; l m1; s m2; c m3; j m4; c m5; j m6; i m7; l m8; f m9; c m10; f m11; c m12; d m13; j m14; c m15; d m16; l m17; };
void f_cpA128(struct A128 *x, const struct A128 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA128(const struct A128 *x, const struct A128 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA128() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A128), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A128, m0), 1);
		dcStructField(st, 'l', offsetof(struct A128, m1), 1);
		dcStructField(st, 's', offsetof(struct A128, m2), 1);
		dcStructField(st, 'c', offsetof(struct A128, m3), 1);
		dcStructField(st, 'j', offsetof(struct A128, m4), 1);
		dcStructField(st, 'c', offsetof(struct A128, m5), 1);
		dcStructField(st, 'j', offsetof(struct A128, m6), 1);
		dcStructField(st, 'i', offsetof(struct A128, m7), 1);
		dcStructField(st, 'l', offsetof(struct A128, m8), 1);
		dcStructField(st, 'f', offsetof(struct A128, m9), 1);
		dcStructField(st, 'c', offsetof(struct A128, m10), 1);
		dcStructField(st, 'f', offsetof(struct A128, m11), 1);
		dcStructField(st, 'c', offsetof(struct A128, m12), 1);
		dcStructField(st, 'd', offsetof(struct A128, m13), 1);
		dcStructField(st, 'j', offsetof(struct A128, m14), 1);
		dcStructField(st, 'c', offsetof(struct A128, m15), 1);
		dcStructField(st, 'd', offsetof(struct A128, m16), 1);
		dcStructField(st, 'l', offsetof(struct A128, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sjss> */
union  A129 { s m0; j m1; s m2; s m3; };
void f_cpA129(union  A129 *x, const union  A129 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA129(const union  A129 *x, const union  A129 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA129() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A129), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A129, m0), 1);
		dcStructField(st, 'j', offsetof(union  A129, m1), 1);
		dcStructField(st, 's', offsetof(union  A129, m2), 1);
		dcStructField(st, 's', offsetof(union  A129, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<sjss>df> */
union  A130 { union  A129 m0; d m1; f m2; };
void f_cpA130(union  A130 *x, const union  A130 *y) { f_cpA129(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA130(const union  A130 *x, const union  A130 *y) { return f_cmpA129(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA130() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A130), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A130, m0), 1, f_touchdcstA129());
		dcStructField(st, 'd', offsetof(union  A130, m1), 1);
		dcStructField(st, 'f', offsetof(union  A130, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jfj> */
union  A131 { j m0; f m1; j m2; };
void f_cpA131(union  A131 *x, const union  A131 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA131(const union  A131 *x, const union  A131 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA131() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A131), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A131, m0), 1);
		dcStructField(st, 'f', offsetof(union  A131, m1), 1);
		dcStructField(st, 'j', offsetof(union  A131, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sl> */
union  A132 { s m0; l m1; };
void f_cpA132(union  A132 *x, const union  A132 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA132(const union  A132 *x, const union  A132 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA132() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A132), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A132, m0), 1);
		dcStructField(st, 'l', offsetof(union  A132, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fdcfdfpfildljjssspppffpd> */
union  A133 { f m0; d m1; c m2; f m3; d m4; f m5; p m6; f m7; i m8; l m9; d m10; l m11; j m12; j m13; s m14; s m15; s m16; p m17; p m18; p m19; f m20; f m21; p m22; d m23; };
void f_cpA133(union  A133 *x, const union  A133 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA133(const union  A133 *x, const union  A133 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA133() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(union  A133), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A133, m0), 1);
		dcStructField(st, 'd', offsetof(union  A133, m1), 1);
		dcStructField(st, 'c', offsetof(union  A133, m2), 1);
		dcStructField(st, 'f', offsetof(union  A133, m3), 1);
		dcStructField(st, 'd', offsetof(union  A133, m4), 1);
		dcStructField(st, 'f', offsetof(union  A133, m5), 1);
		dcStructField(st, 'p', offsetof(union  A133, m6), 1);
		dcStructField(st, 'f', offsetof(union  A133, m7), 1);
		dcStructField(st, 'i', offsetof(union  A133, m8), 1);
		dcStructField(st, 'l', offsetof(union  A133, m9), 1);
		dcStructField(st, 'd', offsetof(union  A133, m10), 1);
		dcStructField(st, 'l', offsetof(union  A133, m11), 1);
		dcStructField(st, 'j', offsetof(union  A133, m12), 1);
		dcStructField(st, 'j', offsetof(union  A133, m13), 1);
		dcStructField(st, 's', offsetof(union  A133, m14), 1);
		dcStructField(st, 's', offsetof(union  A133, m15), 1);
		dcStructField(st, 's', offsetof(union  A133, m16), 1);
		dcStructField(st, 'p', offsetof(union  A133, m17), 1);
		dcStructField(st, 'p', offsetof(union  A133, m18), 1);
		dcStructField(st, 'p', offsetof(union  A133, m19), 1);
		dcStructField(st, 'f', offsetof(union  A133, m20), 1);
		dcStructField(st, 'f', offsetof(union  A133, m21), 1);
		dcStructField(st, 'p', offsetof(union  A133, m22), 1);
		dcStructField(st, 'd', offsetof(union  A133, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lidldisldl} */
struct A134 { l m0; i m1; d m2; l m3; d m4; i m5; s m6; l m7; d m8; l m9; };
void f_cpA134(struct A134 *x, const struct A134 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA134(const struct A134 *x, const struct A134 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA134() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A134), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A134, m0), 1);
		dcStructField(st, 'i', offsetof(struct A134, m1), 1);
		dcStructField(st, 'd', offsetof(struct A134, m2), 1);
		dcStructField(st, 'l', offsetof(struct A134, m3), 1);
		dcStructField(st, 'd', offsetof(struct A134, m4), 1);
		dcStructField(st, 'i', offsetof(struct A134, m5), 1);
		dcStructField(st, 's', offsetof(struct A134, m6), 1);
		dcStructField(st, 'l', offsetof(struct A134, m7), 1);
		dcStructField(st, 'd', offsetof(struct A134, m8), 1);
		dcStructField(st, 'l', offsetof(struct A134, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<jfj><sl>s<fdcfdfpfildljjssspppffpd>jlcsdf{lidldisldl}cj} */
struct A135 { union  A131 m0; union  A132 m1; s m2; union  A133 m3; j m4; l m5; c m6; s m7; d m8; f m9; struct A134 m10; c m11; j m12; };
void f_cpA135(struct A135 *x, const struct A135 *y) { f_cpA131(&x->m0, &y->m0); f_cpA132(&x->m1, &y->m1); x->m2 = y->m2; f_cpA133(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA134(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA135(const struct A135 *x, const struct A135 *y) { return f_cmpA131(&x->m0, &y->m0) && f_cmpA132(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA133(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA134(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA135() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A135), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A135, m0), 1, f_touchdcstA131());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A135, m1), 1, f_touchdcstA132());
		dcStructField(st, 's', offsetof(struct A135, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A135, m3), 1, f_touchdcstA133());
		dcStructField(st, 'j', offsetof(struct A135, m4), 1);
		dcStructField(st, 'l', offsetof(struct A135, m5), 1);
		dcStructField(st, 'c', offsetof(struct A135, m6), 1);
		dcStructField(st, 's', offsetof(struct A135, m7), 1);
		dcStructField(st, 'd', offsetof(struct A135, m8), 1);
		dcStructField(st, 'f', offsetof(struct A135, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A135, m10), 1, f_touchdcstA134());
		dcStructField(st, 'c', offsetof(struct A135, m11), 1);
		dcStructField(st, 'j', offsetof(struct A135, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{<jfj><sl>s<fdcfdfpfildljjssspppffpd>jlcsdf{lidldisldl}cj}l> */
union  A136 { struct A135 m0; l m1; };
void f_cpA136(union  A136 *x, const union  A136 *y) { f_cpA135(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA136(const union  A136 *x, const union  A136 *y) { return f_cmpA135(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA136() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A136), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A136, m0), 1, f_touchdcstA135());
		dcStructField(st, 'l', offsetof(union  A136, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlif} */
struct A137 { d m0; l m1; i m2; f m3; };
void f_cpA137(struct A137 *x, const struct A137 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA137(const struct A137 *x, const struct A137 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA137() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A137), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A137, m0), 1);
		dcStructField(st, 'l', offsetof(struct A137, m1), 1);
		dcStructField(st, 'i', offsetof(struct A137, m2), 1);
		dcStructField(st, 'f', offsetof(struct A137, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfpjcclpsfclcfc> */
union  A138 { s m0; f m1; p m2; j m3; c m4; c m5; l m6; p m7; s m8; f m9; c m10; l m11; c m12; f m13; c m14; };
void f_cpA138(union  A138 *x, const union  A138 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA138(const union  A138 *x, const union  A138 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA138() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A138), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A138, m0), 1);
		dcStructField(st, 'f', offsetof(union  A138, m1), 1);
		dcStructField(st, 'p', offsetof(union  A138, m2), 1);
		dcStructField(st, 'j', offsetof(union  A138, m3), 1);
		dcStructField(st, 'c', offsetof(union  A138, m4), 1);
		dcStructField(st, 'c', offsetof(union  A138, m5), 1);
		dcStructField(st, 'l', offsetof(union  A138, m6), 1);
		dcStructField(st, 'p', offsetof(union  A138, m7), 1);
		dcStructField(st, 's', offsetof(union  A138, m8), 1);
		dcStructField(st, 'f', offsetof(union  A138, m9), 1);
		dcStructField(st, 'c', offsetof(union  A138, m10), 1);
		dcStructField(st, 'l', offsetof(union  A138, m11), 1);
		dcStructField(st, 'c', offsetof(union  A138, m12), 1);
		dcStructField(st, 'f', offsetof(union  A138, m13), 1);
		dcStructField(st, 'c', offsetof(union  A138, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jlfffdcc> */
union  A139 { j m0; l m1; f m2; f m3; f m4; d m5; c m6; c m7; };
void f_cpA139(union  A139 *x, const union  A139 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA139(const union  A139 *x, const union  A139 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA139() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A139), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A139, m0), 1);
		dcStructField(st, 'l', offsetof(union  A139, m1), 1);
		dcStructField(st, 'f', offsetof(union  A139, m2), 1);
		dcStructField(st, 'f', offsetof(union  A139, m3), 1);
		dcStructField(st, 'f', offsetof(union  A139, m4), 1);
		dcStructField(st, 'd', offsetof(union  A139, m5), 1);
		dcStructField(st, 'c', offsetof(union  A139, m6), 1);
		dcStructField(st, 'c', offsetof(union  A139, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdipcj> */
union  A140 { j m0; d m1; i m2; p m3; c m4; j m5; };
void f_cpA140(union  A140 *x, const union  A140 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA140(const union  A140 *x, const union  A140 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA140() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A140), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A140, m0), 1);
		dcStructField(st, 'd', offsetof(union  A140, m1), 1);
		dcStructField(st, 'i', offsetof(union  A140, m2), 1);
		dcStructField(st, 'p', offsetof(union  A140, m3), 1);
		dcStructField(st, 'c', offsetof(union  A140, m4), 1);
		dcStructField(st, 'j', offsetof(union  A140, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jijfcsfdcpllc} */
struct A141 { j m0; i m1; j m2; f m3; c m4; s m5; f m6; d m7; c m8; p m9; l m10; l m11; c m12; };
void f_cpA141(struct A141 *x, const struct A141 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA141(const struct A141 *x, const struct A141 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA141() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A141), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A141, m0), 1);
		dcStructField(st, 'i', offsetof(struct A141, m1), 1);
		dcStructField(st, 'j', offsetof(struct A141, m2), 1);
		dcStructField(st, 'f', offsetof(struct A141, m3), 1);
		dcStructField(st, 'c', offsetof(struct A141, m4), 1);
		dcStructField(st, 's', offsetof(struct A141, m5), 1);
		dcStructField(st, 'f', offsetof(struct A141, m6), 1);
		dcStructField(st, 'd', offsetof(struct A141, m7), 1);
		dcStructField(st, 'c', offsetof(struct A141, m8), 1);
		dcStructField(st, 'p', offsetof(struct A141, m9), 1);
		dcStructField(st, 'l', offsetof(struct A141, m10), 1);
		dcStructField(st, 'l', offsetof(struct A141, m11), 1);
		dcStructField(st, 'c', offsetof(struct A141, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjdf} */
struct A142 { f m0; j m1; d m2; f m3; };
void f_cpA142(struct A142 *x, const struct A142 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA142(const struct A142 *x, const struct A142 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA142() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A142), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A142, m0), 1);
		dcStructField(st, 'j', offsetof(struct A142, m1), 1);
		dcStructField(st, 'd', offsetof(struct A142, m2), 1);
		dcStructField(st, 'f', offsetof(struct A142, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lffpjdpisijjc{jijfcsfdcpllc}jfd{fjdf}> */
union  A143 { l m0; f m1; f m2; p m3; j m4; d m5; p m6; i m7; s m8; i m9; j m10; j m11; c m12; struct A141 m13; j m14; f m15; d m16; struct A142 m17; };
void f_cpA143(union  A143 *x, const union  A143 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA141(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA142(&x->m17, &y->m17); };
int f_cmpA143(const union  A143 *x, const union  A143 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA141(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA142(&x->m17, &y->m17); };
DCstruct* f_touchdcstA143() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A143), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A143, m0), 1);
		dcStructField(st, 'f', offsetof(union  A143, m1), 1);
		dcStructField(st, 'f', offsetof(union  A143, m2), 1);
		dcStructField(st, 'p', offsetof(union  A143, m3), 1);
		dcStructField(st, 'j', offsetof(union  A143, m4), 1);
		dcStructField(st, 'd', offsetof(union  A143, m5), 1);
		dcStructField(st, 'p', offsetof(union  A143, m6), 1);
		dcStructField(st, 'i', offsetof(union  A143, m7), 1);
		dcStructField(st, 's', offsetof(union  A143, m8), 1);
		dcStructField(st, 'i', offsetof(union  A143, m9), 1);
		dcStructField(st, 'j', offsetof(union  A143, m10), 1);
		dcStructField(st, 'j', offsetof(union  A143, m11), 1);
		dcStructField(st, 'c', offsetof(union  A143, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A143, m13), 1, f_touchdcstA141());
		dcStructField(st, 'j', offsetof(union  A143, m14), 1);
		dcStructField(st, 'f', offsetof(union  A143, m15), 1);
		dcStructField(st, 'd', offsetof(union  A143, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A143, m17), 1, f_touchdcstA142());
		dcCloseStruct(st);
	}
	return st;
};
/* {ddpddcc} */
struct A144 { d m0; d m1; p m2; d m3; d m4; c m5; c m6; };
void f_cpA144(struct A144 *x, const struct A144 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA144(const struct A144 *x, const struct A144 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA144() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A144), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A144, m0), 1);
		dcStructField(st, 'd', offsetof(struct A144, m1), 1);
		dcStructField(st, 'p', offsetof(struct A144, m2), 1);
		dcStructField(st, 'd', offsetof(struct A144, m3), 1);
		dcStructField(st, 'd', offsetof(struct A144, m4), 1);
		dcStructField(st, 'c', offsetof(struct A144, m5), 1);
		dcStructField(st, 'c', offsetof(struct A144, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lj} */
struct A145 { l m0; j m1; };
void f_cpA145(struct A145 *x, const struct A145 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA145(const struct A145 *x, const struct A145 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA145() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A145), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A145, m0), 1);
		dcStructField(st, 'j', offsetof(struct A145, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sscsp} */
struct A146 { s m0; s m1; c m2; s m3; p m4; };
void f_cpA146(struct A146 *x, const struct A146 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA146(const struct A146 *x, const struct A146 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA146() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A146), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A146, m0), 1);
		dcStructField(st, 's', offsetof(struct A146, m1), 1);
		dcStructField(st, 'c', offsetof(struct A146, m2), 1);
		dcStructField(st, 's', offsetof(struct A146, m3), 1);
		dcStructField(st, 'p', offsetof(struct A146, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{sscsp}jsj> */
union  A147 { struct A146 m0; j m1; s m2; j m3; };
void f_cpA147(union  A147 *x, const union  A147 *y) { f_cpA146(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA147(const union  A147 *x, const union  A147 *y) { return f_cmpA146(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA147() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A147), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A147, m0), 1, f_touchdcstA146());
		dcStructField(st, 'j', offsetof(union  A147, m1), 1);
		dcStructField(st, 's', offsetof(union  A147, m2), 1);
		dcStructField(st, 'j', offsetof(union  A147, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llsiipsilp} */
struct A148 { l m0; l m1; s m2; i m3; i m4; p m5; s m6; i m7; l m8; p m9; };
void f_cpA148(struct A148 *x, const struct A148 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA148(const struct A148 *x, const struct A148 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA148() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A148), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A148, m0), 1);
		dcStructField(st, 'l', offsetof(struct A148, m1), 1);
		dcStructField(st, 's', offsetof(struct A148, m2), 1);
		dcStructField(st, 'i', offsetof(struct A148, m3), 1);
		dcStructField(st, 'i', offsetof(struct A148, m4), 1);
		dcStructField(st, 'p', offsetof(struct A148, m5), 1);
		dcStructField(st, 's', offsetof(struct A148, m6), 1);
		dcStructField(st, 'i', offsetof(struct A148, m7), 1);
		dcStructField(st, 'l', offsetof(struct A148, m8), 1);
		dcStructField(st, 'p', offsetof(struct A148, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcilipdfd} */
struct A149 { d m0; c m1; i m2; l m3; i m4; p m5; d m6; f m7; d m8; };
void f_cpA149(struct A149 *x, const struct A149 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA149(const struct A149 *x, const struct A149 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA149() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A149), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A149, m0), 1);
		dcStructField(st, 'c', offsetof(struct A149, m1), 1);
		dcStructField(st, 'i', offsetof(struct A149, m2), 1);
		dcStructField(st, 'l', offsetof(struct A149, m3), 1);
		dcStructField(st, 'i', offsetof(struct A149, m4), 1);
		dcStructField(st, 'p', offsetof(struct A149, m5), 1);
		dcStructField(st, 'd', offsetof(struct A149, m6), 1);
		dcStructField(st, 'f', offsetof(struct A149, m7), 1);
		dcStructField(st, 'd', offsetof(struct A149, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psl} */
struct A150 { p m0; s m1; l m2; };
void f_cpA150(struct A150 *x, const struct A150 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA150(const struct A150 *x, const struct A150 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA150() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A150), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A150, m0), 1);
		dcStructField(st, 's', offsetof(struct A150, m1), 1);
		dcStructField(st, 'l', offsetof(struct A150, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lipipi> */
union  A151 { l m0; i m1; p m2; i m3; p m4; i m5; };
void f_cpA151(union  A151 *x, const union  A151 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA151(const union  A151 *x, const union  A151 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA151() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A151), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A151, m0), 1);
		dcStructField(st, 'i', offsetof(union  A151, m1), 1);
		dcStructField(st, 'p', offsetof(union  A151, m2), 1);
		dcStructField(st, 'i', offsetof(union  A151, m3), 1);
		dcStructField(st, 'p', offsetof(union  A151, m4), 1);
		dcStructField(st, 'i', offsetof(union  A151, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <plppci> */
union  A152 { p m0; l m1; p m2; p m3; c m4; i m5; };
void f_cpA152(union  A152 *x, const union  A152 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA152(const union  A152 *x, const union  A152 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA152() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A152), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A152, m0), 1);
		dcStructField(st, 'l', offsetof(union  A152, m1), 1);
		dcStructField(st, 'p', offsetof(union  A152, m2), 1);
		dcStructField(st, 'p', offsetof(union  A152, m3), 1);
		dcStructField(st, 'c', offsetof(union  A152, m4), 1);
		dcStructField(st, 'i', offsetof(union  A152, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fs<lipipi><plppci>plc} */
struct A153 { f m0; s m1; union  A151 m2; union  A152 m3; p m4; l m5; c m6; };
void f_cpA153(struct A153 *x, const struct A153 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA151(&x->m2, &y->m2); f_cpA152(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA153(const struct A153 *x, const struct A153 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA151(&x->m2, &y->m2) && f_cmpA152(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA153() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A153), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A153, m0), 1);
		dcStructField(st, 's', offsetof(struct A153, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A153, m2), 1, f_touchdcstA151());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A153, m3), 1, f_touchdcstA152());
		dcStructField(st, 'p', offsetof(struct A153, m4), 1);
		dcStructField(st, 'l', offsetof(struct A153, m5), 1);
		dcStructField(st, 'c', offsetof(struct A153, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <llpiplpijc> */
union  A154 { l m0; l m1; p m2; i m3; p m4; l m5; p m6; i m7; j m8; c m9; };
void f_cpA154(union  A154 *x, const union  A154 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA154(const union  A154 *x, const union  A154 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA154() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A154), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A154, m0), 1);
		dcStructField(st, 'l', offsetof(union  A154, m1), 1);
		dcStructField(st, 'p', offsetof(union  A154, m2), 1);
		dcStructField(st, 'i', offsetof(union  A154, m3), 1);
		dcStructField(st, 'p', offsetof(union  A154, m4), 1);
		dcStructField(st, 'l', offsetof(union  A154, m5), 1);
		dcStructField(st, 'p', offsetof(union  A154, m6), 1);
		dcStructField(st, 'i', offsetof(union  A154, m7), 1);
		dcStructField(st, 'j', offsetof(union  A154, m8), 1);
		dcStructField(st, 'c', offsetof(union  A154, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdl} */
struct A155 { j m0; d m1; l m2; };
void f_cpA155(struct A155 *x, const struct A155 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA155(const struct A155 *x, const struct A155 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA155() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A155), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A155, m0), 1);
		dcStructField(st, 'd', offsetof(struct A155, m1), 1);
		dcStructField(st, 'l', offsetof(struct A155, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {d} */
struct A156 { d m0; };
void f_cpA156(struct A156 *x, const struct A156 *y) { x->m0 = y->m0; };
int f_cmpA156(const struct A156 *x, const struct A156 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA156() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A156), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A156, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfspjfsscilcd> */
union  A157 { s m0; f m1; s m2; p m3; j m4; f m5; s m6; s m7; c m8; i m9; l m10; c m11; d m12; };
void f_cpA157(union  A157 *x, const union  A157 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA157(const union  A157 *x, const union  A157 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA157() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A157), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A157, m0), 1);
		dcStructField(st, 'f', offsetof(union  A157, m1), 1);
		dcStructField(st, 's', offsetof(union  A157, m2), 1);
		dcStructField(st, 'p', offsetof(union  A157, m3), 1);
		dcStructField(st, 'j', offsetof(union  A157, m4), 1);
		dcStructField(st, 'f', offsetof(union  A157, m5), 1);
		dcStructField(st, 's', offsetof(union  A157, m6), 1);
		dcStructField(st, 's', offsetof(union  A157, m7), 1);
		dcStructField(st, 'c', offsetof(union  A157, m8), 1);
		dcStructField(st, 'i', offsetof(union  A157, m9), 1);
		dcStructField(st, 'l', offsetof(union  A157, m10), 1);
		dcStructField(st, 'c', offsetof(union  A157, m11), 1);
		dcStructField(st, 'd', offsetof(union  A157, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ficlfccpd> */
union  A158 { f m0; i m1; c m2; l m3; f m4; c m5; c m6; p m7; d m8; };
void f_cpA158(union  A158 *x, const union  A158 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA158(const union  A158 *x, const union  A158 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA158() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A158), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A158, m0), 1);
		dcStructField(st, 'i', offsetof(union  A158, m1), 1);
		dcStructField(st, 'c', offsetof(union  A158, m2), 1);
		dcStructField(st, 'l', offsetof(union  A158, m3), 1);
		dcStructField(st, 'f', offsetof(union  A158, m4), 1);
		dcStructField(st, 'c', offsetof(union  A158, m5), 1);
		dcStructField(st, 'c', offsetof(union  A158, m6), 1);
		dcStructField(st, 'p', offsetof(union  A158, m7), 1);
		dcStructField(st, 'd', offsetof(union  A158, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lcjcd} */
struct A159 { l m0; c m1; j m2; c m3; d m4; };
void f_cpA159(struct A159 *x, const struct A159 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA159(const struct A159 *x, const struct A159 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA159() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A159), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A159, m0), 1);
		dcStructField(st, 'c', offsetof(struct A159, m1), 1);
		dcStructField(st, 'j', offsetof(struct A159, m2), 1);
		dcStructField(st, 'c', offsetof(struct A159, m3), 1);
		dcStructField(st, 'd', offsetof(struct A159, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{lcjcd}> */
union  A160 { struct A159 m0; };
void f_cpA160(union  A160 *x, const union  A160 *y) { f_cpA159(&x->m0, &y->m0); };
int f_cmpA160(const union  A160 *x, const union  A160 *y) { return f_cmpA159(&x->m0, &y->m0); };
DCstruct* f_touchdcstA160() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A160), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A160, m0), 1, f_touchdcstA159());
		dcCloseStruct(st);
	}
	return st;
};
/* <p> */
union  A161 { p m0; };
void f_cpA161(union  A161 *x, const union  A161 *y) { x->m0 = y->m0; };
int f_cmpA161(const union  A161 *x, const union  A161 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA161() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A161), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A161, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjfsic} */
struct A162 { f m0; j m1; f m2; s m3; i m4; c m5; };
void f_cpA162(struct A162 *x, const struct A162 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA162(const struct A162 *x, const struct A162 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA162() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A162), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A162, m0), 1);
		dcStructField(st, 'j', offsetof(struct A162, m1), 1);
		dcStructField(st, 'f', offsetof(struct A162, m2), 1);
		dcStructField(st, 's', offsetof(struct A162, m3), 1);
		dcStructField(st, 'i', offsetof(struct A162, m4), 1);
		dcStructField(st, 'c', offsetof(struct A162, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fjfsic}} */
struct A163 { struct A162 m0; };
void f_cpA163(struct A163 *x, const struct A163 *y) { f_cpA162(&x->m0, &y->m0); };
int f_cmpA163(const struct A163 *x, const struct A163 *y) { return f_cmpA162(&x->m0, &y->m0); };
DCstruct* f_touchdcstA163() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A163), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A163, m0), 1, f_touchdcstA162());
		dcCloseStruct(st);
	}
	return st;
};
/* <dijfsii> */
union  A164 { d m0; i m1; j m2; f m3; s m4; i m5; i m6; };
void f_cpA164(union  A164 *x, const union  A164 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA164(const union  A164 *x, const union  A164 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA164() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A164), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A164, m0), 1);
		dcStructField(st, 'i', offsetof(union  A164, m1), 1);
		dcStructField(st, 'j', offsetof(union  A164, m2), 1);
		dcStructField(st, 'f', offsetof(union  A164, m3), 1);
		dcStructField(st, 's', offsetof(union  A164, m4), 1);
		dcStructField(st, 'i', offsetof(union  A164, m5), 1);
		dcStructField(st, 'i', offsetof(union  A164, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iil<dijfsii>> */
union  A165 { i m0; i m1; l m2; union  A164 m3; };
void f_cpA165(union  A165 *x, const union  A165 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA164(&x->m3, &y->m3); };
int f_cmpA165(const union  A165 *x, const union  A165 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA164(&x->m3, &y->m3); };
DCstruct* f_touchdcstA165() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A165), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A165, m0), 1);
		dcStructField(st, 'i', offsetof(union  A165, m1), 1);
		dcStructField(st, 'l', offsetof(union  A165, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A165, m3), 1, f_touchdcstA164());
		dcCloseStruct(st);
	}
	return st;
};
/* {clpfpjjffslsldfldid} */
struct A166 { c m0; l m1; p m2; f m3; p m4; j m5; j m6; f m7; f m8; s m9; l m10; s m11; l m12; d m13; f m14; l m15; d m16; i m17; d m18; };
void f_cpA166(struct A166 *x, const struct A166 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA166(const struct A166 *x, const struct A166 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA166() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A166), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A166, m0), 1);
		dcStructField(st, 'l', offsetof(struct A166, m1), 1);
		dcStructField(st, 'p', offsetof(struct A166, m2), 1);
		dcStructField(st, 'f', offsetof(struct A166, m3), 1);
		dcStructField(st, 'p', offsetof(struct A166, m4), 1);
		dcStructField(st, 'j', offsetof(struct A166, m5), 1);
		dcStructField(st, 'j', offsetof(struct A166, m6), 1);
		dcStructField(st, 'f', offsetof(struct A166, m7), 1);
		dcStructField(st, 'f', offsetof(struct A166, m8), 1);
		dcStructField(st, 's', offsetof(struct A166, m9), 1);
		dcStructField(st, 'l', offsetof(struct A166, m10), 1);
		dcStructField(st, 's', offsetof(struct A166, m11), 1);
		dcStructField(st, 'l', offsetof(struct A166, m12), 1);
		dcStructField(st, 'd', offsetof(struct A166, m13), 1);
		dcStructField(st, 'f', offsetof(struct A166, m14), 1);
		dcStructField(st, 'l', offsetof(struct A166, m15), 1);
		dcStructField(st, 'd', offsetof(struct A166, m16), 1);
		dcStructField(st, 'i', offsetof(struct A166, m17), 1);
		dcStructField(st, 'd', offsetof(struct A166, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fi{clpfpjjffslsldfldid}cd} */
struct A167 { f m0; i m1; struct A166 m2; c m3; d m4; };
void f_cpA167(struct A167 *x, const struct A167 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA166(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA167(const struct A167 *x, const struct A167 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA166(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA167() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A167), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A167, m0), 1);
		dcStructField(st, 'i', offsetof(struct A167, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A167, m2), 1, f_touchdcstA166());
		dcStructField(st, 'c', offsetof(struct A167, m3), 1);
		dcStructField(st, 'd', offsetof(struct A167, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fs<{lcjcd}>plfdl<p>plfpli{{fjfsic}}<iil<dijfsii>>{fi{clpfpjjffslsldfldid}cd}} */
struct A168 { f m0; s m1; union  A160 m2; p m3; l m4; f m5; d m6; l m7; union  A161 m8; p m9; l m10; f m11; p m12; l m13; i m14; struct A163 m15; union  A165 m16; struct A167 m17; };
void f_cpA168(struct A168 *x, const struct A168 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA160(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA161(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA163(&x->m15, &y->m15); f_cpA165(&x->m16, &y->m16); f_cpA167(&x->m17, &y->m17); };
int f_cmpA168(const struct A168 *x, const struct A168 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA160(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA161(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA163(&x->m15, &y->m15) && f_cmpA165(&x->m16, &y->m16) && f_cmpA167(&x->m17, &y->m17); };
DCstruct* f_touchdcstA168() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A168), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A168, m0), 1);
		dcStructField(st, 's', offsetof(struct A168, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A168, m2), 1, f_touchdcstA160());
		dcStructField(st, 'p', offsetof(struct A168, m3), 1);
		dcStructField(st, 'l', offsetof(struct A168, m4), 1);
		dcStructField(st, 'f', offsetof(struct A168, m5), 1);
		dcStructField(st, 'd', offsetof(struct A168, m6), 1);
		dcStructField(st, 'l', offsetof(struct A168, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A168, m8), 1, f_touchdcstA161());
		dcStructField(st, 'p', offsetof(struct A168, m9), 1);
		dcStructField(st, 'l', offsetof(struct A168, m10), 1);
		dcStructField(st, 'f', offsetof(struct A168, m11), 1);
		dcStructField(st, 'p', offsetof(struct A168, m12), 1);
		dcStructField(st, 'l', offsetof(struct A168, m13), 1);
		dcStructField(st, 'i', offsetof(struct A168, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A168, m15), 1, f_touchdcstA163());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A168, m16), 1, f_touchdcstA165());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A168, m17), 1, f_touchdcstA167());
		dcCloseStruct(st);
	}
	return st;
};
/* <fsljidiif> */
union  A169 { f m0; s m1; l m2; j m3; i m4; d m5; i m6; i m7; f m8; };
void f_cpA169(union  A169 *x, const union  A169 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA169(const union  A169 *x, const union  A169 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA169() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A169), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A169, m0), 1);
		dcStructField(st, 's', offsetof(union  A169, m1), 1);
		dcStructField(st, 'l', offsetof(union  A169, m2), 1);
		dcStructField(st, 'j', offsetof(union  A169, m3), 1);
		dcStructField(st, 'i', offsetof(union  A169, m4), 1);
		dcStructField(st, 'd', offsetof(union  A169, m5), 1);
		dcStructField(st, 'i', offsetof(union  A169, m6), 1);
		dcStructField(st, 'i', offsetof(union  A169, m7), 1);
		dcStructField(st, 'f', offsetof(union  A169, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llfiisjjcj<fsljidiif>i} */
struct A170 { l m0; l m1; f m2; i m3; i m4; s m5; j m6; j m7; c m8; j m9; union  A169 m10; i m11; };
void f_cpA170(struct A170 *x, const struct A170 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA169(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA170(const struct A170 *x, const struct A170 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA169(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA170() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A170), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A170, m0), 1);
		dcStructField(st, 'l', offsetof(struct A170, m1), 1);
		dcStructField(st, 'f', offsetof(struct A170, m2), 1);
		dcStructField(st, 'i', offsetof(struct A170, m3), 1);
		dcStructField(st, 'i', offsetof(struct A170, m4), 1);
		dcStructField(st, 's', offsetof(struct A170, m5), 1);
		dcStructField(st, 'j', offsetof(struct A170, m6), 1);
		dcStructField(st, 'j', offsetof(struct A170, m7), 1);
		dcStructField(st, 'c', offsetof(struct A170, m8), 1);
		dcStructField(st, 'j', offsetof(struct A170, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A170, m10), 1, f_touchdcstA169());
		dcStructField(st, 'i', offsetof(struct A170, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scljifjfpff} */
struct A171 { s m0; c m1; l m2; j m3; i m4; f m5; j m6; f m7; p m8; f m9; f m10; };
void f_cpA171(struct A171 *x, const struct A171 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA171(const struct A171 *x, const struct A171 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA171() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A171), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A171, m0), 1);
		dcStructField(st, 'c', offsetof(struct A171, m1), 1);
		dcStructField(st, 'l', offsetof(struct A171, m2), 1);
		dcStructField(st, 'j', offsetof(struct A171, m3), 1);
		dcStructField(st, 'i', offsetof(struct A171, m4), 1);
		dcStructField(st, 'f', offsetof(struct A171, m5), 1);
		dcStructField(st, 'j', offsetof(struct A171, m6), 1);
		dcStructField(st, 'f', offsetof(struct A171, m7), 1);
		dcStructField(st, 'p', offsetof(struct A171, m8), 1);
		dcStructField(st, 'f', offsetof(struct A171, m9), 1);
		dcStructField(st, 'f', offsetof(struct A171, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcscsfjffidifij} */
struct A172 { f m0; c m1; s m2; c m3; s m4; f m5; j m6; f m7; f m8; i m9; d m10; i m11; f m12; i m13; j m14; };
void f_cpA172(struct A172 *x, const struct A172 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA172(const struct A172 *x, const struct A172 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA172() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A172), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A172, m0), 1);
		dcStructField(st, 'c', offsetof(struct A172, m1), 1);
		dcStructField(st, 's', offsetof(struct A172, m2), 1);
		dcStructField(st, 'c', offsetof(struct A172, m3), 1);
		dcStructField(st, 's', offsetof(struct A172, m4), 1);
		dcStructField(st, 'f', offsetof(struct A172, m5), 1);
		dcStructField(st, 'j', offsetof(struct A172, m6), 1);
		dcStructField(st, 'f', offsetof(struct A172, m7), 1);
		dcStructField(st, 'f', offsetof(struct A172, m8), 1);
		dcStructField(st, 'i', offsetof(struct A172, m9), 1);
		dcStructField(st, 'd', offsetof(struct A172, m10), 1);
		dcStructField(st, 'i', offsetof(struct A172, m11), 1);
		dcStructField(st, 'f', offsetof(struct A172, m12), 1);
		dcStructField(st, 'i', offsetof(struct A172, m13), 1);
		dcStructField(st, 'j', offsetof(struct A172, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pjfdcdjsiljc> */
union  A173 { p m0; j m1; f m2; d m3; c m4; d m5; j m6; s m7; i m8; l m9; j m10; c m11; };
void f_cpA173(union  A173 *x, const union  A173 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA173(const union  A173 *x, const union  A173 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA173() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A173), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A173, m0), 1);
		dcStructField(st, 'j', offsetof(union  A173, m1), 1);
		dcStructField(st, 'f', offsetof(union  A173, m2), 1);
		dcStructField(st, 'd', offsetof(union  A173, m3), 1);
		dcStructField(st, 'c', offsetof(union  A173, m4), 1);
		dcStructField(st, 'd', offsetof(union  A173, m5), 1);
		dcStructField(st, 'j', offsetof(union  A173, m6), 1);
		dcStructField(st, 's', offsetof(union  A173, m7), 1);
		dcStructField(st, 'i', offsetof(union  A173, m8), 1);
		dcStructField(st, 'l', offsetof(union  A173, m9), 1);
		dcStructField(st, 'j', offsetof(union  A173, m10), 1);
		dcStructField(st, 'c', offsetof(union  A173, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ldjlcjpfsdf> */
union  A174 { l m0; d m1; j m2; l m3; c m4; j m5; p m6; f m7; s m8; d m9; f m10; };
void f_cpA174(union  A174 *x, const union  A174 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA174(const union  A174 *x, const union  A174 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA174() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A174), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A174, m0), 1);
		dcStructField(st, 'd', offsetof(union  A174, m1), 1);
		dcStructField(st, 'j', offsetof(union  A174, m2), 1);
		dcStructField(st, 'l', offsetof(union  A174, m3), 1);
		dcStructField(st, 'c', offsetof(union  A174, m4), 1);
		dcStructField(st, 'j', offsetof(union  A174, m5), 1);
		dcStructField(st, 'p', offsetof(union  A174, m6), 1);
		dcStructField(st, 'f', offsetof(union  A174, m7), 1);
		dcStructField(st, 's', offsetof(union  A174, m8), 1);
		dcStructField(st, 'd', offsetof(union  A174, m9), 1);
		dcStructField(st, 'f', offsetof(union  A174, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <slfijsl> */
union  A175 { s m0; l m1; f m2; i m3; j m4; s m5; l m6; };
void f_cpA175(union  A175 *x, const union  A175 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA175(const union  A175 *x, const union  A175 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA175() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A175), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A175, m0), 1);
		dcStructField(st, 'l', offsetof(union  A175, m1), 1);
		dcStructField(st, 'f', offsetof(union  A175, m2), 1);
		dcStructField(st, 'i', offsetof(union  A175, m3), 1);
		dcStructField(st, 'j', offsetof(union  A175, m4), 1);
		dcStructField(st, 's', offsetof(union  A175, m5), 1);
		dcStructField(st, 'l', offsetof(union  A175, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jflds} */
struct A176 { j m0; f m1; l m2; d m3; s m4; };
void f_cpA176(struct A176 *x, const struct A176 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA176(const struct A176 *x, const struct A176 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA176() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A176), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A176, m0), 1);
		dcStructField(st, 'f', offsetof(struct A176, m1), 1);
		dcStructField(st, 'l', offsetof(struct A176, m2), 1);
		dcStructField(st, 'd', offsetof(struct A176, m3), 1);
		dcStructField(st, 's', offsetof(struct A176, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pj} */
struct A177 { p m0; j m1; };
void f_cpA177(struct A177 *x, const struct A177 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA177(const struct A177 *x, const struct A177 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA177() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A177), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A177, m0), 1);
		dcStructField(st, 'j', offsetof(struct A177, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cllcff} */
struct A178 { c m0; l m1; l m2; c m3; f m4; f m5; };
void f_cpA178(struct A178 *x, const struct A178 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA178(const struct A178 *x, const struct A178 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA178() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A178), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A178, m0), 1);
		dcStructField(st, 'l', offsetof(struct A178, m1), 1);
		dcStructField(st, 'l', offsetof(struct A178, m2), 1);
		dcStructField(st, 'c', offsetof(struct A178, m3), 1);
		dcStructField(st, 'f', offsetof(struct A178, m4), 1);
		dcStructField(st, 'f', offsetof(struct A178, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{jflds}clcpisl{pj}piddpcj{cllcff}flif> */
union  A179 { struct A176 m0; c m1; l m2; c m3; p m4; i m5; s m6; l m7; struct A177 m8; p m9; i m10; d m11; d m12; p m13; c m14; j m15; struct A178 m16; f m17; l m18; i m19; f m20; };
void f_cpA179(union  A179 *x, const union  A179 *y) { f_cpA176(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA177(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA178(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA179(const union  A179 *x, const union  A179 *y) { return f_cmpA176(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA177(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA178(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA179() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A179), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A179, m0), 1, f_touchdcstA176());
		dcStructField(st, 'c', offsetof(union  A179, m1), 1);
		dcStructField(st, 'l', offsetof(union  A179, m2), 1);
		dcStructField(st, 'c', offsetof(union  A179, m3), 1);
		dcStructField(st, 'p', offsetof(union  A179, m4), 1);
		dcStructField(st, 'i', offsetof(union  A179, m5), 1);
		dcStructField(st, 's', offsetof(union  A179, m6), 1);
		dcStructField(st, 'l', offsetof(union  A179, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A179, m8), 1, f_touchdcstA177());
		dcStructField(st, 'p', offsetof(union  A179, m9), 1);
		dcStructField(st, 'i', offsetof(union  A179, m10), 1);
		dcStructField(st, 'd', offsetof(union  A179, m11), 1);
		dcStructField(st, 'd', offsetof(union  A179, m12), 1);
		dcStructField(st, 'p', offsetof(union  A179, m13), 1);
		dcStructField(st, 'c', offsetof(union  A179, m14), 1);
		dcStructField(st, 'j', offsetof(union  A179, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A179, m16), 1, f_touchdcstA178());
		dcStructField(st, 'f', offsetof(union  A179, m17), 1);
		dcStructField(st, 'l', offsetof(union  A179, m18), 1);
		dcStructField(st, 'i', offsetof(union  A179, m19), 1);
		dcStructField(st, 'f', offsetof(union  A179, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sjpi<{jflds}clcpisl{pj}piddpcj{cllcff}flif>> */
union  A180 { s m0; j m1; p m2; i m3; union  A179 m4; };
void f_cpA180(union  A180 *x, const union  A180 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA179(&x->m4, &y->m4); };
int f_cmpA180(const union  A180 *x, const union  A180 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA179(&x->m4, &y->m4); };
DCstruct* f_touchdcstA180() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A180), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A180, m0), 1);
		dcStructField(st, 'j', offsetof(union  A180, m1), 1);
		dcStructField(st, 'p', offsetof(union  A180, m2), 1);
		dcStructField(st, 'i', offsetof(union  A180, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A180, m4), 1, f_touchdcstA179());
		dcCloseStruct(st);
	}
	return st;
};
/* {cjcclfji} */
struct A181 { c m0; j m1; c m2; c m3; l m4; f m5; j m6; i m7; };
void f_cpA181(struct A181 *x, const struct A181 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA181(const struct A181 *x, const struct A181 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA181() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A181), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A181, m0), 1);
		dcStructField(st, 'j', offsetof(struct A181, m1), 1);
		dcStructField(st, 'c', offsetof(struct A181, m2), 1);
		dcStructField(st, 'c', offsetof(struct A181, m3), 1);
		dcStructField(st, 'l', offsetof(struct A181, m4), 1);
		dcStructField(st, 'f', offsetof(struct A181, m5), 1);
		dcStructField(st, 'j', offsetof(struct A181, m6), 1);
		dcStructField(st, 'i', offsetof(struct A181, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcpdipspcflpfdjscjfcjcfddfsifscsdjs} */
struct A182 { d m0; c m1; p m2; d m3; i m4; p m5; s m6; p m7; c m8; f m9; l m10; p m11; f m12; d m13; j m14; s m15; c m16; j m17; f m18; c m19; j m20; c m21; f m22; d m23; d m24; f m25; s m26; i m27; f m28; s m29; c m30; s m31; d m32; j m33; s m34; };
void f_cpA182(struct A182 *x, const struct A182 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; };
int f_cmpA182(const struct A182 *x, const struct A182 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34; };
DCstruct* f_touchdcstA182() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(35, sizeof(struct A182), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A182, m0), 1);
		dcStructField(st, 'c', offsetof(struct A182, m1), 1);
		dcStructField(st, 'p', offsetof(struct A182, m2), 1);
		dcStructField(st, 'd', offsetof(struct A182, m3), 1);
		dcStructField(st, 'i', offsetof(struct A182, m4), 1);
		dcStructField(st, 'p', offsetof(struct A182, m5), 1);
		dcStructField(st, 's', offsetof(struct A182, m6), 1);
		dcStructField(st, 'p', offsetof(struct A182, m7), 1);
		dcStructField(st, 'c', offsetof(struct A182, m8), 1);
		dcStructField(st, 'f', offsetof(struct A182, m9), 1);
		dcStructField(st, 'l', offsetof(struct A182, m10), 1);
		dcStructField(st, 'p', offsetof(struct A182, m11), 1);
		dcStructField(st, 'f', offsetof(struct A182, m12), 1);
		dcStructField(st, 'd', offsetof(struct A182, m13), 1);
		dcStructField(st, 'j', offsetof(struct A182, m14), 1);
		dcStructField(st, 's', offsetof(struct A182, m15), 1);
		dcStructField(st, 'c', offsetof(struct A182, m16), 1);
		dcStructField(st, 'j', offsetof(struct A182, m17), 1);
		dcStructField(st, 'f', offsetof(struct A182, m18), 1);
		dcStructField(st, 'c', offsetof(struct A182, m19), 1);
		dcStructField(st, 'j', offsetof(struct A182, m20), 1);
		dcStructField(st, 'c', offsetof(struct A182, m21), 1);
		dcStructField(st, 'f', offsetof(struct A182, m22), 1);
		dcStructField(st, 'd', offsetof(struct A182, m23), 1);
		dcStructField(st, 'd', offsetof(struct A182, m24), 1);
		dcStructField(st, 'f', offsetof(struct A182, m25), 1);
		dcStructField(st, 's', offsetof(struct A182, m26), 1);
		dcStructField(st, 'i', offsetof(struct A182, m27), 1);
		dcStructField(st, 'f', offsetof(struct A182, m28), 1);
		dcStructField(st, 's', offsetof(struct A182, m29), 1);
		dcStructField(st, 'c', offsetof(struct A182, m30), 1);
		dcStructField(st, 's', offsetof(struct A182, m31), 1);
		dcStructField(st, 'd', offsetof(struct A182, m32), 1);
		dcStructField(st, 'j', offsetof(struct A182, m33), 1);
		dcStructField(st, 's', offsetof(struct A182, m34), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ifjs> */
union  A183 { i m0; f m1; j m2; s m3; };
void f_cpA183(union  A183 *x, const union  A183 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA183(const union  A183 *x, const union  A183 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA183() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A183), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A183, m0), 1);
		dcStructField(st, 'f', offsetof(union  A183, m1), 1);
		dcStructField(st, 'j', offsetof(union  A183, m2), 1);
		dcStructField(st, 's', offsetof(union  A183, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdc} */
struct A184 { j m0; d m1; c m2; };
void f_cpA184(struct A184 *x, const struct A184 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA184(const struct A184 *x, const struct A184 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA184() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A184), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A184, m0), 1);
		dcStructField(st, 'd', offsetof(struct A184, m1), 1);
		dcStructField(st, 'c', offsetof(struct A184, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijlpcfjp<ifjs>j{jdc}d} */
struct A185 { i m0; j m1; l m2; p m3; c m4; f m5; j m6; p m7; union  A183 m8; j m9; struct A184 m10; d m11; };
void f_cpA185(struct A185 *x, const struct A185 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA183(&x->m8, &y->m8); x->m9 = y->m9; f_cpA184(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA185(const struct A185 *x, const struct A185 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA183(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA184(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA185() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A185), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A185, m0), 1);
		dcStructField(st, 'j', offsetof(struct A185, m1), 1);
		dcStructField(st, 'l', offsetof(struct A185, m2), 1);
		dcStructField(st, 'p', offsetof(struct A185, m3), 1);
		dcStructField(st, 'c', offsetof(struct A185, m4), 1);
		dcStructField(st, 'f', offsetof(struct A185, m5), 1);
		dcStructField(st, 'j', offsetof(struct A185, m6), 1);
		dcStructField(st, 'p', offsetof(struct A185, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A185, m8), 1, f_touchdcstA183());
		dcStructField(st, 'j', offsetof(struct A185, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A185, m10), 1, f_touchdcstA184());
		dcStructField(st, 'd', offsetof(struct A185, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csfpjpd} */
struct A186 { c m0; s m1; f m2; p m3; j m4; p m5; d m6; };
void f_cpA186(struct A186 *x, const struct A186 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA186(const struct A186 *x, const struct A186 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA186() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A186), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A186, m0), 1);
		dcStructField(st, 's', offsetof(struct A186, m1), 1);
		dcStructField(st, 'f', offsetof(struct A186, m2), 1);
		dcStructField(st, 'p', offsetof(struct A186, m3), 1);
		dcStructField(st, 'j', offsetof(struct A186, m4), 1);
		dcStructField(st, 'p', offsetof(struct A186, m5), 1);
		dcStructField(st, 'd', offsetof(struct A186, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cjcpfdcfjfccjppdfsipjcpff> */
union  A187 { c m0; j m1; c m2; p m3; f m4; d m5; c m6; f m7; j m8; f m9; c m10; c m11; j m12; p m13; p m14; d m15; f m16; s m17; i m18; p m19; j m20; c m21; p m22; f m23; f m24; };
void f_cpA187(union  A187 *x, const union  A187 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA187(const union  A187 *x, const union  A187 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA187() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(union  A187), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A187, m0), 1);
		dcStructField(st, 'j', offsetof(union  A187, m1), 1);
		dcStructField(st, 'c', offsetof(union  A187, m2), 1);
		dcStructField(st, 'p', offsetof(union  A187, m3), 1);
		dcStructField(st, 'f', offsetof(union  A187, m4), 1);
		dcStructField(st, 'd', offsetof(union  A187, m5), 1);
		dcStructField(st, 'c', offsetof(union  A187, m6), 1);
		dcStructField(st, 'f', offsetof(union  A187, m7), 1);
		dcStructField(st, 'j', offsetof(union  A187, m8), 1);
		dcStructField(st, 'f', offsetof(union  A187, m9), 1);
		dcStructField(st, 'c', offsetof(union  A187, m10), 1);
		dcStructField(st, 'c', offsetof(union  A187, m11), 1);
		dcStructField(st, 'j', offsetof(union  A187, m12), 1);
		dcStructField(st, 'p', offsetof(union  A187, m13), 1);
		dcStructField(st, 'p', offsetof(union  A187, m14), 1);
		dcStructField(st, 'd', offsetof(union  A187, m15), 1);
		dcStructField(st, 'f', offsetof(union  A187, m16), 1);
		dcStructField(st, 's', offsetof(union  A187, m17), 1);
		dcStructField(st, 'i', offsetof(union  A187, m18), 1);
		dcStructField(st, 'p', offsetof(union  A187, m19), 1);
		dcStructField(st, 'j', offsetof(union  A187, m20), 1);
		dcStructField(st, 'c', offsetof(union  A187, m21), 1);
		dcStructField(st, 'p', offsetof(union  A187, m22), 1);
		dcStructField(st, 'f', offsetof(union  A187, m23), 1);
		dcStructField(st, 'f', offsetof(union  A187, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <silcp> */
union  A188 { s m0; i m1; l m2; c m3; p m4; };
void f_cpA188(union  A188 *x, const union  A188 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA188(const union  A188 *x, const union  A188 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA188() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A188), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A188, m0), 1);
		dcStructField(st, 'i', offsetof(union  A188, m1), 1);
		dcStructField(st, 'l', offsetof(union  A188, m2), 1);
		dcStructField(st, 'c', offsetof(union  A188, m3), 1);
		dcStructField(st, 'p', offsetof(union  A188, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <f> */
union  A189 { f m0; };
void f_cpA189(union  A189 *x, const union  A189 *y) { x->m0 = y->m0; };
int f_cmpA189(const union  A189 *x, const union  A189 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA189() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A189), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A189, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfd{csfpjpd}cfllllicipsjld<cjcpfdcfjfccjppdfsipjcpff>ji<silcp>fiic<f>i> */
union  A190 { p m0; f m1; d m2; struct A186 m3; c m4; f m5; l m6; l m7; l m8; l m9; i m10; c m11; i m12; p m13; s m14; j m15; l m16; d m17; union  A187 m18; j m19; i m20; union  A188 m21; f m22; i m23; i m24; c m25; union  A189 m26; i m27; };
void f_cpA190(union  A190 *x, const union  A190 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA186(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA187(&x->m18, &y->m18); x->m19 = y->m19; x->m20 = y->m20; f_cpA188(&x->m21, &y->m21); x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; f_cpA189(&x->m26, &y->m26); x->m27 = y->m27; };
int f_cmpA190(const union  A190 *x, const union  A190 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA186(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA187(&x->m18, &y->m18) && x->m19 == y->m19 && x->m20 == y->m20 && f_cmpA188(&x->m21, &y->m21) && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && f_cmpA189(&x->m26, &y->m26) && x->m27 == y->m27; };
DCstruct* f_touchdcstA190() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(28, sizeof(union  A190), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A190, m0), 1);
		dcStructField(st, 'f', offsetof(union  A190, m1), 1);
		dcStructField(st, 'd', offsetof(union  A190, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A190, m3), 1, f_touchdcstA186());
		dcStructField(st, 'c', offsetof(union  A190, m4), 1);
		dcStructField(st, 'f', offsetof(union  A190, m5), 1);
		dcStructField(st, 'l', offsetof(union  A190, m6), 1);
		dcStructField(st, 'l', offsetof(union  A190, m7), 1);
		dcStructField(st, 'l', offsetof(union  A190, m8), 1);
		dcStructField(st, 'l', offsetof(union  A190, m9), 1);
		dcStructField(st, 'i', offsetof(union  A190, m10), 1);
		dcStructField(st, 'c', offsetof(union  A190, m11), 1);
		dcStructField(st, 'i', offsetof(union  A190, m12), 1);
		dcStructField(st, 'p', offsetof(union  A190, m13), 1);
		dcStructField(st, 's', offsetof(union  A190, m14), 1);
		dcStructField(st, 'j', offsetof(union  A190, m15), 1);
		dcStructField(st, 'l', offsetof(union  A190, m16), 1);
		dcStructField(st, 'd', offsetof(union  A190, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A190, m18), 1, f_touchdcstA187());
		dcStructField(st, 'j', offsetof(union  A190, m19), 1);
		dcStructField(st, 'i', offsetof(union  A190, m20), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A190, m21), 1, f_touchdcstA188());
		dcStructField(st, 'f', offsetof(union  A190, m22), 1);
		dcStructField(st, 'i', offsetof(union  A190, m23), 1);
		dcStructField(st, 'i', offsetof(union  A190, m24), 1);
		dcStructField(st, 'c', offsetof(union  A190, m25), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A190, m26), 1, f_touchdcstA189());
		dcStructField(st, 'i', offsetof(union  A190, m27), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdi{i}ppldjl{ijlpcfjp<ifjs>j{jdc}d}jss<pfd{csfpjpd}cfllllicipsjld<cjcpfdcfjfccjppdfsipjcpff>ji<silcp>fiic<f>i>lf> */
union  A191 { c m0; d m1; i m2; struct A71 m3; p m4; p m5; l m6; d m7; j m8; l m9; struct A185 m10; j m11; s m12; s m13; union  A190 m14; l m15; f m16; };
void f_cpA191(union  A191 *x, const union  A191 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA71(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA185(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA190(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA191(const union  A191 *x, const union  A191 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA71(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA185(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA190(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA191() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(union  A191), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A191, m0), 1);
		dcStructField(st, 'd', offsetof(union  A191, m1), 1);
		dcStructField(st, 'i', offsetof(union  A191, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A191, m3), 1, f_touchdcstA71());
		dcStructField(st, 'p', offsetof(union  A191, m4), 1);
		dcStructField(st, 'p', offsetof(union  A191, m5), 1);
		dcStructField(st, 'l', offsetof(union  A191, m6), 1);
		dcStructField(st, 'd', offsetof(union  A191, m7), 1);
		dcStructField(st, 'j', offsetof(union  A191, m8), 1);
		dcStructField(st, 'l', offsetof(union  A191, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A191, m10), 1, f_touchdcstA185());
		dcStructField(st, 'j', offsetof(union  A191, m11), 1);
		dcStructField(st, 's', offsetof(union  A191, m12), 1);
		dcStructField(st, 's', offsetof(union  A191, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A191, m14), 1, f_touchdcstA190());
		dcStructField(st, 'l', offsetof(union  A191, m15), 1);
		dcStructField(st, 'f', offsetof(union  A191, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dps> */
union  A192 { d m0; p m1; s m2; };
void f_cpA192(union  A192 *x, const union  A192 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA192(const union  A192 *x, const union  A192 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA192() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A192), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A192, m0), 1);
		dcStructField(st, 'p', offsetof(union  A192, m1), 1);
		dcStructField(st, 's', offsetof(union  A192, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {diijfpjpildsd} */
struct A193 { d m0; i m1; i m2; j m3; f m4; p m5; j m6; p m7; i m8; l m9; d m10; s m11; d m12; };
void f_cpA193(struct A193 *x, const struct A193 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA193(const struct A193 *x, const struct A193 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA193() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A193), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A193, m0), 1);
		dcStructField(st, 'i', offsetof(struct A193, m1), 1);
		dcStructField(st, 'i', offsetof(struct A193, m2), 1);
		dcStructField(st, 'j', offsetof(struct A193, m3), 1);
		dcStructField(st, 'f', offsetof(struct A193, m4), 1);
		dcStructField(st, 'p', offsetof(struct A193, m5), 1);
		dcStructField(st, 'j', offsetof(struct A193, m6), 1);
		dcStructField(st, 'p', offsetof(struct A193, m7), 1);
		dcStructField(st, 'i', offsetof(struct A193, m8), 1);
		dcStructField(st, 'l', offsetof(struct A193, m9), 1);
		dcStructField(st, 'd', offsetof(struct A193, m10), 1);
		dcStructField(st, 's', offsetof(struct A193, m11), 1);
		dcStructField(st, 'd', offsetof(struct A193, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icdssdss} */
struct A194 { i m0; c m1; d m2; s m3; s m4; d m5; s m6; s m7; };
void f_cpA194(struct A194 *x, const struct A194 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA194(const struct A194 *x, const struct A194 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA194() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A194), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A194, m0), 1);
		dcStructField(st, 'c', offsetof(struct A194, m1), 1);
		dcStructField(st, 'd', offsetof(struct A194, m2), 1);
		dcStructField(st, 's', offsetof(struct A194, m3), 1);
		dcStructField(st, 's', offsetof(struct A194, m4), 1);
		dcStructField(st, 'd', offsetof(struct A194, m5), 1);
		dcStructField(st, 's', offsetof(struct A194, m6), 1);
		dcStructField(st, 's', offsetof(struct A194, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lj{diijfpjpildsd}dd{icdssdss}> */
union  A195 { l m0; j m1; struct A193 m2; d m3; d m4; struct A194 m5; };
void f_cpA195(union  A195 *x, const union  A195 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA193(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA194(&x->m5, &y->m5); };
int f_cmpA195(const union  A195 *x, const union  A195 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA193(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA194(&x->m5, &y->m5); };
DCstruct* f_touchdcstA195() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A195), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A195, m0), 1);
		dcStructField(st, 'j', offsetof(union  A195, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A195, m2), 1, f_touchdcstA193());
		dcStructField(st, 'd', offsetof(union  A195, m3), 1);
		dcStructField(st, 'd', offsetof(union  A195, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A195, m5), 1, f_touchdcstA194());
		dcCloseStruct(st);
	}
	return st;
};
/* <dcilpldj> */
union  A196 { d m0; c m1; i m2; l m3; p m4; l m5; d m6; j m7; };
void f_cpA196(union  A196 *x, const union  A196 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA196(const union  A196 *x, const union  A196 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA196() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A196), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A196, m0), 1);
		dcStructField(st, 'c', offsetof(union  A196, m1), 1);
		dcStructField(st, 'i', offsetof(union  A196, m2), 1);
		dcStructField(st, 'l', offsetof(union  A196, m3), 1);
		dcStructField(st, 'p', offsetof(union  A196, m4), 1);
		dcStructField(st, 'l', offsetof(union  A196, m5), 1);
		dcStructField(st, 'd', offsetof(union  A196, m6), 1);
		dcStructField(st, 'j', offsetof(union  A196, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pi<dcilpldj>j> */
union  A197 { p m0; i m1; union  A196 m2; j m3; };
void f_cpA197(union  A197 *x, const union  A197 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA196(&x->m2, &y->m2); x->m3 = y->m3; };
int f_cmpA197(const union  A197 *x, const union  A197 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA196(&x->m2, &y->m2) && x->m3 == y->m3; };
DCstruct* f_touchdcstA197() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A197), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A197, m0), 1);
		dcStructField(st, 'i', offsetof(union  A197, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A197, m2), 1, f_touchdcstA196());
		dcStructField(st, 'j', offsetof(union  A197, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <scifi> */
union  A198 { s m0; c m1; i m2; f m3; i m4; };
void f_cpA198(union  A198 *x, const union  A198 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA198(const union  A198 *x, const union  A198 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA198() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A198), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A198, m0), 1);
		dcStructField(st, 'c', offsetof(union  A198, m1), 1);
		dcStructField(st, 'i', offsetof(union  A198, m2), 1);
		dcStructField(st, 'f', offsetof(union  A198, m3), 1);
		dcStructField(st, 'i', offsetof(union  A198, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fll<scifi>sj> */
union  A199 { f m0; l m1; l m2; union  A198 m3; s m4; j m5; };
void f_cpA199(union  A199 *x, const union  A199 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA198(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA199(const union  A199 *x, const union  A199 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA198(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA199() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A199), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A199, m0), 1);
		dcStructField(st, 'l', offsetof(union  A199, m1), 1);
		dcStructField(st, 'l', offsetof(union  A199, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A199, m3), 1, f_touchdcstA198());
		dcStructField(st, 's', offsetof(union  A199, m4), 1);
		dcStructField(st, 'j', offsetof(union  A199, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <clifdll> */
union  A200 { c m0; l m1; i m2; f m3; d m4; l m5; l m6; };
void f_cpA200(union  A200 *x, const union  A200 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA200(const union  A200 *x, const union  A200 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA200() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A200), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A200, m0), 1);
		dcStructField(st, 'l', offsetof(union  A200, m1), 1);
		dcStructField(st, 'i', offsetof(union  A200, m2), 1);
		dcStructField(st, 'f', offsetof(union  A200, m3), 1);
		dcStructField(st, 'd', offsetof(union  A200, m4), 1);
		dcStructField(st, 'l', offsetof(union  A200, m5), 1);
		dcStructField(st, 'l', offsetof(union  A200, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <spcf> */
union  A201 { s m0; p m1; c m2; f m3; };
void f_cpA201(union  A201 *x, const union  A201 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA201(const union  A201 *x, const union  A201 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA201() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A201), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A201, m0), 1);
		dcStructField(st, 'p', offsetof(union  A201, m1), 1);
		dcStructField(st, 'c', offsetof(union  A201, m2), 1);
		dcStructField(st, 'f', offsetof(union  A201, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cs<spcf>ji> */
union  A202 { c m0; s m1; union  A201 m2; j m3; i m4; };
void f_cpA202(union  A202 *x, const union  A202 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA201(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA202(const union  A202 *x, const union  A202 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA201(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA202() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A202), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A202, m0), 1);
		dcStructField(st, 's', offsetof(union  A202, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A202, m2), 1, f_touchdcstA201());
		dcStructField(st, 'j', offsetof(union  A202, m3), 1);
		dcStructField(st, 'i', offsetof(union  A202, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cclcfccs<cs<spcf>ji>} */
struct A203 { c m0; c m1; l m2; c m3; f m4; c m5; c m6; s m7; union  A202 m8; };
void f_cpA203(struct A203 *x, const struct A203 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA202(&x->m8, &y->m8); };
int f_cmpA203(const struct A203 *x, const struct A203 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA202(&x->m8, &y->m8); };
DCstruct* f_touchdcstA203() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A203), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A203, m0), 1);
		dcStructField(st, 'c', offsetof(struct A203, m1), 1);
		dcStructField(st, 'l', offsetof(struct A203, m2), 1);
		dcStructField(st, 'c', offsetof(struct A203, m3), 1);
		dcStructField(st, 'f', offsetof(struct A203, m4), 1);
		dcStructField(st, 'c', offsetof(struct A203, m5), 1);
		dcStructField(st, 'c', offsetof(struct A203, m6), 1);
		dcStructField(st, 's', offsetof(struct A203, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A203, m8), 1, f_touchdcstA202());
		dcCloseStruct(st);
	}
	return st;
};
/* <lipfp> */
union  A204 { l m0; i m1; p m2; f m3; p m4; };
void f_cpA204(union  A204 *x, const union  A204 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA204(const union  A204 *x, const union  A204 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA204() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A204), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A204, m0), 1);
		dcStructField(st, 'i', offsetof(union  A204, m1), 1);
		dcStructField(st, 'p', offsetof(union  A204, m2), 1);
		dcStructField(st, 'f', offsetof(union  A204, m3), 1);
		dcStructField(st, 'p', offsetof(union  A204, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pifcjspscfljljsssddifdppjpp> */
union  A205 { p m0; i m1; f m2; c m3; j m4; s m5; p m6; s m7; c m8; f m9; l m10; j m11; l m12; j m13; s m14; s m15; s m16; d m17; d m18; i m19; f m20; d m21; p m22; p m23; j m24; p m25; p m26; };
void f_cpA205(union  A205 *x, const union  A205 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA205(const union  A205 *x, const union  A205 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA205() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(union  A205), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A205, m0), 1);
		dcStructField(st, 'i', offsetof(union  A205, m1), 1);
		dcStructField(st, 'f', offsetof(union  A205, m2), 1);
		dcStructField(st, 'c', offsetof(union  A205, m3), 1);
		dcStructField(st, 'j', offsetof(union  A205, m4), 1);
		dcStructField(st, 's', offsetof(union  A205, m5), 1);
		dcStructField(st, 'p', offsetof(union  A205, m6), 1);
		dcStructField(st, 's', offsetof(union  A205, m7), 1);
		dcStructField(st, 'c', offsetof(union  A205, m8), 1);
		dcStructField(st, 'f', offsetof(union  A205, m9), 1);
		dcStructField(st, 'l', offsetof(union  A205, m10), 1);
		dcStructField(st, 'j', offsetof(union  A205, m11), 1);
		dcStructField(st, 'l', offsetof(union  A205, m12), 1);
		dcStructField(st, 'j', offsetof(union  A205, m13), 1);
		dcStructField(st, 's', offsetof(union  A205, m14), 1);
		dcStructField(st, 's', offsetof(union  A205, m15), 1);
		dcStructField(st, 's', offsetof(union  A205, m16), 1);
		dcStructField(st, 'd', offsetof(union  A205, m17), 1);
		dcStructField(st, 'd', offsetof(union  A205, m18), 1);
		dcStructField(st, 'i', offsetof(union  A205, m19), 1);
		dcStructField(st, 'f', offsetof(union  A205, m20), 1);
		dcStructField(st, 'd', offsetof(union  A205, m21), 1);
		dcStructField(st, 'p', offsetof(union  A205, m22), 1);
		dcStructField(st, 'p', offsetof(union  A205, m23), 1);
		dcStructField(st, 'j', offsetof(union  A205, m24), 1);
		dcStructField(st, 'p', offsetof(union  A205, m25), 1);
		dcStructField(st, 'p', offsetof(union  A205, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfjjp> */
union  A206 { p m0; f m1; j m2; j m3; p m4; };
void f_cpA206(union  A206 *x, const union  A206 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA206(const union  A206 *x, const union  A206 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA206() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A206), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A206, m0), 1);
		dcStructField(st, 'f', offsetof(union  A206, m1), 1);
		dcStructField(st, 'j', offsetof(union  A206, m2), 1);
		dcStructField(st, 'j', offsetof(union  A206, m3), 1);
		dcStructField(st, 'p', offsetof(union  A206, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sp<pifcjspscfljljsssddifdppjpp><pfjjp>dj} */
struct A207 { s m0; p m1; union  A205 m2; union  A206 m3; d m4; j m5; };
void f_cpA207(struct A207 *x, const struct A207 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA205(&x->m2, &y->m2); f_cpA206(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA207(const struct A207 *x, const struct A207 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA205(&x->m2, &y->m2) && f_cmpA206(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA207() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A207), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A207, m0), 1);
		dcStructField(st, 'p', offsetof(struct A207, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A207, m2), 1, f_touchdcstA205());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A207, m3), 1, f_touchdcstA206());
		dcStructField(st, 'd', offsetof(struct A207, m4), 1);
		dcStructField(st, 'j', offsetof(struct A207, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fc} */
struct A208 { f m0; c m1; };
void f_cpA208(struct A208 *x, const struct A208 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA208(const struct A208 *x, const struct A208 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA208() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A208), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A208, m0), 1);
		dcStructField(st, 'c', offsetof(struct A208, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slsipl} */
struct A209 { s m0; l m1; s m2; i m3; p m4; l m5; };
void f_cpA209(struct A209 *x, const struct A209 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA209(const struct A209 *x, const struct A209 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA209() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A209), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A209, m0), 1);
		dcStructField(st, 'l', offsetof(struct A209, m1), 1);
		dcStructField(st, 's', offsetof(struct A209, m2), 1);
		dcStructField(st, 'i', offsetof(struct A209, m3), 1);
		dcStructField(st, 'p', offsetof(struct A209, m4), 1);
		dcStructField(st, 'l', offsetof(struct A209, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <psljjf> */
union  A210 { p m0; s m1; l m2; j m3; j m4; f m5; };
void f_cpA210(union  A210 *x, const union  A210 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA210(const union  A210 *x, const union  A210 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA210() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A210), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A210, m0), 1);
		dcStructField(st, 's', offsetof(union  A210, m1), 1);
		dcStructField(st, 'l', offsetof(union  A210, m2), 1);
		dcStructField(st, 'j', offsetof(union  A210, m3), 1);
		dcStructField(st, 'j', offsetof(union  A210, m4), 1);
		dcStructField(st, 'f', offsetof(union  A210, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csdjfcffp} */
struct A211 { c m0; s m1; d m2; j m3; f m4; c m5; f m6; f m7; p m8; };
void f_cpA211(struct A211 *x, const struct A211 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA211(const struct A211 *x, const struct A211 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA211() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A211), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A211, m0), 1);
		dcStructField(st, 's', offsetof(struct A211, m1), 1);
		dcStructField(st, 'd', offsetof(struct A211, m2), 1);
		dcStructField(st, 'j', offsetof(struct A211, m3), 1);
		dcStructField(st, 'f', offsetof(struct A211, m4), 1);
		dcStructField(st, 'c', offsetof(struct A211, m5), 1);
		dcStructField(st, 'f', offsetof(struct A211, m6), 1);
		dcStructField(st, 'f', offsetof(struct A211, m7), 1);
		dcStructField(st, 'p', offsetof(struct A211, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{fc}{slsipl}licpsicjjfcj<psljjf>{csdjfcffp}f> */
union  A212 { struct A208 m0; struct A209 m1; l m2; i m3; c m4; p m5; s m6; i m7; c m8; j m9; j m10; f m11; c m12; j m13; union  A210 m14; struct A211 m15; f m16; };
void f_cpA212(union  A212 *x, const union  A212 *y) { f_cpA208(&x->m0, &y->m0); f_cpA209(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA210(&x->m14, &y->m14); f_cpA211(&x->m15, &y->m15); x->m16 = y->m16; };
int f_cmpA212(const union  A212 *x, const union  A212 *y) { return f_cmpA208(&x->m0, &y->m0) && f_cmpA209(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA210(&x->m14, &y->m14) && f_cmpA211(&x->m15, &y->m15) && x->m16 == y->m16; };
DCstruct* f_touchdcstA212() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(union  A212), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A212, m0), 1, f_touchdcstA208());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A212, m1), 1, f_touchdcstA209());
		dcStructField(st, 'l', offsetof(union  A212, m2), 1);
		dcStructField(st, 'i', offsetof(union  A212, m3), 1);
		dcStructField(st, 'c', offsetof(union  A212, m4), 1);
		dcStructField(st, 'p', offsetof(union  A212, m5), 1);
		dcStructField(st, 's', offsetof(union  A212, m6), 1);
		dcStructField(st, 'i', offsetof(union  A212, m7), 1);
		dcStructField(st, 'c', offsetof(union  A212, m8), 1);
		dcStructField(st, 'j', offsetof(union  A212, m9), 1);
		dcStructField(st, 'j', offsetof(union  A212, m10), 1);
		dcStructField(st, 'f', offsetof(union  A212, m11), 1);
		dcStructField(st, 'c', offsetof(union  A212, m12), 1);
		dcStructField(st, 'j', offsetof(union  A212, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A212, m14), 1, f_touchdcstA210());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A212, m15), 1, f_touchdcstA211());
		dcStructField(st, 'f', offsetof(union  A212, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idspdiiif} */
struct A213 { i m0; d m1; s m2; p m3; d m4; i m5; i m6; i m7; f m8; };
void f_cpA213(struct A213 *x, const struct A213 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA213(const struct A213 *x, const struct A213 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA213() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A213), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A213, m0), 1);
		dcStructField(st, 'd', offsetof(struct A213, m1), 1);
		dcStructField(st, 's', offsetof(struct A213, m2), 1);
		dcStructField(st, 'p', offsetof(struct A213, m3), 1);
		dcStructField(st, 'd', offsetof(struct A213, m4), 1);
		dcStructField(st, 'i', offsetof(struct A213, m5), 1);
		dcStructField(st, 'i', offsetof(struct A213, m6), 1);
		dcStructField(st, 'i', offsetof(struct A213, m7), 1);
		dcStructField(st, 'f', offsetof(struct A213, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jli> */
union  A214 { j m0; l m1; i m2; };
void f_cpA214(union  A214 *x, const union  A214 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA214(const union  A214 *x, const union  A214 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA214() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A214), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A214, m0), 1);
		dcStructField(st, 'l', offsetof(union  A214, m1), 1);
		dcStructField(st, 'i', offsetof(union  A214, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<jli>dl> */
union  A215 { union  A214 m0; d m1; l m2; };
void f_cpA215(union  A215 *x, const union  A215 *y) { f_cpA214(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA215(const union  A215 *x, const union  A215 *y) { return f_cmpA214(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA215() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A215), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A215, m0), 1, f_touchdcstA214());
		dcStructField(st, 'd', offsetof(union  A215, m1), 1);
		dcStructField(st, 'l', offsetof(union  A215, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfp> */
union  A216 { p m0; f m1; p m2; };
void f_cpA216(union  A216 *x, const union  A216 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA216(const union  A216 *x, const union  A216 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA216() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A216), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A216, m0), 1);
		dcStructField(st, 'f', offsetof(union  A216, m1), 1);
		dcStructField(st, 'p', offsetof(union  A216, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <f<pfp>dfs> */
union  A217 { f m0; union  A216 m1; d m2; f m3; s m4; };
void f_cpA217(union  A217 *x, const union  A217 *y) { x->m0 = y->m0; f_cpA216(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA217(const union  A217 *x, const union  A217 *y) { return x->m0 == y->m0 && f_cmpA216(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA217() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A217), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A217, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A217, m1), 1, f_touchdcstA216());
		dcStructField(st, 'd', offsetof(union  A217, m2), 1);
		dcStructField(st, 'f', offsetof(union  A217, m3), 1);
		dcStructField(st, 's', offsetof(union  A217, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cs} */
struct A218 { c m0; s m1; };
void f_cpA218(struct A218 *x, const struct A218 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA218(const struct A218 *x, const struct A218 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA218() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A218), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A218, m0), 1);
		dcStructField(st, 's', offsetof(struct A218, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccsp} */
struct A219 { c m0; c m1; s m2; p m3; };
void f_cpA219(struct A219 *x, const struct A219 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA219(const struct A219 *x, const struct A219 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA219() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A219), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A219, m0), 1);
		dcStructField(st, 'c', offsetof(struct A219, m1), 1);
		dcStructField(st, 's', offsetof(struct A219, m2), 1);
		dcStructField(st, 'p', offsetof(struct A219, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <isdl> */
union  A220 { i m0; s m1; d m2; l m3; };
void f_cpA220(union  A220 *x, const union  A220 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA220(const union  A220 *x, const union  A220 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA220() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A220), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A220, m0), 1);
		dcStructField(st, 's', offsetof(union  A220, m1), 1);
		dcStructField(st, 'd', offsetof(union  A220, m2), 1);
		dcStructField(st, 'l', offsetof(union  A220, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifjislislilljjjcip} */
struct A221 { i m0; f m1; j m2; i m3; s m4; l m5; i m6; s m7; l m8; i m9; l m10; l m11; j m12; j m13; j m14; c m15; i m16; p m17; };
void f_cpA221(struct A221 *x, const struct A221 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA221(const struct A221 *x, const struct A221 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA221() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A221), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A221, m0), 1);
		dcStructField(st, 'f', offsetof(struct A221, m1), 1);
		dcStructField(st, 'j', offsetof(struct A221, m2), 1);
		dcStructField(st, 'i', offsetof(struct A221, m3), 1);
		dcStructField(st, 's', offsetof(struct A221, m4), 1);
		dcStructField(st, 'l', offsetof(struct A221, m5), 1);
		dcStructField(st, 'i', offsetof(struct A221, m6), 1);
		dcStructField(st, 's', offsetof(struct A221, m7), 1);
		dcStructField(st, 'l', offsetof(struct A221, m8), 1);
		dcStructField(st, 'i', offsetof(struct A221, m9), 1);
		dcStructField(st, 'l', offsetof(struct A221, m10), 1);
		dcStructField(st, 'l', offsetof(struct A221, m11), 1);
		dcStructField(st, 'j', offsetof(struct A221, m12), 1);
		dcStructField(st, 'j', offsetof(struct A221, m13), 1);
		dcStructField(st, 'j', offsetof(struct A221, m14), 1);
		dcStructField(st, 'c', offsetof(struct A221, m15), 1);
		dcStructField(st, 'i', offsetof(struct A221, m16), 1);
		dcStructField(st, 'p', offsetof(struct A221, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lfc> */
union  A222 { l m0; f m1; c m2; };
void f_cpA222(union  A222 *x, const union  A222 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA222(const union  A222 *x, const union  A222 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA222() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A222), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A222, m0), 1);
		dcStructField(st, 'f', offsetof(union  A222, m1), 1);
		dcStructField(st, 'c', offsetof(union  A222, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cciil} */
struct A223 { c m0; c m1; i m2; i m3; l m4; };
void f_cpA223(struct A223 *x, const struct A223 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA223(const struct A223 *x, const struct A223 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA223() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A223), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A223, m0), 1);
		dcStructField(st, 'c', offsetof(struct A223, m1), 1);
		dcStructField(st, 'i', offsetof(struct A223, m2), 1);
		dcStructField(st, 'i', offsetof(struct A223, m3), 1);
		dcStructField(st, 'l', offsetof(struct A223, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d{cciil}l> */
union  A224 { d m0; struct A223 m1; l m2; };
void f_cpA224(union  A224 *x, const union  A224 *y) { x->m0 = y->m0; f_cpA223(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA224(const union  A224 *x, const union  A224 *y) { return x->m0 == y->m0 && f_cmpA223(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA224() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A224), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A224, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A224, m1), 1, f_touchdcstA223());
		dcStructField(st, 'l', offsetof(union  A224, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fl> */
union  A225 { f m0; l m1; };
void f_cpA225(union  A225 *x, const union  A225 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA225(const union  A225 *x, const union  A225 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA225() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A225), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A225, m0), 1);
		dcStructField(st, 'l', offsetof(union  A225, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slcjjfjcjpf} */
struct A226 { s m0; l m1; c m2; j m3; j m4; f m5; j m6; c m7; j m8; p m9; f m10; };
void f_cpA226(struct A226 *x, const struct A226 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA226(const struct A226 *x, const struct A226 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA226() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A226), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A226, m0), 1);
		dcStructField(st, 'l', offsetof(struct A226, m1), 1);
		dcStructField(st, 'c', offsetof(struct A226, m2), 1);
		dcStructField(st, 'j', offsetof(struct A226, m3), 1);
		dcStructField(st, 'j', offsetof(struct A226, m4), 1);
		dcStructField(st, 'f', offsetof(struct A226, m5), 1);
		dcStructField(st, 'j', offsetof(struct A226, m6), 1);
		dcStructField(st, 'c', offsetof(struct A226, m7), 1);
		dcStructField(st, 'j', offsetof(struct A226, m8), 1);
		dcStructField(st, 'p', offsetof(struct A226, m9), 1);
		dcStructField(st, 'f', offsetof(struct A226, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jsipspfjpdlcssc> */
union  A227 { j m0; s m1; i m2; p m3; s m4; p m5; f m6; j m7; p m8; d m9; l m10; c m11; s m12; s m13; c m14; };
void f_cpA227(union  A227 *x, const union  A227 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA227(const union  A227 *x, const union  A227 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA227() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A227), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A227, m0), 1);
		dcStructField(st, 's', offsetof(union  A227, m1), 1);
		dcStructField(st, 'i', offsetof(union  A227, m2), 1);
		dcStructField(st, 'p', offsetof(union  A227, m3), 1);
		dcStructField(st, 's', offsetof(union  A227, m4), 1);
		dcStructField(st, 'p', offsetof(union  A227, m5), 1);
		dcStructField(st, 'f', offsetof(union  A227, m6), 1);
		dcStructField(st, 'j', offsetof(union  A227, m7), 1);
		dcStructField(st, 'p', offsetof(union  A227, m8), 1);
		dcStructField(st, 'd', offsetof(union  A227, m9), 1);
		dcStructField(st, 'l', offsetof(union  A227, m10), 1);
		dcStructField(st, 'c', offsetof(union  A227, m11), 1);
		dcStructField(st, 's', offsetof(union  A227, m12), 1);
		dcStructField(st, 's', offsetof(union  A227, m13), 1);
		dcStructField(st, 'c', offsetof(union  A227, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plfdilllsipldsdiljljsidpdjidfj} */
struct A228 { p m0; l m1; f m2; d m3; i m4; l m5; l m6; l m7; s m8; i m9; p m10; l m11; d m12; s m13; d m14; i m15; l m16; j m17; l m18; j m19; s m20; i m21; d m22; p m23; d m24; j m25; i m26; d m27; f m28; j m29; };
void f_cpA228(struct A228 *x, const struct A228 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA228(const struct A228 *x, const struct A228 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA228() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A228), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A228, m0), 1);
		dcStructField(st, 'l', offsetof(struct A228, m1), 1);
		dcStructField(st, 'f', offsetof(struct A228, m2), 1);
		dcStructField(st, 'd', offsetof(struct A228, m3), 1);
		dcStructField(st, 'i', offsetof(struct A228, m4), 1);
		dcStructField(st, 'l', offsetof(struct A228, m5), 1);
		dcStructField(st, 'l', offsetof(struct A228, m6), 1);
		dcStructField(st, 'l', offsetof(struct A228, m7), 1);
		dcStructField(st, 's', offsetof(struct A228, m8), 1);
		dcStructField(st, 'i', offsetof(struct A228, m9), 1);
		dcStructField(st, 'p', offsetof(struct A228, m10), 1);
		dcStructField(st, 'l', offsetof(struct A228, m11), 1);
		dcStructField(st, 'd', offsetof(struct A228, m12), 1);
		dcStructField(st, 's', offsetof(struct A228, m13), 1);
		dcStructField(st, 'd', offsetof(struct A228, m14), 1);
		dcStructField(st, 'i', offsetof(struct A228, m15), 1);
		dcStructField(st, 'l', offsetof(struct A228, m16), 1);
		dcStructField(st, 'j', offsetof(struct A228, m17), 1);
		dcStructField(st, 'l', offsetof(struct A228, m18), 1);
		dcStructField(st, 'j', offsetof(struct A228, m19), 1);
		dcStructField(st, 's', offsetof(struct A228, m20), 1);
		dcStructField(st, 'i', offsetof(struct A228, m21), 1);
		dcStructField(st, 'd', offsetof(struct A228, m22), 1);
		dcStructField(st, 'p', offsetof(struct A228, m23), 1);
		dcStructField(st, 'd', offsetof(struct A228, m24), 1);
		dcStructField(st, 'j', offsetof(struct A228, m25), 1);
		dcStructField(st, 'i', offsetof(struct A228, m26), 1);
		dcStructField(st, 'd', offsetof(struct A228, m27), 1);
		dcStructField(st, 'f', offsetof(struct A228, m28), 1);
		dcStructField(st, 'j', offsetof(struct A228, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <llips<fl>c{slcjjfjcjpf}<jsipspfjpdlcssc>fdplp{plfdilllsipldsdiljljsidpdjidfj}jdjdjll> */
union  A229 { l m0; l m1; i m2; p m3; s m4; union  A225 m5; c m6; struct A226 m7; union  A227 m8; f m9; d m10; p m11; l m12; p m13; struct A228 m14; j m15; d m16; j m17; d m18; j m19; l m20; l m21; };
void f_cpA229(union  A229 *x, const union  A229 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA225(&x->m5, &y->m5); x->m6 = y->m6; f_cpA226(&x->m7, &y->m7); f_cpA227(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA228(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA229(const union  A229 *x, const union  A229 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA225(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA226(&x->m7, &y->m7) && f_cmpA227(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA228(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA229() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(union  A229), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A229, m0), 1);
		dcStructField(st, 'l', offsetof(union  A229, m1), 1);
		dcStructField(st, 'i', offsetof(union  A229, m2), 1);
		dcStructField(st, 'p', offsetof(union  A229, m3), 1);
		dcStructField(st, 's', offsetof(union  A229, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A229, m5), 1, f_touchdcstA225());
		dcStructField(st, 'c', offsetof(union  A229, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A229, m7), 1, f_touchdcstA226());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A229, m8), 1, f_touchdcstA227());
		dcStructField(st, 'f', offsetof(union  A229, m9), 1);
		dcStructField(st, 'd', offsetof(union  A229, m10), 1);
		dcStructField(st, 'p', offsetof(union  A229, m11), 1);
		dcStructField(st, 'l', offsetof(union  A229, m12), 1);
		dcStructField(st, 'p', offsetof(union  A229, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A229, m14), 1, f_touchdcstA228());
		dcStructField(st, 'j', offsetof(union  A229, m15), 1);
		dcStructField(st, 'd', offsetof(union  A229, m16), 1);
		dcStructField(st, 'j', offsetof(union  A229, m17), 1);
		dcStructField(st, 'd', offsetof(union  A229, m18), 1);
		dcStructField(st, 'j', offsetof(union  A229, m19), 1);
		dcStructField(st, 'l', offsetof(union  A229, m20), 1);
		dcStructField(st, 'l', offsetof(union  A229, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ippjfli<d{cciil}l>ldfpi<llips<fl>c{slcjjfjcjpf}<jsipspfjpdlcssc>fdplp{plfdilllsipldsdiljljsidpdjidfj}jdjdjll>d} */
struct A230 { i m0; p m1; p m2; j m3; f m4; l m5; i m6; union  A224 m7; l m8; d m9; f m10; p m11; i m12; union  A229 m13; d m14; };
void f_cpA230(struct A230 *x, const struct A230 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA224(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA229(&x->m13, &y->m13); x->m14 = y->m14; };
int f_cmpA230(const struct A230 *x, const struct A230 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA224(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA229(&x->m13, &y->m13) && x->m14 == y->m14; };
DCstruct* f_touchdcstA230() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A230), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A230, m0), 1);
		dcStructField(st, 'p', offsetof(struct A230, m1), 1);
		dcStructField(st, 'p', offsetof(struct A230, m2), 1);
		dcStructField(st, 'j', offsetof(struct A230, m3), 1);
		dcStructField(st, 'f', offsetof(struct A230, m4), 1);
		dcStructField(st, 'l', offsetof(struct A230, m5), 1);
		dcStructField(st, 'i', offsetof(struct A230, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A230, m7), 1, f_touchdcstA224());
		dcStructField(st, 'l', offsetof(struct A230, m8), 1);
		dcStructField(st, 'd', offsetof(struct A230, m9), 1);
		dcStructField(st, 'f', offsetof(struct A230, m10), 1);
		dcStructField(st, 'p', offsetof(struct A230, m11), 1);
		dcStructField(st, 'i', offsetof(struct A230, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A230, m13), 1, f_touchdcstA229());
		dcStructField(st, 'd', offsetof(struct A230, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlfsiipslf> */
union  A231 { d m0; l m1; f m2; s m3; i m4; i m5; p m6; s m7; l m8; f m9; };
void f_cpA231(union  A231 *x, const union  A231 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA231(const union  A231 *x, const union  A231 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA231() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A231), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A231, m0), 1);
		dcStructField(st, 'l', offsetof(union  A231, m1), 1);
		dcStructField(st, 'f', offsetof(union  A231, m2), 1);
		dcStructField(st, 's', offsetof(union  A231, m3), 1);
		dcStructField(st, 'i', offsetof(union  A231, m4), 1);
		dcStructField(st, 'i', offsetof(union  A231, m5), 1);
		dcStructField(st, 'p', offsetof(union  A231, m6), 1);
		dcStructField(st, 's', offsetof(union  A231, m7), 1);
		dcStructField(st, 'l', offsetof(union  A231, m8), 1);
		dcStructField(st, 'f', offsetof(union  A231, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cisd} */
struct A232 { c m0; i m1; s m2; d m3; };
void f_cpA232(struct A232 *x, const struct A232 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA232(const struct A232 *x, const struct A232 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA232() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A232), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A232, m0), 1);
		dcStructField(st, 'i', offsetof(struct A232, m1), 1);
		dcStructField(st, 's', offsetof(struct A232, m2), 1);
		dcStructField(st, 'd', offsetof(struct A232, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lddc> */
union  A233 { l m0; d m1; d m2; c m3; };
void f_cpA233(union  A233 *x, const union  A233 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA233(const union  A233 *x, const union  A233 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA233() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A233), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A233, m0), 1);
		dcStructField(st, 'd', offsetof(union  A233, m1), 1);
		dcStructField(st, 'd', offsetof(union  A233, m2), 1);
		dcStructField(st, 'c', offsetof(union  A233, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <scljsd{cisd}<lddc>sc> */
union  A234 { s m0; c m1; l m2; j m3; s m4; d m5; struct A232 m6; union  A233 m7; s m8; c m9; };
void f_cpA234(union  A234 *x, const union  A234 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA232(&x->m6, &y->m6); f_cpA233(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA234(const union  A234 *x, const union  A234 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA232(&x->m6, &y->m6) && f_cmpA233(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA234() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A234), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A234, m0), 1);
		dcStructField(st, 'c', offsetof(union  A234, m1), 1);
		dcStructField(st, 'l', offsetof(union  A234, m2), 1);
		dcStructField(st, 'j', offsetof(union  A234, m3), 1);
		dcStructField(st, 's', offsetof(union  A234, m4), 1);
		dcStructField(st, 'd', offsetof(union  A234, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A234, m6), 1, f_touchdcstA232());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A234, m7), 1, f_touchdcstA233());
		dcStructField(st, 's', offsetof(union  A234, m8), 1);
		dcStructField(st, 'c', offsetof(union  A234, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipsfccs<f><scljsd{cisd}<lddc>sc>ifi} */
struct A235 { i m0; p m1; s m2; f m3; c m4; c m5; s m6; union  A189 m7; union  A234 m8; i m9; f m10; i m11; };
void f_cpA235(struct A235 *x, const struct A235 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA189(&x->m7, &y->m7); f_cpA234(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA235(const struct A235 *x, const struct A235 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA189(&x->m7, &y->m7) && f_cmpA234(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA235() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A235), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A235, m0), 1);
		dcStructField(st, 'p', offsetof(struct A235, m1), 1);
		dcStructField(st, 's', offsetof(struct A235, m2), 1);
		dcStructField(st, 'f', offsetof(struct A235, m3), 1);
		dcStructField(st, 'c', offsetof(struct A235, m4), 1);
		dcStructField(st, 'c', offsetof(struct A235, m5), 1);
		dcStructField(st, 's', offsetof(struct A235, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A235, m7), 1, f_touchdcstA189());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A235, m8), 1, f_touchdcstA234());
		dcStructField(st, 'i', offsetof(struct A235, m9), 1);
		dcStructField(st, 'f', offsetof(struct A235, m10), 1);
		dcStructField(st, 'i', offsetof(struct A235, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scp} */
struct A236 { s m0; c m1; p m2; };
void f_cpA236(struct A236 *x, const struct A236 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA236(const struct A236 *x, const struct A236 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA236() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A236), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A236, m0), 1);
		dcStructField(st, 'c', offsetof(struct A236, m1), 1);
		dcStructField(st, 'p', offsetof(struct A236, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <psj> */
union  A237 { p m0; s m1; j m2; };
void f_cpA237(union  A237 *x, const union  A237 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA237(const union  A237 *x, const union  A237 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA237() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A237), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A237, m0), 1);
		dcStructField(st, 's', offsetof(union  A237, m1), 1);
		dcStructField(st, 'j', offsetof(union  A237, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdcliplpfjcpfid} */
struct A238 { f m0; d m1; c m2; l m3; i m4; p m5; l m6; p m7; f m8; j m9; c m10; p m11; f m12; i m13; d m14; };
void f_cpA238(struct A238 *x, const struct A238 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA238(const struct A238 *x, const struct A238 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA238() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A238), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A238, m0), 1);
		dcStructField(st, 'd', offsetof(struct A238, m1), 1);
		dcStructField(st, 'c', offsetof(struct A238, m2), 1);
		dcStructField(st, 'l', offsetof(struct A238, m3), 1);
		dcStructField(st, 'i', offsetof(struct A238, m4), 1);
		dcStructField(st, 'p', offsetof(struct A238, m5), 1);
		dcStructField(st, 'l', offsetof(struct A238, m6), 1);
		dcStructField(st, 'p', offsetof(struct A238, m7), 1);
		dcStructField(st, 'f', offsetof(struct A238, m8), 1);
		dcStructField(st, 'j', offsetof(struct A238, m9), 1);
		dcStructField(st, 'c', offsetof(struct A238, m10), 1);
		dcStructField(st, 'p', offsetof(struct A238, m11), 1);
		dcStructField(st, 'f', offsetof(struct A238, m12), 1);
		dcStructField(st, 'i', offsetof(struct A238, m13), 1);
		dcStructField(st, 'd', offsetof(struct A238, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fdcliplpfjcpfid}fjpj} */
struct A239 { struct A238 m0; f m1; j m2; p m3; j m4; };
void f_cpA239(struct A239 *x, const struct A239 *y) { f_cpA238(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA239(const struct A239 *x, const struct A239 *y) { return f_cmpA238(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA239() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A239), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A239, m0), 1, f_touchdcstA238());
		dcStructField(st, 'f', offsetof(struct A239, m1), 1);
		dcStructField(st, 'j', offsetof(struct A239, m2), 1);
		dcStructField(st, 'p', offsetof(struct A239, m3), 1);
		dcStructField(st, 'j', offsetof(struct A239, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{{fdcliplpfjcpfid}fjpj}iip} */
struct A240 { p m0; struct A239 m1; i m2; i m3; p m4; };
void f_cpA240(struct A240 *x, const struct A240 *y) { x->m0 = y->m0; f_cpA239(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA240(const struct A240 *x, const struct A240 *y) { return x->m0 == y->m0 && f_cmpA239(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA240() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A240), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A240, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A240, m1), 1, f_touchdcstA239());
		dcStructField(st, 'i', offsetof(struct A240, m2), 1);
		dcStructField(st, 'i', offsetof(struct A240, m3), 1);
		dcStructField(st, 'p', offsetof(struct A240, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lppjsjsdflccjcpipjfpljjjddc> */
union  A241 { l m0; p m1; p m2; j m3; s m4; j m5; s m6; d m7; f m8; l m9; c m10; c m11; j m12; c m13; p m14; i m15; p m16; j m17; f m18; p m19; l m20; j m21; j m22; j m23; d m24; d m25; c m26; };
void f_cpA241(union  A241 *x, const union  A241 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA241(const union  A241 *x, const union  A241 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA241() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(union  A241), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A241, m0), 1);
		dcStructField(st, 'p', offsetof(union  A241, m1), 1);
		dcStructField(st, 'p', offsetof(union  A241, m2), 1);
		dcStructField(st, 'j', offsetof(union  A241, m3), 1);
		dcStructField(st, 's', offsetof(union  A241, m4), 1);
		dcStructField(st, 'j', offsetof(union  A241, m5), 1);
		dcStructField(st, 's', offsetof(union  A241, m6), 1);
		dcStructField(st, 'd', offsetof(union  A241, m7), 1);
		dcStructField(st, 'f', offsetof(union  A241, m8), 1);
		dcStructField(st, 'l', offsetof(union  A241, m9), 1);
		dcStructField(st, 'c', offsetof(union  A241, m10), 1);
		dcStructField(st, 'c', offsetof(union  A241, m11), 1);
		dcStructField(st, 'j', offsetof(union  A241, m12), 1);
		dcStructField(st, 'c', offsetof(union  A241, m13), 1);
		dcStructField(st, 'p', offsetof(union  A241, m14), 1);
		dcStructField(st, 'i', offsetof(union  A241, m15), 1);
		dcStructField(st, 'p', offsetof(union  A241, m16), 1);
		dcStructField(st, 'j', offsetof(union  A241, m17), 1);
		dcStructField(st, 'f', offsetof(union  A241, m18), 1);
		dcStructField(st, 'p', offsetof(union  A241, m19), 1);
		dcStructField(st, 'l', offsetof(union  A241, m20), 1);
		dcStructField(st, 'j', offsetof(union  A241, m21), 1);
		dcStructField(st, 'j', offsetof(union  A241, m22), 1);
		dcStructField(st, 'j', offsetof(union  A241, m23), 1);
		dcStructField(st, 'd', offsetof(union  A241, m24), 1);
		dcStructField(st, 'd', offsetof(union  A241, m25), 1);
		dcStructField(st, 'c', offsetof(union  A241, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<lppjsjsdflccjcpipjfpljjjddc>lsip} */
struct A242 { union  A241 m0; l m1; s m2; i m3; p m4; };
void f_cpA242(struct A242 *x, const struct A242 *y) { f_cpA241(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA242(const struct A242 *x, const struct A242 *y) { return f_cmpA241(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA242() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A242), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A242, m0), 1, f_touchdcstA241());
		dcStructField(st, 'l', offsetof(struct A242, m1), 1);
		dcStructField(st, 's', offsetof(struct A242, m2), 1);
		dcStructField(st, 'i', offsetof(struct A242, m3), 1);
		dcStructField(st, 'p', offsetof(struct A242, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ssp> */
union  A243 { s m0; s m1; p m2; };
void f_cpA243(union  A243 *x, const union  A243 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA243(const union  A243 *x, const union  A243 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA243() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A243), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A243, m0), 1);
		dcStructField(st, 's', offsetof(union  A243, m1), 1);
		dcStructField(st, 'p', offsetof(union  A243, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpispdspdcfflffpjpdlsccl} */
struct A244 { j m0; p m1; i m2; s m3; p m4; d m5; s m6; p m7; d m8; c m9; f m10; f m11; l m12; f m13; f m14; p m15; j m16; p m17; d m18; l m19; s m20; c m21; c m22; l m23; };
void f_cpA244(struct A244 *x, const struct A244 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA244(const struct A244 *x, const struct A244 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA244() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A244), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A244, m0), 1);
		dcStructField(st, 'p', offsetof(struct A244, m1), 1);
		dcStructField(st, 'i', offsetof(struct A244, m2), 1);
		dcStructField(st, 's', offsetof(struct A244, m3), 1);
		dcStructField(st, 'p', offsetof(struct A244, m4), 1);
		dcStructField(st, 'd', offsetof(struct A244, m5), 1);
		dcStructField(st, 's', offsetof(struct A244, m6), 1);
		dcStructField(st, 'p', offsetof(struct A244, m7), 1);
		dcStructField(st, 'd', offsetof(struct A244, m8), 1);
		dcStructField(st, 'c', offsetof(struct A244, m9), 1);
		dcStructField(st, 'f', offsetof(struct A244, m10), 1);
		dcStructField(st, 'f', offsetof(struct A244, m11), 1);
		dcStructField(st, 'l', offsetof(struct A244, m12), 1);
		dcStructField(st, 'f', offsetof(struct A244, m13), 1);
		dcStructField(st, 'f', offsetof(struct A244, m14), 1);
		dcStructField(st, 'p', offsetof(struct A244, m15), 1);
		dcStructField(st, 'j', offsetof(struct A244, m16), 1);
		dcStructField(st, 'p', offsetof(struct A244, m17), 1);
		dcStructField(st, 'd', offsetof(struct A244, m18), 1);
		dcStructField(st, 'l', offsetof(struct A244, m19), 1);
		dcStructField(st, 's', offsetof(struct A244, m20), 1);
		dcStructField(st, 'c', offsetof(struct A244, m21), 1);
		dcStructField(st, 'c', offsetof(struct A244, m22), 1);
		dcStructField(st, 'l', offsetof(struct A244, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csls} */
struct A245 { c m0; s m1; l m2; s m3; };
void f_cpA245(struct A245 *x, const struct A245 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA245(const struct A245 *x, const struct A245 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA245() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A245), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A245, m0), 1);
		dcStructField(st, 's', offsetof(struct A245, m1), 1);
		dcStructField(st, 'l', offsetof(struct A245, m2), 1);
		dcStructField(st, 's', offsetof(struct A245, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljj> */
union  A246 { l m0; j m1; j m2; };
void f_cpA246(union  A246 *x, const union  A246 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA246(const union  A246 *x, const union  A246 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA246() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A246), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A246, m0), 1);
		dcStructField(st, 'j', offsetof(union  A246, m1), 1);
		dcStructField(st, 'j', offsetof(union  A246, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pplpfdpdpl> */
union  A247 { p m0; p m1; l m2; p m3; f m4; d m5; p m6; d m7; p m8; l m9; };
void f_cpA247(union  A247 *x, const union  A247 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA247(const union  A247 *x, const union  A247 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA247() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A247), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A247, m0), 1);
		dcStructField(st, 'p', offsetof(union  A247, m1), 1);
		dcStructField(st, 'l', offsetof(union  A247, m2), 1);
		dcStructField(st, 'p', offsetof(union  A247, m3), 1);
		dcStructField(st, 'f', offsetof(union  A247, m4), 1);
		dcStructField(st, 'd', offsetof(union  A247, m5), 1);
		dcStructField(st, 'p', offsetof(union  A247, m6), 1);
		dcStructField(st, 'd', offsetof(union  A247, m7), 1);
		dcStructField(st, 'p', offsetof(union  A247, m8), 1);
		dcStructField(st, 'l', offsetof(union  A247, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pjiil> */
union  A248 { p m0; j m1; i m2; i m3; l m4; };
void f_cpA248(union  A248 *x, const union  A248 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA248(const union  A248 *x, const union  A248 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA248() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A248), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A248, m0), 1);
		dcStructField(st, 'j', offsetof(union  A248, m1), 1);
		dcStructField(st, 'i', offsetof(union  A248, m2), 1);
		dcStructField(st, 'i', offsetof(union  A248, m3), 1);
		dcStructField(st, 'l', offsetof(union  A248, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <i{jpispdspdcfflffpjpdlsccl}fdf{csls}<ljj>cllslcspsi<pplpfdpdpl>d<pjiil>flscpj> */
union  A249 { i m0; struct A244 m1; f m2; d m3; f m4; struct A245 m5; union  A246 m6; c m7; l m8; l m9; s m10; l m11; c m12; s m13; p m14; s m15; i m16; union  A247 m17; d m18; union  A248 m19; f m20; l m21; s m22; c m23; p m24; j m25; };
void f_cpA249(union  A249 *x, const union  A249 *y) { x->m0 = y->m0; f_cpA244(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA245(&x->m5, &y->m5); f_cpA246(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA247(&x->m17, &y->m17); x->m18 = y->m18; f_cpA248(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA249(const union  A249 *x, const union  A249 *y) { return x->m0 == y->m0 && f_cmpA244(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA245(&x->m5, &y->m5) && f_cmpA246(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA247(&x->m17, &y->m17) && x->m18 == y->m18 && f_cmpA248(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA249() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(union  A249), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A249, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A249, m1), 1, f_touchdcstA244());
		dcStructField(st, 'f', offsetof(union  A249, m2), 1);
		dcStructField(st, 'd', offsetof(union  A249, m3), 1);
		dcStructField(st, 'f', offsetof(union  A249, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A249, m5), 1, f_touchdcstA245());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A249, m6), 1, f_touchdcstA246());
		dcStructField(st, 'c', offsetof(union  A249, m7), 1);
		dcStructField(st, 'l', offsetof(union  A249, m8), 1);
		dcStructField(st, 'l', offsetof(union  A249, m9), 1);
		dcStructField(st, 's', offsetof(union  A249, m10), 1);
		dcStructField(st, 'l', offsetof(union  A249, m11), 1);
		dcStructField(st, 'c', offsetof(union  A249, m12), 1);
		dcStructField(st, 's', offsetof(union  A249, m13), 1);
		dcStructField(st, 'p', offsetof(union  A249, m14), 1);
		dcStructField(st, 's', offsetof(union  A249, m15), 1);
		dcStructField(st, 'i', offsetof(union  A249, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A249, m17), 1, f_touchdcstA247());
		dcStructField(st, 'd', offsetof(union  A249, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A249, m19), 1, f_touchdcstA248());
		dcStructField(st, 'f', offsetof(union  A249, m20), 1);
		dcStructField(st, 'l', offsetof(union  A249, m21), 1);
		dcStructField(st, 's', offsetof(union  A249, m22), 1);
		dcStructField(st, 'c', offsetof(union  A249, m23), 1);
		dcStructField(st, 'p', offsetof(union  A249, m24), 1);
		dcStructField(st, 'j', offsetof(union  A249, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p} */
struct A250 { p m0; };
void f_cpA250(struct A250 *x, const struct A250 *y) { x->m0 = y->m0; };
int f_cmpA250(const struct A250 *x, const struct A250 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA250() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A250), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A250, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <siif> */
union  A251 { s m0; i m1; i m2; f m3; };
void f_cpA251(union  A251 *x, const union  A251 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA251(const union  A251 *x, const union  A251 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA251() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A251), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A251, m0), 1);
		dcStructField(st, 'i', offsetof(union  A251, m1), 1);
		dcStructField(st, 'i', offsetof(union  A251, m2), 1);
		dcStructField(st, 'f', offsetof(union  A251, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<j>cpp> */
union  A252 { union  A47 m0; c m1; p m2; p m3; };
void f_cpA252(union  A252 *x, const union  A252 *y) { f_cpA47(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA252(const union  A252 *x, const union  A252 *y) { return f_cmpA47(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA252() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A252), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A252, m0), 1, f_touchdcstA47());
		dcStructField(st, 'c', offsetof(union  A252, m1), 1);
		dcStructField(st, 'p', offsetof(union  A252, m2), 1);
		dcStructField(st, 'p', offsetof(union  A252, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clijd} */
struct A253 { c m0; l m1; i m2; j m3; d m4; };
void f_cpA253(struct A253 *x, const struct A253 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA253(const struct A253 *x, const struct A253 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA253() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A253), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A253, m0), 1);
		dcStructField(st, 'l', offsetof(struct A253, m1), 1);
		dcStructField(st, 'i', offsetof(struct A253, m2), 1);
		dcStructField(st, 'j', offsetof(struct A253, m3), 1);
		dcStructField(st, 'd', offsetof(struct A253, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cjicclffcdjc> */
union  A254 { c m0; j m1; i m2; c m3; c m4; l m5; f m6; f m7; c m8; d m9; j m10; c m11; };
void f_cpA254(union  A254 *x, const union  A254 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA254(const union  A254 *x, const union  A254 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA254() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A254), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A254, m0), 1);
		dcStructField(st, 'j', offsetof(union  A254, m1), 1);
		dcStructField(st, 'i', offsetof(union  A254, m2), 1);
		dcStructField(st, 'c', offsetof(union  A254, m3), 1);
		dcStructField(st, 'c', offsetof(union  A254, m4), 1);
		dcStructField(st, 'l', offsetof(union  A254, m5), 1);
		dcStructField(st, 'f', offsetof(union  A254, m6), 1);
		dcStructField(st, 'f', offsetof(union  A254, m7), 1);
		dcStructField(st, 'c', offsetof(union  A254, m8), 1);
		dcStructField(st, 'd', offsetof(union  A254, m9), 1);
		dcStructField(st, 'j', offsetof(union  A254, m10), 1);
		dcStructField(st, 'c', offsetof(union  A254, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{clijd}c<cjicclffcdjc>pplijfij} */
struct A255 { struct A253 m0; c m1; union  A254 m2; p m3; p m4; l m5; i m6; j m7; f m8; i m9; j m10; };
void f_cpA255(struct A255 *x, const struct A255 *y) { f_cpA253(&x->m0, &y->m0); x->m1 = y->m1; f_cpA254(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA255(const struct A255 *x, const struct A255 *y) { return f_cmpA253(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA254(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA255() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A255), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A255, m0), 1, f_touchdcstA253());
		dcStructField(st, 'c', offsetof(struct A255, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A255, m2), 1, f_touchdcstA254());
		dcStructField(st, 'p', offsetof(struct A255, m3), 1);
		dcStructField(st, 'p', offsetof(struct A255, m4), 1);
		dcStructField(st, 'l', offsetof(struct A255, m5), 1);
		dcStructField(st, 'i', offsetof(struct A255, m6), 1);
		dcStructField(st, 'j', offsetof(struct A255, m7), 1);
		dcStructField(st, 'f', offsetof(struct A255, m8), 1);
		dcStructField(st, 'i', offsetof(struct A255, m9), 1);
		dcStructField(st, 'j', offsetof(struct A255, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idl{{clijd}c<cjicclffcdjc>pplijfij}} */
struct A256 { i m0; d m1; l m2; struct A255 m3; };
void f_cpA256(struct A256 *x, const struct A256 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA255(&x->m3, &y->m3); };
int f_cmpA256(const struct A256 *x, const struct A256 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA255(&x->m3, &y->m3); };
DCstruct* f_touchdcstA256() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A256), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A256, m0), 1);
		dcStructField(st, 'd', offsetof(struct A256, m1), 1);
		dcStructField(st, 'l', offsetof(struct A256, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A256, m3), 1, f_touchdcstA255());
		dcCloseStruct(st);
	}
	return st;
};
/* {f} */
struct A257 { f m0; };
void f_cpA257(struct A257 *x, const struct A257 *y) { x->m0 = y->m0; };
int f_cmpA257(const struct A257 *x, const struct A257 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA257() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A257), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A257, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sc{f}cfi> */
union  A258 { s m0; c m1; struct A257 m2; c m3; f m4; i m5; };
void f_cpA258(union  A258 *x, const union  A258 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA257(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA258(const union  A258 *x, const union  A258 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA257(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA258() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A258), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A258, m0), 1);
		dcStructField(st, 'c', offsetof(union  A258, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A258, m2), 1, f_touchdcstA257());
		dcStructField(st, 'c', offsetof(union  A258, m3), 1);
		dcStructField(st, 'f', offsetof(union  A258, m4), 1);
		dcStructField(st, 'i', offsetof(union  A258, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfidildijdcccdl} */
struct A259 { j m0; f m1; i m2; d m3; i m4; l m5; d m6; i m7; j m8; d m9; c m10; c m11; c m12; d m13; l m14; };
void f_cpA259(struct A259 *x, const struct A259 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA259(const struct A259 *x, const struct A259 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA259() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A259), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A259, m0), 1);
		dcStructField(st, 'f', offsetof(struct A259, m1), 1);
		dcStructField(st, 'i', offsetof(struct A259, m2), 1);
		dcStructField(st, 'd', offsetof(struct A259, m3), 1);
		dcStructField(st, 'i', offsetof(struct A259, m4), 1);
		dcStructField(st, 'l', offsetof(struct A259, m5), 1);
		dcStructField(st, 'd', offsetof(struct A259, m6), 1);
		dcStructField(st, 'i', offsetof(struct A259, m7), 1);
		dcStructField(st, 'j', offsetof(struct A259, m8), 1);
		dcStructField(st, 'd', offsetof(struct A259, m9), 1);
		dcStructField(st, 'c', offsetof(struct A259, m10), 1);
		dcStructField(st, 'c', offsetof(struct A259, m11), 1);
		dcStructField(st, 'c', offsetof(struct A259, m12), 1);
		dcStructField(st, 'd', offsetof(struct A259, m13), 1);
		dcStructField(st, 'l', offsetof(struct A259, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <slcddj> */
union  A260 { s m0; l m1; c m2; d m3; d m4; j m5; };
void f_cpA260(union  A260 *x, const union  A260 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA260(const union  A260 *x, const union  A260 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA260() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A260), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A260, m0), 1);
		dcStructField(st, 'l', offsetof(union  A260, m1), 1);
		dcStructField(st, 'c', offsetof(union  A260, m2), 1);
		dcStructField(st, 'd', offsetof(union  A260, m3), 1);
		dcStructField(st, 'd', offsetof(union  A260, m4), 1);
		dcStructField(st, 'j', offsetof(union  A260, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjdljspp} */
struct A261 { p m0; j m1; d m2; l m3; j m4; s m5; p m6; p m7; };
void f_cpA261(struct A261 *x, const struct A261 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA261(const struct A261 *x, const struct A261 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA261() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A261), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A261, m0), 1);
		dcStructField(st, 'j', offsetof(struct A261, m1), 1);
		dcStructField(st, 'd', offsetof(struct A261, m2), 1);
		dcStructField(st, 'l', offsetof(struct A261, m3), 1);
		dcStructField(st, 'j', offsetof(struct A261, m4), 1);
		dcStructField(st, 's', offsetof(struct A261, m5), 1);
		dcStructField(st, 'p', offsetof(struct A261, m6), 1);
		dcStructField(st, 'p', offsetof(struct A261, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcs{jfidildijdcccdl}j<slcddj>isdplilcsj{cs}silpdlscld{pjdljspp}f} */
struct A262 { j m0; c m1; s m2; struct A259 m3; j m4; union  A260 m5; i m6; s m7; d m8; p m9; l m10; i m11; l m12; c m13; s m14; j m15; struct A218 m16; s m17; i m18; l m19; p m20; d m21; l m22; s m23; c m24; l m25; d m26; struct A261 m27; f m28; };
void f_cpA262(struct A262 *x, const struct A262 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA259(&x->m3, &y->m3); x->m4 = y->m4; f_cpA260(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA218(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; f_cpA261(&x->m27, &y->m27); x->m28 = y->m28; };
int f_cmpA262(const struct A262 *x, const struct A262 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA259(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA260(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA218(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && f_cmpA261(&x->m27, &y->m27) && x->m28 == y->m28; };
DCstruct* f_touchdcstA262() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(struct A262), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A262, m0), 1);
		dcStructField(st, 'c', offsetof(struct A262, m1), 1);
		dcStructField(st, 's', offsetof(struct A262, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A262, m3), 1, f_touchdcstA259());
		dcStructField(st, 'j', offsetof(struct A262, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A262, m5), 1, f_touchdcstA260());
		dcStructField(st, 'i', offsetof(struct A262, m6), 1);
		dcStructField(st, 's', offsetof(struct A262, m7), 1);
		dcStructField(st, 'd', offsetof(struct A262, m8), 1);
		dcStructField(st, 'p', offsetof(struct A262, m9), 1);
		dcStructField(st, 'l', offsetof(struct A262, m10), 1);
		dcStructField(st, 'i', offsetof(struct A262, m11), 1);
		dcStructField(st, 'l', offsetof(struct A262, m12), 1);
		dcStructField(st, 'c', offsetof(struct A262, m13), 1);
		dcStructField(st, 's', offsetof(struct A262, m14), 1);
		dcStructField(st, 'j', offsetof(struct A262, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A262, m16), 1, f_touchdcstA218());
		dcStructField(st, 's', offsetof(struct A262, m17), 1);
		dcStructField(st, 'i', offsetof(struct A262, m18), 1);
		dcStructField(st, 'l', offsetof(struct A262, m19), 1);
		dcStructField(st, 'p', offsetof(struct A262, m20), 1);
		dcStructField(st, 'd', offsetof(struct A262, m21), 1);
		dcStructField(st, 'l', offsetof(struct A262, m22), 1);
		dcStructField(st, 's', offsetof(struct A262, m23), 1);
		dcStructField(st, 'c', offsetof(struct A262, m24), 1);
		dcStructField(st, 'l', offsetof(struct A262, m25), 1);
		dcStructField(st, 'd', offsetof(struct A262, m26), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A262, m27), 1, f_touchdcstA261());
		dcStructField(st, 'f', offsetof(struct A262, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sclfils} */
struct A263 { s m0; c m1; l m2; f m3; i m4; l m5; s m6; };
void f_cpA263(struct A263 *x, const struct A263 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA263(const struct A263 *x, const struct A263 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA263() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A263), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A263, m0), 1);
		dcStructField(st, 'c', offsetof(struct A263, m1), 1);
		dcStructField(st, 'l', offsetof(struct A263, m2), 1);
		dcStructField(st, 'f', offsetof(struct A263, m3), 1);
		dcStructField(st, 'i', offsetof(struct A263, m4), 1);
		dcStructField(st, 'l', offsetof(struct A263, m5), 1);
		dcStructField(st, 's', offsetof(struct A263, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lfjpiiddfsdjpslfslc> */
union  A264 { l m0; f m1; j m2; p m3; i m4; i m5; d m6; d m7; f m8; s m9; d m10; j m11; p m12; s m13; l m14; f m15; s m16; l m17; c m18; };
void f_cpA264(union  A264 *x, const union  A264 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA264(const union  A264 *x, const union  A264 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA264() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A264), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A264, m0), 1);
		dcStructField(st, 'f', offsetof(union  A264, m1), 1);
		dcStructField(st, 'j', offsetof(union  A264, m2), 1);
		dcStructField(st, 'p', offsetof(union  A264, m3), 1);
		dcStructField(st, 'i', offsetof(union  A264, m4), 1);
		dcStructField(st, 'i', offsetof(union  A264, m5), 1);
		dcStructField(st, 'd', offsetof(union  A264, m6), 1);
		dcStructField(st, 'd', offsetof(union  A264, m7), 1);
		dcStructField(st, 'f', offsetof(union  A264, m8), 1);
		dcStructField(st, 's', offsetof(union  A264, m9), 1);
		dcStructField(st, 'd', offsetof(union  A264, m10), 1);
		dcStructField(st, 'j', offsetof(union  A264, m11), 1);
		dcStructField(st, 'p', offsetof(union  A264, m12), 1);
		dcStructField(st, 's', offsetof(union  A264, m13), 1);
		dcStructField(st, 'l', offsetof(union  A264, m14), 1);
		dcStructField(st, 'f', offsetof(union  A264, m15), 1);
		dcStructField(st, 's', offsetof(union  A264, m16), 1);
		dcStructField(st, 'l', offsetof(union  A264, m17), 1);
		dcStructField(st, 'c', offsetof(union  A264, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdjdjsfdpcdpdpdf} */
struct A265 { p m0; d m1; j m2; d m3; j m4; s m5; f m6; d m7; p m8; c m9; d m10; p m11; d m12; p m13; d m14; f m15; };
void f_cpA265(struct A265 *x, const struct A265 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA265(const struct A265 *x, const struct A265 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA265() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A265), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A265, m0), 1);
		dcStructField(st, 'd', offsetof(struct A265, m1), 1);
		dcStructField(st, 'j', offsetof(struct A265, m2), 1);
		dcStructField(st, 'd', offsetof(struct A265, m3), 1);
		dcStructField(st, 'j', offsetof(struct A265, m4), 1);
		dcStructField(st, 's', offsetof(struct A265, m5), 1);
		dcStructField(st, 'f', offsetof(struct A265, m6), 1);
		dcStructField(st, 'd', offsetof(struct A265, m7), 1);
		dcStructField(st, 'p', offsetof(struct A265, m8), 1);
		dcStructField(st, 'c', offsetof(struct A265, m9), 1);
		dcStructField(st, 'd', offsetof(struct A265, m10), 1);
		dcStructField(st, 'p', offsetof(struct A265, m11), 1);
		dcStructField(st, 'd', offsetof(struct A265, m12), 1);
		dcStructField(st, 'p', offsetof(struct A265, m13), 1);
		dcStructField(st, 'd', offsetof(struct A265, m14), 1);
		dcStructField(st, 'f', offsetof(struct A265, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfss> */
union  A266 { s m0; f m1; s m2; s m3; };
void f_cpA266(union  A266 *x, const union  A266 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA266(const union  A266 *x, const union  A266 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA266() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A266), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A266, m0), 1);
		dcStructField(st, 'f', offsetof(union  A266, m1), 1);
		dcStructField(st, 's', offsetof(union  A266, m2), 1);
		dcStructField(st, 's', offsetof(union  A266, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iflpjsifpic> */
union  A267 { i m0; f m1; l m2; p m3; j m4; s m5; i m6; f m7; p m8; i m9; c m10; };
void f_cpA267(union  A267 *x, const union  A267 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA267(const union  A267 *x, const union  A267 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA267() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A267), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A267, m0), 1);
		dcStructField(st, 'f', offsetof(union  A267, m1), 1);
		dcStructField(st, 'l', offsetof(union  A267, m2), 1);
		dcStructField(st, 'p', offsetof(union  A267, m3), 1);
		dcStructField(st, 'j', offsetof(union  A267, m4), 1);
		dcStructField(st, 's', offsetof(union  A267, m5), 1);
		dcStructField(st, 'i', offsetof(union  A267, m6), 1);
		dcStructField(st, 'f', offsetof(union  A267, m7), 1);
		dcStructField(st, 'p', offsetof(union  A267, m8), 1);
		dcStructField(st, 'i', offsetof(union  A267, m9), 1);
		dcStructField(st, 'c', offsetof(union  A267, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sislssdii} */
struct A268 { s m0; i m1; s m2; l m3; s m4; s m5; d m6; i m7; i m8; };
void f_cpA268(struct A268 *x, const struct A268 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA268(const struct A268 *x, const struct A268 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA268() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A268), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A268, m0), 1);
		dcStructField(st, 'i', offsetof(struct A268, m1), 1);
		dcStructField(st, 's', offsetof(struct A268, m2), 1);
		dcStructField(st, 'l', offsetof(struct A268, m3), 1);
		dcStructField(st, 's', offsetof(struct A268, m4), 1);
		dcStructField(st, 's', offsetof(struct A268, m5), 1);
		dcStructField(st, 'd', offsetof(struct A268, m6), 1);
		dcStructField(st, 'i', offsetof(struct A268, m7), 1);
		dcStructField(st, 'i', offsetof(struct A268, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fdppfidlcf> */
union  A269 { f m0; d m1; p m2; p m3; f m4; i m5; d m6; l m7; c m8; f m9; };
void f_cpA269(union  A269 *x, const union  A269 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA269(const union  A269 *x, const union  A269 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA269() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A269), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A269, m0), 1);
		dcStructField(st, 'd', offsetof(union  A269, m1), 1);
		dcStructField(st, 'p', offsetof(union  A269, m2), 1);
		dcStructField(st, 'p', offsetof(union  A269, m3), 1);
		dcStructField(st, 'f', offsetof(union  A269, m4), 1);
		dcStructField(st, 'i', offsetof(union  A269, m5), 1);
		dcStructField(st, 'd', offsetof(union  A269, m6), 1);
		dcStructField(st, 'l', offsetof(union  A269, m7), 1);
		dcStructField(st, 'c', offsetof(union  A269, m8), 1);
		dcStructField(st, 'f', offsetof(union  A269, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ci<fdppfidlcf>pi> */
union  A270 { c m0; i m1; union  A269 m2; p m3; i m4; };
void f_cpA270(union  A270 *x, const union  A270 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA269(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA270(const union  A270 *x, const union  A270 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA269(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA270() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A270), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A270, m0), 1);
		dcStructField(st, 'i', offsetof(union  A270, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A270, m2), 1, f_touchdcstA269());
		dcStructField(st, 'p', offsetof(union  A270, m3), 1);
		dcStructField(st, 'i', offsetof(union  A270, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dc> */
union  A271 { d m0; c m1; };
void f_cpA271(union  A271 *x, const union  A271 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA271(const union  A271 *x, const union  A271 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA271() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A271), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A271, m0), 1);
		dcStructField(st, 'c', offsetof(union  A271, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdspl> */
union  A272 { c m0; d m1; s m2; p m3; l m4; };
void f_cpA272(union  A272 *x, const union  A272 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA272(const union  A272 *x, const union  A272 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA272() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A272), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A272, m0), 1);
		dcStructField(st, 'd', offsetof(union  A272, m1), 1);
		dcStructField(st, 's', offsetof(union  A272, m2), 1);
		dcStructField(st, 'p', offsetof(union  A272, m3), 1);
		dcStructField(st, 'l', offsetof(union  A272, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <llpllilfpicjd> */
union  A273 { l m0; l m1; p m2; l m3; l m4; i m5; l m6; f m7; p m8; i m9; c m10; j m11; d m12; };
void f_cpA273(union  A273 *x, const union  A273 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA273(const union  A273 *x, const union  A273 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA273() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A273), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A273, m0), 1);
		dcStructField(st, 'l', offsetof(union  A273, m1), 1);
		dcStructField(st, 'p', offsetof(union  A273, m2), 1);
		dcStructField(st, 'l', offsetof(union  A273, m3), 1);
		dcStructField(st, 'l', offsetof(union  A273, m4), 1);
		dcStructField(st, 'i', offsetof(union  A273, m5), 1);
		dcStructField(st, 'l', offsetof(union  A273, m6), 1);
		dcStructField(st, 'f', offsetof(union  A273, m7), 1);
		dcStructField(st, 'p', offsetof(union  A273, m8), 1);
		dcStructField(st, 'i', offsetof(union  A273, m9), 1);
		dcStructField(st, 'c', offsetof(union  A273, m10), 1);
		dcStructField(st, 'j', offsetof(union  A273, m11), 1);
		dcStructField(st, 'd', offsetof(union  A273, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdjscl} */
struct A274 { f m0; d m1; j m2; s m3; c m4; l m5; };
void f_cpA274(struct A274 *x, const struct A274 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA274(const struct A274 *x, const struct A274 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA274() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A274), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A274, m0), 1);
		dcStructField(st, 'd', offsetof(struct A274, m1), 1);
		dcStructField(st, 'j', offsetof(struct A274, m2), 1);
		dcStructField(st, 's', offsetof(struct A274, m3), 1);
		dcStructField(st, 'c', offsetof(struct A274, m4), 1);
		dcStructField(st, 'l', offsetof(struct A274, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sdlpddslpicspsdjijsdf> */
union  A275 { s m0; d m1; l m2; p m3; d m4; d m5; s m6; l m7; p m8; i m9; c m10; s m11; p m12; s m13; d m14; j m15; i m16; j m17; s m18; d m19; f m20; };
void f_cpA275(union  A275 *x, const union  A275 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA275(const union  A275 *x, const union  A275 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA275() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A275), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A275, m0), 1);
		dcStructField(st, 'd', offsetof(union  A275, m1), 1);
		dcStructField(st, 'l', offsetof(union  A275, m2), 1);
		dcStructField(st, 'p', offsetof(union  A275, m3), 1);
		dcStructField(st, 'd', offsetof(union  A275, m4), 1);
		dcStructField(st, 'd', offsetof(union  A275, m5), 1);
		dcStructField(st, 's', offsetof(union  A275, m6), 1);
		dcStructField(st, 'l', offsetof(union  A275, m7), 1);
		dcStructField(st, 'p', offsetof(union  A275, m8), 1);
		dcStructField(st, 'i', offsetof(union  A275, m9), 1);
		dcStructField(st, 'c', offsetof(union  A275, m10), 1);
		dcStructField(st, 's', offsetof(union  A275, m11), 1);
		dcStructField(st, 'p', offsetof(union  A275, m12), 1);
		dcStructField(st, 's', offsetof(union  A275, m13), 1);
		dcStructField(st, 'd', offsetof(union  A275, m14), 1);
		dcStructField(st, 'j', offsetof(union  A275, m15), 1);
		dcStructField(st, 'i', offsetof(union  A275, m16), 1);
		dcStructField(st, 'j', offsetof(union  A275, m17), 1);
		dcStructField(st, 's', offsetof(union  A275, m18), 1);
		dcStructField(st, 'd', offsetof(union  A275, m19), 1);
		dcStructField(st, 'f', offsetof(union  A275, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scf} */
struct A276 { s m0; c m1; f m2; };
void f_cpA276(struct A276 *x, const struct A276 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA276(const struct A276 *x, const struct A276 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA276() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A276), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A276, m0), 1);
		dcStructField(st, 'c', offsetof(struct A276, m1), 1);
		dcStructField(st, 'f', offsetof(struct A276, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iscdl} */
struct A277 { i m0; s m1; c m2; d m3; l m4; };
void f_cpA277(struct A277 *x, const struct A277 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA277(const struct A277 *x, const struct A277 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA277() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A277), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A277, m0), 1);
		dcStructField(st, 's', offsetof(struct A277, m1), 1);
		dcStructField(st, 'c', offsetof(struct A277, m2), 1);
		dcStructField(st, 'd', offsetof(struct A277, m3), 1);
		dcStructField(st, 'l', offsetof(struct A277, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlfcilljcpcdsjiffllciij> */
union  A278 { d m0; l m1; f m2; c m3; i m4; l m5; l m6; j m7; c m8; p m9; c m10; d m11; s m12; j m13; i m14; f m15; f m16; l m17; l m18; c m19; i m20; i m21; j m22; };
void f_cpA278(union  A278 *x, const union  A278 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA278(const union  A278 *x, const union  A278 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA278() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(union  A278), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A278, m0), 1);
		dcStructField(st, 'l', offsetof(union  A278, m1), 1);
		dcStructField(st, 'f', offsetof(union  A278, m2), 1);
		dcStructField(st, 'c', offsetof(union  A278, m3), 1);
		dcStructField(st, 'i', offsetof(union  A278, m4), 1);
		dcStructField(st, 'l', offsetof(union  A278, m5), 1);
		dcStructField(st, 'l', offsetof(union  A278, m6), 1);
		dcStructField(st, 'j', offsetof(union  A278, m7), 1);
		dcStructField(st, 'c', offsetof(union  A278, m8), 1);
		dcStructField(st, 'p', offsetof(union  A278, m9), 1);
		dcStructField(st, 'c', offsetof(union  A278, m10), 1);
		dcStructField(st, 'd', offsetof(union  A278, m11), 1);
		dcStructField(st, 's', offsetof(union  A278, m12), 1);
		dcStructField(st, 'j', offsetof(union  A278, m13), 1);
		dcStructField(st, 'i', offsetof(union  A278, m14), 1);
		dcStructField(st, 'f', offsetof(union  A278, m15), 1);
		dcStructField(st, 'f', offsetof(union  A278, m16), 1);
		dcStructField(st, 'l', offsetof(union  A278, m17), 1);
		dcStructField(st, 'l', offsetof(union  A278, m18), 1);
		dcStructField(st, 'c', offsetof(union  A278, m19), 1);
		dcStructField(st, 'i', offsetof(union  A278, m20), 1);
		dcStructField(st, 'i', offsetof(union  A278, m21), 1);
		dcStructField(st, 'j', offsetof(union  A278, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlcdsf} */
struct A279 { d m0; l m1; c m2; d m3; s m4; f m5; };
void f_cpA279(struct A279 *x, const struct A279 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA279(const struct A279 *x, const struct A279 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA279() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A279), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A279, m0), 1);
		dcStructField(st, 'l', offsetof(struct A279, m1), 1);
		dcStructField(st, 'c', offsetof(struct A279, m2), 1);
		dcStructField(st, 'd', offsetof(struct A279, m3), 1);
		dcStructField(st, 's', offsetof(struct A279, m4), 1);
		dcStructField(st, 'f', offsetof(struct A279, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pspdfcsfiij} */
struct A280 { p m0; s m1; p m2; d m3; f m4; c m5; s m6; f m7; i m8; i m9; j m10; };
void f_cpA280(struct A280 *x, const struct A280 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA280(const struct A280 *x, const struct A280 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA280() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A280), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A280, m0), 1);
		dcStructField(st, 's', offsetof(struct A280, m1), 1);
		dcStructField(st, 'p', offsetof(struct A280, m2), 1);
		dcStructField(st, 'd', offsetof(struct A280, m3), 1);
		dcStructField(st, 'f', offsetof(struct A280, m4), 1);
		dcStructField(st, 'c', offsetof(struct A280, m5), 1);
		dcStructField(st, 's', offsetof(struct A280, m6), 1);
		dcStructField(st, 'f', offsetof(struct A280, m7), 1);
		dcStructField(st, 'i', offsetof(struct A280, m8), 1);
		dcStructField(st, 'i', offsetof(struct A280, m9), 1);
		dcStructField(st, 'j', offsetof(struct A280, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffdfcil} */
struct A281 { f m0; f m1; d m2; f m3; c m4; i m5; l m6; };
void f_cpA281(struct A281 *x, const struct A281 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA281(const struct A281 *x, const struct A281 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA281() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A281), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A281, m0), 1);
		dcStructField(st, 'f', offsetof(struct A281, m1), 1);
		dcStructField(st, 'd', offsetof(struct A281, m2), 1);
		dcStructField(st, 'f', offsetof(struct A281, m3), 1);
		dcStructField(st, 'c', offsetof(struct A281, m4), 1);
		dcStructField(st, 'i', offsetof(struct A281, m5), 1);
		dcStructField(st, 'l', offsetof(struct A281, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pl} */
struct A282 { p m0; l m1; };
void f_cpA282(struct A282 *x, const struct A282 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA282(const struct A282 *x, const struct A282 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA282() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A282), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A282, m0), 1);
		dcStructField(st, 'l', offsetof(struct A282, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfcicdsilcp} */
struct A283 { j m0; f m1; c m2; i m3; c m4; d m5; s m6; i m7; l m8; c m9; p m10; };
void f_cpA283(struct A283 *x, const struct A283 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA283(const struct A283 *x, const struct A283 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA283() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A283), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A283, m0), 1);
		dcStructField(st, 'f', offsetof(struct A283, m1), 1);
		dcStructField(st, 'c', offsetof(struct A283, m2), 1);
		dcStructField(st, 'i', offsetof(struct A283, m3), 1);
		dcStructField(st, 'c', offsetof(struct A283, m4), 1);
		dcStructField(st, 'd', offsetof(struct A283, m5), 1);
		dcStructField(st, 's', offsetof(struct A283, m6), 1);
		dcStructField(st, 'i', offsetof(struct A283, m7), 1);
		dcStructField(st, 'l', offsetof(struct A283, m8), 1);
		dcStructField(st, 'c', offsetof(struct A283, m9), 1);
		dcStructField(st, 'p', offsetof(struct A283, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <spj> */
union  A284 { s m0; p m1; j m2; };
void f_cpA284(union  A284 *x, const union  A284 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA284(const union  A284 *x, const union  A284 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA284() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A284), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A284, m0), 1);
		dcStructField(st, 'p', offsetof(union  A284, m1), 1);
		dcStructField(st, 'j', offsetof(union  A284, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljfcsjlcpiclicdcpcc> */
union  A285 { l m0; j m1; f m2; c m3; s m4; j m5; l m6; c m7; p m8; i m9; c m10; l m11; i m12; c m13; d m14; c m15; p m16; c m17; c m18; };
void f_cpA285(union  A285 *x, const union  A285 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA285(const union  A285 *x, const union  A285 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA285() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A285), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A285, m0), 1);
		dcStructField(st, 'j', offsetof(union  A285, m1), 1);
		dcStructField(st, 'f', offsetof(union  A285, m2), 1);
		dcStructField(st, 'c', offsetof(union  A285, m3), 1);
		dcStructField(st, 's', offsetof(union  A285, m4), 1);
		dcStructField(st, 'j', offsetof(union  A285, m5), 1);
		dcStructField(st, 'l', offsetof(union  A285, m6), 1);
		dcStructField(st, 'c', offsetof(union  A285, m7), 1);
		dcStructField(st, 'p', offsetof(union  A285, m8), 1);
		dcStructField(st, 'i', offsetof(union  A285, m9), 1);
		dcStructField(st, 'c', offsetof(union  A285, m10), 1);
		dcStructField(st, 'l', offsetof(union  A285, m11), 1);
		dcStructField(st, 'i', offsetof(union  A285, m12), 1);
		dcStructField(st, 'c', offsetof(union  A285, m13), 1);
		dcStructField(st, 'd', offsetof(union  A285, m14), 1);
		dcStructField(st, 'c', offsetof(union  A285, m15), 1);
		dcStructField(st, 'p', offsetof(union  A285, m16), 1);
		dcStructField(st, 'c', offsetof(union  A285, m17), 1);
		dcStructField(st, 'c', offsetof(union  A285, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sllsc} */
struct A286 { s m0; l m1; l m2; s m3; c m4; };
void f_cpA286(struct A286 *x, const struct A286 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA286(const struct A286 *x, const struct A286 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA286() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A286), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A286, m0), 1);
		dcStructField(st, 'l', offsetof(struct A286, m1), 1);
		dcStructField(st, 'l', offsetof(struct A286, m2), 1);
		dcStructField(st, 's', offsetof(struct A286, m3), 1);
		dcStructField(st, 'c', offsetof(struct A286, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iljpfisisjpd> */
union  A287 { i m0; l m1; j m2; p m3; f m4; i m5; s m6; i m7; s m8; j m9; p m10; d m11; };
void f_cpA287(union  A287 *x, const union  A287 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA287(const union  A287 *x, const union  A287 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA287() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A287), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A287, m0), 1);
		dcStructField(st, 'l', offsetof(union  A287, m1), 1);
		dcStructField(st, 'j', offsetof(union  A287, m2), 1);
		dcStructField(st, 'p', offsetof(union  A287, m3), 1);
		dcStructField(st, 'f', offsetof(union  A287, m4), 1);
		dcStructField(st, 'i', offsetof(union  A287, m5), 1);
		dcStructField(st, 's', offsetof(union  A287, m6), 1);
		dcStructField(st, 'i', offsetof(union  A287, m7), 1);
		dcStructField(st, 's', offsetof(union  A287, m8), 1);
		dcStructField(st, 'j', offsetof(union  A287, m9), 1);
		dcStructField(st, 'p', offsetof(union  A287, m10), 1);
		dcStructField(st, 'd', offsetof(union  A287, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jlisdl> */
union  A288 { j m0; l m1; i m2; s m3; d m4; l m5; };
void f_cpA288(union  A288 *x, const union  A288 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA288(const union  A288 *x, const union  A288 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA288() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A288), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A288, m0), 1);
		dcStructField(st, 'l', offsetof(union  A288, m1), 1);
		dcStructField(st, 'i', offsetof(union  A288, m2), 1);
		dcStructField(st, 's', offsetof(union  A288, m3), 1);
		dcStructField(st, 'd', offsetof(union  A288, m4), 1);
		dcStructField(st, 'l', offsetof(union  A288, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljsjjlljfdfipp} */
struct A289 { l m0; j m1; s m2; j m3; j m4; l m5; l m6; j m7; f m8; d m9; f m10; i m11; p m12; p m13; };
void f_cpA289(struct A289 *x, const struct A289 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA289(const struct A289 *x, const struct A289 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA289() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A289), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A289, m0), 1);
		dcStructField(st, 'j', offsetof(struct A289, m1), 1);
		dcStructField(st, 's', offsetof(struct A289, m2), 1);
		dcStructField(st, 'j', offsetof(struct A289, m3), 1);
		dcStructField(st, 'j', offsetof(struct A289, m4), 1);
		dcStructField(st, 'l', offsetof(struct A289, m5), 1);
		dcStructField(st, 'l', offsetof(struct A289, m6), 1);
		dcStructField(st, 'j', offsetof(struct A289, m7), 1);
		dcStructField(st, 'f', offsetof(struct A289, m8), 1);
		dcStructField(st, 'd', offsetof(struct A289, m9), 1);
		dcStructField(st, 'f', offsetof(struct A289, m10), 1);
		dcStructField(st, 'i', offsetof(struct A289, m11), 1);
		dcStructField(st, 'p', offsetof(struct A289, m12), 1);
		dcStructField(st, 'p', offsetof(struct A289, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfp> */
union  A290 { s m0; f m1; p m2; };
void f_cpA290(union  A290 *x, const union  A290 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA290(const union  A290 *x, const union  A290 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA290() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A290), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A290, m0), 1);
		dcStructField(st, 'f', offsetof(union  A290, m1), 1);
		dcStructField(st, 'p', offsetof(union  A290, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pipppp} */
struct A291 { p m0; i m1; p m2; p m3; p m4; p m5; };
void f_cpA291(struct A291 *x, const struct A291 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA291(const struct A291 *x, const struct A291 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA291() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A291), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A291, m0), 1);
		dcStructField(st, 'i', offsetof(struct A291, m1), 1);
		dcStructField(st, 'p', offsetof(struct A291, m2), 1);
		dcStructField(st, 'p', offsetof(struct A291, m3), 1);
		dcStructField(st, 'p', offsetof(struct A291, m4), 1);
		dcStructField(st, 'p', offsetof(struct A291, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sspcdlsfiji} */
struct A292 { s m0; s m1; p m2; c m3; d m4; l m5; s m6; f m7; i m8; j m9; i m10; };
void f_cpA292(struct A292 *x, const struct A292 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA292(const struct A292 *x, const struct A292 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA292() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A292), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A292, m0), 1);
		dcStructField(st, 's', offsetof(struct A292, m1), 1);
		dcStructField(st, 'p', offsetof(struct A292, m2), 1);
		dcStructField(st, 'c', offsetof(struct A292, m3), 1);
		dcStructField(st, 'd', offsetof(struct A292, m4), 1);
		dcStructField(st, 'l', offsetof(struct A292, m5), 1);
		dcStructField(st, 's', offsetof(struct A292, m6), 1);
		dcStructField(st, 'f', offsetof(struct A292, m7), 1);
		dcStructField(st, 'i', offsetof(struct A292, m8), 1);
		dcStructField(st, 'j', offsetof(struct A292, m9), 1);
		dcStructField(st, 'i', offsetof(struct A292, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{jfcicdsilcp}d<spj>i<ljfcsjlcpiclicdcpcc>fj{sllsc}s<iljpfisisjpd>fjlsjiiipd<jlisdl>jfdc{ljsjjlljfdfipp}fljfd<sfp>{pipppp}lpjld{sspcdlsfiji}} */
struct A293 { struct A283 m0; d m1; union  A284 m2; i m3; union  A285 m4; f m5; j m6; struct A286 m7; s m8; union  A287 m9; f m10; j m11; l m12; s m13; j m14; i m15; i m16; i m17; p m18; d m19; union  A288 m20; j m21; f m22; d m23; c m24; struct A289 m25; f m26; l m27; j m28; f m29; d m30; union  A290 m31; struct A291 m32; l m33; p m34; j m35; l m36; d m37; struct A292 m38; };
void f_cpA293(struct A293 *x, const struct A293 *y) { f_cpA283(&x->m0, &y->m0); x->m1 = y->m1; f_cpA284(&x->m2, &y->m2); x->m3 = y->m3; f_cpA285(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA286(&x->m7, &y->m7); x->m8 = y->m8; f_cpA287(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA288(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; f_cpA289(&x->m25, &y->m25); x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; f_cpA290(&x->m31, &y->m31); f_cpA291(&x->m32, &y->m32); x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; f_cpA292(&x->m38, &y->m38); };
int f_cmpA293(const struct A293 *x, const struct A293 *y) { return f_cmpA283(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA284(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA285(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA286(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA287(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA288(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && f_cmpA289(&x->m25, &y->m25) && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && f_cmpA290(&x->m31, &y->m31) && f_cmpA291(&x->m32, &y->m32) && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && f_cmpA292(&x->m38, &y->m38); };
DCstruct* f_touchdcstA293() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(39, sizeof(struct A293), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m0), 1, f_touchdcstA283());
		dcStructField(st, 'd', offsetof(struct A293, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m2), 1, f_touchdcstA284());
		dcStructField(st, 'i', offsetof(struct A293, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m4), 1, f_touchdcstA285());
		dcStructField(st, 'f', offsetof(struct A293, m5), 1);
		dcStructField(st, 'j', offsetof(struct A293, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m7), 1, f_touchdcstA286());
		dcStructField(st, 's', offsetof(struct A293, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m9), 1, f_touchdcstA287());
		dcStructField(st, 'f', offsetof(struct A293, m10), 1);
		dcStructField(st, 'j', offsetof(struct A293, m11), 1);
		dcStructField(st, 'l', offsetof(struct A293, m12), 1);
		dcStructField(st, 's', offsetof(struct A293, m13), 1);
		dcStructField(st, 'j', offsetof(struct A293, m14), 1);
		dcStructField(st, 'i', offsetof(struct A293, m15), 1);
		dcStructField(st, 'i', offsetof(struct A293, m16), 1);
		dcStructField(st, 'i', offsetof(struct A293, m17), 1);
		dcStructField(st, 'p', offsetof(struct A293, m18), 1);
		dcStructField(st, 'd', offsetof(struct A293, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m20), 1, f_touchdcstA288());
		dcStructField(st, 'j', offsetof(struct A293, m21), 1);
		dcStructField(st, 'f', offsetof(struct A293, m22), 1);
		dcStructField(st, 'd', offsetof(struct A293, m23), 1);
		dcStructField(st, 'c', offsetof(struct A293, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m25), 1, f_touchdcstA289());
		dcStructField(st, 'f', offsetof(struct A293, m26), 1);
		dcStructField(st, 'l', offsetof(struct A293, m27), 1);
		dcStructField(st, 'j', offsetof(struct A293, m28), 1);
		dcStructField(st, 'f', offsetof(struct A293, m29), 1);
		dcStructField(st, 'd', offsetof(struct A293, m30), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m31), 1, f_touchdcstA290());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m32), 1, f_touchdcstA291());
		dcStructField(st, 'l', offsetof(struct A293, m33), 1);
		dcStructField(st, 'p', offsetof(struct A293, m34), 1);
		dcStructField(st, 'j', offsetof(struct A293, m35), 1);
		dcStructField(st, 'l', offsetof(struct A293, m36), 1);
		dcStructField(st, 'd', offsetof(struct A293, m37), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A293, m38), 1, f_touchdcstA292());
		dcCloseStruct(st);
	}
	return st;
};
/* <flc{{jfcicdsilcp}d<spj>i<ljfcsjlcpiclicdcpcc>fj{sllsc}s<iljpfisisjpd>fjlsjiiipd<jlisdl>jfdc{ljsjjlljfdfipp}fljfd<sfp>{pipppp}lpjld{sspcdlsfiji}}sfjl> */
union  A294 { f m0; l m1; c m2; struct A293 m3; s m4; f m5; j m6; l m7; };
void f_cpA294(union  A294 *x, const union  A294 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA293(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA294(const union  A294 *x, const union  A294 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA293(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA294() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A294), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A294, m0), 1);
		dcStructField(st, 'l', offsetof(union  A294, m1), 1);
		dcStructField(st, 'c', offsetof(union  A294, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A294, m3), 1, f_touchdcstA293());
		dcStructField(st, 's', offsetof(union  A294, m4), 1);
		dcStructField(st, 'f', offsetof(union  A294, m5), 1);
		dcStructField(st, 'j', offsetof(union  A294, m6), 1);
		dcStructField(st, 'l', offsetof(union  A294, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cp} */
struct A295 { c m0; p m1; };
void f_cpA295(struct A295 *x, const struct A295 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA295(const struct A295 *x, const struct A295 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA295() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A295), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A295, m0), 1);
		dcStructField(st, 'p', offsetof(struct A295, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jlcdjplslii> */
union  A296 { j m0; l m1; c m2; d m3; j m4; p m5; l m6; s m7; l m8; i m9; i m10; };
void f_cpA296(union  A296 *x, const union  A296 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA296(const union  A296 *x, const union  A296 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA296() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A296), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A296, m0), 1);
		dcStructField(st, 'l', offsetof(union  A296, m1), 1);
		dcStructField(st, 'c', offsetof(union  A296, m2), 1);
		dcStructField(st, 'd', offsetof(union  A296, m3), 1);
		dcStructField(st, 'j', offsetof(union  A296, m4), 1);
		dcStructField(st, 'p', offsetof(union  A296, m5), 1);
		dcStructField(st, 'l', offsetof(union  A296, m6), 1);
		dcStructField(st, 's', offsetof(union  A296, m7), 1);
		dcStructField(st, 'l', offsetof(union  A296, m8), 1);
		dcStructField(st, 'i', offsetof(union  A296, m9), 1);
		dcStructField(st, 'i', offsetof(union  A296, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssll{cp}ffpp<d>cs<jlcdjplslii>ji} */
struct A297 { s m0; s m1; l m2; l m3; struct A295 m4; f m5; f m6; p m7; p m8; union  A94 m9; c m10; s m11; union  A296 m12; j m13; i m14; };
void f_cpA297(struct A297 *x, const struct A297 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA295(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA94(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; f_cpA296(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA297(const struct A297 *x, const struct A297 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA295(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA94(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA296(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA297() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A297), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A297, m0), 1);
		dcStructField(st, 's', offsetof(struct A297, m1), 1);
		dcStructField(st, 'l', offsetof(struct A297, m2), 1);
		dcStructField(st, 'l', offsetof(struct A297, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A297, m4), 1, f_touchdcstA295());
		dcStructField(st, 'f', offsetof(struct A297, m5), 1);
		dcStructField(st, 'f', offsetof(struct A297, m6), 1);
		dcStructField(st, 'p', offsetof(struct A297, m7), 1);
		dcStructField(st, 'p', offsetof(struct A297, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A297, m9), 1, f_touchdcstA94());
		dcStructField(st, 'c', offsetof(struct A297, m10), 1);
		dcStructField(st, 's', offsetof(struct A297, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A297, m12), 1, f_touchdcstA296());
		dcStructField(st, 'j', offsetof(struct A297, m13), 1);
		dcStructField(st, 'i', offsetof(struct A297, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lf{ssll{cp}ffpp<d>cs<jlcdjplslii>ji}} */
struct A298 { l m0; f m1; struct A297 m2; };
void f_cpA298(struct A298 *x, const struct A298 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA297(&x->m2, &y->m2); };
int f_cmpA298(const struct A298 *x, const struct A298 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA297(&x->m2, &y->m2); };
DCstruct* f_touchdcstA298() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A298), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A298, m0), 1);
		dcStructField(st, 'f', offsetof(struct A298, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A298, m2), 1, f_touchdcstA297());
		dcCloseStruct(st);
	}
	return st;
};
/* {id} */
struct A299 { i m0; d m1; };
void f_cpA299(struct A299 *x, const struct A299 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA299(const struct A299 *x, const struct A299 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA299() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A299), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A299, m0), 1);
		dcStructField(st, 'd', offsetof(struct A299, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sdddcijplcdilpcdipcslfidlcjsdl> */
union  A300 { s m0; d m1; d m2; d m3; c m4; i m5; j m6; p m7; l m8; c m9; d m10; i m11; l m12; p m13; c m14; d m15; i m16; p m17; c m18; s m19; l m20; f m21; i m22; d m23; l m24; c m25; j m26; s m27; d m28; l m29; };
void f_cpA300(union  A300 *x, const union  A300 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA300(const union  A300 *x, const union  A300 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA300() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(union  A300), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A300, m0), 1);
		dcStructField(st, 'd', offsetof(union  A300, m1), 1);
		dcStructField(st, 'd', offsetof(union  A300, m2), 1);
		dcStructField(st, 'd', offsetof(union  A300, m3), 1);
		dcStructField(st, 'c', offsetof(union  A300, m4), 1);
		dcStructField(st, 'i', offsetof(union  A300, m5), 1);
		dcStructField(st, 'j', offsetof(union  A300, m6), 1);
		dcStructField(st, 'p', offsetof(union  A300, m7), 1);
		dcStructField(st, 'l', offsetof(union  A300, m8), 1);
		dcStructField(st, 'c', offsetof(union  A300, m9), 1);
		dcStructField(st, 'd', offsetof(union  A300, m10), 1);
		dcStructField(st, 'i', offsetof(union  A300, m11), 1);
		dcStructField(st, 'l', offsetof(union  A300, m12), 1);
		dcStructField(st, 'p', offsetof(union  A300, m13), 1);
		dcStructField(st, 'c', offsetof(union  A300, m14), 1);
		dcStructField(st, 'd', offsetof(union  A300, m15), 1);
		dcStructField(st, 'i', offsetof(union  A300, m16), 1);
		dcStructField(st, 'p', offsetof(union  A300, m17), 1);
		dcStructField(st, 'c', offsetof(union  A300, m18), 1);
		dcStructField(st, 's', offsetof(union  A300, m19), 1);
		dcStructField(st, 'l', offsetof(union  A300, m20), 1);
		dcStructField(st, 'f', offsetof(union  A300, m21), 1);
		dcStructField(st, 'i', offsetof(union  A300, m22), 1);
		dcStructField(st, 'd', offsetof(union  A300, m23), 1);
		dcStructField(st, 'l', offsetof(union  A300, m24), 1);
		dcStructField(st, 'c', offsetof(union  A300, m25), 1);
		dcStructField(st, 'j', offsetof(union  A300, m26), 1);
		dcStructField(st, 's', offsetof(union  A300, m27), 1);
		dcStructField(st, 'd', offsetof(union  A300, m28), 1);
		dcStructField(st, 'l', offsetof(union  A300, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d<sdddcijplcdilpcdipcslfidlcjsdl>fdi> */
union  A301 { d m0; union  A300 m1; f m2; d m3; i m4; };
void f_cpA301(union  A301 *x, const union  A301 *y) { x->m0 = y->m0; f_cpA300(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA301(const union  A301 *x, const union  A301 *y) { return x->m0 == y->m0 && f_cmpA300(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA301() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A301), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A301, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A301, m1), 1, f_touchdcstA300());
		dcStructField(st, 'f', offsetof(union  A301, m2), 1);
		dcStructField(st, 'd', offsetof(union  A301, m3), 1);
		dcStructField(st, 'i', offsetof(union  A301, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpi} */
struct A302 { j m0; p m1; i m2; };
void f_cpA302(struct A302 *x, const struct A302 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA302(const struct A302 *x, const struct A302 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA302() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A302), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A302, m0), 1);
		dcStructField(st, 'p', offsetof(struct A302, m1), 1);
		dcStructField(st, 'i', offsetof(struct A302, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j} */
struct A303 { j m0; };
void f_cpA303(struct A303 *x, const struct A303 *y) { x->m0 = y->m0; };
int f_cmpA303(const struct A303 *x, const struct A303 *y) { return x->m0 == y->m0; };
DCstruct* f_touchdcstA303() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A303), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A303, m0), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <llpscs> */
union  A304 { l m0; l m1; p m2; s m3; c m4; s m5; };
void f_cpA304(union  A304 *x, const union  A304 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA304(const union  A304 *x, const union  A304 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA304() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A304), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A304, m0), 1);
		dcStructField(st, 'l', offsetof(union  A304, m1), 1);
		dcStructField(st, 'p', offsetof(union  A304, m2), 1);
		dcStructField(st, 's', offsetof(union  A304, m3), 1);
		dcStructField(st, 'c', offsetof(union  A304, m4), 1);
		dcStructField(st, 's', offsetof(union  A304, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slll} */
struct A305 { s m0; l m1; l m2; l m3; };
void f_cpA305(struct A305 *x, const struct A305 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA305(const struct A305 *x, const struct A305 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA305() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A305), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A305, m0), 1);
		dcStructField(st, 'l', offsetof(struct A305, m1), 1);
		dcStructField(st, 'l', offsetof(struct A305, m2), 1);
		dcStructField(st, 'l', offsetof(struct A305, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llj{j}cisc<llpscs>{slll}jjifcs} */
struct A306 { l m0; l m1; j m2; struct A303 m3; c m4; i m5; s m6; c m7; union  A304 m8; struct A305 m9; j m10; j m11; i m12; f m13; c m14; s m15; };
void f_cpA306(struct A306 *x, const struct A306 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA303(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA304(&x->m8, &y->m8); f_cpA305(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA306(const struct A306 *x, const struct A306 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA303(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA304(&x->m8, &y->m8) && f_cmpA305(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA306() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A306), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A306, m0), 1);
		dcStructField(st, 'l', offsetof(struct A306, m1), 1);
		dcStructField(st, 'j', offsetof(struct A306, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A306, m3), 1, f_touchdcstA303());
		dcStructField(st, 'c', offsetof(struct A306, m4), 1);
		dcStructField(st, 'i', offsetof(struct A306, m5), 1);
		dcStructField(st, 's', offsetof(struct A306, m6), 1);
		dcStructField(st, 'c', offsetof(struct A306, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A306, m8), 1, f_touchdcstA304());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A306, m9), 1, f_touchdcstA305());
		dcStructField(st, 'j', offsetof(struct A306, m10), 1);
		dcStructField(st, 'j', offsetof(struct A306, m11), 1);
		dcStructField(st, 'i', offsetof(struct A306, m12), 1);
		dcStructField(st, 'f', offsetof(struct A306, m13), 1);
		dcStructField(st, 'c', offsetof(struct A306, m14), 1);
		dcStructField(st, 's', offsetof(struct A306, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jccjll} */
struct A307 { j m0; c m1; c m2; j m3; l m4; l m5; };
void f_cpA307(struct A307 *x, const struct A307 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA307(const struct A307 *x, const struct A307 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA307() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A307), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A307, m0), 1);
		dcStructField(st, 'c', offsetof(struct A307, m1), 1);
		dcStructField(st, 'c', offsetof(struct A307, m2), 1);
		dcStructField(st, 'j', offsetof(struct A307, m3), 1);
		dcStructField(st, 'l', offsetof(struct A307, m4), 1);
		dcStructField(st, 'l', offsetof(struct A307, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ijjjpfjdsi> */
union  A308 { i m0; j m1; j m2; j m3; p m4; f m5; j m6; d m7; s m8; i m9; };
void f_cpA308(union  A308 *x, const union  A308 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA308(const union  A308 *x, const union  A308 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA308() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A308), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A308, m0), 1);
		dcStructField(st, 'j', offsetof(union  A308, m1), 1);
		dcStructField(st, 'j', offsetof(union  A308, m2), 1);
		dcStructField(st, 'j', offsetof(union  A308, m3), 1);
		dcStructField(st, 'p', offsetof(union  A308, m4), 1);
		dcStructField(st, 'f', offsetof(union  A308, m5), 1);
		dcStructField(st, 'j', offsetof(union  A308, m6), 1);
		dcStructField(st, 'd', offsetof(union  A308, m7), 1);
		dcStructField(st, 's', offsetof(union  A308, m8), 1);
		dcStructField(st, 'i', offsetof(union  A308, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sjfc<ijjjpfjdsi>sjcdld> */
union  A309 { s m0; j m1; f m2; c m3; union  A308 m4; s m5; j m6; c m7; d m8; l m9; d m10; };
void f_cpA309(union  A309 *x, const union  A309 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA308(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA309(const union  A309 *x, const union  A309 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA308(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA309() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A309), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A309, m0), 1);
		dcStructField(st, 'j', offsetof(union  A309, m1), 1);
		dcStructField(st, 'f', offsetof(union  A309, m2), 1);
		dcStructField(st, 'c', offsetof(union  A309, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A309, m4), 1, f_touchdcstA308());
		dcStructField(st, 's', offsetof(union  A309, m5), 1);
		dcStructField(st, 'j', offsetof(union  A309, m6), 1);
		dcStructField(st, 'c', offsetof(union  A309, m7), 1);
		dcStructField(st, 'd', offsetof(union  A309, m8), 1);
		dcStructField(st, 'l', offsetof(union  A309, m9), 1);
		dcStructField(st, 'd', offsetof(union  A309, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<sjfc<ijjjpfjdsi>sjcdld>cp} */
struct A310 { union  A309 m0; c m1; p m2; };
void f_cpA310(struct A310 *x, const struct A310 *y) { f_cpA309(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA310(const struct A310 *x, const struct A310 *y) { return f_cmpA309(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA310() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A310), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A310, m0), 1, f_touchdcstA309());
		dcStructField(st, 'c', offsetof(struct A310, m1), 1);
		dcStructField(st, 'p', offsetof(struct A310, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpfi} */
struct A311 { d m0; p m1; f m2; i m3; };
void f_cpA311(struct A311 *x, const struct A311 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA311(const struct A311 *x, const struct A311 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA311() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A311), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A311, m0), 1);
		dcStructField(st, 'p', offsetof(struct A311, m1), 1);
		dcStructField(st, 'f', offsetof(struct A311, m2), 1);
		dcStructField(st, 'i', offsetof(struct A311, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{dpfi}ilcspjisd} */
struct A312 { l m0; struct A311 m1; i m2; l m3; c m4; s m5; p m6; j m7; i m8; s m9; d m10; };
void f_cpA312(struct A312 *x, const struct A312 *y) { x->m0 = y->m0; f_cpA311(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA312(const struct A312 *x, const struct A312 *y) { return x->m0 == y->m0 && f_cmpA311(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA312() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A312), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A312, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A312, m1), 1, f_touchdcstA311());
		dcStructField(st, 'i', offsetof(struct A312, m2), 1);
		dcStructField(st, 'l', offsetof(struct A312, m3), 1);
		dcStructField(st, 'c', offsetof(struct A312, m4), 1);
		dcStructField(st, 's', offsetof(struct A312, m5), 1);
		dcStructField(st, 'p', offsetof(struct A312, m6), 1);
		dcStructField(st, 'j', offsetof(struct A312, m7), 1);
		dcStructField(st, 'i', offsetof(struct A312, m8), 1);
		dcStructField(st, 's', offsetof(struct A312, m9), 1);
		dcStructField(st, 'd', offsetof(struct A312, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljlcd} */
struct A313 { l m0; j m1; l m2; c m3; d m4; };
void f_cpA313(struct A313 *x, const struct A313 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA313(const struct A313 *x, const struct A313 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA313() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A313), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A313, m0), 1);
		dcStructField(st, 'j', offsetof(struct A313, m1), 1);
		dcStructField(st, 'l', offsetof(struct A313, m2), 1);
		dcStructField(st, 'c', offsetof(struct A313, m3), 1);
		dcStructField(st, 'd', offsetof(struct A313, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <c{ljlcd}> */
union  A314 { c m0; struct A313 m1; };
void f_cpA314(union  A314 *x, const union  A314 *y) { x->m0 = y->m0; f_cpA313(&x->m1, &y->m1); };
int f_cmpA314(const union  A314 *x, const union  A314 *y) { return x->m0 == y->m0 && f_cmpA313(&x->m1, &y->m1); };
DCstruct* f_touchdcstA314() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A314), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A314, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A314, m1), 1, f_touchdcstA313());
		dcCloseStruct(st);
	}
	return st;
};
/* <sd> */
union  A315 { s m0; d m1; };
void f_cpA315(union  A315 *x, const union  A315 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA315(const union  A315 *x, const union  A315 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA315() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A315), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A315, m0), 1);
		dcStructField(st, 'd', offsetof(union  A315, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jflji> */
union  A316 { j m0; f m1; l m2; j m3; i m4; };
void f_cpA316(union  A316 *x, const union  A316 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA316(const union  A316 *x, const union  A316 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA316() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A316), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A316, m0), 1);
		dcStructField(st, 'f', offsetof(union  A316, m1), 1);
		dcStructField(st, 'l', offsetof(union  A316, m2), 1);
		dcStructField(st, 'j', offsetof(union  A316, m3), 1);
		dcStructField(st, 'i', offsetof(union  A316, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppfiplj} */
struct A317 { p m0; p m1; f m2; i m3; p m4; l m5; j m6; };
void f_cpA317(struct A317 *x, const struct A317 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA317(const struct A317 *x, const struct A317 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA317() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A317), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A317, m0), 1);
		dcStructField(st, 'p', offsetof(struct A317, m1), 1);
		dcStructField(st, 'f', offsetof(struct A317, m2), 1);
		dcStructField(st, 'i', offsetof(struct A317, m3), 1);
		dcStructField(st, 'p', offsetof(struct A317, m4), 1);
		dcStructField(st, 'l', offsetof(struct A317, m5), 1);
		dcStructField(st, 'j', offsetof(struct A317, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <f{ppfiplj}> */
union  A318 { f m0; struct A317 m1; };
void f_cpA318(union  A318 *x, const union  A318 *y) { x->m0 = y->m0; f_cpA317(&x->m1, &y->m1); };
int f_cmpA318(const union  A318 *x, const union  A318 *y) { return x->m0 == y->m0 && f_cmpA317(&x->m1, &y->m1); };
DCstruct* f_touchdcstA318() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A318), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A318, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A318, m1), 1, f_touchdcstA317());
		dcCloseStruct(st);
	}
	return st;
};
/* <ldffi> */
union  A319 { l m0; d m1; f m2; f m3; i m4; };
void f_cpA319(union  A319 *x, const union  A319 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA319(const union  A319 *x, const union  A319 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA319() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A319), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A319, m0), 1);
		dcStructField(st, 'd', offsetof(union  A319, m1), 1);
		dcStructField(st, 'f', offsetof(union  A319, m2), 1);
		dcStructField(st, 'f', offsetof(union  A319, m3), 1);
		dcStructField(st, 'i', offsetof(union  A319, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <scjsld<ldffi>cfdslfjs> */
union  A320 { s m0; c m1; j m2; s m3; l m4; d m5; union  A319 m6; c m7; f m8; d m9; s m10; l m11; f m12; j m13; s m14; };
void f_cpA320(union  A320 *x, const union  A320 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA319(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA320(const union  A320 *x, const union  A320 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA319(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA320() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A320), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A320, m0), 1);
		dcStructField(st, 'c', offsetof(union  A320, m1), 1);
		dcStructField(st, 'j', offsetof(union  A320, m2), 1);
		dcStructField(st, 's', offsetof(union  A320, m3), 1);
		dcStructField(st, 'l', offsetof(union  A320, m4), 1);
		dcStructField(st, 'd', offsetof(union  A320, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A320, m6), 1, f_touchdcstA319());
		dcStructField(st, 'c', offsetof(union  A320, m7), 1);
		dcStructField(st, 'f', offsetof(union  A320, m8), 1);
		dcStructField(st, 'd', offsetof(union  A320, m9), 1);
		dcStructField(st, 's', offsetof(union  A320, m10), 1);
		dcStructField(st, 'l', offsetof(union  A320, m11), 1);
		dcStructField(st, 'f', offsetof(union  A320, m12), 1);
		dcStructField(st, 'j', offsetof(union  A320, m13), 1);
		dcStructField(st, 's', offsetof(union  A320, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scisccdf} */
struct A321 { s m0; c m1; i m2; s m3; c m4; c m5; d m6; f m7; };
void f_cpA321(struct A321 *x, const struct A321 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA321(const struct A321 *x, const struct A321 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA321() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A321), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A321, m0), 1);
		dcStructField(st, 'c', offsetof(struct A321, m1), 1);
		dcStructField(st, 'i', offsetof(struct A321, m2), 1);
		dcStructField(st, 's', offsetof(struct A321, m3), 1);
		dcStructField(st, 'c', offsetof(struct A321, m4), 1);
		dcStructField(st, 'c', offsetof(struct A321, m5), 1);
		dcStructField(st, 'd', offsetof(struct A321, m6), 1);
		dcStructField(st, 'f', offsetof(struct A321, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cjsjjl> */
union  A322 { c m0; j m1; s m2; j m3; j m4; l m5; };
void f_cpA322(union  A322 *x, const union  A322 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA322(const union  A322 *x, const union  A322 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA322() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A322), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A322, m0), 1);
		dcStructField(st, 'j', offsetof(union  A322, m1), 1);
		dcStructField(st, 's', offsetof(union  A322, m2), 1);
		dcStructField(st, 'j', offsetof(union  A322, m3), 1);
		dcStructField(st, 'j', offsetof(union  A322, m4), 1);
		dcStructField(st, 'l', offsetof(union  A322, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idip} */
struct A323 { i m0; d m1; i m2; p m3; };
void f_cpA323(struct A323 *x, const struct A323 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA323(const struct A323 *x, const struct A323 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA323() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A323), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A323, m0), 1);
		dcStructField(st, 'd', offsetof(struct A323, m1), 1);
		dcStructField(st, 'i', offsetof(struct A323, m2), 1);
		dcStructField(st, 'p', offsetof(struct A323, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifdiljip{idip}l} */
struct A324 { i m0; f m1; d m2; i m3; l m4; j m5; i m6; p m7; struct A323 m8; l m9; };
void f_cpA324(struct A324 *x, const struct A324 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA323(&x->m8, &y->m8); x->m9 = y->m9; };
int f_cmpA324(const struct A324 *x, const struct A324 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA323(&x->m8, &y->m8) && x->m9 == y->m9; };
DCstruct* f_touchdcstA324() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A324), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A324, m0), 1);
		dcStructField(st, 'f', offsetof(struct A324, m1), 1);
		dcStructField(st, 'd', offsetof(struct A324, m2), 1);
		dcStructField(st, 'i', offsetof(struct A324, m3), 1);
		dcStructField(st, 'l', offsetof(struct A324, m4), 1);
		dcStructField(st, 'j', offsetof(struct A324, m5), 1);
		dcStructField(st, 'i', offsetof(struct A324, m6), 1);
		dcStructField(st, 'p', offsetof(struct A324, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A324, m8), 1, f_touchdcstA323());
		dcStructField(st, 'l', offsetof(struct A324, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ps{ifdiljip{idip}l}fs} */
struct A325 { p m0; s m1; struct A324 m2; f m3; s m4; };
void f_cpA325(struct A325 *x, const struct A325 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA324(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA325(const struct A325 *x, const struct A325 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA324(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA325() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A325), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A325, m0), 1);
		dcStructField(st, 's', offsetof(struct A325, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A325, m2), 1, f_touchdcstA324());
		dcStructField(st, 'f', offsetof(struct A325, m3), 1);
		dcStructField(st, 's', offsetof(struct A325, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfp> */
union  A326 { d m0; f m1; p m2; };
void f_cpA326(union  A326 *x, const union  A326 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA326(const union  A326 *x, const union  A326 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA326() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A326), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A326, m0), 1);
		dcStructField(st, 'f', offsetof(union  A326, m1), 1);
		dcStructField(st, 'p', offsetof(union  A326, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpjllflisfspdffici} */
struct A327 { c m0; p m1; j m2; l m3; l m4; f m5; l m6; i m7; s m8; f m9; s m10; p m11; d m12; f m13; f m14; i m15; c m16; i m17; };
void f_cpA327(struct A327 *x, const struct A327 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA327(const struct A327 *x, const struct A327 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA327() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A327), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A327, m0), 1);
		dcStructField(st, 'p', offsetof(struct A327, m1), 1);
		dcStructField(st, 'j', offsetof(struct A327, m2), 1);
		dcStructField(st, 'l', offsetof(struct A327, m3), 1);
		dcStructField(st, 'l', offsetof(struct A327, m4), 1);
		dcStructField(st, 'f', offsetof(struct A327, m5), 1);
		dcStructField(st, 'l', offsetof(struct A327, m6), 1);
		dcStructField(st, 'i', offsetof(struct A327, m7), 1);
		dcStructField(st, 's', offsetof(struct A327, m8), 1);
		dcStructField(st, 'f', offsetof(struct A327, m9), 1);
		dcStructField(st, 's', offsetof(struct A327, m10), 1);
		dcStructField(st, 'p', offsetof(struct A327, m11), 1);
		dcStructField(st, 'd', offsetof(struct A327, m12), 1);
		dcStructField(st, 'f', offsetof(struct A327, m13), 1);
		dcStructField(st, 'f', offsetof(struct A327, m14), 1);
		dcStructField(st, 'i', offsetof(struct A327, m15), 1);
		dcStructField(st, 'c', offsetof(struct A327, m16), 1);
		dcStructField(st, 'i', offsetof(struct A327, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <scijid> */
union  A328 { s m0; c m1; i m2; j m3; i m4; d m5; };
void f_cpA328(union  A328 *x, const union  A328 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA328(const union  A328 *x, const union  A328 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA328() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A328), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A328, m0), 1);
		dcStructField(st, 'c', offsetof(union  A328, m1), 1);
		dcStructField(st, 'i', offsetof(union  A328, m2), 1);
		dcStructField(st, 'j', offsetof(union  A328, m3), 1);
		dcStructField(st, 'i', offsetof(union  A328, m4), 1);
		dcStructField(st, 'd', offsetof(union  A328, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <slp<dfp>fsil{cpjllflisfspdffici}cssiipsdp<scijid>fp> */
union  A329 { s m0; l m1; p m2; union  A326 m3; f m4; s m5; i m6; l m7; struct A327 m8; c m9; s m10; s m11; i m12; i m13; p m14; s m15; d m16; p m17; union  A328 m18; f m19; p m20; };
void f_cpA329(union  A329 *x, const union  A329 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA326(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA327(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA328(&x->m18, &y->m18); x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA329(const union  A329 *x, const union  A329 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA326(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA327(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA328(&x->m18, &y->m18) && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA329() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A329), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A329, m0), 1);
		dcStructField(st, 'l', offsetof(union  A329, m1), 1);
		dcStructField(st, 'p', offsetof(union  A329, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A329, m3), 1, f_touchdcstA326());
		dcStructField(st, 'f', offsetof(union  A329, m4), 1);
		dcStructField(st, 's', offsetof(union  A329, m5), 1);
		dcStructField(st, 'i', offsetof(union  A329, m6), 1);
		dcStructField(st, 'l', offsetof(union  A329, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A329, m8), 1, f_touchdcstA327());
		dcStructField(st, 'c', offsetof(union  A329, m9), 1);
		dcStructField(st, 's', offsetof(union  A329, m10), 1);
		dcStructField(st, 's', offsetof(union  A329, m11), 1);
		dcStructField(st, 'i', offsetof(union  A329, m12), 1);
		dcStructField(st, 'i', offsetof(union  A329, m13), 1);
		dcStructField(st, 'p', offsetof(union  A329, m14), 1);
		dcStructField(st, 's', offsetof(union  A329, m15), 1);
		dcStructField(st, 'd', offsetof(union  A329, m16), 1);
		dcStructField(st, 'p', offsetof(union  A329, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A329, m18), 1, f_touchdcstA328());
		dcStructField(st, 'f', offsetof(union  A329, m19), 1);
		dcStructField(st, 'p', offsetof(union  A329, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sisl} */
struct A330 { s m0; i m1; s m2; l m3; };
void f_cpA330(struct A330 *x, const struct A330 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA330(const struct A330 *x, const struct A330 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA330() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A330), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A330, m0), 1);
		dcStructField(st, 'i', offsetof(struct A330, m1), 1);
		dcStructField(st, 's', offsetof(struct A330, m2), 1);
		dcStructField(st, 'l', offsetof(struct A330, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ssplffp> */
union  A331 { s m0; s m1; p m2; l m3; f m4; f m5; p m6; };
void f_cpA331(union  A331 *x, const union  A331 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA331(const union  A331 *x, const union  A331 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA331() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A331), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A331, m0), 1);
		dcStructField(st, 's', offsetof(union  A331, m1), 1);
		dcStructField(st, 'p', offsetof(union  A331, m2), 1);
		dcStructField(st, 'l', offsetof(union  A331, m3), 1);
		dcStructField(st, 'f', offsetof(union  A331, m4), 1);
		dcStructField(st, 'f', offsetof(union  A331, m5), 1);
		dcStructField(st, 'p', offsetof(union  A331, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpjficjcfjpsjjfdsiscjd} */
struct A332 { c m0; p m1; j m2; f m3; i m4; c m5; j m6; c m7; f m8; j m9; p m10; s m11; j m12; j m13; f m14; d m15; s m16; i m17; s m18; c m19; j m20; d m21; };
void f_cpA332(struct A332 *x, const struct A332 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA332(const struct A332 *x, const struct A332 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA332() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A332), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A332, m0), 1);
		dcStructField(st, 'p', offsetof(struct A332, m1), 1);
		dcStructField(st, 'j', offsetof(struct A332, m2), 1);
		dcStructField(st, 'f', offsetof(struct A332, m3), 1);
		dcStructField(st, 'i', offsetof(struct A332, m4), 1);
		dcStructField(st, 'c', offsetof(struct A332, m5), 1);
		dcStructField(st, 'j', offsetof(struct A332, m6), 1);
		dcStructField(st, 'c', offsetof(struct A332, m7), 1);
		dcStructField(st, 'f', offsetof(struct A332, m8), 1);
		dcStructField(st, 'j', offsetof(struct A332, m9), 1);
		dcStructField(st, 'p', offsetof(struct A332, m10), 1);
		dcStructField(st, 's', offsetof(struct A332, m11), 1);
		dcStructField(st, 'j', offsetof(struct A332, m12), 1);
		dcStructField(st, 'j', offsetof(struct A332, m13), 1);
		dcStructField(st, 'f', offsetof(struct A332, m14), 1);
		dcStructField(st, 'd', offsetof(struct A332, m15), 1);
		dcStructField(st, 's', offsetof(struct A332, m16), 1);
		dcStructField(st, 'i', offsetof(struct A332, m17), 1);
		dcStructField(st, 's', offsetof(struct A332, m18), 1);
		dcStructField(st, 'c', offsetof(struct A332, m19), 1);
		dcStructField(st, 'j', offsetof(struct A332, m20), 1);
		dcStructField(st, 'd', offsetof(struct A332, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dji<ssplffp>cp{cpjficjcfjpsjjfdsiscjd}lcd{d}l> */
union  A333 { d m0; j m1; i m2; union  A331 m3; c m4; p m5; struct A332 m6; l m7; c m8; d m9; struct A156 m10; l m11; };
void f_cpA333(union  A333 *x, const union  A333 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA331(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA332(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA156(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA333(const union  A333 *x, const union  A333 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA331(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA332(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA156(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA333() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A333), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A333, m0), 1);
		dcStructField(st, 'j', offsetof(union  A333, m1), 1);
		dcStructField(st, 'i', offsetof(union  A333, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A333, m3), 1, f_touchdcstA331());
		dcStructField(st, 'c', offsetof(union  A333, m4), 1);
		dcStructField(st, 'p', offsetof(union  A333, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A333, m6), 1, f_touchdcstA332());
		dcStructField(st, 'l', offsetof(union  A333, m7), 1);
		dcStructField(st, 'c', offsetof(union  A333, m8), 1);
		dcStructField(st, 'd', offsetof(union  A333, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A333, m10), 1, f_touchdcstA156());
		dcStructField(st, 'l', offsetof(union  A333, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c<dji<ssplffp>cp{cpjficjcfjpsjjfdsiscjd}lcd{d}l>} */
struct A334 { c m0; union  A333 m1; };
void f_cpA334(struct A334 *x, const struct A334 *y) { x->m0 = y->m0; f_cpA333(&x->m1, &y->m1); };
int f_cmpA334(const struct A334 *x, const struct A334 *y) { return x->m0 == y->m0 && f_cmpA333(&x->m1, &y->m1); };
DCstruct* f_touchdcstA334() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A334), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A334, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A334, m1), 1, f_touchdcstA333());
		dcCloseStruct(st);
	}
	return st;
};
/* {lddslp} */
struct A335 { l m0; d m1; d m2; s m3; l m4; p m5; };
void f_cpA335(struct A335 *x, const struct A335 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA335(const struct A335 *x, const struct A335 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA335() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A335), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A335, m0), 1);
		dcStructField(st, 'd', offsetof(struct A335, m1), 1);
		dcStructField(st, 'd', offsetof(struct A335, m2), 1);
		dcStructField(st, 's', offsetof(struct A335, m3), 1);
		dcStructField(st, 'l', offsetof(struct A335, m4), 1);
		dcStructField(st, 'p', offsetof(struct A335, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d{lddslp}lcsdpdpcifdfjij> */
union  A336 { d m0; struct A335 m1; l m2; c m3; s m4; d m5; p m6; d m7; p m8; c m9; i m10; f m11; d m12; f m13; j m14; i m15; j m16; };
void f_cpA336(union  A336 *x, const union  A336 *y) { x->m0 = y->m0; f_cpA335(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA336(const union  A336 *x, const union  A336 *y) { return x->m0 == y->m0 && f_cmpA335(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA336() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(union  A336), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A336, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A336, m1), 1, f_touchdcstA335());
		dcStructField(st, 'l', offsetof(union  A336, m2), 1);
		dcStructField(st, 'c', offsetof(union  A336, m3), 1);
		dcStructField(st, 's', offsetof(union  A336, m4), 1);
		dcStructField(st, 'd', offsetof(union  A336, m5), 1);
		dcStructField(st, 'p', offsetof(union  A336, m6), 1);
		dcStructField(st, 'd', offsetof(union  A336, m7), 1);
		dcStructField(st, 'p', offsetof(union  A336, m8), 1);
		dcStructField(st, 'c', offsetof(union  A336, m9), 1);
		dcStructField(st, 'i', offsetof(union  A336, m10), 1);
		dcStructField(st, 'f', offsetof(union  A336, m11), 1);
		dcStructField(st, 'd', offsetof(union  A336, m12), 1);
		dcStructField(st, 'f', offsetof(union  A336, m13), 1);
		dcStructField(st, 'j', offsetof(union  A336, m14), 1);
		dcStructField(st, 'i', offsetof(union  A336, m15), 1);
		dcStructField(st, 'j', offsetof(union  A336, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scc} */
struct A337 { s m0; c m1; c m2; };
void f_cpA337(struct A337 *x, const struct A337 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA337(const struct A337 *x, const struct A337 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA337() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A337), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A337, m0), 1);
		dcStructField(st, 'c', offsetof(struct A337, m1), 1);
		dcStructField(st, 'c', offsetof(struct A337, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lfflccilifjpdfp> */
union  A338 { l m0; f m1; f m2; l m3; c m4; c m5; i m6; l m7; i m8; f m9; j m10; p m11; d m12; f m13; p m14; };
void f_cpA338(union  A338 *x, const union  A338 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA338(const union  A338 *x, const union  A338 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA338() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A338), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A338, m0), 1);
		dcStructField(st, 'f', offsetof(union  A338, m1), 1);
		dcStructField(st, 'f', offsetof(union  A338, m2), 1);
		dcStructField(st, 'l', offsetof(union  A338, m3), 1);
		dcStructField(st, 'c', offsetof(union  A338, m4), 1);
		dcStructField(st, 'c', offsetof(union  A338, m5), 1);
		dcStructField(st, 'i', offsetof(union  A338, m6), 1);
		dcStructField(st, 'l', offsetof(union  A338, m7), 1);
		dcStructField(st, 'i', offsetof(union  A338, m8), 1);
		dcStructField(st, 'f', offsetof(union  A338, m9), 1);
		dcStructField(st, 'j', offsetof(union  A338, m10), 1);
		dcStructField(st, 'p', offsetof(union  A338, m11), 1);
		dcStructField(st, 'd', offsetof(union  A338, m12), 1);
		dcStructField(st, 'f', offsetof(union  A338, m13), 1);
		dcStructField(st, 'p', offsetof(union  A338, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pf} */
struct A339 { p m0; f m1; };
void f_cpA339(struct A339 *x, const struct A339 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA339(const struct A339 *x, const struct A339 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA339() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A339), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A339, m0), 1);
		dcStructField(st, 'f', offsetof(struct A339, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ciif} */
struct A340 { c m0; i m1; i m2; f m3; };
void f_cpA340(struct A340 *x, const struct A340 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA340(const struct A340 *x, const struct A340 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA340() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A340), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A340, m0), 1);
		dcStructField(st, 'i', offsetof(struct A340, m1), 1);
		dcStructField(st, 'i', offsetof(struct A340, m2), 1);
		dcStructField(st, 'f', offsetof(struct A340, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csspsdccsjlj} */
struct A341 { c m0; s m1; s m2; p m3; s m4; d m5; c m6; c m7; s m8; j m9; l m10; j m11; };
void f_cpA341(struct A341 *x, const struct A341 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA341(const struct A341 *x, const struct A341 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA341() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A341), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A341, m0), 1);
		dcStructField(st, 's', offsetof(struct A341, m1), 1);
		dcStructField(st, 's', offsetof(struct A341, m2), 1);
		dcStructField(st, 'p', offsetof(struct A341, m3), 1);
		dcStructField(st, 's', offsetof(struct A341, m4), 1);
		dcStructField(st, 'd', offsetof(struct A341, m5), 1);
		dcStructField(st, 'c', offsetof(struct A341, m6), 1);
		dcStructField(st, 'c', offsetof(struct A341, m7), 1);
		dcStructField(st, 's', offsetof(struct A341, m8), 1);
		dcStructField(st, 'j', offsetof(struct A341, m9), 1);
		dcStructField(st, 'l', offsetof(struct A341, m10), 1);
		dcStructField(st, 'j', offsetof(struct A341, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{pf}{ciif}ci{csspsdccsjlj}} */
struct A342 { struct A339 m0; struct A340 m1; c m2; i m3; struct A341 m4; };
void f_cpA342(struct A342 *x, const struct A342 *y) { f_cpA339(&x->m0, &y->m0); f_cpA340(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; f_cpA341(&x->m4, &y->m4); };
int f_cmpA342(const struct A342 *x, const struct A342 *y) { return f_cmpA339(&x->m0, &y->m0) && f_cmpA340(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA341(&x->m4, &y->m4); };
DCstruct* f_touchdcstA342() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A342), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A342, m0), 1, f_touchdcstA339());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A342, m1), 1, f_touchdcstA340());
		dcStructField(st, 'c', offsetof(struct A342, m2), 1);
		dcStructField(st, 'i', offsetof(struct A342, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A342, m4), 1, f_touchdcstA341());
		dcCloseStruct(st);
	}
	return st;
};
/* <fpp> */
union  A343 { f m0; p m1; p m2; };
void f_cpA343(union  A343 *x, const union  A343 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA343(const union  A343 *x, const union  A343 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA343() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A343), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A343, m0), 1);
		dcStructField(st, 'p', offsetof(union  A343, m1), 1);
		dcStructField(st, 'p', offsetof(union  A343, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ijslslid> */
union  A344 { i m0; j m1; s m2; l m3; s m4; l m5; i m6; d m7; };
void f_cpA344(union  A344 *x, const union  A344 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA344(const union  A344 *x, const union  A344 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA344() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A344), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A344, m0), 1);
		dcStructField(st, 'j', offsetof(union  A344, m1), 1);
		dcStructField(st, 's', offsetof(union  A344, m2), 1);
		dcStructField(st, 'l', offsetof(union  A344, m3), 1);
		dcStructField(st, 's', offsetof(union  A344, m4), 1);
		dcStructField(st, 'l', offsetof(union  A344, m5), 1);
		dcStructField(st, 'i', offsetof(union  A344, m6), 1);
		dcStructField(st, 'd', offsetof(union  A344, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cddljfjsclcfsilipsfissjdc> */
union  A345 { c m0; d m1; d m2; l m3; j m4; f m5; j m6; s m7; c m8; l m9; c m10; f m11; s m12; i m13; l m14; i m15; p m16; s m17; f m18; i m19; s m20; s m21; j m22; d m23; c m24; };
void f_cpA345(union  A345 *x, const union  A345 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA345(const union  A345 *x, const union  A345 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA345() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(union  A345), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A345, m0), 1);
		dcStructField(st, 'd', offsetof(union  A345, m1), 1);
		dcStructField(st, 'd', offsetof(union  A345, m2), 1);
		dcStructField(st, 'l', offsetof(union  A345, m3), 1);
		dcStructField(st, 'j', offsetof(union  A345, m4), 1);
		dcStructField(st, 'f', offsetof(union  A345, m5), 1);
		dcStructField(st, 'j', offsetof(union  A345, m6), 1);
		dcStructField(st, 's', offsetof(union  A345, m7), 1);
		dcStructField(st, 'c', offsetof(union  A345, m8), 1);
		dcStructField(st, 'l', offsetof(union  A345, m9), 1);
		dcStructField(st, 'c', offsetof(union  A345, m10), 1);
		dcStructField(st, 'f', offsetof(union  A345, m11), 1);
		dcStructField(st, 's', offsetof(union  A345, m12), 1);
		dcStructField(st, 'i', offsetof(union  A345, m13), 1);
		dcStructField(st, 'l', offsetof(union  A345, m14), 1);
		dcStructField(st, 'i', offsetof(union  A345, m15), 1);
		dcStructField(st, 'p', offsetof(union  A345, m16), 1);
		dcStructField(st, 's', offsetof(union  A345, m17), 1);
		dcStructField(st, 'f', offsetof(union  A345, m18), 1);
		dcStructField(st, 'i', offsetof(union  A345, m19), 1);
		dcStructField(st, 's', offsetof(union  A345, m20), 1);
		dcStructField(st, 's', offsetof(union  A345, m21), 1);
		dcStructField(st, 'j', offsetof(union  A345, m22), 1);
		dcStructField(st, 'd', offsetof(union  A345, m23), 1);
		dcStructField(st, 'c', offsetof(union  A345, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jflliccssdljisdcpjcjii> */
union  A346 { j m0; f m1; l m2; l m3; i m4; c m5; c m6; s m7; s m8; d m9; l m10; j m11; i m12; s m13; d m14; c m15; p m16; j m17; c m18; j m19; i m20; i m21; };
void f_cpA346(union  A346 *x, const union  A346 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA346(const union  A346 *x, const union  A346 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA346() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(union  A346), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A346, m0), 1);
		dcStructField(st, 'f', offsetof(union  A346, m1), 1);
		dcStructField(st, 'l', offsetof(union  A346, m2), 1);
		dcStructField(st, 'l', offsetof(union  A346, m3), 1);
		dcStructField(st, 'i', offsetof(union  A346, m4), 1);
		dcStructField(st, 'c', offsetof(union  A346, m5), 1);
		dcStructField(st, 'c', offsetof(union  A346, m6), 1);
		dcStructField(st, 's', offsetof(union  A346, m7), 1);
		dcStructField(st, 's', offsetof(union  A346, m8), 1);
		dcStructField(st, 'd', offsetof(union  A346, m9), 1);
		dcStructField(st, 'l', offsetof(union  A346, m10), 1);
		dcStructField(st, 'j', offsetof(union  A346, m11), 1);
		dcStructField(st, 'i', offsetof(union  A346, m12), 1);
		dcStructField(st, 's', offsetof(union  A346, m13), 1);
		dcStructField(st, 'd', offsetof(union  A346, m14), 1);
		dcStructField(st, 'c', offsetof(union  A346, m15), 1);
		dcStructField(st, 'p', offsetof(union  A346, m16), 1);
		dcStructField(st, 'j', offsetof(union  A346, m17), 1);
		dcStructField(st, 'c', offsetof(union  A346, m18), 1);
		dcStructField(st, 'j', offsetof(union  A346, m19), 1);
		dcStructField(st, 'i', offsetof(union  A346, m20), 1);
		dcStructField(st, 'i', offsetof(union  A346, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pccpliffiddlidi} */
struct A347 { p m0; c m1; c m2; p m3; l m4; i m5; f m6; f m7; i m8; d m9; d m10; l m11; i m12; d m13; i m14; };
void f_cpA347(struct A347 *x, const struct A347 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA347(const struct A347 *x, const struct A347 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA347() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A347), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A347, m0), 1);
		dcStructField(st, 'c', offsetof(struct A347, m1), 1);
		dcStructField(st, 'c', offsetof(struct A347, m2), 1);
		dcStructField(st, 'p', offsetof(struct A347, m3), 1);
		dcStructField(st, 'l', offsetof(struct A347, m4), 1);
		dcStructField(st, 'i', offsetof(struct A347, m5), 1);
		dcStructField(st, 'f', offsetof(struct A347, m6), 1);
		dcStructField(st, 'f', offsetof(struct A347, m7), 1);
		dcStructField(st, 'i', offsetof(struct A347, m8), 1);
		dcStructField(st, 'd', offsetof(struct A347, m9), 1);
		dcStructField(st, 'd', offsetof(struct A347, m10), 1);
		dcStructField(st, 'l', offsetof(struct A347, m11), 1);
		dcStructField(st, 'i', offsetof(struct A347, m12), 1);
		dcStructField(st, 'd', offsetof(struct A347, m13), 1);
		dcStructField(st, 'i', offsetof(struct A347, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jfcppjijs> */
union  A348 { j m0; f m1; c m2; p m3; p m4; j m5; i m6; j m7; s m8; };
void f_cpA348(union  A348 *x, const union  A348 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA348(const union  A348 *x, const union  A348 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA348() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A348), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A348, m0), 1);
		dcStructField(st, 'f', offsetof(union  A348, m1), 1);
		dcStructField(st, 'c', offsetof(union  A348, m2), 1);
		dcStructField(st, 'p', offsetof(union  A348, m3), 1);
		dcStructField(st, 'p', offsetof(union  A348, m4), 1);
		dcStructField(st, 'j', offsetof(union  A348, m5), 1);
		dcStructField(st, 'i', offsetof(union  A348, m6), 1);
		dcStructField(st, 'j', offsetof(union  A348, m7), 1);
		dcStructField(st, 's', offsetof(union  A348, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fssflsldpsijcpc} */
struct A349 { f m0; s m1; s m2; f m3; l m4; s m5; l m6; d m7; p m8; s m9; i m10; j m11; c m12; p m13; c m14; };
void f_cpA349(struct A349 *x, const struct A349 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA349(const struct A349 *x, const struct A349 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA349() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A349), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A349, m0), 1);
		dcStructField(st, 's', offsetof(struct A349, m1), 1);
		dcStructField(st, 's', offsetof(struct A349, m2), 1);
		dcStructField(st, 'f', offsetof(struct A349, m3), 1);
		dcStructField(st, 'l', offsetof(struct A349, m4), 1);
		dcStructField(st, 's', offsetof(struct A349, m5), 1);
		dcStructField(st, 'l', offsetof(struct A349, m6), 1);
		dcStructField(st, 'd', offsetof(struct A349, m7), 1);
		dcStructField(st, 'p', offsetof(struct A349, m8), 1);
		dcStructField(st, 's', offsetof(struct A349, m9), 1);
		dcStructField(st, 'i', offsetof(struct A349, m10), 1);
		dcStructField(st, 'j', offsetof(struct A349, m11), 1);
		dcStructField(st, 'c', offsetof(struct A349, m12), 1);
		dcStructField(st, 'p', offsetof(struct A349, m13), 1);
		dcStructField(st, 'c', offsetof(struct A349, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cc} */
struct A350 { c m0; c m1; };
void f_cpA350(struct A350 *x, const struct A350 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA350(const struct A350 *x, const struct A350 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA350() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A350), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A350, m0), 1);
		dcStructField(st, 'c', offsetof(struct A350, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sidclif<ijslslid>f<cddljfjsclcfsilipsfissjdc>sdff<jflliccssdljisdcpjcjii>i{pccpliffiddlidi}fii<jfcppjijs>{f}sji{fssflsldpsijcpc}{cc}cp} */
struct A351 { s m0; i m1; d m2; c m3; l m4; i m5; f m6; union  A344 m7; f m8; union  A345 m9; s m10; d m11; f m12; f m13; union  A346 m14; i m15; struct A347 m16; f m17; i m18; i m19; union  A348 m20; struct A257 m21; s m22; j m23; i m24; struct A349 m25; struct A350 m26; c m27; p m28; };
void f_cpA351(struct A351 *x, const struct A351 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA344(&x->m7, &y->m7); x->m8 = y->m8; f_cpA345(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA346(&x->m14, &y->m14); x->m15 = y->m15; f_cpA347(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA348(&x->m20, &y->m20); f_cpA257(&x->m21, &y->m21); x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; f_cpA349(&x->m25, &y->m25); f_cpA350(&x->m26, &y->m26); x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA351(const struct A351 *x, const struct A351 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA344(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA345(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA346(&x->m14, &y->m14) && x->m15 == y->m15 && f_cmpA347(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA348(&x->m20, &y->m20) && f_cmpA257(&x->m21, &y->m21) && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && f_cmpA349(&x->m25, &y->m25) && f_cmpA350(&x->m26, &y->m26) && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA351() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(struct A351), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A351, m0), 1);
		dcStructField(st, 'i', offsetof(struct A351, m1), 1);
		dcStructField(st, 'd', offsetof(struct A351, m2), 1);
		dcStructField(st, 'c', offsetof(struct A351, m3), 1);
		dcStructField(st, 'l', offsetof(struct A351, m4), 1);
		dcStructField(st, 'i', offsetof(struct A351, m5), 1);
		dcStructField(st, 'f', offsetof(struct A351, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m7), 1, f_touchdcstA344());
		dcStructField(st, 'f', offsetof(struct A351, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m9), 1, f_touchdcstA345());
		dcStructField(st, 's', offsetof(struct A351, m10), 1);
		dcStructField(st, 'd', offsetof(struct A351, m11), 1);
		dcStructField(st, 'f', offsetof(struct A351, m12), 1);
		dcStructField(st, 'f', offsetof(struct A351, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m14), 1, f_touchdcstA346());
		dcStructField(st, 'i', offsetof(struct A351, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m16), 1, f_touchdcstA347());
		dcStructField(st, 'f', offsetof(struct A351, m17), 1);
		dcStructField(st, 'i', offsetof(struct A351, m18), 1);
		dcStructField(st, 'i', offsetof(struct A351, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m20), 1, f_touchdcstA348());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m21), 1, f_touchdcstA257());
		dcStructField(st, 's', offsetof(struct A351, m22), 1);
		dcStructField(st, 'j', offsetof(struct A351, m23), 1);
		dcStructField(st, 'i', offsetof(struct A351, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m25), 1, f_touchdcstA349());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A351, m26), 1, f_touchdcstA350());
		dcStructField(st, 'c', offsetof(struct A351, m27), 1);
		dcStructField(st, 'p', offsetof(struct A351, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{sidclif<ijslslid>f<cddljfjsclcfsilipsfissjdc>sdff<jflliccssdljisdcpjcjii>i{pccpliffiddlidi}fii<jfcppjijs>{f}sji{fssflsldpsijcpc}{cc}cp}> */
union  A352 { struct A351 m0; };
void f_cpA352(union  A352 *x, const union  A352 *y) { f_cpA351(&x->m0, &y->m0); };
int f_cmpA352(const union  A352 *x, const union  A352 *y) { return f_cmpA351(&x->m0, &y->m0); };
DCstruct* f_touchdcstA352() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A352), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A352, m0), 1, f_touchdcstA351());
		dcCloseStruct(st);
	}
	return st;
};
/* {pdddl} */
struct A353 { p m0; d m1; d m2; d m3; l m4; };
void f_cpA353(struct A353 *x, const struct A353 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA353(const struct A353 *x, const struct A353 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA353() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A353), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A353, m0), 1);
		dcStructField(st, 'd', offsetof(struct A353, m1), 1);
		dcStructField(st, 'd', offsetof(struct A353, m2), 1);
		dcStructField(st, 'd', offsetof(struct A353, m3), 1);
		dcStructField(st, 'l', offsetof(struct A353, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cficfdipjfjdssddcsccspppldjlisdidiil> */
union  A354 { c m0; f m1; i m2; c m3; f m4; d m5; i m6; p m7; j m8; f m9; j m10; d m11; s m12; s m13; d m14; d m15; c m16; s m17; c m18; c m19; s m20; p m21; p m22; p m23; l m24; d m25; j m26; l m27; i m28; s m29; d m30; i m31; d m32; i m33; i m34; l m35; };
void f_cpA354(union  A354 *x, const union  A354 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; };
int f_cmpA354(const union  A354 *x, const union  A354 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35; };
DCstruct* f_touchdcstA354() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(36, sizeof(union  A354), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A354, m0), 1);
		dcStructField(st, 'f', offsetof(union  A354, m1), 1);
		dcStructField(st, 'i', offsetof(union  A354, m2), 1);
		dcStructField(st, 'c', offsetof(union  A354, m3), 1);
		dcStructField(st, 'f', offsetof(union  A354, m4), 1);
		dcStructField(st, 'd', offsetof(union  A354, m5), 1);
		dcStructField(st, 'i', offsetof(union  A354, m6), 1);
		dcStructField(st, 'p', offsetof(union  A354, m7), 1);
		dcStructField(st, 'j', offsetof(union  A354, m8), 1);
		dcStructField(st, 'f', offsetof(union  A354, m9), 1);
		dcStructField(st, 'j', offsetof(union  A354, m10), 1);
		dcStructField(st, 'd', offsetof(union  A354, m11), 1);
		dcStructField(st, 's', offsetof(union  A354, m12), 1);
		dcStructField(st, 's', offsetof(union  A354, m13), 1);
		dcStructField(st, 'd', offsetof(union  A354, m14), 1);
		dcStructField(st, 'd', offsetof(union  A354, m15), 1);
		dcStructField(st, 'c', offsetof(union  A354, m16), 1);
		dcStructField(st, 's', offsetof(union  A354, m17), 1);
		dcStructField(st, 'c', offsetof(union  A354, m18), 1);
		dcStructField(st, 'c', offsetof(union  A354, m19), 1);
		dcStructField(st, 's', offsetof(union  A354, m20), 1);
		dcStructField(st, 'p', offsetof(union  A354, m21), 1);
		dcStructField(st, 'p', offsetof(union  A354, m22), 1);
		dcStructField(st, 'p', offsetof(union  A354, m23), 1);
		dcStructField(st, 'l', offsetof(union  A354, m24), 1);
		dcStructField(st, 'd', offsetof(union  A354, m25), 1);
		dcStructField(st, 'j', offsetof(union  A354, m26), 1);
		dcStructField(st, 'l', offsetof(union  A354, m27), 1);
		dcStructField(st, 'i', offsetof(union  A354, m28), 1);
		dcStructField(st, 's', offsetof(union  A354, m29), 1);
		dcStructField(st, 'd', offsetof(union  A354, m30), 1);
		dcStructField(st, 'i', offsetof(union  A354, m31), 1);
		dcStructField(st, 'd', offsetof(union  A354, m32), 1);
		dcStructField(st, 'i', offsetof(union  A354, m33), 1);
		dcStructField(st, 'i', offsetof(union  A354, m34), 1);
		dcStructField(st, 'l', offsetof(union  A354, m35), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cccddcsiff> */
union  A355 { c m0; c m1; c m2; d m3; d m4; c m5; s m6; i m7; f m8; f m9; };
void f_cpA355(union  A355 *x, const union  A355 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA355(const union  A355 *x, const union  A355 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA355() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A355), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A355, m0), 1);
		dcStructField(st, 'c', offsetof(union  A355, m1), 1);
		dcStructField(st, 'c', offsetof(union  A355, m2), 1);
		dcStructField(st, 'd', offsetof(union  A355, m3), 1);
		dcStructField(st, 'd', offsetof(union  A355, m4), 1);
		dcStructField(st, 'c', offsetof(union  A355, m5), 1);
		dcStructField(st, 's', offsetof(union  A355, m6), 1);
		dcStructField(st, 'i', offsetof(union  A355, m7), 1);
		dcStructField(st, 'f', offsetof(union  A355, m8), 1);
		dcStructField(st, 'f', offsetof(union  A355, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sppl} */
struct A356 { s m0; p m1; p m2; l m3; };
void f_cpA356(struct A356 *x, const struct A356 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA356(const struct A356 *x, const struct A356 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA356() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A356), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A356, m0), 1);
		dcStructField(st, 'p', offsetof(struct A356, m1), 1);
		dcStructField(st, 'p', offsetof(struct A356, m2), 1);
		dcStructField(st, 'l', offsetof(struct A356, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pjdjjifcijisfiippspdf> */
union  A357 { p m0; j m1; d m2; j m3; j m4; i m5; f m6; c m7; i m8; j m9; i m10; s m11; f m12; i m13; i m14; p m15; p m16; s m17; p m18; d m19; f m20; };
void f_cpA357(union  A357 *x, const union  A357 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA357(const union  A357 *x, const union  A357 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA357() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A357), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A357, m0), 1);
		dcStructField(st, 'j', offsetof(union  A357, m1), 1);
		dcStructField(st, 'd', offsetof(union  A357, m2), 1);
		dcStructField(st, 'j', offsetof(union  A357, m3), 1);
		dcStructField(st, 'j', offsetof(union  A357, m4), 1);
		dcStructField(st, 'i', offsetof(union  A357, m5), 1);
		dcStructField(st, 'f', offsetof(union  A357, m6), 1);
		dcStructField(st, 'c', offsetof(union  A357, m7), 1);
		dcStructField(st, 'i', offsetof(union  A357, m8), 1);
		dcStructField(st, 'j', offsetof(union  A357, m9), 1);
		dcStructField(st, 'i', offsetof(union  A357, m10), 1);
		dcStructField(st, 's', offsetof(union  A357, m11), 1);
		dcStructField(st, 'f', offsetof(union  A357, m12), 1);
		dcStructField(st, 'i', offsetof(union  A357, m13), 1);
		dcStructField(st, 'i', offsetof(union  A357, m14), 1);
		dcStructField(st, 'p', offsetof(union  A357, m15), 1);
		dcStructField(st, 'p', offsetof(union  A357, m16), 1);
		dcStructField(st, 's', offsetof(union  A357, m17), 1);
		dcStructField(st, 'p', offsetof(union  A357, m18), 1);
		dcStructField(st, 'd', offsetof(union  A357, m19), 1);
		dcStructField(st, 'f', offsetof(union  A357, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ipdpidcijjj> */
union  A358 { i m0; p m1; d m2; p m3; i m4; d m5; c m6; i m7; j m8; j m9; j m10; };
void f_cpA358(union  A358 *x, const union  A358 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA358(const union  A358 *x, const union  A358 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA358() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A358), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A358, m0), 1);
		dcStructField(st, 'p', offsetof(union  A358, m1), 1);
		dcStructField(st, 'd', offsetof(union  A358, m2), 1);
		dcStructField(st, 'p', offsetof(union  A358, m3), 1);
		dcStructField(st, 'i', offsetof(union  A358, m4), 1);
		dcStructField(st, 'd', offsetof(union  A358, m5), 1);
		dcStructField(st, 'c', offsetof(union  A358, m6), 1);
		dcStructField(st, 'i', offsetof(union  A358, m7), 1);
		dcStructField(st, 'j', offsetof(union  A358, m8), 1);
		dcStructField(st, 'j', offsetof(union  A358, m9), 1);
		dcStructField(st, 'j', offsetof(union  A358, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slif{pdddl}ls<p>dplllcppjs<cficfdipjfjdssddcsccspppldjlisdidiil><cccddcsiff>cfjd{sppl}li<pjdjjifcijisfiippspdf>ljii{p}clsi<ipdpidcijjj>} */
struct A359 { s m0; l m1; i m2; f m3; struct A353 m4; l m5; s m6; union  A161 m7; d m8; p m9; l m10; l m11; l m12; c m13; p m14; p m15; j m16; s m17; union  A354 m18; union  A355 m19; c m20; f m21; j m22; d m23; struct A356 m24; l m25; i m26; union  A357 m27; l m28; j m29; i m30; i m31; struct A250 m32; c m33; l m34; s m35; i m36; union  A358 m37; };
void f_cpA359(struct A359 *x, const struct A359 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA353(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA161(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA354(&x->m18, &y->m18); f_cpA355(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; f_cpA356(&x->m24, &y->m24); x->m25 = y->m25; x->m26 = y->m26; f_cpA357(&x->m27, &y->m27); x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; f_cpA250(&x->m32, &y->m32); x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; f_cpA358(&x->m37, &y->m37); };
int f_cmpA359(const struct A359 *x, const struct A359 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA353(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA161(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA354(&x->m18, &y->m18) && f_cmpA355(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && f_cmpA356(&x->m24, &y->m24) && x->m25 == y->m25 && x->m26 == y->m26 && f_cmpA357(&x->m27, &y->m27) && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && f_cmpA250(&x->m32, &y->m32) && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && f_cmpA358(&x->m37, &y->m37); };
DCstruct* f_touchdcstA359() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(38, sizeof(struct A359), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A359, m0), 1);
		dcStructField(st, 'l', offsetof(struct A359, m1), 1);
		dcStructField(st, 'i', offsetof(struct A359, m2), 1);
		dcStructField(st, 'f', offsetof(struct A359, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m4), 1, f_touchdcstA353());
		dcStructField(st, 'l', offsetof(struct A359, m5), 1);
		dcStructField(st, 's', offsetof(struct A359, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m7), 1, f_touchdcstA161());
		dcStructField(st, 'd', offsetof(struct A359, m8), 1);
		dcStructField(st, 'p', offsetof(struct A359, m9), 1);
		dcStructField(st, 'l', offsetof(struct A359, m10), 1);
		dcStructField(st, 'l', offsetof(struct A359, m11), 1);
		dcStructField(st, 'l', offsetof(struct A359, m12), 1);
		dcStructField(st, 'c', offsetof(struct A359, m13), 1);
		dcStructField(st, 'p', offsetof(struct A359, m14), 1);
		dcStructField(st, 'p', offsetof(struct A359, m15), 1);
		dcStructField(st, 'j', offsetof(struct A359, m16), 1);
		dcStructField(st, 's', offsetof(struct A359, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m18), 1, f_touchdcstA354());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m19), 1, f_touchdcstA355());
		dcStructField(st, 'c', offsetof(struct A359, m20), 1);
		dcStructField(st, 'f', offsetof(struct A359, m21), 1);
		dcStructField(st, 'j', offsetof(struct A359, m22), 1);
		dcStructField(st, 'd', offsetof(struct A359, m23), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m24), 1, f_touchdcstA356());
		dcStructField(st, 'l', offsetof(struct A359, m25), 1);
		dcStructField(st, 'i', offsetof(struct A359, m26), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m27), 1, f_touchdcstA357());
		dcStructField(st, 'l', offsetof(struct A359, m28), 1);
		dcStructField(st, 'j', offsetof(struct A359, m29), 1);
		dcStructField(st, 'i', offsetof(struct A359, m30), 1);
		dcStructField(st, 'i', offsetof(struct A359, m31), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m32), 1, f_touchdcstA250());
		dcStructField(st, 'c', offsetof(struct A359, m33), 1);
		dcStructField(st, 'l', offsetof(struct A359, m34), 1);
		dcStructField(st, 's', offsetof(struct A359, m35), 1);
		dcStructField(st, 'i', offsetof(struct A359, m36), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A359, m37), 1, f_touchdcstA358());
		dcCloseStruct(st);
	}
	return st;
};
/* <lfpc> */
union  A360 { l m0; f m1; p m2; c m3; };
void f_cpA360(union  A360 *x, const union  A360 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA360(const union  A360 *x, const union  A360 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA360() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A360), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A360, m0), 1);
		dcStructField(st, 'f', offsetof(union  A360, m1), 1);
		dcStructField(st, 'p', offsetof(union  A360, m2), 1);
		dcStructField(st, 'c', offsetof(union  A360, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ps} */
struct A361 { p m0; s m1; };
void f_cpA361(struct A361 *x, const struct A361 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA361(const struct A361 *x, const struct A361 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA361() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A361), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A361, m0), 1);
		dcStructField(st, 's', offsetof(struct A361, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipsjlflccli} */
struct A362 { i m0; p m1; s m2; j m3; l m4; f m5; l m6; c m7; c m8; l m9; i m10; };
void f_cpA362(struct A362 *x, const struct A362 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA362(const struct A362 *x, const struct A362 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA362() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A362), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A362, m0), 1);
		dcStructField(st, 'p', offsetof(struct A362, m1), 1);
		dcStructField(st, 's', offsetof(struct A362, m2), 1);
		dcStructField(st, 'j', offsetof(struct A362, m3), 1);
		dcStructField(st, 'l', offsetof(struct A362, m4), 1);
		dcStructField(st, 'f', offsetof(struct A362, m5), 1);
		dcStructField(st, 'l', offsetof(struct A362, m6), 1);
		dcStructField(st, 'c', offsetof(struct A362, m7), 1);
		dcStructField(st, 'c', offsetof(struct A362, m8), 1);
		dcStructField(st, 'l', offsetof(struct A362, m9), 1);
		dcStructField(st, 'i', offsetof(struct A362, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scsfpisjdijcpccfpjddplspssdsfs} */
struct A363 { s m0; c m1; s m2; f m3; p m4; i m5; s m6; j m7; d m8; i m9; j m10; c m11; p m12; c m13; c m14; f m15; p m16; j m17; d m18; d m19; p m20; l m21; s m22; p m23; s m24; s m25; d m26; s m27; f m28; s m29; };
void f_cpA363(struct A363 *x, const struct A363 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA363(const struct A363 *x, const struct A363 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA363() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A363), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A363, m0), 1);
		dcStructField(st, 'c', offsetof(struct A363, m1), 1);
		dcStructField(st, 's', offsetof(struct A363, m2), 1);
		dcStructField(st, 'f', offsetof(struct A363, m3), 1);
		dcStructField(st, 'p', offsetof(struct A363, m4), 1);
		dcStructField(st, 'i', offsetof(struct A363, m5), 1);
		dcStructField(st, 's', offsetof(struct A363, m6), 1);
		dcStructField(st, 'j', offsetof(struct A363, m7), 1);
		dcStructField(st, 'd', offsetof(struct A363, m8), 1);
		dcStructField(st, 'i', offsetof(struct A363, m9), 1);
		dcStructField(st, 'j', offsetof(struct A363, m10), 1);
		dcStructField(st, 'c', offsetof(struct A363, m11), 1);
		dcStructField(st, 'p', offsetof(struct A363, m12), 1);
		dcStructField(st, 'c', offsetof(struct A363, m13), 1);
		dcStructField(st, 'c', offsetof(struct A363, m14), 1);
		dcStructField(st, 'f', offsetof(struct A363, m15), 1);
		dcStructField(st, 'p', offsetof(struct A363, m16), 1);
		dcStructField(st, 'j', offsetof(struct A363, m17), 1);
		dcStructField(st, 'd', offsetof(struct A363, m18), 1);
		dcStructField(st, 'd', offsetof(struct A363, m19), 1);
		dcStructField(st, 'p', offsetof(struct A363, m20), 1);
		dcStructField(st, 'l', offsetof(struct A363, m21), 1);
		dcStructField(st, 's', offsetof(struct A363, m22), 1);
		dcStructField(st, 'p', offsetof(struct A363, m23), 1);
		dcStructField(st, 's', offsetof(struct A363, m24), 1);
		dcStructField(st, 's', offsetof(struct A363, m25), 1);
		dcStructField(st, 'd', offsetof(struct A363, m26), 1);
		dcStructField(st, 's', offsetof(struct A363, m27), 1);
		dcStructField(st, 'f', offsetof(struct A363, m28), 1);
		dcStructField(st, 's', offsetof(struct A363, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {siclpf} */
struct A364 { s m0; i m1; c m2; l m3; p m4; f m5; };
void f_cpA364(struct A364 *x, const struct A364 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA364(const struct A364 *x, const struct A364 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA364() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A364), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A364, m0), 1);
		dcStructField(st, 'i', offsetof(struct A364, m1), 1);
		dcStructField(st, 'c', offsetof(struct A364, m2), 1);
		dcStructField(st, 'l', offsetof(struct A364, m3), 1);
		dcStructField(st, 'p', offsetof(struct A364, m4), 1);
		dcStructField(st, 'f', offsetof(struct A364, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jpsiijf> */
union  A365 { j m0; p m1; s m2; i m3; i m4; j m5; f m6; };
void f_cpA365(union  A365 *x, const union  A365 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA365(const union  A365 *x, const union  A365 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA365() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A365), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A365, m0), 1);
		dcStructField(st, 'p', offsetof(union  A365, m1), 1);
		dcStructField(st, 's', offsetof(union  A365, m2), 1);
		dcStructField(st, 'i', offsetof(union  A365, m3), 1);
		dcStructField(st, 'i', offsetof(union  A365, m4), 1);
		dcStructField(st, 'j', offsetof(union  A365, m5), 1);
		dcStructField(st, 'f', offsetof(union  A365, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clspcdlflspc} */
struct A366 { c m0; l m1; s m2; p m3; c m4; d m5; l m6; f m7; l m8; s m9; p m10; c m11; };
void f_cpA366(struct A366 *x, const struct A366 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA366(const struct A366 *x, const struct A366 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA366() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A366), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A366, m0), 1);
		dcStructField(st, 'l', offsetof(struct A366, m1), 1);
		dcStructField(st, 's', offsetof(struct A366, m2), 1);
		dcStructField(st, 'p', offsetof(struct A366, m3), 1);
		dcStructField(st, 'c', offsetof(struct A366, m4), 1);
		dcStructField(st, 'd', offsetof(struct A366, m5), 1);
		dcStructField(st, 'l', offsetof(struct A366, m6), 1);
		dcStructField(st, 'f', offsetof(struct A366, m7), 1);
		dcStructField(st, 'l', offsetof(struct A366, m8), 1);
		dcStructField(st, 's', offsetof(struct A366, m9), 1);
		dcStructField(st, 'p', offsetof(struct A366, m10), 1);
		dcStructField(st, 'c', offsetof(struct A366, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cd> */
union  A367 { c m0; d m1; };
void f_cpA367(union  A367 *x, const union  A367 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA367(const union  A367 *x, const union  A367 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA367() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A367), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A367, m0), 1);
		dcStructField(st, 'd', offsetof(union  A367, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jlppfc{siclpf}dsd<f>j<jpsiijf>c{clspcdlflspc}sf<cd>> */
union  A368 { j m0; l m1; p m2; p m3; f m4; c m5; struct A364 m6; d m7; s m8; d m9; union  A189 m10; j m11; union  A365 m12; c m13; struct A366 m14; s m15; f m16; union  A367 m17; };
void f_cpA368(union  A368 *x, const union  A368 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA364(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA189(&x->m10, &y->m10); x->m11 = y->m11; f_cpA365(&x->m12, &y->m12); x->m13 = y->m13; f_cpA366(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; f_cpA367(&x->m17, &y->m17); };
int f_cmpA368(const union  A368 *x, const union  A368 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA364(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA189(&x->m10, &y->m10) && x->m11 == y->m11 && f_cmpA365(&x->m12, &y->m12) && x->m13 == y->m13 && f_cmpA366(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA367(&x->m17, &y->m17); };
DCstruct* f_touchdcstA368() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A368), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A368, m0), 1);
		dcStructField(st, 'l', offsetof(union  A368, m1), 1);
		dcStructField(st, 'p', offsetof(union  A368, m2), 1);
		dcStructField(st, 'p', offsetof(union  A368, m3), 1);
		dcStructField(st, 'f', offsetof(union  A368, m4), 1);
		dcStructField(st, 'c', offsetof(union  A368, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A368, m6), 1, f_touchdcstA364());
		dcStructField(st, 'd', offsetof(union  A368, m7), 1);
		dcStructField(st, 's', offsetof(union  A368, m8), 1);
		dcStructField(st, 'd', offsetof(union  A368, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A368, m10), 1, f_touchdcstA189());
		dcStructField(st, 'j', offsetof(union  A368, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A368, m12), 1, f_touchdcstA365());
		dcStructField(st, 'c', offsetof(union  A368, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A368, m14), 1, f_touchdcstA366());
		dcStructField(st, 's', offsetof(union  A368, m15), 1);
		dcStructField(st, 'f', offsetof(union  A368, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A368, m17), 1, f_touchdcstA367());
		dcCloseStruct(st);
	}
	return st;
};
/* <<j>i> */
union  A369 { union  A47 m0; i m1; };
void f_cpA369(union  A369 *x, const union  A369 *y) { f_cpA47(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA369(const union  A369 *x, const union  A369 *y) { return f_cmpA47(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA369() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A369), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A369, m0), 1, f_touchdcstA47());
		dcStructField(st, 'i', offsetof(union  A369, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<<j>i>iidd> */
union  A370 { union  A369 m0; i m1; i m2; d m3; d m4; };
void f_cpA370(union  A370 *x, const union  A370 *y) { f_cpA369(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA370(const union  A370 *x, const union  A370 *y) { return f_cmpA369(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA370() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A370), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A370, m0), 1, f_touchdcstA369());
		dcStructField(st, 'i', offsetof(union  A370, m1), 1);
		dcStructField(st, 'i', offsetof(union  A370, m2), 1);
		dcStructField(st, 'd', offsetof(union  A370, m3), 1);
		dcStructField(st, 'd', offsetof(union  A370, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lciipssldlldllpl> */
union  A371 { l m0; c m1; i m2; i m3; p m4; s m5; s m6; l m7; d m8; l m9; l m10; d m11; l m12; l m13; p m14; l m15; };
void f_cpA371(union  A371 *x, const union  A371 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA371(const union  A371 *x, const union  A371 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA371() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A371), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A371, m0), 1);
		dcStructField(st, 'c', offsetof(union  A371, m1), 1);
		dcStructField(st, 'i', offsetof(union  A371, m2), 1);
		dcStructField(st, 'i', offsetof(union  A371, m3), 1);
		dcStructField(st, 'p', offsetof(union  A371, m4), 1);
		dcStructField(st, 's', offsetof(union  A371, m5), 1);
		dcStructField(st, 's', offsetof(union  A371, m6), 1);
		dcStructField(st, 'l', offsetof(union  A371, m7), 1);
		dcStructField(st, 'd', offsetof(union  A371, m8), 1);
		dcStructField(st, 'l', offsetof(union  A371, m9), 1);
		dcStructField(st, 'l', offsetof(union  A371, m10), 1);
		dcStructField(st, 'd', offsetof(union  A371, m11), 1);
		dcStructField(st, 'l', offsetof(union  A371, m12), 1);
		dcStructField(st, 'l', offsetof(union  A371, m13), 1);
		dcStructField(st, 'p', offsetof(union  A371, m14), 1);
		dcStructField(st, 'l', offsetof(union  A371, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ijif> */
union  A372 { i m0; j m1; i m2; f m3; };
void f_cpA372(union  A372 *x, const union  A372 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA372(const union  A372 *x, const union  A372 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA372() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A372), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A372, m0), 1);
		dcStructField(st, 'j', offsetof(union  A372, m1), 1);
		dcStructField(st, 'i', offsetof(union  A372, m2), 1);
		dcStructField(st, 'f', offsetof(union  A372, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<ijif>dpjc} */
struct A373 { union  A372 m0; d m1; p m2; j m3; c m4; };
void f_cpA373(struct A373 *x, const struct A373 *y) { f_cpA372(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA373(const struct A373 *x, const struct A373 *y) { return f_cmpA372(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA373() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A373), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A373, m0), 1, f_touchdcstA372());
		dcStructField(st, 'd', offsetof(struct A373, m1), 1);
		dcStructField(st, 'p', offsetof(struct A373, m2), 1);
		dcStructField(st, 'j', offsetof(struct A373, m3), 1);
		dcStructField(st, 'c', offsetof(struct A373, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdsisfdfddpjpldjlcfjlipppflsf> */
union  A374 { j m0; d m1; s m2; i m3; s m4; f m5; d m6; f m7; d m8; d m9; p m10; j m11; p m12; l m13; d m14; j m15; l m16; c m17; f m18; j m19; l m20; i m21; p m22; p m23; p m24; f m25; l m26; s m27; f m28; };
void f_cpA374(union  A374 *x, const union  A374 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA374(const union  A374 *x, const union  A374 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA374() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(union  A374), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A374, m0), 1);
		dcStructField(st, 'd', offsetof(union  A374, m1), 1);
		dcStructField(st, 's', offsetof(union  A374, m2), 1);
		dcStructField(st, 'i', offsetof(union  A374, m3), 1);
		dcStructField(st, 's', offsetof(union  A374, m4), 1);
		dcStructField(st, 'f', offsetof(union  A374, m5), 1);
		dcStructField(st, 'd', offsetof(union  A374, m6), 1);
		dcStructField(st, 'f', offsetof(union  A374, m7), 1);
		dcStructField(st, 'd', offsetof(union  A374, m8), 1);
		dcStructField(st, 'd', offsetof(union  A374, m9), 1);
		dcStructField(st, 'p', offsetof(union  A374, m10), 1);
		dcStructField(st, 'j', offsetof(union  A374, m11), 1);
		dcStructField(st, 'p', offsetof(union  A374, m12), 1);
		dcStructField(st, 'l', offsetof(union  A374, m13), 1);
		dcStructField(st, 'd', offsetof(union  A374, m14), 1);
		dcStructField(st, 'j', offsetof(union  A374, m15), 1);
		dcStructField(st, 'l', offsetof(union  A374, m16), 1);
		dcStructField(st, 'c', offsetof(union  A374, m17), 1);
		dcStructField(st, 'f', offsetof(union  A374, m18), 1);
		dcStructField(st, 'j', offsetof(union  A374, m19), 1);
		dcStructField(st, 'l', offsetof(union  A374, m20), 1);
		dcStructField(st, 'i', offsetof(union  A374, m21), 1);
		dcStructField(st, 'p', offsetof(union  A374, m22), 1);
		dcStructField(st, 'p', offsetof(union  A374, m23), 1);
		dcStructField(st, 'p', offsetof(union  A374, m24), 1);
		dcStructField(st, 'f', offsetof(union  A374, m25), 1);
		dcStructField(st, 'l', offsetof(union  A374, m26), 1);
		dcStructField(st, 's', offsetof(union  A374, m27), 1);
		dcStructField(st, 'f', offsetof(union  A374, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cfjilifscslpd> */
union  A375 { c m0; f m1; j m2; i m3; l m4; i m5; f m6; s m7; c m8; s m9; l m10; p m11; d m12; };
void f_cpA375(union  A375 *x, const union  A375 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA375(const union  A375 *x, const union  A375 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA375() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A375), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A375, m0), 1);
		dcStructField(st, 'f', offsetof(union  A375, m1), 1);
		dcStructField(st, 'j', offsetof(union  A375, m2), 1);
		dcStructField(st, 'i', offsetof(union  A375, m3), 1);
		dcStructField(st, 'l', offsetof(union  A375, m4), 1);
		dcStructField(st, 'i', offsetof(union  A375, m5), 1);
		dcStructField(st, 'f', offsetof(union  A375, m6), 1);
		dcStructField(st, 's', offsetof(union  A375, m7), 1);
		dcStructField(st, 'c', offsetof(union  A375, m8), 1);
		dcStructField(st, 's', offsetof(union  A375, m9), 1);
		dcStructField(st, 'l', offsetof(union  A375, m10), 1);
		dcStructField(st, 'p', offsetof(union  A375, m11), 1);
		dcStructField(st, 'd', offsetof(union  A375, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jf} */
struct A376 { j m0; f m1; };
void f_cpA376(struct A376 *x, const struct A376 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA376(const struct A376 *x, const struct A376 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA376() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A376), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A376, m0), 1);
		dcStructField(st, 'f', offsetof(struct A376, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cj> */
union  A377 { c m0; j m1; };
void f_cpA377(union  A377 *x, const union  A377 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA377(const union  A377 *x, const union  A377 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA377() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A377), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A377, m0), 1);
		dcStructField(st, 'j', offsetof(union  A377, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {df} */
struct A378 { d m0; f m1; };
void f_cpA378(struct A378 *x, const struct A378 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA378(const struct A378 *x, const struct A378 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA378() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A378), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A378, m0), 1);
		dcStructField(st, 'f', offsetof(struct A378, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipldssic<jdsisfdfddpjpldjlcfjlipppflsf>jjp<cfjilifscslpd>fsppl{jf}<cj>pf{df}cl} */
struct A379 { i m0; p m1; l m2; d m3; s m4; s m5; i m6; c m7; union  A374 m8; j m9; j m10; p m11; union  A375 m12; f m13; s m14; p m15; p m16; l m17; struct A376 m18; union  A377 m19; p m20; f m21; struct A378 m22; c m23; l m24; };
void f_cpA379(struct A379 *x, const struct A379 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA374(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA375(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA376(&x->m18, &y->m18); f_cpA377(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; f_cpA378(&x->m22, &y->m22); x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA379(const struct A379 *x, const struct A379 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA374(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA375(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA376(&x->m18, &y->m18) && f_cmpA377(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && f_cmpA378(&x->m22, &y->m22) && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA379() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A379), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A379, m0), 1);
		dcStructField(st, 'p', offsetof(struct A379, m1), 1);
		dcStructField(st, 'l', offsetof(struct A379, m2), 1);
		dcStructField(st, 'd', offsetof(struct A379, m3), 1);
		dcStructField(st, 's', offsetof(struct A379, m4), 1);
		dcStructField(st, 's', offsetof(struct A379, m5), 1);
		dcStructField(st, 'i', offsetof(struct A379, m6), 1);
		dcStructField(st, 'c', offsetof(struct A379, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A379, m8), 1, f_touchdcstA374());
		dcStructField(st, 'j', offsetof(struct A379, m9), 1);
		dcStructField(st, 'j', offsetof(struct A379, m10), 1);
		dcStructField(st, 'p', offsetof(struct A379, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A379, m12), 1, f_touchdcstA375());
		dcStructField(st, 'f', offsetof(struct A379, m13), 1);
		dcStructField(st, 's', offsetof(struct A379, m14), 1);
		dcStructField(st, 'p', offsetof(struct A379, m15), 1);
		dcStructField(st, 'p', offsetof(struct A379, m16), 1);
		dcStructField(st, 'l', offsetof(struct A379, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A379, m18), 1, f_touchdcstA376());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A379, m19), 1, f_touchdcstA377());
		dcStructField(st, 'p', offsetof(struct A379, m20), 1);
		dcStructField(st, 'f', offsetof(struct A379, m21), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A379, m22), 1, f_touchdcstA378());
		dcStructField(st, 'c', offsetof(struct A379, m23), 1);
		dcStructField(st, 'l', offsetof(struct A379, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j{ipldssic<jdsisfdfddpjpldjlcfjlipppflsf>jjp<cfjilifscslpd>fsppl{jf}<cj>pf{df}cl}cljs} */
struct A380 { j m0; struct A379 m1; c m2; l m3; j m4; s m5; };
void f_cpA380(struct A380 *x, const struct A380 *y) { x->m0 = y->m0; f_cpA379(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA380(const struct A380 *x, const struct A380 *y) { return x->m0 == y->m0 && f_cmpA379(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA380() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A380), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A380, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A380, m1), 1, f_touchdcstA379());
		dcStructField(st, 'c', offsetof(struct A380, m2), 1);
		dcStructField(st, 'l', offsetof(struct A380, m3), 1);
		dcStructField(st, 'j', offsetof(struct A380, m4), 1);
		dcStructField(st, 's', offsetof(struct A380, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddjffl} */
struct A381 { d m0; d m1; j m2; f m3; f m4; l m5; };
void f_cpA381(struct A381 *x, const struct A381 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA381(const struct A381 *x, const struct A381 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA381() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A381), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A381, m0), 1);
		dcStructField(st, 'd', offsetof(struct A381, m1), 1);
		dcStructField(st, 'j', offsetof(struct A381, m2), 1);
		dcStructField(st, 'f', offsetof(struct A381, m3), 1);
		dcStructField(st, 'f', offsetof(struct A381, m4), 1);
		dcStructField(st, 'l', offsetof(struct A381, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iss{ddjffl}s> */
union  A382 { i m0; s m1; s m2; struct A381 m3; s m4; };
void f_cpA382(union  A382 *x, const union  A382 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA381(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA382(const union  A382 *x, const union  A382 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA381(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA382() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A382), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A382, m0), 1);
		dcStructField(st, 's', offsetof(union  A382, m1), 1);
		dcStructField(st, 's', offsetof(union  A382, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A382, m3), 1, f_touchdcstA381());
		dcStructField(st, 's', offsetof(union  A382, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdl} */
struct A383 { f m0; d m1; l m2; };
void f_cpA383(struct A383 *x, const struct A383 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA383(const struct A383 *x, const struct A383 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA383() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A383), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A383, m0), 1);
		dcStructField(st, 'd', offsetof(struct A383, m1), 1);
		dcStructField(st, 'l', offsetof(struct A383, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pc} */
struct A384 { p m0; c m1; };
void f_cpA384(struct A384 *x, const struct A384 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA384(const struct A384 *x, const struct A384 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA384() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A384), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A384, m0), 1);
		dcStructField(st, 'c', offsetof(struct A384, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pljjcd} */
struct A385 { p m0; l m1; j m2; j m3; c m4; d m5; };
void f_cpA385(struct A385 *x, const struct A385 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA385(const struct A385 *x, const struct A385 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA385() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A385), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A385, m0), 1);
		dcStructField(st, 'l', offsetof(struct A385, m1), 1);
		dcStructField(st, 'j', offsetof(struct A385, m2), 1);
		dcStructField(st, 'j', offsetof(struct A385, m3), 1);
		dcStructField(st, 'c', offsetof(struct A385, m4), 1);
		dcStructField(st, 'd', offsetof(struct A385, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lddfdfcs> */
union  A386 { l m0; d m1; d m2; f m3; d m4; f m5; c m6; s m7; };
void f_cpA386(union  A386 *x, const union  A386 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA386(const union  A386 *x, const union  A386 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA386() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A386), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A386, m0), 1);
		dcStructField(st, 'd', offsetof(union  A386, m1), 1);
		dcStructField(st, 'd', offsetof(union  A386, m2), 1);
		dcStructField(st, 'f', offsetof(union  A386, m3), 1);
		dcStructField(st, 'd', offsetof(union  A386, m4), 1);
		dcStructField(st, 'f', offsetof(union  A386, m5), 1);
		dcStructField(st, 'c', offsetof(union  A386, m6), 1);
		dcStructField(st, 's', offsetof(union  A386, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {f<lddfdfcs>d} */
struct A387 { f m0; union  A386 m1; d m2; };
void f_cpA387(struct A387 *x, const struct A387 *y) { x->m0 = y->m0; f_cpA386(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA387(const struct A387 *x, const struct A387 *y) { return x->m0 == y->m0 && f_cmpA386(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA387() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A387), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A387, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A387, m1), 1, f_touchdcstA386());
		dcStructField(st, 'd', offsetof(struct A387, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpljlsfcsccddlifsplclfispcfslffpcfsidijddpssliljlfdccdssislpd} */
struct A388 { j m0; p m1; l m2; j m3; l m4; s m5; f m6; c m7; s m8; c m9; c m10; d m11; d m12; l m13; i m14; f m15; s m16; p m17; l m18; c m19; l m20; f m21; i m22; s m23; p m24; c m25; f m26; s m27; l m28; f m29; f m30; p m31; c m32; f m33; s m34; i m35; d m36; i m37; j m38; d m39; d m40; p m41; s m42; s m43; l m44; i m45; l m46; j m47; l m48; f m49; d m50; c m51; c m52; d m53; s m54; s m55; i m56; s m57; l m58; p m59; d m60; };
void f_cpA388(struct A388 *x, const struct A388 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; x->m42 = y->m42; x->m43 = y->m43; x->m44 = y->m44; x->m45 = y->m45; x->m46 = y->m46; x->m47 = y->m47; x->m48 = y->m48; x->m49 = y->m49; x->m50 = y->m50; x->m51 = y->m51; x->m52 = y->m52; x->m53 = y->m53; x->m54 = y->m54; x->m55 = y->m55; x->m56 = y->m56; x->m57 = y->m57; x->m58 = y->m58; x->m59 = y->m59; x->m60 = y->m60; };
int f_cmpA388(const struct A388 *x, const struct A388 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && x->m42 == y->m42 && x->m43 == y->m43 && x->m44 == y->m44 && x->m45 == y->m45 && x->m46 == y->m46 && x->m47 == y->m47 && x->m48 == y->m48 && x->m49 == y->m49 && x->m50 == y->m50 && x->m51 == y->m51 && x->m52 == y->m52 && x->m53 == y->m53 && x->m54 == y->m54 && x->m55 == y->m55 && x->m56 == y->m56 && x->m57 == y->m57 && x->m58 == y->m58 && x->m59 == y->m59 && x->m60 == y->m60; };
DCstruct* f_touchdcstA388() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(61, sizeof(struct A388), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A388, m0), 1);
		dcStructField(st, 'p', offsetof(struct A388, m1), 1);
		dcStructField(st, 'l', offsetof(struct A388, m2), 1);
		dcStructField(st, 'j', offsetof(struct A388, m3), 1);
		dcStructField(st, 'l', offsetof(struct A388, m4), 1);
		dcStructField(st, 's', offsetof(struct A388, m5), 1);
		dcStructField(st, 'f', offsetof(struct A388, m6), 1);
		dcStructField(st, 'c', offsetof(struct A388, m7), 1);
		dcStructField(st, 's', offsetof(struct A388, m8), 1);
		dcStructField(st, 'c', offsetof(struct A388, m9), 1);
		dcStructField(st, 'c', offsetof(struct A388, m10), 1);
		dcStructField(st, 'd', offsetof(struct A388, m11), 1);
		dcStructField(st, 'd', offsetof(struct A388, m12), 1);
		dcStructField(st, 'l', offsetof(struct A388, m13), 1);
		dcStructField(st, 'i', offsetof(struct A388, m14), 1);
		dcStructField(st, 'f', offsetof(struct A388, m15), 1);
		dcStructField(st, 's', offsetof(struct A388, m16), 1);
		dcStructField(st, 'p', offsetof(struct A388, m17), 1);
		dcStructField(st, 'l', offsetof(struct A388, m18), 1);
		dcStructField(st, 'c', offsetof(struct A388, m19), 1);
		dcStructField(st, 'l', offsetof(struct A388, m20), 1);
		dcStructField(st, 'f', offsetof(struct A388, m21), 1);
		dcStructField(st, 'i', offsetof(struct A388, m22), 1);
		dcStructField(st, 's', offsetof(struct A388, m23), 1);
		dcStructField(st, 'p', offsetof(struct A388, m24), 1);
		dcStructField(st, 'c', offsetof(struct A388, m25), 1);
		dcStructField(st, 'f', offsetof(struct A388, m26), 1);
		dcStructField(st, 's', offsetof(struct A388, m27), 1);
		dcStructField(st, 'l', offsetof(struct A388, m28), 1);
		dcStructField(st, 'f', offsetof(struct A388, m29), 1);
		dcStructField(st, 'f', offsetof(struct A388, m30), 1);
		dcStructField(st, 'p', offsetof(struct A388, m31), 1);
		dcStructField(st, 'c', offsetof(struct A388, m32), 1);
		dcStructField(st, 'f', offsetof(struct A388, m33), 1);
		dcStructField(st, 's', offsetof(struct A388, m34), 1);
		dcStructField(st, 'i', offsetof(struct A388, m35), 1);
		dcStructField(st, 'd', offsetof(struct A388, m36), 1);
		dcStructField(st, 'i', offsetof(struct A388, m37), 1);
		dcStructField(st, 'j', offsetof(struct A388, m38), 1);
		dcStructField(st, 'd', offsetof(struct A388, m39), 1);
		dcStructField(st, 'd', offsetof(struct A388, m40), 1);
		dcStructField(st, 'p', offsetof(struct A388, m41), 1);
		dcStructField(st, 's', offsetof(struct A388, m42), 1);
		dcStructField(st, 's', offsetof(struct A388, m43), 1);
		dcStructField(st, 'l', offsetof(struct A388, m44), 1);
		dcStructField(st, 'i', offsetof(struct A388, m45), 1);
		dcStructField(st, 'l', offsetof(struct A388, m46), 1);
		dcStructField(st, 'j', offsetof(struct A388, m47), 1);
		dcStructField(st, 'l', offsetof(struct A388, m48), 1);
		dcStructField(st, 'f', offsetof(struct A388, m49), 1);
		dcStructField(st, 'd', offsetof(struct A388, m50), 1);
		dcStructField(st, 'c', offsetof(struct A388, m51), 1);
		dcStructField(st, 'c', offsetof(struct A388, m52), 1);
		dcStructField(st, 'd', offsetof(struct A388, m53), 1);
		dcStructField(st, 's', offsetof(struct A388, m54), 1);
		dcStructField(st, 's', offsetof(struct A388, m55), 1);
		dcStructField(st, 'i', offsetof(struct A388, m56), 1);
		dcStructField(st, 's', offsetof(struct A388, m57), 1);
		dcStructField(st, 'l', offsetof(struct A388, m58), 1);
		dcStructField(st, 'p', offsetof(struct A388, m59), 1);
		dcStructField(st, 'd', offsetof(struct A388, m60), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcisjffdclcji> */
union  A389 { f m0; c m1; i m2; s m3; j m4; f m5; f m6; d m7; c m8; l m9; c m10; j m11; i m12; };
void f_cpA389(union  A389 *x, const union  A389 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA389(const union  A389 *x, const union  A389 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA389() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A389), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A389, m0), 1);
		dcStructField(st, 'c', offsetof(union  A389, m1), 1);
		dcStructField(st, 'i', offsetof(union  A389, m2), 1);
		dcStructField(st, 's', offsetof(union  A389, m3), 1);
		dcStructField(st, 'j', offsetof(union  A389, m4), 1);
		dcStructField(st, 'f', offsetof(union  A389, m5), 1);
		dcStructField(st, 'f', offsetof(union  A389, m6), 1);
		dcStructField(st, 'd', offsetof(union  A389, m7), 1);
		dcStructField(st, 'c', offsetof(union  A389, m8), 1);
		dcStructField(st, 'l', offsetof(union  A389, m9), 1);
		dcStructField(st, 'c', offsetof(union  A389, m10), 1);
		dcStructField(st, 'j', offsetof(union  A389, m11), 1);
		dcStructField(st, 'i', offsetof(union  A389, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fiddd} */
struct A390 { f m0; i m1; d m2; d m3; d m4; };
void f_cpA390(struct A390 *x, const struct A390 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA390(const struct A390 *x, const struct A390 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA390() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A390), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A390, m0), 1);
		dcStructField(st, 'i', offsetof(struct A390, m1), 1);
		dcStructField(st, 'd', offsetof(struct A390, m2), 1);
		dcStructField(st, 'd', offsetof(struct A390, m3), 1);
		dcStructField(st, 'd', offsetof(struct A390, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdslss<fcisjffdclcji>if{fiddd}} */
struct A391 { j m0; d m1; s m2; l m3; s m4; s m5; union  A389 m6; i m7; f m8; struct A390 m9; };
void f_cpA391(struct A391 *x, const struct A391 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA389(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; f_cpA390(&x->m9, &y->m9); };
int f_cmpA391(const struct A391 *x, const struct A391 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA389(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA390(&x->m9, &y->m9); };
DCstruct* f_touchdcstA391() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A391), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A391, m0), 1);
		dcStructField(st, 'd', offsetof(struct A391, m1), 1);
		dcStructField(st, 's', offsetof(struct A391, m2), 1);
		dcStructField(st, 'l', offsetof(struct A391, m3), 1);
		dcStructField(st, 's', offsetof(struct A391, m4), 1);
		dcStructField(st, 's', offsetof(struct A391, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A391, m6), 1, f_touchdcstA389());
		dcStructField(st, 'i', offsetof(struct A391, m7), 1);
		dcStructField(st, 'f', offsetof(struct A391, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A391, m9), 1, f_touchdcstA390());
		dcCloseStruct(st);
	}
	return st;
};
/* <l{jdslss<fcisjffdclcji>if{fiddd}}pff> */
union  A392 { l m0; struct A391 m1; p m2; f m3; f m4; };
void f_cpA392(union  A392 *x, const union  A392 *y) { x->m0 = y->m0; f_cpA391(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA392(const union  A392 *x, const union  A392 *y) { return x->m0 == y->m0 && f_cmpA391(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA392() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A392), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A392, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A392, m1), 1, f_touchdcstA391());
		dcStructField(st, 'p', offsetof(union  A392, m2), 1);
		dcStructField(st, 'f', offsetof(union  A392, m3), 1);
		dcStructField(st, 'f', offsetof(union  A392, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdcjfplcj} */
struct A393 { j m0; d m1; c m2; j m3; f m4; p m5; l m6; c m7; j m8; };
void f_cpA393(struct A393 *x, const struct A393 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA393(const struct A393 *x, const struct A393 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA393() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A393), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A393, m0), 1);
		dcStructField(st, 'd', offsetof(struct A393, m1), 1);
		dcStructField(st, 'c', offsetof(struct A393, m2), 1);
		dcStructField(st, 'j', offsetof(struct A393, m3), 1);
		dcStructField(st, 'f', offsetof(struct A393, m4), 1);
		dcStructField(st, 'p', offsetof(struct A393, m5), 1);
		dcStructField(st, 'l', offsetof(struct A393, m6), 1);
		dcStructField(st, 'c', offsetof(struct A393, m7), 1);
		dcStructField(st, 'j', offsetof(struct A393, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cds> */
union  A394 { c m0; d m1; s m2; };
void f_cpA394(union  A394 *x, const union  A394 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA394(const union  A394 *x, const union  A394 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA394() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A394), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A394, m0), 1);
		dcStructField(st, 'd', offsetof(union  A394, m1), 1);
		dcStructField(st, 's', offsetof(union  A394, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fp> */
union  A395 { f m0; p m1; };
void f_cpA395(union  A395 *x, const union  A395 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA395(const union  A395 *x, const union  A395 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA395() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A395), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A395, m0), 1);
		dcStructField(st, 'p', offsetof(union  A395, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcsfipfdiicis} */
struct A396 { p m0; c m1; s m2; f m3; i m4; p m5; f m6; d m7; i m8; i m9; c m10; i m11; s m12; };
void f_cpA396(struct A396 *x, const struct A396 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA396(const struct A396 *x, const struct A396 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA396() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A396), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A396, m0), 1);
		dcStructField(st, 'c', offsetof(struct A396, m1), 1);
		dcStructField(st, 's', offsetof(struct A396, m2), 1);
		dcStructField(st, 'f', offsetof(struct A396, m3), 1);
		dcStructField(st, 'i', offsetof(struct A396, m4), 1);
		dcStructField(st, 'p', offsetof(struct A396, m5), 1);
		dcStructField(st, 'f', offsetof(struct A396, m6), 1);
		dcStructField(st, 'd', offsetof(struct A396, m7), 1);
		dcStructField(st, 'i', offsetof(struct A396, m8), 1);
		dcStructField(st, 'i', offsetof(struct A396, m9), 1);
		dcStructField(st, 'c', offsetof(struct A396, m10), 1);
		dcStructField(st, 'i', offsetof(struct A396, m11), 1);
		dcStructField(st, 's', offsetof(struct A396, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<fp>pl{pcsfipfdiicis}f} */
struct A397 { union  A395 m0; p m1; l m2; struct A396 m3; f m4; };
void f_cpA397(struct A397 *x, const struct A397 *y) { f_cpA395(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA396(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA397(const struct A397 *x, const struct A397 *y) { return f_cmpA395(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA396(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA397() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A397), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A397, m0), 1, f_touchdcstA395());
		dcStructField(st, 'p', offsetof(struct A397, m1), 1);
		dcStructField(st, 'l', offsetof(struct A397, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A397, m3), 1, f_touchdcstA396());
		dcStructField(st, 'f', offsetof(struct A397, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ciddcsspsp} */
struct A398 { c m0; i m1; d m2; d m3; c m4; s m5; s m6; p m7; s m8; p m9; };
void f_cpA398(struct A398 *x, const struct A398 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA398(const struct A398 *x, const struct A398 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA398() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A398), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A398, m0), 1);
		dcStructField(st, 'i', offsetof(struct A398, m1), 1);
		dcStructField(st, 'd', offsetof(struct A398, m2), 1);
		dcStructField(st, 'd', offsetof(struct A398, m3), 1);
		dcStructField(st, 'c', offsetof(struct A398, m4), 1);
		dcStructField(st, 's', offsetof(struct A398, m5), 1);
		dcStructField(st, 's', offsetof(struct A398, m6), 1);
		dcStructField(st, 'p', offsetof(struct A398, m7), 1);
		dcStructField(st, 's', offsetof(struct A398, m8), 1);
		dcStructField(st, 'p', offsetof(struct A398, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <p{ciddcsspsp}djcfp> */
union  A399 { p m0; struct A398 m1; d m2; j m3; c m4; f m5; p m6; };
void f_cpA399(union  A399 *x, const union  A399 *y) { x->m0 = y->m0; f_cpA398(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA399(const union  A399 *x, const union  A399 *y) { return x->m0 == y->m0 && f_cmpA398(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA399() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A399), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A399, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A399, m1), 1, f_touchdcstA398());
		dcStructField(st, 'd', offsetof(union  A399, m2), 1);
		dcStructField(st, 'j', offsetof(union  A399, m3), 1);
		dcStructField(st, 'c', offsetof(union  A399, m4), 1);
		dcStructField(st, 'f', offsetof(union  A399, m5), 1);
		dcStructField(st, 'p', offsetof(union  A399, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <p<p{ciddcsspsp}djcfp>> */
union  A400 { p m0; union  A399 m1; };
void f_cpA400(union  A400 *x, const union  A400 *y) { x->m0 = y->m0; f_cpA399(&x->m1, &y->m1); };
int f_cmpA400(const union  A400 *x, const union  A400 *y) { return x->m0 == y->m0 && f_cmpA399(&x->m1, &y->m1); };
DCstruct* f_touchdcstA400() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A400), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A400, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A400, m1), 1, f_touchdcstA399());
		dcCloseStruct(st);
	}
	return st;
};
/* <ps> */
union  A401 { p m0; s m1; };
void f_cpA401(union  A401 *x, const union  A401 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA401(const union  A401 *x, const union  A401 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA401() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A401), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A401, m0), 1);
		dcStructField(st, 's', offsetof(union  A401, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <si<ps>> */
union  A402 { s m0; i m1; union  A401 m2; };
void f_cpA402(union  A402 *x, const union  A402 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA401(&x->m2, &y->m2); };
int f_cmpA402(const union  A402 *x, const union  A402 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA401(&x->m2, &y->m2); };
DCstruct* f_touchdcstA402() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A402), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A402, m0), 1);
		dcStructField(st, 'i', offsetof(union  A402, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A402, m2), 1, f_touchdcstA401());
		dcCloseStruct(st);
	}
	return st;
};
/* {ljllisjsfscidpipjd} */
struct A403 { l m0; j m1; l m2; l m3; i m4; s m5; j m6; s m7; f m8; s m9; c m10; i m11; d m12; p m13; i m14; p m15; j m16; d m17; };
void f_cpA403(struct A403 *x, const struct A403 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA403(const struct A403 *x, const struct A403 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA403() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A403), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A403, m0), 1);
		dcStructField(st, 'j', offsetof(struct A403, m1), 1);
		dcStructField(st, 'l', offsetof(struct A403, m2), 1);
		dcStructField(st, 'l', offsetof(struct A403, m3), 1);
		dcStructField(st, 'i', offsetof(struct A403, m4), 1);
		dcStructField(st, 's', offsetof(struct A403, m5), 1);
		dcStructField(st, 'j', offsetof(struct A403, m6), 1);
		dcStructField(st, 's', offsetof(struct A403, m7), 1);
		dcStructField(st, 'f', offsetof(struct A403, m8), 1);
		dcStructField(st, 's', offsetof(struct A403, m9), 1);
		dcStructField(st, 'c', offsetof(struct A403, m10), 1);
		dcStructField(st, 'i', offsetof(struct A403, m11), 1);
		dcStructField(st, 'd', offsetof(struct A403, m12), 1);
		dcStructField(st, 'p', offsetof(struct A403, m13), 1);
		dcStructField(st, 'i', offsetof(struct A403, m14), 1);
		dcStructField(st, 'p', offsetof(struct A403, m15), 1);
		dcStructField(st, 'j', offsetof(struct A403, m16), 1);
		dcStructField(st, 'd', offsetof(struct A403, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jfpjdpj{ljllisjsfscidpipjd}> */
union  A404 { j m0; f m1; p m2; j m3; d m4; p m5; j m6; struct A403 m7; };
void f_cpA404(union  A404 *x, const union  A404 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA403(&x->m7, &y->m7); };
int f_cmpA404(const union  A404 *x, const union  A404 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA403(&x->m7, &y->m7); };
DCstruct* f_touchdcstA404() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A404), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A404, m0), 1);
		dcStructField(st, 'f', offsetof(union  A404, m1), 1);
		dcStructField(st, 'p', offsetof(union  A404, m2), 1);
		dcStructField(st, 'j', offsetof(union  A404, m3), 1);
		dcStructField(st, 'd', offsetof(union  A404, m4), 1);
		dcStructField(st, 'p', offsetof(union  A404, m5), 1);
		dcStructField(st, 'j', offsetof(union  A404, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A404, m7), 1, f_touchdcstA403());
		dcCloseStruct(st);
	}
	return st;
};
/* <<jfpjdpj{ljllisjsfscidpipjd}>scdp{p}dli> */
union  A405 { union  A404 m0; s m1; c m2; d m3; p m4; struct A250 m5; d m6; l m7; i m8; };
void f_cpA405(union  A405 *x, const union  A405 *y) { f_cpA404(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA250(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA405(const union  A405 *x, const union  A405 *y) { return f_cmpA404(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA250(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA405() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A405), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A405, m0), 1, f_touchdcstA404());
		dcStructField(st, 's', offsetof(union  A405, m1), 1);
		dcStructField(st, 'c', offsetof(union  A405, m2), 1);
		dcStructField(st, 'd', offsetof(union  A405, m3), 1);
		dcStructField(st, 'p', offsetof(union  A405, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A405, m5), 1, f_touchdcstA250());
		dcStructField(st, 'd', offsetof(union  A405, m6), 1);
		dcStructField(st, 'l', offsetof(union  A405, m7), 1);
		dcStructField(st, 'i', offsetof(union  A405, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pldpdsflpfldfscsjlscspdfsjsdjj} */
struct A406 { p m0; l m1; d m2; p m3; d m4; s m5; f m6; l m7; p m8; f m9; l m10; d m11; f m12; s m13; c m14; s m15; j m16; l m17; s m18; c m19; s m20; p m21; d m22; f m23; s m24; j m25; s m26; d m27; j m28; j m29; };
void f_cpA406(struct A406 *x, const struct A406 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA406(const struct A406 *x, const struct A406 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA406() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A406), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A406, m0), 1);
		dcStructField(st, 'l', offsetof(struct A406, m1), 1);
		dcStructField(st, 'd', offsetof(struct A406, m2), 1);
		dcStructField(st, 'p', offsetof(struct A406, m3), 1);
		dcStructField(st, 'd', offsetof(struct A406, m4), 1);
		dcStructField(st, 's', offsetof(struct A406, m5), 1);
		dcStructField(st, 'f', offsetof(struct A406, m6), 1);
		dcStructField(st, 'l', offsetof(struct A406, m7), 1);
		dcStructField(st, 'p', offsetof(struct A406, m8), 1);
		dcStructField(st, 'f', offsetof(struct A406, m9), 1);
		dcStructField(st, 'l', offsetof(struct A406, m10), 1);
		dcStructField(st, 'd', offsetof(struct A406, m11), 1);
		dcStructField(st, 'f', offsetof(struct A406, m12), 1);
		dcStructField(st, 's', offsetof(struct A406, m13), 1);
		dcStructField(st, 'c', offsetof(struct A406, m14), 1);
		dcStructField(st, 's', offsetof(struct A406, m15), 1);
		dcStructField(st, 'j', offsetof(struct A406, m16), 1);
		dcStructField(st, 'l', offsetof(struct A406, m17), 1);
		dcStructField(st, 's', offsetof(struct A406, m18), 1);
		dcStructField(st, 'c', offsetof(struct A406, m19), 1);
		dcStructField(st, 's', offsetof(struct A406, m20), 1);
		dcStructField(st, 'p', offsetof(struct A406, m21), 1);
		dcStructField(st, 'd', offsetof(struct A406, m22), 1);
		dcStructField(st, 'f', offsetof(struct A406, m23), 1);
		dcStructField(st, 's', offsetof(struct A406, m24), 1);
		dcStructField(st, 'j', offsetof(struct A406, m25), 1);
		dcStructField(st, 's', offsetof(struct A406, m26), 1);
		dcStructField(st, 'd', offsetof(struct A406, m27), 1);
		dcStructField(st, 'j', offsetof(struct A406, m28), 1);
		dcStructField(st, 'j', offsetof(struct A406, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cliijipcp<l>} */
struct A407 { c m0; l m1; i m2; i m3; j m4; i m5; p m6; c m7; p m8; union  A127 m9; };
void f_cpA407(struct A407 *x, const struct A407 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA127(&x->m9, &y->m9); };
int f_cmpA407(const struct A407 *x, const struct A407 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA127(&x->m9, &y->m9); };
DCstruct* f_touchdcstA407() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A407), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A407, m0), 1);
		dcStructField(st, 'l', offsetof(struct A407, m1), 1);
		dcStructField(st, 'i', offsetof(struct A407, m2), 1);
		dcStructField(st, 'i', offsetof(struct A407, m3), 1);
		dcStructField(st, 'j', offsetof(struct A407, m4), 1);
		dcStructField(st, 'i', offsetof(struct A407, m5), 1);
		dcStructField(st, 'p', offsetof(struct A407, m6), 1);
		dcStructField(st, 'c', offsetof(struct A407, m7), 1);
		dcStructField(st, 'p', offsetof(struct A407, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A407, m9), 1, f_touchdcstA127());
		dcCloseStruct(st);
	}
	return st;
};
/* <lcljc> */
union  A408 { l m0; c m1; l m2; j m3; c m4; };
void f_cpA408(union  A408 *x, const union  A408 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA408(const union  A408 *x, const union  A408 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA408() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A408), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A408, m0), 1);
		dcStructField(st, 'c', offsetof(union  A408, m1), 1);
		dcStructField(st, 'l', offsetof(union  A408, m2), 1);
		dcStructField(st, 'j', offsetof(union  A408, m3), 1);
		dcStructField(st, 'c', offsetof(union  A408, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <idcpjjscsi> */
union  A409 { i m0; d m1; c m2; p m3; j m4; j m5; s m6; c m7; s m8; i m9; };
void f_cpA409(union  A409 *x, const union  A409 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA409(const union  A409 *x, const union  A409 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA409() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A409), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A409, m0), 1);
		dcStructField(st, 'd', offsetof(union  A409, m1), 1);
		dcStructField(st, 'c', offsetof(union  A409, m2), 1);
		dcStructField(st, 'p', offsetof(union  A409, m3), 1);
		dcStructField(st, 'j', offsetof(union  A409, m4), 1);
		dcStructField(st, 'j', offsetof(union  A409, m5), 1);
		dcStructField(st, 's', offsetof(union  A409, m6), 1);
		dcStructField(st, 'c', offsetof(union  A409, m7), 1);
		dcStructField(st, 's', offsetof(union  A409, m8), 1);
		dcStructField(st, 'i', offsetof(union  A409, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcfjdjfsdplillds> */
union  A410 { f m0; c m1; f m2; j m3; d m4; j m5; f m6; s m7; d m8; p m9; l m10; i m11; l m12; l m13; d m14; s m15; };
void f_cpA410(union  A410 *x, const union  A410 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA410(const union  A410 *x, const union  A410 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA410() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A410), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A410, m0), 1);
		dcStructField(st, 'c', offsetof(union  A410, m1), 1);
		dcStructField(st, 'f', offsetof(union  A410, m2), 1);
		dcStructField(st, 'j', offsetof(union  A410, m3), 1);
		dcStructField(st, 'd', offsetof(union  A410, m4), 1);
		dcStructField(st, 'j', offsetof(union  A410, m5), 1);
		dcStructField(st, 'f', offsetof(union  A410, m6), 1);
		dcStructField(st, 's', offsetof(union  A410, m7), 1);
		dcStructField(st, 'd', offsetof(union  A410, m8), 1);
		dcStructField(st, 'p', offsetof(union  A410, m9), 1);
		dcStructField(st, 'l', offsetof(union  A410, m10), 1);
		dcStructField(st, 'i', offsetof(union  A410, m11), 1);
		dcStructField(st, 'l', offsetof(union  A410, m12), 1);
		dcStructField(st, 'l', offsetof(union  A410, m13), 1);
		dcStructField(st, 'd', offsetof(union  A410, m14), 1);
		dcStructField(st, 's', offsetof(union  A410, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lj<idcpjjscsi>ljl<fcfjdjfsdplillds>} */
struct A411 { l m0; j m1; union  A409 m2; l m3; j m4; l m5; union  A410 m6; };
void f_cpA411(struct A411 *x, const struct A411 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA409(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA410(&x->m6, &y->m6); };
int f_cmpA411(const struct A411 *x, const struct A411 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA409(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA410(&x->m6, &y->m6); };
DCstruct* f_touchdcstA411() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A411), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A411, m0), 1);
		dcStructField(st, 'j', offsetof(struct A411, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A411, m2), 1, f_touchdcstA409());
		dcStructField(st, 'l', offsetof(struct A411, m3), 1);
		dcStructField(st, 'j', offsetof(struct A411, m4), 1);
		dcStructField(st, 'l', offsetof(struct A411, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A411, m6), 1, f_touchdcstA410());
		dcCloseStruct(st);
	}
	return st;
};
/* {sdssp{lj<idcpjjscsi>ljl<fcfjdjfsdplillds>}sccsljpj} */
struct A412 { s m0; d m1; s m2; s m3; p m4; struct A411 m5; s m6; c m7; c m8; s m9; l m10; j m11; p m12; j m13; };
void f_cpA412(struct A412 *x, const struct A412 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA411(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA412(const struct A412 *x, const struct A412 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA411(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA412() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A412), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A412, m0), 1);
		dcStructField(st, 'd', offsetof(struct A412, m1), 1);
		dcStructField(st, 's', offsetof(struct A412, m2), 1);
		dcStructField(st, 's', offsetof(struct A412, m3), 1);
		dcStructField(st, 'p', offsetof(struct A412, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A412, m5), 1, f_touchdcstA411());
		dcStructField(st, 's', offsetof(struct A412, m6), 1);
		dcStructField(st, 'c', offsetof(struct A412, m7), 1);
		dcStructField(st, 'c', offsetof(struct A412, m8), 1);
		dcStructField(st, 's', offsetof(struct A412, m9), 1);
		dcStructField(st, 'l', offsetof(struct A412, m10), 1);
		dcStructField(st, 'j', offsetof(struct A412, m11), 1);
		dcStructField(st, 'p', offsetof(struct A412, m12), 1);
		dcStructField(st, 'j', offsetof(struct A412, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {si} */
struct A413 { s m0; i m1; };
void f_cpA413(struct A413 *x, const struct A413 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA413(const struct A413 *x, const struct A413 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA413() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A413), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A413, m0), 1);
		dcStructField(st, 'i', offsetof(struct A413, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdddljip> */
union  A414 { j m0; d m1; d m2; d m3; l m4; j m5; i m6; p m7; };
void f_cpA414(union  A414 *x, const union  A414 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA414(const union  A414 *x, const union  A414 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA414() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A414), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A414, m0), 1);
		dcStructField(st, 'd', offsetof(union  A414, m1), 1);
		dcStructField(st, 'd', offsetof(union  A414, m2), 1);
		dcStructField(st, 'd', offsetof(union  A414, m3), 1);
		dcStructField(st, 'l', offsetof(union  A414, m4), 1);
		dcStructField(st, 'j', offsetof(union  A414, m5), 1);
		dcStructField(st, 'i', offsetof(union  A414, m6), 1);
		dcStructField(st, 'p', offsetof(union  A414, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sc{j}fsdf{j}s<jdddljip>cl> */
union  A415 { s m0; c m1; struct A303 m2; f m3; s m4; d m5; f m6; struct A303 m7; s m8; union  A414 m9; c m10; l m11; };
void f_cpA415(union  A415 *x, const union  A415 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA303(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA303(&x->m7, &y->m7); x->m8 = y->m8; f_cpA414(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA415(const union  A415 *x, const union  A415 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA303(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA303(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA414(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA415() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A415), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A415, m0), 1);
		dcStructField(st, 'c', offsetof(union  A415, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A415, m2), 1, f_touchdcstA303());
		dcStructField(st, 'f', offsetof(union  A415, m3), 1);
		dcStructField(st, 's', offsetof(union  A415, m4), 1);
		dcStructField(st, 'd', offsetof(union  A415, m5), 1);
		dcStructField(st, 'f', offsetof(union  A415, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A415, m7), 1, f_touchdcstA303());
		dcStructField(st, 's', offsetof(union  A415, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A415, m9), 1, f_touchdcstA414());
		dcStructField(st, 'c', offsetof(union  A415, m10), 1);
		dcStructField(st, 'l', offsetof(union  A415, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <is> */
union  A416 { i m0; s m1; };
void f_cpA416(union  A416 *x, const union  A416 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA416(const union  A416 *x, const union  A416 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA416() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A416), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A416, m0), 1);
		dcStructField(st, 's', offsetof(union  A416, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d{c}<sc{j}fsdf{j}s<jdddljip>cl><is>> */
union  A417 { d m0; struct A122 m1; union  A415 m2; union  A416 m3; };
void f_cpA417(union  A417 *x, const union  A417 *y) { x->m0 = y->m0; f_cpA122(&x->m1, &y->m1); f_cpA415(&x->m2, &y->m2); f_cpA416(&x->m3, &y->m3); };
int f_cmpA417(const union  A417 *x, const union  A417 *y) { return x->m0 == y->m0 && f_cmpA122(&x->m1, &y->m1) && f_cmpA415(&x->m2, &y->m2) && f_cmpA416(&x->m3, &y->m3); };
DCstruct* f_touchdcstA417() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A417), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A417, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A417, m1), 1, f_touchdcstA122());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A417, m2), 1, f_touchdcstA415());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A417, m3), 1, f_touchdcstA416());
		dcCloseStruct(st);
	}
	return st;
};
/* <ddf> */
union  A418 { d m0; d m1; f m2; };
void f_cpA418(union  A418 *x, const union  A418 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA418(const union  A418 *x, const union  A418 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA418() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A418), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A418, m0), 1);
		dcStructField(st, 'd', offsetof(union  A418, m1), 1);
		dcStructField(st, 'f', offsetof(union  A418, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pisfppiisippjf> */
union  A419 { p m0; i m1; s m2; f m3; p m4; p m5; i m6; i m7; s m8; i m9; p m10; p m11; j m12; f m13; };
void f_cpA419(union  A419 *x, const union  A419 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA419(const union  A419 *x, const union  A419 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA419() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A419), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A419, m0), 1);
		dcStructField(st, 'i', offsetof(union  A419, m1), 1);
		dcStructField(st, 's', offsetof(union  A419, m2), 1);
		dcStructField(st, 'f', offsetof(union  A419, m3), 1);
		dcStructField(st, 'p', offsetof(union  A419, m4), 1);
		dcStructField(st, 'p', offsetof(union  A419, m5), 1);
		dcStructField(st, 'i', offsetof(union  A419, m6), 1);
		dcStructField(st, 'i', offsetof(union  A419, m7), 1);
		dcStructField(st, 's', offsetof(union  A419, m8), 1);
		dcStructField(st, 'i', offsetof(union  A419, m9), 1);
		dcStructField(st, 'p', offsetof(union  A419, m10), 1);
		dcStructField(st, 'p', offsetof(union  A419, m11), 1);
		dcStructField(st, 'j', offsetof(union  A419, m12), 1);
		dcStructField(st, 'f', offsetof(union  A419, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cicpcfppsfpfl<dc>pf} */
struct A420 { c m0; i m1; c m2; p m3; c m4; f m5; p m6; p m7; s m8; f m9; p m10; f m11; l m12; union  A271 m13; p m14; f m15; };
void f_cpA420(struct A420 *x, const struct A420 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA271(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA420(const struct A420 *x, const struct A420 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA271(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA420() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A420), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A420, m0), 1);
		dcStructField(st, 'i', offsetof(struct A420, m1), 1);
		dcStructField(st, 'c', offsetof(struct A420, m2), 1);
		dcStructField(st, 'p', offsetof(struct A420, m3), 1);
		dcStructField(st, 'c', offsetof(struct A420, m4), 1);
		dcStructField(st, 'f', offsetof(struct A420, m5), 1);
		dcStructField(st, 'p', offsetof(struct A420, m6), 1);
		dcStructField(st, 'p', offsetof(struct A420, m7), 1);
		dcStructField(st, 's', offsetof(struct A420, m8), 1);
		dcStructField(st, 'f', offsetof(struct A420, m9), 1);
		dcStructField(st, 'p', offsetof(struct A420, m10), 1);
		dcStructField(st, 'f', offsetof(struct A420, m11), 1);
		dcStructField(st, 'l', offsetof(struct A420, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A420, m13), 1, f_touchdcstA271());
		dcStructField(st, 'p', offsetof(struct A420, m14), 1);
		dcStructField(st, 'f', offsetof(struct A420, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdcd> */
union  A421 { j m0; d m1; c m2; d m3; };
void f_cpA421(union  A421 *x, const union  A421 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA421(const union  A421 *x, const union  A421 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA421() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A421), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A421, m0), 1);
		dcStructField(st, 'd', offsetof(union  A421, m1), 1);
		dcStructField(st, 'c', offsetof(union  A421, m2), 1);
		dcStructField(st, 'd', offsetof(union  A421, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ccpf> */
union  A422 { c m0; c m1; p m2; f m3; };
void f_cpA422(union  A422 *x, const union  A422 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA422(const union  A422 *x, const union  A422 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA422() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A422), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A422, m0), 1);
		dcStructField(st, 'c', offsetof(union  A422, m1), 1);
		dcStructField(st, 'p', offsetof(union  A422, m2), 1);
		dcStructField(st, 'f', offsetof(union  A422, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdijijl<ddf><pisfppiisippjf>{cicpcfppsfpfl<dc>pf}<jdcd>sc<ccpf>> */
union  A423 { j m0; d m1; i m2; j m3; i m4; j m5; l m6; union  A418 m7; union  A419 m8; struct A420 m9; union  A421 m10; s m11; c m12; union  A422 m13; };
void f_cpA423(union  A423 *x, const union  A423 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA418(&x->m7, &y->m7); f_cpA419(&x->m8, &y->m8); f_cpA420(&x->m9, &y->m9); f_cpA421(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; f_cpA422(&x->m13, &y->m13); };
int f_cmpA423(const union  A423 *x, const union  A423 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA418(&x->m7, &y->m7) && f_cmpA419(&x->m8, &y->m8) && f_cmpA420(&x->m9, &y->m9) && f_cmpA421(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA422(&x->m13, &y->m13); };
DCstruct* f_touchdcstA423() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A423), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A423, m0), 1);
		dcStructField(st, 'd', offsetof(union  A423, m1), 1);
		dcStructField(st, 'i', offsetof(union  A423, m2), 1);
		dcStructField(st, 'j', offsetof(union  A423, m3), 1);
		dcStructField(st, 'i', offsetof(union  A423, m4), 1);
		dcStructField(st, 'j', offsetof(union  A423, m5), 1);
		dcStructField(st, 'l', offsetof(union  A423, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A423, m7), 1, f_touchdcstA418());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A423, m8), 1, f_touchdcstA419());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A423, m9), 1, f_touchdcstA420());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A423, m10), 1, f_touchdcstA421());
		dcStructField(st, 's', offsetof(union  A423, m11), 1);
		dcStructField(st, 'c', offsetof(union  A423, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A423, m13), 1, f_touchdcstA422());
		dcCloseStruct(st);
	}
	return st;
};
/* {siicsdsf} */
struct A424 { s m0; i m1; i m2; c m3; s m4; d m5; s m6; f m7; };
void f_cpA424(struct A424 *x, const struct A424 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA424(const struct A424 *x, const struct A424 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA424() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A424), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A424, m0), 1);
		dcStructField(st, 'i', offsetof(struct A424, m1), 1);
		dcStructField(st, 'i', offsetof(struct A424, m2), 1);
		dcStructField(st, 'c', offsetof(struct A424, m3), 1);
		dcStructField(st, 's', offsetof(struct A424, m4), 1);
		dcStructField(st, 'd', offsetof(struct A424, m5), 1);
		dcStructField(st, 's', offsetof(struct A424, m6), 1);
		dcStructField(st, 'f', offsetof(struct A424, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <c{siicsdsf}dlissfsp> */
union  A425 { c m0; struct A424 m1; d m2; l m3; i m4; s m5; s m6; f m7; s m8; p m9; };
void f_cpA425(union  A425 *x, const union  A425 *y) { x->m0 = y->m0; f_cpA424(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA425(const union  A425 *x, const union  A425 *y) { return x->m0 == y->m0 && f_cmpA424(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA425() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A425), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A425, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A425, m1), 1, f_touchdcstA424());
		dcStructField(st, 'd', offsetof(union  A425, m2), 1);
		dcStructField(st, 'l', offsetof(union  A425, m3), 1);
		dcStructField(st, 'i', offsetof(union  A425, m4), 1);
		dcStructField(st, 's', offsetof(union  A425, m5), 1);
		dcStructField(st, 's', offsetof(union  A425, m6), 1);
		dcStructField(st, 'f', offsetof(union  A425, m7), 1);
		dcStructField(st, 's', offsetof(union  A425, m8), 1);
		dcStructField(st, 'p', offsetof(union  A425, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdpdcsisdciil} */
struct A426 { j m0; d m1; p m2; d m3; c m4; s m5; i m6; s m7; d m8; c m9; i m10; i m11; l m12; };
void f_cpA426(struct A426 *x, const struct A426 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA426(const struct A426 *x, const struct A426 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA426() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A426), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A426, m0), 1);
		dcStructField(st, 'd', offsetof(struct A426, m1), 1);
		dcStructField(st, 'p', offsetof(struct A426, m2), 1);
		dcStructField(st, 'd', offsetof(struct A426, m3), 1);
		dcStructField(st, 'c', offsetof(struct A426, m4), 1);
		dcStructField(st, 's', offsetof(struct A426, m5), 1);
		dcStructField(st, 'i', offsetof(struct A426, m6), 1);
		dcStructField(st, 's', offsetof(struct A426, m7), 1);
		dcStructField(st, 'd', offsetof(struct A426, m8), 1);
		dcStructField(st, 'c', offsetof(struct A426, m9), 1);
		dcStructField(st, 'i', offsetof(struct A426, m10), 1);
		dcStructField(st, 'i', offsetof(struct A426, m11), 1);
		dcStructField(st, 'l', offsetof(struct A426, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iipjlfcfcidipsfssl} */
struct A427 { i m0; i m1; p m2; j m3; l m4; f m5; c m6; f m7; c m8; i m9; d m10; i m11; p m12; s m13; f m14; s m15; s m16; l m17; };
void f_cpA427(struct A427 *x, const struct A427 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA427(const struct A427 *x, const struct A427 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA427() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A427), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A427, m0), 1);
		dcStructField(st, 'i', offsetof(struct A427, m1), 1);
		dcStructField(st, 'p', offsetof(struct A427, m2), 1);
		dcStructField(st, 'j', offsetof(struct A427, m3), 1);
		dcStructField(st, 'l', offsetof(struct A427, m4), 1);
		dcStructField(st, 'f', offsetof(struct A427, m5), 1);
		dcStructField(st, 'c', offsetof(struct A427, m6), 1);
		dcStructField(st, 'f', offsetof(struct A427, m7), 1);
		dcStructField(st, 'c', offsetof(struct A427, m8), 1);
		dcStructField(st, 'i', offsetof(struct A427, m9), 1);
		dcStructField(st, 'd', offsetof(struct A427, m10), 1);
		dcStructField(st, 'i', offsetof(struct A427, m11), 1);
		dcStructField(st, 'p', offsetof(struct A427, m12), 1);
		dcStructField(st, 's', offsetof(struct A427, m13), 1);
		dcStructField(st, 'f', offsetof(struct A427, m14), 1);
		dcStructField(st, 's', offsetof(struct A427, m15), 1);
		dcStructField(st, 's', offsetof(struct A427, m16), 1);
		dcStructField(st, 'l', offsetof(struct A427, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfliifppffc{jdpdcsisdciil}sidip{iipjlfcfcidipsfssl}iscdp> */
union  A428 { p m0; f m1; l m2; i m3; i m4; f m5; p m6; p m7; f m8; f m9; c m10; struct A426 m11; s m12; i m13; d m14; i m15; p m16; struct A427 m17; i m18; s m19; c m20; d m21; p m22; };
void f_cpA428(union  A428 *x, const union  A428 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA426(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA427(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA428(const union  A428 *x, const union  A428 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA426(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA427(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA428() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(union  A428), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A428, m0), 1);
		dcStructField(st, 'f', offsetof(union  A428, m1), 1);
		dcStructField(st, 'l', offsetof(union  A428, m2), 1);
		dcStructField(st, 'i', offsetof(union  A428, m3), 1);
		dcStructField(st, 'i', offsetof(union  A428, m4), 1);
		dcStructField(st, 'f', offsetof(union  A428, m5), 1);
		dcStructField(st, 'p', offsetof(union  A428, m6), 1);
		dcStructField(st, 'p', offsetof(union  A428, m7), 1);
		dcStructField(st, 'f', offsetof(union  A428, m8), 1);
		dcStructField(st, 'f', offsetof(union  A428, m9), 1);
		dcStructField(st, 'c', offsetof(union  A428, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A428, m11), 1, f_touchdcstA426());
		dcStructField(st, 's', offsetof(union  A428, m12), 1);
		dcStructField(st, 'i', offsetof(union  A428, m13), 1);
		dcStructField(st, 'd', offsetof(union  A428, m14), 1);
		dcStructField(st, 'i', offsetof(union  A428, m15), 1);
		dcStructField(st, 'p', offsetof(union  A428, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A428, m17), 1, f_touchdcstA427());
		dcStructField(st, 'i', offsetof(union  A428, m18), 1);
		dcStructField(st, 's', offsetof(union  A428, m19), 1);
		dcStructField(st, 'c', offsetof(union  A428, m20), 1);
		dcStructField(st, 'd', offsetof(union  A428, m21), 1);
		dcStructField(st, 'p', offsetof(union  A428, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lplfic> */
union  A429 { l m0; p m1; l m2; f m3; i m4; c m5; };
void f_cpA429(union  A429 *x, const union  A429 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA429(const union  A429 *x, const union  A429 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA429() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A429), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A429, m0), 1);
		dcStructField(st, 'p', offsetof(union  A429, m1), 1);
		dcStructField(st, 'l', offsetof(union  A429, m2), 1);
		dcStructField(st, 'f', offsetof(union  A429, m3), 1);
		dcStructField(st, 'i', offsetof(union  A429, m4), 1);
		dcStructField(st, 'c', offsetof(union  A429, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdd> */
union  A430 { c m0; d m1; d m2; };
void f_cpA430(union  A430 *x, const union  A430 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA430(const union  A430 *x, const union  A430 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA430() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A430), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A430, m0), 1);
		dcStructField(st, 'd', offsetof(union  A430, m1), 1);
		dcStructField(st, 'd', offsetof(union  A430, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <disddisisclpjsp> */
union  A431 { d m0; i m1; s m2; d m3; d m4; i m5; s m6; i m7; s m8; c m9; l m10; p m11; j m12; s m13; p m14; };
void f_cpA431(union  A431 *x, const union  A431 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA431(const union  A431 *x, const union  A431 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA431() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A431), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A431, m0), 1);
		dcStructField(st, 'i', offsetof(union  A431, m1), 1);
		dcStructField(st, 's', offsetof(union  A431, m2), 1);
		dcStructField(st, 'd', offsetof(union  A431, m3), 1);
		dcStructField(st, 'd', offsetof(union  A431, m4), 1);
		dcStructField(st, 'i', offsetof(union  A431, m5), 1);
		dcStructField(st, 's', offsetof(union  A431, m6), 1);
		dcStructField(st, 'i', offsetof(union  A431, m7), 1);
		dcStructField(st, 's', offsetof(union  A431, m8), 1);
		dcStructField(st, 'c', offsetof(union  A431, m9), 1);
		dcStructField(st, 'l', offsetof(union  A431, m10), 1);
		dcStructField(st, 'p', offsetof(union  A431, m11), 1);
		dcStructField(st, 'j', offsetof(union  A431, m12), 1);
		dcStructField(st, 's', offsetof(union  A431, m13), 1);
		dcStructField(st, 'p', offsetof(union  A431, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sff} */
struct A432 { s m0; f m1; f m2; };
void f_cpA432(struct A432 *x, const struct A432 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA432(const struct A432 *x, const struct A432 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA432() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A432), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A432, m0), 1);
		dcStructField(st, 'f', offsetof(struct A432, m1), 1);
		dcStructField(st, 'f', offsetof(struct A432, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jsdfcjscffpcsfjidcpjscssc> */
union  A433 { j m0; s m1; d m2; f m3; c m4; j m5; s m6; c m7; f m8; f m9; p m10; c m11; s m12; f m13; j m14; i m15; d m16; c m17; p m18; j m19; s m20; c m21; s m22; s m23; c m24; };
void f_cpA433(union  A433 *x, const union  A433 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA433(const union  A433 *x, const union  A433 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA433() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(union  A433), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A433, m0), 1);
		dcStructField(st, 's', offsetof(union  A433, m1), 1);
		dcStructField(st, 'd', offsetof(union  A433, m2), 1);
		dcStructField(st, 'f', offsetof(union  A433, m3), 1);
		dcStructField(st, 'c', offsetof(union  A433, m4), 1);
		dcStructField(st, 'j', offsetof(union  A433, m5), 1);
		dcStructField(st, 's', offsetof(union  A433, m6), 1);
		dcStructField(st, 'c', offsetof(union  A433, m7), 1);
		dcStructField(st, 'f', offsetof(union  A433, m8), 1);
		dcStructField(st, 'f', offsetof(union  A433, m9), 1);
		dcStructField(st, 'p', offsetof(union  A433, m10), 1);
		dcStructField(st, 'c', offsetof(union  A433, m11), 1);
		dcStructField(st, 's', offsetof(union  A433, m12), 1);
		dcStructField(st, 'f', offsetof(union  A433, m13), 1);
		dcStructField(st, 'j', offsetof(union  A433, m14), 1);
		dcStructField(st, 'i', offsetof(union  A433, m15), 1);
		dcStructField(st, 'd', offsetof(union  A433, m16), 1);
		dcStructField(st, 'c', offsetof(union  A433, m17), 1);
		dcStructField(st, 'p', offsetof(union  A433, m18), 1);
		dcStructField(st, 'j', offsetof(union  A433, m19), 1);
		dcStructField(st, 's', offsetof(union  A433, m20), 1);
		dcStructField(st, 'c', offsetof(union  A433, m21), 1);
		dcStructField(st, 's', offsetof(union  A433, m22), 1);
		dcStructField(st, 's', offsetof(union  A433, m23), 1);
		dcStructField(st, 'c', offsetof(union  A433, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pldfsdipidplsf} */
struct A434 { p m0; l m1; d m2; f m3; s m4; d m5; i m6; p m7; i m8; d m9; p m10; l m11; s m12; f m13; };
void f_cpA434(struct A434 *x, const struct A434 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA434(const struct A434 *x, const struct A434 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA434() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A434), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A434, m0), 1);
		dcStructField(st, 'l', offsetof(struct A434, m1), 1);
		dcStructField(st, 'd', offsetof(struct A434, m2), 1);
		dcStructField(st, 'f', offsetof(struct A434, m3), 1);
		dcStructField(st, 's', offsetof(struct A434, m4), 1);
		dcStructField(st, 'd', offsetof(struct A434, m5), 1);
		dcStructField(st, 'i', offsetof(struct A434, m6), 1);
		dcStructField(st, 'p', offsetof(struct A434, m7), 1);
		dcStructField(st, 'i', offsetof(struct A434, m8), 1);
		dcStructField(st, 'd', offsetof(struct A434, m9), 1);
		dcStructField(st, 'p', offsetof(struct A434, m10), 1);
		dcStructField(st, 'l', offsetof(struct A434, m11), 1);
		dcStructField(st, 's', offsetof(struct A434, m12), 1);
		dcStructField(st, 'f', offsetof(struct A434, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iissjdcsl} */
struct A435 { i m0; i m1; s m2; s m3; j m4; d m5; c m6; s m7; l m8; };
void f_cpA435(struct A435 *x, const struct A435 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA435(const struct A435 *x, const struct A435 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA435() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A435), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A435, m0), 1);
		dcStructField(st, 'i', offsetof(struct A435, m1), 1);
		dcStructField(st, 's', offsetof(struct A435, m2), 1);
		dcStructField(st, 's', offsetof(struct A435, m3), 1);
		dcStructField(st, 'j', offsetof(struct A435, m4), 1);
		dcStructField(st, 'd', offsetof(struct A435, m5), 1);
		dcStructField(st, 'c', offsetof(struct A435, m6), 1);
		dcStructField(st, 's', offsetof(struct A435, m7), 1);
		dcStructField(st, 'l', offsetof(struct A435, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcfisccdcjcfcdficljiij} */
struct A436 { p m0; c m1; f m2; i m3; s m4; c m5; c m6; d m7; c m8; j m9; c m10; f m11; c m12; d m13; f m14; i m15; c m16; l m17; j m18; i m19; i m20; j m21; };
void f_cpA436(struct A436 *x, const struct A436 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA436(const struct A436 *x, const struct A436 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA436() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A436), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A436, m0), 1);
		dcStructField(st, 'c', offsetof(struct A436, m1), 1);
		dcStructField(st, 'f', offsetof(struct A436, m2), 1);
		dcStructField(st, 'i', offsetof(struct A436, m3), 1);
		dcStructField(st, 's', offsetof(struct A436, m4), 1);
		dcStructField(st, 'c', offsetof(struct A436, m5), 1);
		dcStructField(st, 'c', offsetof(struct A436, m6), 1);
		dcStructField(st, 'd', offsetof(struct A436, m7), 1);
		dcStructField(st, 'c', offsetof(struct A436, m8), 1);
		dcStructField(st, 'j', offsetof(struct A436, m9), 1);
		dcStructField(st, 'c', offsetof(struct A436, m10), 1);
		dcStructField(st, 'f', offsetof(struct A436, m11), 1);
		dcStructField(st, 'c', offsetof(struct A436, m12), 1);
		dcStructField(st, 'd', offsetof(struct A436, m13), 1);
		dcStructField(st, 'f', offsetof(struct A436, m14), 1);
		dcStructField(st, 'i', offsetof(struct A436, m15), 1);
		dcStructField(st, 'c', offsetof(struct A436, m16), 1);
		dcStructField(st, 'l', offsetof(struct A436, m17), 1);
		dcStructField(st, 'j', offsetof(struct A436, m18), 1);
		dcStructField(st, 'i', offsetof(struct A436, m19), 1);
		dcStructField(st, 'i', offsetof(struct A436, m20), 1);
		dcStructField(st, 'j', offsetof(struct A436, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sifip<j>jffdc{pcfisccdcjcfcdficljiij}} */
struct A437 { s m0; i m1; f m2; i m3; p m4; union  A47 m5; j m6; f m7; f m8; d m9; c m10; struct A436 m11; };
void f_cpA437(struct A437 *x, const struct A437 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA47(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA436(&x->m11, &y->m11); };
int f_cmpA437(const struct A437 *x, const struct A437 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA47(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA436(&x->m11, &y->m11); };
DCstruct* f_touchdcstA437() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A437), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A437, m0), 1);
		dcStructField(st, 'i', offsetof(struct A437, m1), 1);
		dcStructField(st, 'f', offsetof(struct A437, m2), 1);
		dcStructField(st, 'i', offsetof(struct A437, m3), 1);
		dcStructField(st, 'p', offsetof(struct A437, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A437, m5), 1, f_touchdcstA47());
		dcStructField(st, 'j', offsetof(struct A437, m6), 1);
		dcStructField(st, 'f', offsetof(struct A437, m7), 1);
		dcStructField(st, 'f', offsetof(struct A437, m8), 1);
		dcStructField(st, 'd', offsetof(struct A437, m9), 1);
		dcStructField(st, 'c', offsetof(struct A437, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A437, m11), 1, f_touchdcstA436());
		dcCloseStruct(st);
	}
	return st;
};
/* {pjsffjdi} */
struct A438 { p m0; j m1; s m2; f m3; f m4; j m5; d m6; i m7; };
void f_cpA438(struct A438 *x, const struct A438 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA438(const struct A438 *x, const struct A438 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA438() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A438), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A438, m0), 1);
		dcStructField(st, 'j', offsetof(struct A438, m1), 1);
		dcStructField(st, 's', offsetof(struct A438, m2), 1);
		dcStructField(st, 'f', offsetof(struct A438, m3), 1);
		dcStructField(st, 'f', offsetof(struct A438, m4), 1);
		dcStructField(st, 'j', offsetof(struct A438, m5), 1);
		dcStructField(st, 'd', offsetof(struct A438, m6), 1);
		dcStructField(st, 'i', offsetof(struct A438, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfjlciijfji} */
struct A439 { l m0; f m1; j m2; l m3; c m4; i m5; i m6; j m7; f m8; j m9; i m10; };
void f_cpA439(struct A439 *x, const struct A439 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA439(const struct A439 *x, const struct A439 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA439() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A439), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A439, m0), 1);
		dcStructField(st, 'f', offsetof(struct A439, m1), 1);
		dcStructField(st, 'j', offsetof(struct A439, m2), 1);
		dcStructField(st, 'l', offsetof(struct A439, m3), 1);
		dcStructField(st, 'c', offsetof(struct A439, m4), 1);
		dcStructField(st, 'i', offsetof(struct A439, m5), 1);
		dcStructField(st, 'i', offsetof(struct A439, m6), 1);
		dcStructField(st, 'j', offsetof(struct A439, m7), 1);
		dcStructField(st, 'f', offsetof(struct A439, m8), 1);
		dcStructField(st, 'j', offsetof(struct A439, m9), 1);
		dcStructField(st, 'i', offsetof(struct A439, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpcsjlcisscsdl} */
struct A440 { j m0; p m1; c m2; s m3; j m4; l m5; c m6; i m7; s m8; s m9; c m10; s m11; d m12; l m13; };
void f_cpA440(struct A440 *x, const struct A440 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA440(const struct A440 *x, const struct A440 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA440() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A440), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A440, m0), 1);
		dcStructField(st, 'p', offsetof(struct A440, m1), 1);
		dcStructField(st, 'c', offsetof(struct A440, m2), 1);
		dcStructField(st, 's', offsetof(struct A440, m3), 1);
		dcStructField(st, 'j', offsetof(struct A440, m4), 1);
		dcStructField(st, 'l', offsetof(struct A440, m5), 1);
		dcStructField(st, 'c', offsetof(struct A440, m6), 1);
		dcStructField(st, 'i', offsetof(struct A440, m7), 1);
		dcStructField(st, 's', offsetof(struct A440, m8), 1);
		dcStructField(st, 's', offsetof(struct A440, m9), 1);
		dcStructField(st, 'c', offsetof(struct A440, m10), 1);
		dcStructField(st, 's', offsetof(struct A440, m11), 1);
		dcStructField(st, 'd', offsetof(struct A440, m12), 1);
		dcStructField(st, 'l', offsetof(struct A440, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcssljiccd> */
union  A441 { d m0; c m1; s m2; s m3; l m4; j m5; i m6; c m7; c m8; d m9; };
void f_cpA441(union  A441 *x, const union  A441 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA441(const union  A441 *x, const union  A441 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA441() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A441), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A441, m0), 1);
		dcStructField(st, 'c', offsetof(union  A441, m1), 1);
		dcStructField(st, 's', offsetof(union  A441, m2), 1);
		dcStructField(st, 's', offsetof(union  A441, m3), 1);
		dcStructField(st, 'l', offsetof(union  A441, m4), 1);
		dcStructField(st, 'j', offsetof(union  A441, m5), 1);
		dcStructField(st, 'i', offsetof(union  A441, m6), 1);
		dcStructField(st, 'c', offsetof(union  A441, m7), 1);
		dcStructField(st, 'c', offsetof(union  A441, m8), 1);
		dcStructField(st, 'd', offsetof(union  A441, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pi{pjsffjdi}{jj}{lfjlciijfji}{jpcsjlcisscsdl}clc<dcssljiccd>s} */
struct A442 { p m0; i m1; struct A438 m2; struct A57 m3; struct A439 m4; struct A440 m5; c m6; l m7; c m8; union  A441 m9; s m10; };
void f_cpA442(struct A442 *x, const struct A442 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA438(&x->m2, &y->m2); f_cpA57(&x->m3, &y->m3); f_cpA439(&x->m4, &y->m4); f_cpA440(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA441(&x->m9, &y->m9); x->m10 = y->m10; };
int f_cmpA442(const struct A442 *x, const struct A442 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA438(&x->m2, &y->m2) && f_cmpA57(&x->m3, &y->m3) && f_cmpA439(&x->m4, &y->m4) && f_cmpA440(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA441(&x->m9, &y->m9) && x->m10 == y->m10; };
DCstruct* f_touchdcstA442() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A442), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A442, m0), 1);
		dcStructField(st, 'i', offsetof(struct A442, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A442, m2), 1, f_touchdcstA438());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A442, m3), 1, f_touchdcstA57());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A442, m4), 1, f_touchdcstA439());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A442, m5), 1, f_touchdcstA440());
		dcStructField(st, 'c', offsetof(struct A442, m6), 1);
		dcStructField(st, 'l', offsetof(struct A442, m7), 1);
		dcStructField(st, 'c', offsetof(struct A442, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A442, m9), 1, f_touchdcstA441());
		dcStructField(st, 's', offsetof(struct A442, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dicpippscfisldpi} */
struct A443 { d m0; i m1; c m2; p m3; i m4; p m5; p m6; s m7; c m8; f m9; i m10; s m11; l m12; d m13; p m14; i m15; };
void f_cpA443(struct A443 *x, const struct A443 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA443(const struct A443 *x, const struct A443 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA443() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A443), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A443, m0), 1);
		dcStructField(st, 'i', offsetof(struct A443, m1), 1);
		dcStructField(st, 'c', offsetof(struct A443, m2), 1);
		dcStructField(st, 'p', offsetof(struct A443, m3), 1);
		dcStructField(st, 'i', offsetof(struct A443, m4), 1);
		dcStructField(st, 'p', offsetof(struct A443, m5), 1);
		dcStructField(st, 'p', offsetof(struct A443, m6), 1);
		dcStructField(st, 's', offsetof(struct A443, m7), 1);
		dcStructField(st, 'c', offsetof(struct A443, m8), 1);
		dcStructField(st, 'f', offsetof(struct A443, m9), 1);
		dcStructField(st, 'i', offsetof(struct A443, m10), 1);
		dcStructField(st, 's', offsetof(struct A443, m11), 1);
		dcStructField(st, 'l', offsetof(struct A443, m12), 1);
		dcStructField(st, 'd', offsetof(struct A443, m13), 1);
		dcStructField(st, 'p', offsetof(struct A443, m14), 1);
		dcStructField(st, 'i', offsetof(struct A443, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cjfdijcjjild> */
union  A444 { c m0; j m1; f m2; d m3; i m4; j m5; c m6; j m7; j m8; i m9; l m10; d m11; };
void f_cpA444(union  A444 *x, const union  A444 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA444(const union  A444 *x, const union  A444 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA444() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A444), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A444, m0), 1);
		dcStructField(st, 'j', offsetof(union  A444, m1), 1);
		dcStructField(st, 'f', offsetof(union  A444, m2), 1);
		dcStructField(st, 'd', offsetof(union  A444, m3), 1);
		dcStructField(st, 'i', offsetof(union  A444, m4), 1);
		dcStructField(st, 'j', offsetof(union  A444, m5), 1);
		dcStructField(st, 'c', offsetof(union  A444, m6), 1);
		dcStructField(st, 'j', offsetof(union  A444, m7), 1);
		dcStructField(st, 'j', offsetof(union  A444, m8), 1);
		dcStructField(st, 'i', offsetof(union  A444, m9), 1);
		dcStructField(st, 'l', offsetof(union  A444, m10), 1);
		dcStructField(st, 'd', offsetof(union  A444, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dff{dicpippscfisldpi}fipfli<cjfdijcjjild>cipi> */
union  A445 { d m0; f m1; f m2; struct A443 m3; f m4; i m5; p m6; f m7; l m8; i m9; union  A444 m10; c m11; i m12; p m13; i m14; };
void f_cpA445(union  A445 *x, const union  A445 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA443(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA444(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA445(const union  A445 *x, const union  A445 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA443(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA444(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA445() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A445), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A445, m0), 1);
		dcStructField(st, 'f', offsetof(union  A445, m1), 1);
		dcStructField(st, 'f', offsetof(union  A445, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A445, m3), 1, f_touchdcstA443());
		dcStructField(st, 'f', offsetof(union  A445, m4), 1);
		dcStructField(st, 'i', offsetof(union  A445, m5), 1);
		dcStructField(st, 'p', offsetof(union  A445, m6), 1);
		dcStructField(st, 'f', offsetof(union  A445, m7), 1);
		dcStructField(st, 'l', offsetof(union  A445, m8), 1);
		dcStructField(st, 'i', offsetof(union  A445, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A445, m10), 1, f_touchdcstA444());
		dcStructField(st, 'c', offsetof(union  A445, m11), 1);
		dcStructField(st, 'i', offsetof(union  A445, m12), 1);
		dcStructField(st, 'p', offsetof(union  A445, m13), 1);
		dcStructField(st, 'i', offsetof(union  A445, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fillpdp} */
struct A446 { f m0; i m1; l m2; l m3; p m4; d m5; p m6; };
void f_cpA446(struct A446 *x, const struct A446 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA446(const struct A446 *x, const struct A446 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA446() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A446), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A446, m0), 1);
		dcStructField(st, 'i', offsetof(struct A446, m1), 1);
		dcStructField(st, 'l', offsetof(struct A446, m2), 1);
		dcStructField(st, 'l', offsetof(struct A446, m3), 1);
		dcStructField(st, 'p', offsetof(struct A446, m4), 1);
		dcStructField(st, 'd', offsetof(struct A446, m5), 1);
		dcStructField(st, 'p', offsetof(struct A446, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <j{fillpdp}lffsljjl> */
union  A447 { j m0; struct A446 m1; l m2; f m3; f m4; s m5; l m6; j m7; j m8; l m9; };
void f_cpA447(union  A447 *x, const union  A447 *y) { x->m0 = y->m0; f_cpA446(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA447(const union  A447 *x, const union  A447 *y) { return x->m0 == y->m0 && f_cmpA446(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA447() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A447), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A447, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A447, m1), 1, f_touchdcstA446());
		dcStructField(st, 'l', offsetof(union  A447, m2), 1);
		dcStructField(st, 'f', offsetof(union  A447, m3), 1);
		dcStructField(st, 'f', offsetof(union  A447, m4), 1);
		dcStructField(st, 's', offsetof(union  A447, m5), 1);
		dcStructField(st, 'l', offsetof(union  A447, m6), 1);
		dcStructField(st, 'j', offsetof(union  A447, m7), 1);
		dcStructField(st, 'j', offsetof(union  A447, m8), 1);
		dcStructField(st, 'l', offsetof(union  A447, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clicpd} */
struct A448 { c m0; l m1; i m2; c m3; p m4; d m5; };
void f_cpA448(struct A448 *x, const struct A448 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA448(const struct A448 *x, const struct A448 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA448() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A448), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A448, m0), 1);
		dcStructField(st, 'l', offsetof(struct A448, m1), 1);
		dcStructField(st, 'i', offsetof(struct A448, m2), 1);
		dcStructField(st, 'c', offsetof(struct A448, m3), 1);
		dcStructField(st, 'p', offsetof(struct A448, m4), 1);
		dcStructField(st, 'd', offsetof(struct A448, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sllicddcfljpspc> */
union  A449 { s m0; l m1; l m2; i m3; c m4; d m5; d m6; c m7; f m8; l m9; j m10; p m11; s m12; p m13; c m14; };
void f_cpA449(union  A449 *x, const union  A449 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA449(const union  A449 *x, const union  A449 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA449() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A449), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A449, m0), 1);
		dcStructField(st, 'l', offsetof(union  A449, m1), 1);
		dcStructField(st, 'l', offsetof(union  A449, m2), 1);
		dcStructField(st, 'i', offsetof(union  A449, m3), 1);
		dcStructField(st, 'c', offsetof(union  A449, m4), 1);
		dcStructField(st, 'd', offsetof(union  A449, m5), 1);
		dcStructField(st, 'd', offsetof(union  A449, m6), 1);
		dcStructField(st, 'c', offsetof(union  A449, m7), 1);
		dcStructField(st, 'f', offsetof(union  A449, m8), 1);
		dcStructField(st, 'l', offsetof(union  A449, m9), 1);
		dcStructField(st, 'j', offsetof(union  A449, m10), 1);
		dcStructField(st, 'p', offsetof(union  A449, m11), 1);
		dcStructField(st, 's', offsetof(union  A449, m12), 1);
		dcStructField(st, 'p', offsetof(union  A449, m13), 1);
		dcStructField(st, 'c', offsetof(union  A449, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjf} */
struct A450 { f m0; j m1; f m2; };
void f_cpA450(struct A450 *x, const struct A450 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA450(const struct A450 *x, const struct A450 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA450() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A450), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A450, m0), 1);
		dcStructField(st, 'j', offsetof(struct A450, m1), 1);
		dcStructField(st, 'f', offsetof(struct A450, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dldjsidcpsijf> */
union  A451 { d m0; l m1; d m2; j m3; s m4; i m5; d m6; c m7; p m8; s m9; i m10; j m11; f m12; };
void f_cpA451(union  A451 *x, const union  A451 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA451(const union  A451 *x, const union  A451 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA451() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A451), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A451, m0), 1);
		dcStructField(st, 'l', offsetof(union  A451, m1), 1);
		dcStructField(st, 'd', offsetof(union  A451, m2), 1);
		dcStructField(st, 'j', offsetof(union  A451, m3), 1);
		dcStructField(st, 's', offsetof(union  A451, m4), 1);
		dcStructField(st, 'i', offsetof(union  A451, m5), 1);
		dcStructField(st, 'd', offsetof(union  A451, m6), 1);
		dcStructField(st, 'c', offsetof(union  A451, m7), 1);
		dcStructField(st, 'p', offsetof(union  A451, m8), 1);
		dcStructField(st, 's', offsetof(union  A451, m9), 1);
		dcStructField(st, 'i', offsetof(union  A451, m10), 1);
		dcStructField(st, 'j', offsetof(union  A451, m11), 1);
		dcStructField(st, 'f', offsetof(union  A451, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{clicpd}c<sllicddcfljpspc>pp{fjf}<dldjsidcpsijf>ipcclppsc} */
struct A452 { struct A448 m0; c m1; union  A449 m2; p m3; p m4; struct A450 m5; union  A451 m6; i m7; p m8; c m9; c m10; l m11; p m12; p m13; s m14; c m15; };
void f_cpA452(struct A452 *x, const struct A452 *y) { f_cpA448(&x->m0, &y->m0); x->m1 = y->m1; f_cpA449(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA450(&x->m5, &y->m5); f_cpA451(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA452(const struct A452 *x, const struct A452 *y) { return f_cmpA448(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA449(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA450(&x->m5, &y->m5) && f_cmpA451(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA452() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A452), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A452, m0), 1, f_touchdcstA448());
		dcStructField(st, 'c', offsetof(struct A452, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A452, m2), 1, f_touchdcstA449());
		dcStructField(st, 'p', offsetof(struct A452, m3), 1);
		dcStructField(st, 'p', offsetof(struct A452, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A452, m5), 1, f_touchdcstA450());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A452, m6), 1, f_touchdcstA451());
		dcStructField(st, 'i', offsetof(struct A452, m7), 1);
		dcStructField(st, 'p', offsetof(struct A452, m8), 1);
		dcStructField(st, 'c', offsetof(struct A452, m9), 1);
		dcStructField(st, 'c', offsetof(struct A452, m10), 1);
		dcStructField(st, 'l', offsetof(struct A452, m11), 1);
		dcStructField(st, 'p', offsetof(struct A452, m12), 1);
		dcStructField(st, 'p', offsetof(struct A452, m13), 1);
		dcStructField(st, 's', offsetof(struct A452, m14), 1);
		dcStructField(st, 'c', offsetof(struct A452, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ispidd} */
struct A453 { i m0; s m1; p m2; i m3; d m4; d m5; };
void f_cpA453(struct A453 *x, const struct A453 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA453(const struct A453 *x, const struct A453 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA453() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A453), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A453, m0), 1);
		dcStructField(st, 's', offsetof(struct A453, m1), 1);
		dcStructField(st, 'p', offsetof(struct A453, m2), 1);
		dcStructField(st, 'i', offsetof(struct A453, m3), 1);
		dcStructField(st, 'd', offsetof(struct A453, m4), 1);
		dcStructField(st, 'd', offsetof(struct A453, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpffjlcll} */
struct A454 { l m0; p m1; f m2; f m3; j m4; l m5; c m6; l m7; l m8; };
void f_cpA454(struct A454 *x, const struct A454 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA454(const struct A454 *x, const struct A454 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA454() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A454), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A454, m0), 1);
		dcStructField(st, 'p', offsetof(struct A454, m1), 1);
		dcStructField(st, 'f', offsetof(struct A454, m2), 1);
		dcStructField(st, 'f', offsetof(struct A454, m3), 1);
		dcStructField(st, 'j', offsetof(struct A454, m4), 1);
		dcStructField(st, 'l', offsetof(struct A454, m5), 1);
		dcStructField(st, 'c', offsetof(struct A454, m6), 1);
		dcStructField(st, 'l', offsetof(struct A454, m7), 1);
		dcStructField(st, 'l', offsetof(struct A454, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ld} */
struct A455 { l m0; d m1; };
void f_cpA455(struct A455 *x, const struct A455 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA455(const struct A455 *x, const struct A455 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA455() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A455), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A455, m0), 1);
		dcStructField(st, 'd', offsetof(struct A455, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fs> */
union  A456 { f m0; s m1; };
void f_cpA456(union  A456 *x, const union  A456 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA456(const union  A456 *x, const union  A456 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA456() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A456), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A456, m0), 1);
		dcStructField(st, 's', offsetof(union  A456, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djljlilf> */
union  A457 { d m0; j m1; l m2; j m3; l m4; i m5; l m6; f m7; };
void f_cpA457(union  A457 *x, const union  A457 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA457(const union  A457 *x, const union  A457 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA457() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A457), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A457, m0), 1);
		dcStructField(st, 'j', offsetof(union  A457, m1), 1);
		dcStructField(st, 'l', offsetof(union  A457, m2), 1);
		dcStructField(st, 'j', offsetof(union  A457, m3), 1);
		dcStructField(st, 'l', offsetof(union  A457, m4), 1);
		dcStructField(st, 'i', offsetof(union  A457, m5), 1);
		dcStructField(st, 'l', offsetof(union  A457, m6), 1);
		dcStructField(st, 'f', offsetof(union  A457, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcpcics} */
struct A458 { f m0; c m1; p m2; c m3; i m4; c m5; s m6; };
void f_cpA458(struct A458 *x, const struct A458 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA458(const struct A458 *x, const struct A458 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA458() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A458), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A458, m0), 1);
		dcStructField(st, 'c', offsetof(struct A458, m1), 1);
		dcStructField(st, 'p', offsetof(struct A458, m2), 1);
		dcStructField(st, 'c', offsetof(struct A458, m3), 1);
		dcStructField(st, 'i', offsetof(struct A458, m4), 1);
		dcStructField(st, 'c', offsetof(struct A458, m5), 1);
		dcStructField(st, 's', offsetof(struct A458, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lp} */
struct A459 { l m0; p m1; };
void f_cpA459(struct A459 *x, const struct A459 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA459(const struct A459 *x, const struct A459 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA459() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A459), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A459, m0), 1);
		dcStructField(st, 'p', offsetof(struct A459, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <i{ld}j<fs><djljlilf>{fcpcics}ldi{lp}> */
union  A460 { i m0; struct A455 m1; j m2; union  A456 m3; union  A457 m4; struct A458 m5; l m6; d m7; i m8; struct A459 m9; };
void f_cpA460(union  A460 *x, const union  A460 *y) { x->m0 = y->m0; f_cpA455(&x->m1, &y->m1); x->m2 = y->m2; f_cpA456(&x->m3, &y->m3); f_cpA457(&x->m4, &y->m4); f_cpA458(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA459(&x->m9, &y->m9); };
int f_cmpA460(const union  A460 *x, const union  A460 *y) { return x->m0 == y->m0 && f_cmpA455(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA456(&x->m3, &y->m3) && f_cmpA457(&x->m4, &y->m4) && f_cmpA458(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA459(&x->m9, &y->m9); };
DCstruct* f_touchdcstA460() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A460), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A460, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A460, m1), 1, f_touchdcstA455());
		dcStructField(st, 'j', offsetof(union  A460, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A460, m3), 1, f_touchdcstA456());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A460, m4), 1, f_touchdcstA457());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A460, m5), 1, f_touchdcstA458());
		dcStructField(st, 'l', offsetof(union  A460, m6), 1);
		dcStructField(st, 'd', offsetof(union  A460, m7), 1);
		dcStructField(st, 'i', offsetof(union  A460, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A460, m9), 1, f_touchdcstA459());
		dcCloseStruct(st);
	}
	return st;
};
/* <lf> */
union  A461 { l m0; f m1; };
void f_cpA461(union  A461 *x, const union  A461 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA461(const union  A461 *x, const union  A461 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA461() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A461), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A461, m0), 1);
		dcStructField(st, 'f', offsetof(union  A461, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sdscic> */
union  A462 { s m0; d m1; s m2; c m3; i m4; c m5; };
void f_cpA462(union  A462 *x, const union  A462 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA462(const union  A462 *x, const union  A462 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA462() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A462), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A462, m0), 1);
		dcStructField(st, 'd', offsetof(union  A462, m1), 1);
		dcStructField(st, 's', offsetof(union  A462, m2), 1);
		dcStructField(st, 'c', offsetof(union  A462, m3), 1);
		dcStructField(st, 'i', offsetof(union  A462, m4), 1);
		dcStructField(st, 'c', offsetof(union  A462, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pi} */
struct A463 { p m0; i m1; };
void f_cpA463(struct A463 *x, const struct A463 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA463(const struct A463 *x, const struct A463 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA463() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A463), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A463, m0), 1);
		dcStructField(st, 'i', offsetof(struct A463, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <llpcpifiiiij> */
union  A464 { l m0; l m1; p m2; c m3; p m4; i m5; f m6; i m7; i m8; i m9; i m10; j m11; };
void f_cpA464(union  A464 *x, const union  A464 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA464(const union  A464 *x, const union  A464 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA464() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A464), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A464, m0), 1);
		dcStructField(st, 'l', offsetof(union  A464, m1), 1);
		dcStructField(st, 'p', offsetof(union  A464, m2), 1);
		dcStructField(st, 'c', offsetof(union  A464, m3), 1);
		dcStructField(st, 'p', offsetof(union  A464, m4), 1);
		dcStructField(st, 'i', offsetof(union  A464, m5), 1);
		dcStructField(st, 'f', offsetof(union  A464, m6), 1);
		dcStructField(st, 'i', offsetof(union  A464, m7), 1);
		dcStructField(st, 'i', offsetof(union  A464, m8), 1);
		dcStructField(st, 'i', offsetof(union  A464, m9), 1);
		dcStructField(st, 'i', offsetof(union  A464, m10), 1);
		dcStructField(st, 'j', offsetof(union  A464, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jscfppcdisfdplp> */
union  A465 { j m0; s m1; c m2; f m3; p m4; p m5; c m6; d m7; i m8; s m9; f m10; d m11; p m12; l m13; p m14; };
void f_cpA465(union  A465 *x, const union  A465 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA465(const union  A465 *x, const union  A465 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA465() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A465), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A465, m0), 1);
		dcStructField(st, 's', offsetof(union  A465, m1), 1);
		dcStructField(st, 'c', offsetof(union  A465, m2), 1);
		dcStructField(st, 'f', offsetof(union  A465, m3), 1);
		dcStructField(st, 'p', offsetof(union  A465, m4), 1);
		dcStructField(st, 'p', offsetof(union  A465, m5), 1);
		dcStructField(st, 'c', offsetof(union  A465, m6), 1);
		dcStructField(st, 'd', offsetof(union  A465, m7), 1);
		dcStructField(st, 'i', offsetof(union  A465, m8), 1);
		dcStructField(st, 's', offsetof(union  A465, m9), 1);
		dcStructField(st, 'f', offsetof(union  A465, m10), 1);
		dcStructField(st, 'd', offsetof(union  A465, m11), 1);
		dcStructField(st, 'p', offsetof(union  A465, m12), 1);
		dcStructField(st, 'l', offsetof(union  A465, m13), 1);
		dcStructField(st, 'p', offsetof(union  A465, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ipld> */
union  A466 { i m0; p m1; l m2; d m3; };
void f_cpA466(union  A466 *x, const union  A466 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA466(const union  A466 *x, const union  A466 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA466() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A466), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A466, m0), 1);
		dcStructField(st, 'p', offsetof(union  A466, m1), 1);
		dcStructField(st, 'l', offsetof(union  A466, m2), 1);
		dcStructField(st, 'd', offsetof(union  A466, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sllp{pi}s<llpcpifiiiij>lj<jscfppcdisfdplp>l<s>slsjsljf{i}<ipld>ljif> */
union  A467 { s m0; l m1; l m2; p m3; struct A463 m4; s m5; union  A464 m6; l m7; j m8; union  A465 m9; l m10; union  A75 m11; s m12; l m13; s m14; j m15; s m16; l m17; j m18; f m19; struct A71 m20; union  A466 m21; l m22; j m23; i m24; f m25; };
void f_cpA467(union  A467 *x, const union  A467 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA463(&x->m4, &y->m4); x->m5 = y->m5; f_cpA464(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; f_cpA465(&x->m9, &y->m9); x->m10 = y->m10; f_cpA75(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; f_cpA71(&x->m20, &y->m20); f_cpA466(&x->m21, &y->m21); x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA467(const union  A467 *x, const union  A467 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA463(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA464(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA465(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA75(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && f_cmpA71(&x->m20, &y->m20) && f_cmpA466(&x->m21, &y->m21) && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA467() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(union  A467), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A467, m0), 1);
		dcStructField(st, 'l', offsetof(union  A467, m1), 1);
		dcStructField(st, 'l', offsetof(union  A467, m2), 1);
		dcStructField(st, 'p', offsetof(union  A467, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A467, m4), 1, f_touchdcstA463());
		dcStructField(st, 's', offsetof(union  A467, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A467, m6), 1, f_touchdcstA464());
		dcStructField(st, 'l', offsetof(union  A467, m7), 1);
		dcStructField(st, 'j', offsetof(union  A467, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A467, m9), 1, f_touchdcstA465());
		dcStructField(st, 'l', offsetof(union  A467, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A467, m11), 1, f_touchdcstA75());
		dcStructField(st, 's', offsetof(union  A467, m12), 1);
		dcStructField(st, 'l', offsetof(union  A467, m13), 1);
		dcStructField(st, 's', offsetof(union  A467, m14), 1);
		dcStructField(st, 'j', offsetof(union  A467, m15), 1);
		dcStructField(st, 's', offsetof(union  A467, m16), 1);
		dcStructField(st, 'l', offsetof(union  A467, m17), 1);
		dcStructField(st, 'j', offsetof(union  A467, m18), 1);
		dcStructField(st, 'f', offsetof(union  A467, m19), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A467, m20), 1, f_touchdcstA71());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A467, m21), 1, f_touchdcstA466());
		dcStructField(st, 'l', offsetof(union  A467, m22), 1);
		dcStructField(st, 'j', offsetof(union  A467, m23), 1);
		dcStructField(st, 'i', offsetof(union  A467, m24), 1);
		dcStructField(st, 'f', offsetof(union  A467, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<sllp{pi}s<llpcpifiiiij>lj<jscfppcdisfdplp>l<s>slsjsljf{i}<ipld>ljif>ii> */
union  A468 { union  A467 m0; i m1; i m2; };
void f_cpA468(union  A468 *x, const union  A468 *y) { f_cpA467(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA468(const union  A468 *x, const union  A468 *y) { return f_cmpA467(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA468() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A468), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A468, m0), 1, f_touchdcstA467());
		dcStructField(st, 'i', offsetof(union  A468, m1), 1);
		dcStructField(st, 'i', offsetof(union  A468, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ds} */
struct A469 { d m0; s m1; };
void f_cpA469(struct A469 *x, const struct A469 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA469(const struct A469 *x, const struct A469 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA469() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A469), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A469, m0), 1);
		dcStructField(st, 's', offsetof(struct A469, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lcpfpppflfjdlcfc> */
union  A470 { l m0; c m1; p m2; f m3; p m4; p m5; p m6; f m7; l m8; f m9; j m10; d m11; l m12; c m13; f m14; c m15; };
void f_cpA470(union  A470 *x, const union  A470 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA470(const union  A470 *x, const union  A470 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA470() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A470), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A470, m0), 1);
		dcStructField(st, 'c', offsetof(union  A470, m1), 1);
		dcStructField(st, 'p', offsetof(union  A470, m2), 1);
		dcStructField(st, 'f', offsetof(union  A470, m3), 1);
		dcStructField(st, 'p', offsetof(union  A470, m4), 1);
		dcStructField(st, 'p', offsetof(union  A470, m5), 1);
		dcStructField(st, 'p', offsetof(union  A470, m6), 1);
		dcStructField(st, 'f', offsetof(union  A470, m7), 1);
		dcStructField(st, 'l', offsetof(union  A470, m8), 1);
		dcStructField(st, 'f', offsetof(union  A470, m9), 1);
		dcStructField(st, 'j', offsetof(union  A470, m10), 1);
		dcStructField(st, 'd', offsetof(union  A470, m11), 1);
		dcStructField(st, 'l', offsetof(union  A470, m12), 1);
		dcStructField(st, 'c', offsetof(union  A470, m13), 1);
		dcStructField(st, 'f', offsetof(union  A470, m14), 1);
		dcStructField(st, 'c', offsetof(union  A470, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifij} */
struct A471 { i m0; f m1; i m2; j m3; };
void f_cpA471(struct A471 *x, const struct A471 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA471(const struct A471 *x, const struct A471 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA471() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A471), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A471, m0), 1);
		dcStructField(st, 'f', offsetof(struct A471, m1), 1);
		dcStructField(st, 'i', offsetof(struct A471, m2), 1);
		dcStructField(st, 'j', offsetof(struct A471, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpfccls<lcpfpppflfjdlcfc>dfc{ifij}} */
struct A472 { j m0; p m1; f m2; c m3; c m4; l m5; s m6; union  A470 m7; d m8; f m9; c m10; struct A471 m11; };
void f_cpA472(struct A472 *x, const struct A472 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA470(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA471(&x->m11, &y->m11); };
int f_cmpA472(const struct A472 *x, const struct A472 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA470(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA471(&x->m11, &y->m11); };
DCstruct* f_touchdcstA472() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A472), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A472, m0), 1);
		dcStructField(st, 'p', offsetof(struct A472, m1), 1);
		dcStructField(st, 'f', offsetof(struct A472, m2), 1);
		dcStructField(st, 'c', offsetof(struct A472, m3), 1);
		dcStructField(st, 'c', offsetof(struct A472, m4), 1);
		dcStructField(st, 'l', offsetof(struct A472, m5), 1);
		dcStructField(st, 's', offsetof(struct A472, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A472, m7), 1, f_touchdcstA470());
		dcStructField(st, 'd', offsetof(struct A472, m8), 1);
		dcStructField(st, 'f', offsetof(struct A472, m9), 1);
		dcStructField(st, 'c', offsetof(struct A472, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A472, m11), 1, f_touchdcstA471());
		dcCloseStruct(st);
	}
	return st;
};
/* <{jpfccls<lcpfpppflfjdlcfc>dfc{ifij}}pidj> */
union  A473 { struct A472 m0; p m1; i m2; d m3; j m4; };
void f_cpA473(union  A473 *x, const union  A473 *y) { f_cpA472(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA473(const union  A473 *x, const union  A473 *y) { return f_cmpA472(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA473() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A473), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A473, m0), 1, f_touchdcstA472());
		dcStructField(st, 'p', offsetof(union  A473, m1), 1);
		dcStructField(st, 'i', offsetof(union  A473, m2), 1);
		dcStructField(st, 'd', offsetof(union  A473, m3), 1);
		dcStructField(st, 'j', offsetof(union  A473, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ppilfplijlillic> */
union  A474 { p m0; p m1; i m2; l m3; f m4; p m5; l m6; i m7; j m8; l m9; i m10; l m11; l m12; i m13; c m14; };
void f_cpA474(union  A474 *x, const union  A474 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA474(const union  A474 *x, const union  A474 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA474() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A474), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A474, m0), 1);
		dcStructField(st, 'p', offsetof(union  A474, m1), 1);
		dcStructField(st, 'i', offsetof(union  A474, m2), 1);
		dcStructField(st, 'l', offsetof(union  A474, m3), 1);
		dcStructField(st, 'f', offsetof(union  A474, m4), 1);
		dcStructField(st, 'p', offsetof(union  A474, m5), 1);
		dcStructField(st, 'l', offsetof(union  A474, m6), 1);
		dcStructField(st, 'i', offsetof(union  A474, m7), 1);
		dcStructField(st, 'j', offsetof(union  A474, m8), 1);
		dcStructField(st, 'l', offsetof(union  A474, m9), 1);
		dcStructField(st, 'i', offsetof(union  A474, m10), 1);
		dcStructField(st, 'l', offsetof(union  A474, m11), 1);
		dcStructField(st, 'l', offsetof(union  A474, m12), 1);
		dcStructField(st, 'i', offsetof(union  A474, m13), 1);
		dcStructField(st, 'c', offsetof(union  A474, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ipsfijdcdspf> */
union  A475 { i m0; p m1; s m2; f m3; i m4; j m5; d m6; c m7; d m8; s m9; p m10; f m11; };
void f_cpA475(union  A475 *x, const union  A475 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA475(const union  A475 *x, const union  A475 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA475() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A475), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A475, m0), 1);
		dcStructField(st, 'p', offsetof(union  A475, m1), 1);
		dcStructField(st, 's', offsetof(union  A475, m2), 1);
		dcStructField(st, 'f', offsetof(union  A475, m3), 1);
		dcStructField(st, 'i', offsetof(union  A475, m4), 1);
		dcStructField(st, 'j', offsetof(union  A475, m5), 1);
		dcStructField(st, 'd', offsetof(union  A475, m6), 1);
		dcStructField(st, 'c', offsetof(union  A475, m7), 1);
		dcStructField(st, 'd', offsetof(union  A475, m8), 1);
		dcStructField(st, 's', offsetof(union  A475, m9), 1);
		dcStructField(st, 'p', offsetof(union  A475, m10), 1);
		dcStructField(st, 'f', offsetof(union  A475, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fclpi<ppilfplijlillic>iplplc<ipsfijdcdspf>} */
struct A476 { f m0; c m1; l m2; p m3; i m4; union  A474 m5; i m6; p m7; l m8; p m9; l m10; c m11; union  A475 m12; };
void f_cpA476(struct A476 *x, const struct A476 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA474(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA475(&x->m12, &y->m12); };
int f_cmpA476(const struct A476 *x, const struct A476 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA474(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA475(&x->m12, &y->m12); };
DCstruct* f_touchdcstA476() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A476), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A476, m0), 1);
		dcStructField(st, 'c', offsetof(struct A476, m1), 1);
		dcStructField(st, 'l', offsetof(struct A476, m2), 1);
		dcStructField(st, 'p', offsetof(struct A476, m3), 1);
		dcStructField(st, 'i', offsetof(struct A476, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A476, m5), 1, f_touchdcstA474());
		dcStructField(st, 'i', offsetof(struct A476, m6), 1);
		dcStructField(st, 'p', offsetof(struct A476, m7), 1);
		dcStructField(st, 'l', offsetof(struct A476, m8), 1);
		dcStructField(st, 'p', offsetof(struct A476, m9), 1);
		dcStructField(st, 'l', offsetof(struct A476, m10), 1);
		dcStructField(st, 'c', offsetof(struct A476, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A476, m12), 1, f_touchdcstA475());
		dcCloseStruct(st);
	}
	return st;
};
/* <isjlsiddfs> */
union  A477 { i m0; s m1; j m2; l m3; s m4; i m5; d m6; d m7; f m8; s m9; };
void f_cpA477(union  A477 *x, const union  A477 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA477(const union  A477 *x, const union  A477 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA477() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A477), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A477, m0), 1);
		dcStructField(st, 's', offsetof(union  A477, m1), 1);
		dcStructField(st, 'j', offsetof(union  A477, m2), 1);
		dcStructField(st, 'l', offsetof(union  A477, m3), 1);
		dcStructField(st, 's', offsetof(union  A477, m4), 1);
		dcStructField(st, 'i', offsetof(union  A477, m5), 1);
		dcStructField(st, 'd', offsetof(union  A477, m6), 1);
		dcStructField(st, 'd', offsetof(union  A477, m7), 1);
		dcStructField(st, 'f', offsetof(union  A477, m8), 1);
		dcStructField(st, 's', offsetof(union  A477, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sc> */
union  A478 { s m0; c m1; };
void f_cpA478(union  A478 *x, const union  A478 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA478(const union  A478 *x, const union  A478 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA478() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A478), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A478, m0), 1);
		dcStructField(st, 'c', offsetof(union  A478, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sids} */
struct A479 { s m0; i m1; d m2; s m3; };
void f_cpA479(struct A479 *x, const struct A479 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA479(const struct A479 *x, const struct A479 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA479() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A479), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A479, m0), 1);
		dcStructField(st, 'i', offsetof(struct A479, m1), 1);
		dcStructField(st, 'd', offsetof(struct A479, m2), 1);
		dcStructField(st, 's', offsetof(struct A479, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jccdcd{si}<sc>lpsds{sids}} */
struct A480 { j m0; c m1; c m2; d m3; c m4; d m5; struct A413 m6; union  A478 m7; l m8; p m9; s m10; d m11; s m12; struct A479 m13; };
void f_cpA480(struct A480 *x, const struct A480 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA413(&x->m6, &y->m6); f_cpA478(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA479(&x->m13, &y->m13); };
int f_cmpA480(const struct A480 *x, const struct A480 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA413(&x->m6, &y->m6) && f_cmpA478(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA479(&x->m13, &y->m13); };
DCstruct* f_touchdcstA480() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A480), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A480, m0), 1);
		dcStructField(st, 'c', offsetof(struct A480, m1), 1);
		dcStructField(st, 'c', offsetof(struct A480, m2), 1);
		dcStructField(st, 'd', offsetof(struct A480, m3), 1);
		dcStructField(st, 'c', offsetof(struct A480, m4), 1);
		dcStructField(st, 'd', offsetof(struct A480, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A480, m6), 1, f_touchdcstA413());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A480, m7), 1, f_touchdcstA478());
		dcStructField(st, 'l', offsetof(struct A480, m8), 1);
		dcStructField(st, 'p', offsetof(struct A480, m9), 1);
		dcStructField(st, 's', offsetof(struct A480, m10), 1);
		dcStructField(st, 'd', offsetof(struct A480, m11), 1);
		dcStructField(st, 's', offsetof(struct A480, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A480, m13), 1, f_touchdcstA479());
		dcCloseStruct(st);
	}
	return st;
};
/* {cplccc{fclpi<ppilfplijlillic>iplplc<ipsfijdcdspf>}<isjlsiddfs>ficc{jccdcd{si}<sc>lpsds{sids}}ifcifs} */
struct A481 { c m0; p m1; l m2; c m3; c m4; c m5; struct A476 m6; union  A477 m7; f m8; i m9; c m10; c m11; struct A480 m12; i m13; f m14; c m15; i m16; f m17; s m18; };
void f_cpA481(struct A481 *x, const struct A481 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA476(&x->m6, &y->m6); f_cpA477(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA480(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA481(const struct A481 *x, const struct A481 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA476(&x->m6, &y->m6) && f_cmpA477(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA480(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA481() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A481), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A481, m0), 1);
		dcStructField(st, 'p', offsetof(struct A481, m1), 1);
		dcStructField(st, 'l', offsetof(struct A481, m2), 1);
		dcStructField(st, 'c', offsetof(struct A481, m3), 1);
		dcStructField(st, 'c', offsetof(struct A481, m4), 1);
		dcStructField(st, 'c', offsetof(struct A481, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A481, m6), 1, f_touchdcstA476());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A481, m7), 1, f_touchdcstA477());
		dcStructField(st, 'f', offsetof(struct A481, m8), 1);
		dcStructField(st, 'i', offsetof(struct A481, m9), 1);
		dcStructField(st, 'c', offsetof(struct A481, m10), 1);
		dcStructField(st, 'c', offsetof(struct A481, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A481, m12), 1, f_touchdcstA480());
		dcStructField(st, 'i', offsetof(struct A481, m13), 1);
		dcStructField(st, 'f', offsetof(struct A481, m14), 1);
		dcStructField(st, 'c', offsetof(struct A481, m15), 1);
		dcStructField(st, 'i', offsetof(struct A481, m16), 1);
		dcStructField(st, 'f', offsetof(struct A481, m17), 1);
		dcStructField(st, 's', offsetof(struct A481, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jcfpcs> */
union  A482 { j m0; c m1; f m2; p m3; c m4; s m5; };
void f_cpA482(union  A482 *x, const union  A482 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA482(const union  A482 *x, const union  A482 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA482() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A482), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A482, m0), 1);
		dcStructField(st, 'c', offsetof(union  A482, m1), 1);
		dcStructField(st, 'f', offsetof(union  A482, m2), 1);
		dcStructField(st, 'p', offsetof(union  A482, m3), 1);
		dcStructField(st, 'c', offsetof(union  A482, m4), 1);
		dcStructField(st, 's', offsetof(union  A482, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjdfssiicffplplf} */
struct A483 { s m0; j m1; d m2; f m3; s m4; s m5; i m6; i m7; c m8; f m9; f m10; p m11; l m12; p m13; l m14; f m15; };
void f_cpA483(struct A483 *x, const struct A483 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA483(const struct A483 *x, const struct A483 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA483() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A483), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A483, m0), 1);
		dcStructField(st, 'j', offsetof(struct A483, m1), 1);
		dcStructField(st, 'd', offsetof(struct A483, m2), 1);
		dcStructField(st, 'f', offsetof(struct A483, m3), 1);
		dcStructField(st, 's', offsetof(struct A483, m4), 1);
		dcStructField(st, 's', offsetof(struct A483, m5), 1);
		dcStructField(st, 'i', offsetof(struct A483, m6), 1);
		dcStructField(st, 'i', offsetof(struct A483, m7), 1);
		dcStructField(st, 'c', offsetof(struct A483, m8), 1);
		dcStructField(st, 'f', offsetof(struct A483, m9), 1);
		dcStructField(st, 'f', offsetof(struct A483, m10), 1);
		dcStructField(st, 'p', offsetof(struct A483, m11), 1);
		dcStructField(st, 'l', offsetof(struct A483, m12), 1);
		dcStructField(st, 'p', offsetof(struct A483, m13), 1);
		dcStructField(st, 'l', offsetof(struct A483, m14), 1);
		dcStructField(st, 'f', offsetof(struct A483, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifis} */
struct A484 { i m0; f m1; i m2; s m3; };
void f_cpA484(struct A484 *x, const struct A484 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA484(const struct A484 *x, const struct A484 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA484() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A484), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A484, m0), 1);
		dcStructField(st, 'f', offsetof(struct A484, m1), 1);
		dcStructField(st, 'i', offsetof(struct A484, m2), 1);
		dcStructField(st, 's', offsetof(struct A484, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lp<jcfpcs>ljpfs{sjdfssiicffplplf}plfl{ifis}sp> */
union  A485 { l m0; p m1; union  A482 m2; l m3; j m4; p m5; f m6; s m7; struct A483 m8; p m9; l m10; f m11; l m12; struct A484 m13; s m14; p m15; };
void f_cpA485(union  A485 *x, const union  A485 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA482(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA483(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA484(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA485(const union  A485 *x, const union  A485 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA482(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA483(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA484(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA485() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A485), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A485, m0), 1);
		dcStructField(st, 'p', offsetof(union  A485, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A485, m2), 1, f_touchdcstA482());
		dcStructField(st, 'l', offsetof(union  A485, m3), 1);
		dcStructField(st, 'j', offsetof(union  A485, m4), 1);
		dcStructField(st, 'p', offsetof(union  A485, m5), 1);
		dcStructField(st, 'f', offsetof(union  A485, m6), 1);
		dcStructField(st, 's', offsetof(union  A485, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A485, m8), 1, f_touchdcstA483());
		dcStructField(st, 'p', offsetof(union  A485, m9), 1);
		dcStructField(st, 'l', offsetof(union  A485, m10), 1);
		dcStructField(st, 'f', offsetof(union  A485, m11), 1);
		dcStructField(st, 'l', offsetof(union  A485, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A485, m13), 1, f_touchdcstA484());
		dcStructField(st, 's', offsetof(union  A485, m14), 1);
		dcStructField(st, 'p', offsetof(union  A485, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdji} */
struct A486 { c m0; d m1; j m2; i m3; };
void f_cpA486(struct A486 *x, const struct A486 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA486(const struct A486 *x, const struct A486 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA486() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A486), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A486, m0), 1);
		dcStructField(st, 'd', offsetof(struct A486, m1), 1);
		dcStructField(st, 'j', offsetof(struct A486, m2), 1);
		dcStructField(st, 'i', offsetof(struct A486, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d{cdji}sc<d>cicjl> */
union  A487 { d m0; struct A486 m1; s m2; c m3; union  A94 m4; c m5; i m6; c m7; j m8; l m9; };
void f_cpA487(union  A487 *x, const union  A487 *y) { x->m0 = y->m0; f_cpA486(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; f_cpA94(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA487(const union  A487 *x, const union  A487 *y) { return x->m0 == y->m0 && f_cmpA486(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA94(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA487() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A487), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A487, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A487, m1), 1, f_touchdcstA486());
		dcStructField(st, 's', offsetof(union  A487, m2), 1);
		dcStructField(st, 'c', offsetof(union  A487, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A487, m4), 1, f_touchdcstA94());
		dcStructField(st, 'c', offsetof(union  A487, m5), 1);
		dcStructField(st, 'i', offsetof(union  A487, m6), 1);
		dcStructField(st, 'c', offsetof(union  A487, m7), 1);
		dcStructField(st, 'j', offsetof(union  A487, m8), 1);
		dcStructField(st, 'l', offsetof(union  A487, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <flcldplpp> */
union  A488 { f m0; l m1; c m2; l m3; d m4; p m5; l m6; p m7; p m8; };
void f_cpA488(union  A488 *x, const union  A488 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA488(const union  A488 *x, const union  A488 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA488() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A488), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A488, m0), 1);
		dcStructField(st, 'l', offsetof(union  A488, m1), 1);
		dcStructField(st, 'c', offsetof(union  A488, m2), 1);
		dcStructField(st, 'l', offsetof(union  A488, m3), 1);
		dcStructField(st, 'd', offsetof(union  A488, m4), 1);
		dcStructField(st, 'p', offsetof(union  A488, m5), 1);
		dcStructField(st, 'l', offsetof(union  A488, m6), 1);
		dcStructField(st, 'p', offsetof(union  A488, m7), 1);
		dcStructField(st, 'p', offsetof(union  A488, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cds} */
struct A489 { c m0; d m1; s m2; };
void f_cpA489(struct A489 *x, const struct A489 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA489(const struct A489 *x, const struct A489 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA489() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A489), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A489, m0), 1);
		dcStructField(st, 'd', offsetof(struct A489, m1), 1);
		dcStructField(st, 's', offsetof(struct A489, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lficijp> */
union  A490 { l m0; f m1; i m2; c m3; i m4; j m5; p m6; };
void f_cpA490(union  A490 *x, const union  A490 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA490(const union  A490 *x, const union  A490 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA490() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A490), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A490, m0), 1);
		dcStructField(st, 'f', offsetof(union  A490, m1), 1);
		dcStructField(st, 'i', offsetof(union  A490, m2), 1);
		dcStructField(st, 'c', offsetof(union  A490, m3), 1);
		dcStructField(st, 'i', offsetof(union  A490, m4), 1);
		dcStructField(st, 'j', offsetof(union  A490, m5), 1);
		dcStructField(st, 'p', offsetof(union  A490, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfsspiipsjip} */
struct A491 { p m0; f m1; s m2; s m3; p m4; i m5; i m6; p m7; s m8; j m9; i m10; p m11; };
void f_cpA491(struct A491 *x, const struct A491 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA491(const struct A491 *x, const struct A491 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA491() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A491), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A491, m0), 1);
		dcStructField(st, 'f', offsetof(struct A491, m1), 1);
		dcStructField(st, 's', offsetof(struct A491, m2), 1);
		dcStructField(st, 's', offsetof(struct A491, m3), 1);
		dcStructField(st, 'p', offsetof(struct A491, m4), 1);
		dcStructField(st, 'i', offsetof(struct A491, m5), 1);
		dcStructField(st, 'i', offsetof(struct A491, m6), 1);
		dcStructField(st, 'p', offsetof(struct A491, m7), 1);
		dcStructField(st, 's', offsetof(struct A491, m8), 1);
		dcStructField(st, 'j', offsetof(struct A491, m9), 1);
		dcStructField(st, 'i', offsetof(struct A491, m10), 1);
		dcStructField(st, 'p', offsetof(struct A491, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jslfsfdpii> */
union  A492 { j m0; s m1; l m2; f m3; s m4; f m5; d m6; p m7; i m8; i m9; };
void f_cpA492(union  A492 *x, const union  A492 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA492(const union  A492 *x, const union  A492 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA492() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A492), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A492, m0), 1);
		dcStructField(st, 's', offsetof(union  A492, m1), 1);
		dcStructField(st, 'l', offsetof(union  A492, m2), 1);
		dcStructField(st, 'f', offsetof(union  A492, m3), 1);
		dcStructField(st, 's', offsetof(union  A492, m4), 1);
		dcStructField(st, 'f', offsetof(union  A492, m5), 1);
		dcStructField(st, 'd', offsetof(union  A492, m6), 1);
		dcStructField(st, 'p', offsetof(union  A492, m7), 1);
		dcStructField(st, 'i', offsetof(union  A492, m8), 1);
		dcStructField(st, 'i', offsetof(union  A492, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sll<flcldplpp>{cds}jpd<lficijp>slc{pfsspiipsjip}<jslfsfdpii>> */
union  A493 { s m0; l m1; l m2; union  A488 m3; struct A489 m4; j m5; p m6; d m7; union  A490 m8; s m9; l m10; c m11; struct A491 m12; union  A492 m13; };
void f_cpA493(union  A493 *x, const union  A493 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA488(&x->m3, &y->m3); f_cpA489(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA490(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA491(&x->m12, &y->m12); f_cpA492(&x->m13, &y->m13); };
int f_cmpA493(const union  A493 *x, const union  A493 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA488(&x->m3, &y->m3) && f_cmpA489(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA490(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA491(&x->m12, &y->m12) && f_cmpA492(&x->m13, &y->m13); };
DCstruct* f_touchdcstA493() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A493), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A493, m0), 1);
		dcStructField(st, 'l', offsetof(union  A493, m1), 1);
		dcStructField(st, 'l', offsetof(union  A493, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A493, m3), 1, f_touchdcstA488());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A493, m4), 1, f_touchdcstA489());
		dcStructField(st, 'j', offsetof(union  A493, m5), 1);
		dcStructField(st, 'p', offsetof(union  A493, m6), 1);
		dcStructField(st, 'd', offsetof(union  A493, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A493, m8), 1, f_touchdcstA490());
		dcStructField(st, 's', offsetof(union  A493, m9), 1);
		dcStructField(st, 'l', offsetof(union  A493, m10), 1);
		dcStructField(st, 'c', offsetof(union  A493, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A493, m12), 1, f_touchdcstA491());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A493, m13), 1, f_touchdcstA492());
		dcCloseStruct(st);
	}
	return st;
};
/* <pl> */
union  A494 { p m0; l m1; };
void f_cpA494(union  A494 *x, const union  A494 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA494(const union  A494 *x, const union  A494 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA494() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A494), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A494, m0), 1);
		dcStructField(st, 'l', offsetof(union  A494, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fssisscjflflsdppdfidsljfjpdjfp> */
union  A495 { f m0; s m1; s m2; i m3; s m4; s m5; c m6; j m7; f m8; l m9; f m10; l m11; s m12; d m13; p m14; p m15; d m16; f m17; i m18; d m19; s m20; l m21; j m22; f m23; j m24; p m25; d m26; j m27; f m28; p m29; };
void f_cpA495(union  A495 *x, const union  A495 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA495(const union  A495 *x, const union  A495 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA495() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(union  A495), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A495, m0), 1);
		dcStructField(st, 's', offsetof(union  A495, m1), 1);
		dcStructField(st, 's', offsetof(union  A495, m2), 1);
		dcStructField(st, 'i', offsetof(union  A495, m3), 1);
		dcStructField(st, 's', offsetof(union  A495, m4), 1);
		dcStructField(st, 's', offsetof(union  A495, m5), 1);
		dcStructField(st, 'c', offsetof(union  A495, m6), 1);
		dcStructField(st, 'j', offsetof(union  A495, m7), 1);
		dcStructField(st, 'f', offsetof(union  A495, m8), 1);
		dcStructField(st, 'l', offsetof(union  A495, m9), 1);
		dcStructField(st, 'f', offsetof(union  A495, m10), 1);
		dcStructField(st, 'l', offsetof(union  A495, m11), 1);
		dcStructField(st, 's', offsetof(union  A495, m12), 1);
		dcStructField(st, 'd', offsetof(union  A495, m13), 1);
		dcStructField(st, 'p', offsetof(union  A495, m14), 1);
		dcStructField(st, 'p', offsetof(union  A495, m15), 1);
		dcStructField(st, 'd', offsetof(union  A495, m16), 1);
		dcStructField(st, 'f', offsetof(union  A495, m17), 1);
		dcStructField(st, 'i', offsetof(union  A495, m18), 1);
		dcStructField(st, 'd', offsetof(union  A495, m19), 1);
		dcStructField(st, 's', offsetof(union  A495, m20), 1);
		dcStructField(st, 'l', offsetof(union  A495, m21), 1);
		dcStructField(st, 'j', offsetof(union  A495, m22), 1);
		dcStructField(st, 'f', offsetof(union  A495, m23), 1);
		dcStructField(st, 'j', offsetof(union  A495, m24), 1);
		dcStructField(st, 'p', offsetof(union  A495, m25), 1);
		dcStructField(st, 'd', offsetof(union  A495, m26), 1);
		dcStructField(st, 'j', offsetof(union  A495, m27), 1);
		dcStructField(st, 'f', offsetof(union  A495, m28), 1);
		dcStructField(st, 'p', offsetof(union  A495, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<fssisscjflflsdppdfidsljfjpdjfp>lcfi} */
struct A496 { union  A495 m0; l m1; c m2; f m3; i m4; };
void f_cpA496(struct A496 *x, const struct A496 *y) { f_cpA495(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA496(const struct A496 *x, const struct A496 *y) { return f_cmpA495(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA496() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A496), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A496, m0), 1, f_touchdcstA495());
		dcStructField(st, 'l', offsetof(struct A496, m1), 1);
		dcStructField(st, 'c', offsetof(struct A496, m2), 1);
		dcStructField(st, 'f', offsetof(struct A496, m3), 1);
		dcStructField(st, 'i', offsetof(struct A496, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfjfjfcsfffscslddd> */
union  A497 { s m0; f m1; j m2; f m3; j m4; f m5; c m6; s m7; f m8; f m9; f m10; s m11; c m12; s m13; l m14; d m15; d m16; d m17; };
void f_cpA497(union  A497 *x, const union  A497 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA497(const union  A497 *x, const union  A497 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA497() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A497), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A497, m0), 1);
		dcStructField(st, 'f', offsetof(union  A497, m1), 1);
		dcStructField(st, 'j', offsetof(union  A497, m2), 1);
		dcStructField(st, 'f', offsetof(union  A497, m3), 1);
		dcStructField(st, 'j', offsetof(union  A497, m4), 1);
		dcStructField(st, 'f', offsetof(union  A497, m5), 1);
		dcStructField(st, 'c', offsetof(union  A497, m6), 1);
		dcStructField(st, 's', offsetof(union  A497, m7), 1);
		dcStructField(st, 'f', offsetof(union  A497, m8), 1);
		dcStructField(st, 'f', offsetof(union  A497, m9), 1);
		dcStructField(st, 'f', offsetof(union  A497, m10), 1);
		dcStructField(st, 's', offsetof(union  A497, m11), 1);
		dcStructField(st, 'c', offsetof(union  A497, m12), 1);
		dcStructField(st, 's', offsetof(union  A497, m13), 1);
		dcStructField(st, 'l', offsetof(union  A497, m14), 1);
		dcStructField(st, 'd', offsetof(union  A497, m15), 1);
		dcStructField(st, 'd', offsetof(union  A497, m16), 1);
		dcStructField(st, 'd', offsetof(union  A497, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jljjpcfjilsiiis> */
union  A498 { j m0; l m1; j m2; j m3; p m4; c m5; f m6; j m7; i m8; l m9; s m10; i m11; i m12; i m13; s m14; };
void f_cpA498(union  A498 *x, const union  A498 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA498(const union  A498 *x, const union  A498 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA498() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A498), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A498, m0), 1);
		dcStructField(st, 'l', offsetof(union  A498, m1), 1);
		dcStructField(st, 'j', offsetof(union  A498, m2), 1);
		dcStructField(st, 'j', offsetof(union  A498, m3), 1);
		dcStructField(st, 'p', offsetof(union  A498, m4), 1);
		dcStructField(st, 'c', offsetof(union  A498, m5), 1);
		dcStructField(st, 'f', offsetof(union  A498, m6), 1);
		dcStructField(st, 'j', offsetof(union  A498, m7), 1);
		dcStructField(st, 'i', offsetof(union  A498, m8), 1);
		dcStructField(st, 'l', offsetof(union  A498, m9), 1);
		dcStructField(st, 's', offsetof(union  A498, m10), 1);
		dcStructField(st, 'i', offsetof(union  A498, m11), 1);
		dcStructField(st, 'i', offsetof(union  A498, m12), 1);
		dcStructField(st, 'i', offsetof(union  A498, m13), 1);
		dcStructField(st, 's', offsetof(union  A498, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fpjjlsscfp> */
union  A499 { f m0; p m1; j m2; j m3; l m4; s m5; s m6; c m7; f m8; p m9; };
void f_cpA499(union  A499 *x, const union  A499 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA499(const union  A499 *x, const union  A499 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA499() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A499), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A499, m0), 1);
		dcStructField(st, 'p', offsetof(union  A499, m1), 1);
		dcStructField(st, 'j', offsetof(union  A499, m2), 1);
		dcStructField(st, 'j', offsetof(union  A499, m3), 1);
		dcStructField(st, 'l', offsetof(union  A499, m4), 1);
		dcStructField(st, 's', offsetof(union  A499, m5), 1);
		dcStructField(st, 's', offsetof(union  A499, m6), 1);
		dcStructField(st, 'c', offsetof(union  A499, m7), 1);
		dcStructField(st, 'f', offsetof(union  A499, m8), 1);
		dcStructField(st, 'p', offsetof(union  A499, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pcfd> */
union  A500 { p m0; c m1; f m2; d m3; };
void f_cpA500(union  A500 *x, const union  A500 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA500(const union  A500 *x, const union  A500 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA500() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A500), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A500, m0), 1);
		dcStructField(st, 'c', offsetof(union  A500, m1), 1);
		dcStructField(st, 'f', offsetof(union  A500, m2), 1);
		dcStructField(st, 'd', offsetof(union  A500, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<jljjpcfjilsiiis>ss<fpjjlsscfp><pcfd>> */
union  A501 { union  A498 m0; s m1; s m2; union  A499 m3; union  A500 m4; };
void f_cpA501(union  A501 *x, const union  A501 *y) { f_cpA498(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA499(&x->m3, &y->m3); f_cpA500(&x->m4, &y->m4); };
int f_cmpA501(const union  A501 *x, const union  A501 *y) { return f_cmpA498(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA499(&x->m3, &y->m3) && f_cmpA500(&x->m4, &y->m4); };
DCstruct* f_touchdcstA501() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A501), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A501, m0), 1, f_touchdcstA498());
		dcStructField(st, 's', offsetof(union  A501, m1), 1);
		dcStructField(st, 's', offsetof(union  A501, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A501, m3), 1, f_touchdcstA499());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A501, m4), 1, f_touchdcstA500());
		dcCloseStruct(st);
	}
	return st;
};
/* {sjspcfj} */
struct A502 { s m0; j m1; s m2; p m3; c m4; f m5; j m6; };
void f_cpA502(struct A502 *x, const struct A502 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA502(const struct A502 *x, const struct A502 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA502() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A502), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A502, m0), 1);
		dcStructField(st, 'j', offsetof(struct A502, m1), 1);
		dcStructField(st, 's', offsetof(struct A502, m2), 1);
		dcStructField(st, 'p', offsetof(struct A502, m3), 1);
		dcStructField(st, 'c', offsetof(struct A502, m4), 1);
		dcStructField(st, 'f', offsetof(struct A502, m5), 1);
		dcStructField(st, 'j', offsetof(struct A502, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sssffj> */
union  A503 { s m0; s m1; s m2; f m3; f m4; j m5; };
void f_cpA503(union  A503 *x, const union  A503 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA503(const union  A503 *x, const union  A503 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA503() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A503), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A503, m0), 1);
		dcStructField(st, 's', offsetof(union  A503, m1), 1);
		dcStructField(st, 's', offsetof(union  A503, m2), 1);
		dcStructField(st, 'f', offsetof(union  A503, m3), 1);
		dcStructField(st, 'f', offsetof(union  A503, m4), 1);
		dcStructField(st, 'j', offsetof(union  A503, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcdlll<sssffj>ljsissl> */
union  A504 { f m0; c m1; d m2; l m3; l m4; l m5; union  A503 m6; l m7; j m8; s m9; i m10; s m11; s m12; l m13; };
void f_cpA504(union  A504 *x, const union  A504 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA503(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA504(const union  A504 *x, const union  A504 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA503(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA504() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A504), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A504, m0), 1);
		dcStructField(st, 'c', offsetof(union  A504, m1), 1);
		dcStructField(st, 'd', offsetof(union  A504, m2), 1);
		dcStructField(st, 'l', offsetof(union  A504, m3), 1);
		dcStructField(st, 'l', offsetof(union  A504, m4), 1);
		dcStructField(st, 'l', offsetof(union  A504, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A504, m6), 1, f_touchdcstA503());
		dcStructField(st, 'l', offsetof(union  A504, m7), 1);
		dcStructField(st, 'j', offsetof(union  A504, m8), 1);
		dcStructField(st, 's', offsetof(union  A504, m9), 1);
		dcStructField(st, 'i', offsetof(union  A504, m10), 1);
		dcStructField(st, 's', offsetof(union  A504, m11), 1);
		dcStructField(st, 's', offsetof(union  A504, m12), 1);
		dcStructField(st, 'l', offsetof(union  A504, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcjplsjjl> */
union  A505 { d m0; c m1; j m2; p m3; l m4; s m5; j m6; j m7; l m8; };
void f_cpA505(union  A505 *x, const union  A505 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA505(const union  A505 *x, const union  A505 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA505() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A505), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A505, m0), 1);
		dcStructField(st, 'c', offsetof(union  A505, m1), 1);
		dcStructField(st, 'j', offsetof(union  A505, m2), 1);
		dcStructField(st, 'p', offsetof(union  A505, m3), 1);
		dcStructField(st, 'l', offsetof(union  A505, m4), 1);
		dcStructField(st, 's', offsetof(union  A505, m5), 1);
		dcStructField(st, 'j', offsetof(union  A505, m6), 1);
		dcStructField(st, 'j', offsetof(union  A505, m7), 1);
		dcStructField(st, 'l', offsetof(union  A505, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcspsldcpj> */
union  A506 { d m0; c m1; s m2; p m3; s m4; l m5; d m6; c m7; p m8; j m9; };
void f_cpA506(union  A506 *x, const union  A506 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA506(const union  A506 *x, const union  A506 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA506() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A506), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A506, m0), 1);
		dcStructField(st, 'c', offsetof(union  A506, m1), 1);
		dcStructField(st, 's', offsetof(union  A506, m2), 1);
		dcStructField(st, 'p', offsetof(union  A506, m3), 1);
		dcStructField(st, 's', offsetof(union  A506, m4), 1);
		dcStructField(st, 'l', offsetof(union  A506, m5), 1);
		dcStructField(st, 'd', offsetof(union  A506, m6), 1);
		dcStructField(st, 'c', offsetof(union  A506, m7), 1);
		dcStructField(st, 'p', offsetof(union  A506, m8), 1);
		dcStructField(st, 'j', offsetof(union  A506, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csjc} */
struct A507 { c m0; s m1; j m2; c m3; };
void f_cpA507(struct A507 *x, const struct A507 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA507(const struct A507 *x, const struct A507 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA507() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A507), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A507, m0), 1);
		dcStructField(st, 's', offsetof(struct A507, m1), 1);
		dcStructField(st, 'j', offsetof(struct A507, m2), 1);
		dcStructField(st, 'c', offsetof(struct A507, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlj} */
struct A508 { j m0; l m1; j m2; };
void f_cpA508(struct A508 *x, const struct A508 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA508(const struct A508 *x, const struct A508 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA508() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A508), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A508, m0), 1);
		dcStructField(st, 'l', offsetof(struct A508, m1), 1);
		dcStructField(st, 'j', offsetof(struct A508, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fpjfflpl> */
union  A509 { f m0; p m1; j m2; f m3; f m4; l m5; p m6; l m7; };
void f_cpA509(union  A509 *x, const union  A509 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA509(const union  A509 *x, const union  A509 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA509() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A509), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A509, m0), 1);
		dcStructField(st, 'p', offsetof(union  A509, m1), 1);
		dcStructField(st, 'j', offsetof(union  A509, m2), 1);
		dcStructField(st, 'f', offsetof(union  A509, m3), 1);
		dcStructField(st, 'f', offsetof(union  A509, m4), 1);
		dcStructField(st, 'l', offsetof(union  A509, m5), 1);
		dcStructField(st, 'p', offsetof(union  A509, m6), 1);
		dcStructField(st, 'l', offsetof(union  A509, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <psjlsispfpjijdclil> */
union  A510 { p m0; s m1; j m2; l m3; s m4; i m5; s m6; p m7; f m8; p m9; j m10; i m11; j m12; d m13; c m14; l m15; i m16; l m17; };
void f_cpA510(union  A510 *x, const union  A510 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA510(const union  A510 *x, const union  A510 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA510() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A510), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A510, m0), 1);
		dcStructField(st, 's', offsetof(union  A510, m1), 1);
		dcStructField(st, 'j', offsetof(union  A510, m2), 1);
		dcStructField(st, 'l', offsetof(union  A510, m3), 1);
		dcStructField(st, 's', offsetof(union  A510, m4), 1);
		dcStructField(st, 'i', offsetof(union  A510, m5), 1);
		dcStructField(st, 's', offsetof(union  A510, m6), 1);
		dcStructField(st, 'p', offsetof(union  A510, m7), 1);
		dcStructField(st, 'f', offsetof(union  A510, m8), 1);
		dcStructField(st, 'p', offsetof(union  A510, m9), 1);
		dcStructField(st, 'j', offsetof(union  A510, m10), 1);
		dcStructField(st, 'i', offsetof(union  A510, m11), 1);
		dcStructField(st, 'j', offsetof(union  A510, m12), 1);
		dcStructField(st, 'd', offsetof(union  A510, m13), 1);
		dcStructField(st, 'c', offsetof(union  A510, m14), 1);
		dcStructField(st, 'l', offsetof(union  A510, m15), 1);
		dcStructField(st, 'i', offsetof(union  A510, m16), 1);
		dcStructField(st, 'l', offsetof(union  A510, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jlsij> */
union  A511 { j m0; l m1; s m2; i m3; j m4; };
void f_cpA511(union  A511 *x, const union  A511 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA511(const union  A511 *x, const union  A511 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA511() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A511), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A511, m0), 1);
		dcStructField(st, 'l', offsetof(union  A511, m1), 1);
		dcStructField(st, 's', offsetof(union  A511, m2), 1);
		dcStructField(st, 'i', offsetof(union  A511, m3), 1);
		dcStructField(st, 'j', offsetof(union  A511, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lif} */
struct A512 { l m0; i m1; f m2; };
void f_cpA512(struct A512 *x, const struct A512 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA512(const struct A512 *x, const struct A512 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA512() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A512), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A512, m0), 1);
		dcStructField(st, 'i', offsetof(struct A512, m1), 1);
		dcStructField(st, 'f', offsetof(struct A512, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjscfpjpspcpllcpdlpl} */
struct A513 { j m0; j m1; s m2; c m3; f m4; p m5; j m6; p m7; s m8; p m9; c m10; p m11; l m12; l m13; c m14; p m15; d m16; l m17; p m18; l m19; };
void f_cpA513(struct A513 *x, const struct A513 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA513(const struct A513 *x, const struct A513 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA513() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A513), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A513, m0), 1);
		dcStructField(st, 'j', offsetof(struct A513, m1), 1);
		dcStructField(st, 's', offsetof(struct A513, m2), 1);
		dcStructField(st, 'c', offsetof(struct A513, m3), 1);
		dcStructField(st, 'f', offsetof(struct A513, m4), 1);
		dcStructField(st, 'p', offsetof(struct A513, m5), 1);
		dcStructField(st, 'j', offsetof(struct A513, m6), 1);
		dcStructField(st, 'p', offsetof(struct A513, m7), 1);
		dcStructField(st, 's', offsetof(struct A513, m8), 1);
		dcStructField(st, 'p', offsetof(struct A513, m9), 1);
		dcStructField(st, 'c', offsetof(struct A513, m10), 1);
		dcStructField(st, 'p', offsetof(struct A513, m11), 1);
		dcStructField(st, 'l', offsetof(struct A513, m12), 1);
		dcStructField(st, 'l', offsetof(struct A513, m13), 1);
		dcStructField(st, 'c', offsetof(struct A513, m14), 1);
		dcStructField(st, 'p', offsetof(struct A513, m15), 1);
		dcStructField(st, 'd', offsetof(struct A513, m16), 1);
		dcStructField(st, 'l', offsetof(struct A513, m17), 1);
		dcStructField(st, 'p', offsetof(struct A513, m18), 1);
		dcStructField(st, 'l', offsetof(struct A513, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsdpc} */
struct A514 { f m0; s m1; d m2; p m3; c m4; };
void f_cpA514(struct A514 *x, const struct A514 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA514(const struct A514 *x, const struct A514 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA514() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A514), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A514, m0), 1);
		dcStructField(st, 's', offsetof(struct A514, m1), 1);
		dcStructField(st, 'd', offsetof(struct A514, m2), 1);
		dcStructField(st, 'p', offsetof(struct A514, m3), 1);
		dcStructField(st, 'c', offsetof(struct A514, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{jlj}ic<fpjfflpl><psjlsispfpjijdclil>c<jlsij>{lif}l{jjscfpjpspcpllcpdlpl}{fsdpc}i> */
union  A515 { struct A508 m0; i m1; c m2; union  A509 m3; union  A510 m4; c m5; union  A511 m6; struct A512 m7; l m8; struct A513 m9; struct A514 m10; i m11; };
void f_cpA515(union  A515 *x, const union  A515 *y) { f_cpA508(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA509(&x->m3, &y->m3); f_cpA510(&x->m4, &y->m4); x->m5 = y->m5; f_cpA511(&x->m6, &y->m6); f_cpA512(&x->m7, &y->m7); x->m8 = y->m8; f_cpA513(&x->m9, &y->m9); f_cpA514(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA515(const union  A515 *x, const union  A515 *y) { return f_cmpA508(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA509(&x->m3, &y->m3) && f_cmpA510(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA511(&x->m6, &y->m6) && f_cmpA512(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA513(&x->m9, &y->m9) && f_cmpA514(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA515() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A515), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A515, m0), 1, f_touchdcstA508());
		dcStructField(st, 'i', offsetof(union  A515, m1), 1);
		dcStructField(st, 'c', offsetof(union  A515, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A515, m3), 1, f_touchdcstA509());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A515, m4), 1, f_touchdcstA510());
		dcStructField(st, 'c', offsetof(union  A515, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A515, m6), 1, f_touchdcstA511());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A515, m7), 1, f_touchdcstA512());
		dcStructField(st, 'l', offsetof(union  A515, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A515, m9), 1, f_touchdcstA513());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A515, m10), 1, f_touchdcstA514());
		dcStructField(st, 'i', offsetof(union  A515, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<i>p{d}ic} */
struct A516 { union  A22 m0; p m1; struct A156 m2; i m3; c m4; };
void f_cpA516(struct A516 *x, const struct A516 *y) { f_cpA22(&x->m0, &y->m0); x->m1 = y->m1; f_cpA156(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA516(const struct A516 *x, const struct A516 *y) { return f_cmpA22(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA156(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA516() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A516), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A516, m0), 1, f_touchdcstA22());
		dcStructField(st, 'p', offsetof(struct A516, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A516, m2), 1, f_touchdcstA156());
		dcStructField(st, 'i', offsetof(struct A516, m3), 1);
		dcStructField(st, 'c', offsetof(struct A516, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pcpicsijs> */
union  A517 { p m0; c m1; p m2; i m3; c m4; s m5; i m6; j m7; s m8; };
void f_cpA517(union  A517 *x, const union  A517 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA517(const union  A517 *x, const union  A517 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA517() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A517), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A517, m0), 1);
		dcStructField(st, 'c', offsetof(union  A517, m1), 1);
		dcStructField(st, 'p', offsetof(union  A517, m2), 1);
		dcStructField(st, 'i', offsetof(union  A517, m3), 1);
		dcStructField(st, 'c', offsetof(union  A517, m4), 1);
		dcStructField(st, 's', offsetof(union  A517, m5), 1);
		dcStructField(st, 'i', offsetof(union  A517, m6), 1);
		dcStructField(st, 'j', offsetof(union  A517, m7), 1);
		dcStructField(st, 's', offsetof(union  A517, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ccc<pcpicsijs>p> */
union  A518 { c m0; c m1; c m2; union  A517 m3; p m4; };
void f_cpA518(union  A518 *x, const union  A518 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA517(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA518(const union  A518 *x, const union  A518 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA517(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA518() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A518), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A518, m0), 1);
		dcStructField(st, 'c', offsetof(union  A518, m1), 1);
		dcStructField(st, 'c', offsetof(union  A518, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A518, m3), 1, f_touchdcstA517());
		dcStructField(st, 'p', offsetof(union  A518, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cslcdijdjp> */
union  A519 { c m0; s m1; l m2; c m3; d m4; i m5; j m6; d m7; j m8; p m9; };
void f_cpA519(union  A519 *x, const union  A519 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA519(const union  A519 *x, const union  A519 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA519() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A519), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A519, m0), 1);
		dcStructField(st, 's', offsetof(union  A519, m1), 1);
		dcStructField(st, 'l', offsetof(union  A519, m2), 1);
		dcStructField(st, 'c', offsetof(union  A519, m3), 1);
		dcStructField(st, 'd', offsetof(union  A519, m4), 1);
		dcStructField(st, 'i', offsetof(union  A519, m5), 1);
		dcStructField(st, 'j', offsetof(union  A519, m6), 1);
		dcStructField(st, 'd', offsetof(union  A519, m7), 1);
		dcStructField(st, 'j', offsetof(union  A519, m8), 1);
		dcStructField(st, 'p', offsetof(union  A519, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dji> */
union  A520 { d m0; j m1; i m2; };
void f_cpA520(union  A520 *x, const union  A520 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA520(const union  A520 *x, const union  A520 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA520() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A520), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A520, m0), 1);
		dcStructField(st, 'j', offsetof(union  A520, m1), 1);
		dcStructField(st, 'i', offsetof(union  A520, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsfffllli<is>i<cslcdijdjp>llplccpddcli<dji>df} */
struct A521 { d m0; s m1; f m2; f m3; f m4; l m5; l m6; l m7; i m8; union  A416 m9; i m10; union  A519 m11; l m12; l m13; p m14; l m15; c m16; c m17; p m18; d m19; d m20; c m21; l m22; i m23; union  A520 m24; d m25; f m26; };
void f_cpA521(struct A521 *x, const struct A521 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA416(&x->m9, &y->m9); x->m10 = y->m10; f_cpA519(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; f_cpA520(&x->m24, &y->m24); x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA521(const struct A521 *x, const struct A521 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA416(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA519(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && f_cmpA520(&x->m24, &y->m24) && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA521() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(struct A521), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A521, m0), 1);
		dcStructField(st, 's', offsetof(struct A521, m1), 1);
		dcStructField(st, 'f', offsetof(struct A521, m2), 1);
		dcStructField(st, 'f', offsetof(struct A521, m3), 1);
		dcStructField(st, 'f', offsetof(struct A521, m4), 1);
		dcStructField(st, 'l', offsetof(struct A521, m5), 1);
		dcStructField(st, 'l', offsetof(struct A521, m6), 1);
		dcStructField(st, 'l', offsetof(struct A521, m7), 1);
		dcStructField(st, 'i', offsetof(struct A521, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A521, m9), 1, f_touchdcstA416());
		dcStructField(st, 'i', offsetof(struct A521, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A521, m11), 1, f_touchdcstA519());
		dcStructField(st, 'l', offsetof(struct A521, m12), 1);
		dcStructField(st, 'l', offsetof(struct A521, m13), 1);
		dcStructField(st, 'p', offsetof(struct A521, m14), 1);
		dcStructField(st, 'l', offsetof(struct A521, m15), 1);
		dcStructField(st, 'c', offsetof(struct A521, m16), 1);
		dcStructField(st, 'c', offsetof(struct A521, m17), 1);
		dcStructField(st, 'p', offsetof(struct A521, m18), 1);
		dcStructField(st, 'd', offsetof(struct A521, m19), 1);
		dcStructField(st, 'd', offsetof(struct A521, m20), 1);
		dcStructField(st, 'c', offsetof(struct A521, m21), 1);
		dcStructField(st, 'l', offsetof(struct A521, m22), 1);
		dcStructField(st, 'i', offsetof(struct A521, m23), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A521, m24), 1, f_touchdcstA520());
		dcStructField(st, 'd', offsetof(struct A521, m25), 1);
		dcStructField(st, 'f', offsetof(struct A521, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <f<ccc<pcpicsijs>p>{dsfffllli<is>i<cslcdijdjp>llplccpddcli<dji>df}iicdil> */
union  A522 { f m0; union  A518 m1; struct A521 m2; i m3; i m4; c m5; d m6; i m7; l m8; };
void f_cpA522(union  A522 *x, const union  A522 *y) { x->m0 = y->m0; f_cpA518(&x->m1, &y->m1); f_cpA521(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA522(const union  A522 *x, const union  A522 *y) { return x->m0 == y->m0 && f_cmpA518(&x->m1, &y->m1) && f_cmpA521(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA522() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A522), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A522, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A522, m1), 1, f_touchdcstA518());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A522, m2), 1, f_touchdcstA521());
		dcStructField(st, 'i', offsetof(union  A522, m3), 1);
		dcStructField(st, 'i', offsetof(union  A522, m4), 1);
		dcStructField(st, 'c', offsetof(union  A522, m5), 1);
		dcStructField(st, 'd', offsetof(union  A522, m6), 1);
		dcStructField(st, 'i', offsetof(union  A522, m7), 1);
		dcStructField(st, 'l', offsetof(union  A522, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sldjcjcclppflljfssjcjfjlspspfc} */
struct A523 { s m0; l m1; d m2; j m3; c m4; j m5; c m6; c m7; l m8; p m9; p m10; f m11; l m12; l m13; j m14; f m15; s m16; s m17; j m18; c m19; j m20; f m21; j m22; l m23; s m24; p m25; s m26; p m27; f m28; c m29; };
void f_cpA523(struct A523 *x, const struct A523 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA523(const struct A523 *x, const struct A523 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA523() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A523), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A523, m0), 1);
		dcStructField(st, 'l', offsetof(struct A523, m1), 1);
		dcStructField(st, 'd', offsetof(struct A523, m2), 1);
		dcStructField(st, 'j', offsetof(struct A523, m3), 1);
		dcStructField(st, 'c', offsetof(struct A523, m4), 1);
		dcStructField(st, 'j', offsetof(struct A523, m5), 1);
		dcStructField(st, 'c', offsetof(struct A523, m6), 1);
		dcStructField(st, 'c', offsetof(struct A523, m7), 1);
		dcStructField(st, 'l', offsetof(struct A523, m8), 1);
		dcStructField(st, 'p', offsetof(struct A523, m9), 1);
		dcStructField(st, 'p', offsetof(struct A523, m10), 1);
		dcStructField(st, 'f', offsetof(struct A523, m11), 1);
		dcStructField(st, 'l', offsetof(struct A523, m12), 1);
		dcStructField(st, 'l', offsetof(struct A523, m13), 1);
		dcStructField(st, 'j', offsetof(struct A523, m14), 1);
		dcStructField(st, 'f', offsetof(struct A523, m15), 1);
		dcStructField(st, 's', offsetof(struct A523, m16), 1);
		dcStructField(st, 's', offsetof(struct A523, m17), 1);
		dcStructField(st, 'j', offsetof(struct A523, m18), 1);
		dcStructField(st, 'c', offsetof(struct A523, m19), 1);
		dcStructField(st, 'j', offsetof(struct A523, m20), 1);
		dcStructField(st, 'f', offsetof(struct A523, m21), 1);
		dcStructField(st, 'j', offsetof(struct A523, m22), 1);
		dcStructField(st, 'l', offsetof(struct A523, m23), 1);
		dcStructField(st, 's', offsetof(struct A523, m24), 1);
		dcStructField(st, 'p', offsetof(struct A523, m25), 1);
		dcStructField(st, 's', offsetof(struct A523, m26), 1);
		dcStructField(st, 'p', offsetof(struct A523, m27), 1);
		dcStructField(st, 'f', offsetof(struct A523, m28), 1);
		dcStructField(st, 'c', offsetof(struct A523, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fsppfd> */
union  A524 { f m0; s m1; p m2; p m3; f m4; d m5; };
void f_cpA524(union  A524 *x, const union  A524 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA524(const union  A524 *x, const union  A524 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA524() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A524), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A524, m0), 1);
		dcStructField(st, 's', offsetof(union  A524, m1), 1);
		dcStructField(st, 'p', offsetof(union  A524, m2), 1);
		dcStructField(st, 'p', offsetof(union  A524, m3), 1);
		dcStructField(st, 'f', offsetof(union  A524, m4), 1);
		dcStructField(st, 'd', offsetof(union  A524, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cf> */
union  A525 { c m0; f m1; };
void f_cpA525(union  A525 *x, const union  A525 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA525(const union  A525 *x, const union  A525 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA525() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A525), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A525, m0), 1);
		dcStructField(st, 'f', offsetof(union  A525, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ficiisddjlljp} */
struct A526 { f m0; i m1; c m2; i m3; i m4; s m5; d m6; d m7; j m8; l m9; l m10; j m11; p m12; };
void f_cpA526(struct A526 *x, const struct A526 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA526(const struct A526 *x, const struct A526 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA526() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A526), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A526, m0), 1);
		dcStructField(st, 'i', offsetof(struct A526, m1), 1);
		dcStructField(st, 'c', offsetof(struct A526, m2), 1);
		dcStructField(st, 'i', offsetof(struct A526, m3), 1);
		dcStructField(st, 'i', offsetof(struct A526, m4), 1);
		dcStructField(st, 's', offsetof(struct A526, m5), 1);
		dcStructField(st, 'd', offsetof(struct A526, m6), 1);
		dcStructField(st, 'd', offsetof(struct A526, m7), 1);
		dcStructField(st, 'j', offsetof(struct A526, m8), 1);
		dcStructField(st, 'l', offsetof(struct A526, m9), 1);
		dcStructField(st, 'l', offsetof(struct A526, m10), 1);
		dcStructField(st, 'j', offsetof(struct A526, m11), 1);
		dcStructField(st, 'p', offsetof(struct A526, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <csclifllis> */
union  A527 { c m0; s m1; c m2; l m3; i m4; f m5; l m6; l m7; i m8; s m9; };
void f_cpA527(union  A527 *x, const union  A527 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA527(const union  A527 *x, const union  A527 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA527() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A527), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A527, m0), 1);
		dcStructField(st, 's', offsetof(union  A527, m1), 1);
		dcStructField(st, 'c', offsetof(union  A527, m2), 1);
		dcStructField(st, 'l', offsetof(union  A527, m3), 1);
		dcStructField(st, 'i', offsetof(union  A527, m4), 1);
		dcStructField(st, 'f', offsetof(union  A527, m5), 1);
		dcStructField(st, 'l', offsetof(union  A527, m6), 1);
		dcStructField(st, 'l', offsetof(union  A527, m7), 1);
		dcStructField(st, 'i', offsetof(union  A527, m8), 1);
		dcStructField(st, 's', offsetof(union  A527, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{ficiisddjlljp}ldsp<csclifllis>il<fs>lj> */
union  A528 { struct A526 m0; l m1; d m2; s m3; p m4; union  A527 m5; i m6; l m7; union  A456 m8; l m9; j m10; };
void f_cpA528(union  A528 *x, const union  A528 *y) { f_cpA526(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA527(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; f_cpA456(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA528(const union  A528 *x, const union  A528 *y) { return f_cmpA526(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA527(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA456(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA528() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A528), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A528, m0), 1, f_touchdcstA526());
		dcStructField(st, 'l', offsetof(union  A528, m1), 1);
		dcStructField(st, 'd', offsetof(union  A528, m2), 1);
		dcStructField(st, 's', offsetof(union  A528, m3), 1);
		dcStructField(st, 'p', offsetof(union  A528, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A528, m5), 1, f_touchdcstA527());
		dcStructField(st, 'i', offsetof(union  A528, m6), 1);
		dcStructField(st, 'l', offsetof(union  A528, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A528, m8), 1, f_touchdcstA456());
		dcStructField(st, 'l', offsetof(union  A528, m9), 1);
		dcStructField(st, 'j', offsetof(union  A528, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <id<{ficiisddjlljp}ldsp<csclifllis>il<fs>lj>> */
union  A529 { i m0; d m1; union  A528 m2; };
void f_cpA529(union  A529 *x, const union  A529 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA528(&x->m2, &y->m2); };
int f_cmpA529(const union  A529 *x, const union  A529 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA528(&x->m2, &y->m2); };
DCstruct* f_touchdcstA529() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A529), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A529, m0), 1);
		dcStructField(st, 'd', offsetof(union  A529, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A529, m2), 1, f_touchdcstA528());
		dcCloseStruct(st);
	}
	return st;
};
/* <ciiisjscillplfdjjjcdppjpijl> */
union  A530 { c m0; i m1; i m2; i m3; s m4; j m5; s m6; c m7; i m8; l m9; l m10; p m11; l m12; f m13; d m14; j m15; j m16; j m17; c m18; d m19; p m20; p m21; j m22; p m23; i m24; j m25; l m26; };
void f_cpA530(union  A530 *x, const union  A530 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA530(const union  A530 *x, const union  A530 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA530() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(union  A530), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A530, m0), 1);
		dcStructField(st, 'i', offsetof(union  A530, m1), 1);
		dcStructField(st, 'i', offsetof(union  A530, m2), 1);
		dcStructField(st, 'i', offsetof(union  A530, m3), 1);
		dcStructField(st, 's', offsetof(union  A530, m4), 1);
		dcStructField(st, 'j', offsetof(union  A530, m5), 1);
		dcStructField(st, 's', offsetof(union  A530, m6), 1);
		dcStructField(st, 'c', offsetof(union  A530, m7), 1);
		dcStructField(st, 'i', offsetof(union  A530, m8), 1);
		dcStructField(st, 'l', offsetof(union  A530, m9), 1);
		dcStructField(st, 'l', offsetof(union  A530, m10), 1);
		dcStructField(st, 'p', offsetof(union  A530, m11), 1);
		dcStructField(st, 'l', offsetof(union  A530, m12), 1);
		dcStructField(st, 'f', offsetof(union  A530, m13), 1);
		dcStructField(st, 'd', offsetof(union  A530, m14), 1);
		dcStructField(st, 'j', offsetof(union  A530, m15), 1);
		dcStructField(st, 'j', offsetof(union  A530, m16), 1);
		dcStructField(st, 'j', offsetof(union  A530, m17), 1);
		dcStructField(st, 'c', offsetof(union  A530, m18), 1);
		dcStructField(st, 'd', offsetof(union  A530, m19), 1);
		dcStructField(st, 'p', offsetof(union  A530, m20), 1);
		dcStructField(st, 'p', offsetof(union  A530, m21), 1);
		dcStructField(st, 'j', offsetof(union  A530, m22), 1);
		dcStructField(st, 'p', offsetof(union  A530, m23), 1);
		dcStructField(st, 'i', offsetof(union  A530, m24), 1);
		dcStructField(st, 'j', offsetof(union  A530, m25), 1);
		dcStructField(st, 'l', offsetof(union  A530, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dls> */
union  A531 { d m0; l m1; s m2; };
void f_cpA531(union  A531 *x, const union  A531 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA531(const union  A531 *x, const union  A531 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA531() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A531), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A531, m0), 1);
		dcStructField(st, 'l', offsetof(union  A531, m1), 1);
		dcStructField(st, 's', offsetof(union  A531, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cll<ciiisjscillplfdjjjcdppjpijl>ldidfj<dls>} */
struct A532 { c m0; l m1; l m2; union  A530 m3; l m4; d m5; i m6; d m7; f m8; j m9; union  A531 m10; };
void f_cpA532(struct A532 *x, const struct A532 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA530(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA531(&x->m10, &y->m10); };
int f_cmpA532(const struct A532 *x, const struct A532 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA530(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA531(&x->m10, &y->m10); };
DCstruct* f_touchdcstA532() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A532), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A532, m0), 1);
		dcStructField(st, 'l', offsetof(struct A532, m1), 1);
		dcStructField(st, 'l', offsetof(struct A532, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A532, m3), 1, f_touchdcstA530());
		dcStructField(st, 'l', offsetof(struct A532, m4), 1);
		dcStructField(st, 'd', offsetof(struct A532, m5), 1);
		dcStructField(st, 'i', offsetof(struct A532, m6), 1);
		dcStructField(st, 'd', offsetof(struct A532, m7), 1);
		dcStructField(st, 'f', offsetof(struct A532, m8), 1);
		dcStructField(st, 'j', offsetof(struct A532, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A532, m10), 1, f_touchdcstA531());
		dcCloseStruct(st);
	}
	return st;
};
/* <pj> */
union  A533 { p m0; j m1; };
void f_cpA533(union  A533 *x, const union  A533 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA533(const union  A533 *x, const union  A533 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA533() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A533), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A533, m0), 1);
		dcStructField(st, 'j', offsetof(union  A533, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfiffpclc> */
union  A534 { d m0; f m1; i m2; f m3; f m4; p m5; c m6; l m7; c m8; };
void f_cpA534(union  A534 *x, const union  A534 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA534(const union  A534 *x, const union  A534 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA534() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A534), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A534, m0), 1);
		dcStructField(st, 'f', offsetof(union  A534, m1), 1);
		dcStructField(st, 'i', offsetof(union  A534, m2), 1);
		dcStructField(st, 'f', offsetof(union  A534, m3), 1);
		dcStructField(st, 'f', offsetof(union  A534, m4), 1);
		dcStructField(st, 'p', offsetof(union  A534, m5), 1);
		dcStructField(st, 'c', offsetof(union  A534, m6), 1);
		dcStructField(st, 'l', offsetof(union  A534, m7), 1);
		dcStructField(st, 'c', offsetof(union  A534, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lci> */
union  A535 { l m0; c m1; i m2; };
void f_cpA535(union  A535 *x, const union  A535 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA535(const union  A535 *x, const union  A535 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA535() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A535), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A535, m0), 1);
		dcStructField(st, 'c', offsetof(union  A535, m1), 1);
		dcStructField(st, 'i', offsetof(union  A535, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <flsll> */
union  A536 { f m0; l m1; s m2; l m3; l m4; };
void f_cpA536(union  A536 *x, const union  A536 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA536(const union  A536 *x, const union  A536 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA536() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A536), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A536, m0), 1);
		dcStructField(st, 'l', offsetof(union  A536, m1), 1);
		dcStructField(st, 's', offsetof(union  A536, m2), 1);
		dcStructField(st, 'l', offsetof(union  A536, m3), 1);
		dcStructField(st, 'l', offsetof(union  A536, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fjdccjdpj> */
union  A537 { f m0; j m1; d m2; c m3; c m4; j m5; d m6; p m7; j m8; };
void f_cpA537(union  A537 *x, const union  A537 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA537(const union  A537 *x, const union  A537 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA537() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A537), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A537, m0), 1);
		dcStructField(st, 'j', offsetof(union  A537, m1), 1);
		dcStructField(st, 'd', offsetof(union  A537, m2), 1);
		dcStructField(st, 'c', offsetof(union  A537, m3), 1);
		dcStructField(st, 'c', offsetof(union  A537, m4), 1);
		dcStructField(st, 'j', offsetof(union  A537, m5), 1);
		dcStructField(st, 'd', offsetof(union  A537, m6), 1);
		dcStructField(st, 'p', offsetof(union  A537, m7), 1);
		dcStructField(st, 'j', offsetof(union  A537, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <icf> */
union  A538 { i m0; c m1; f m2; };
void f_cpA538(union  A538 *x, const union  A538 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA538(const union  A538 *x, const union  A538 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA538() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A538), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A538, m0), 1);
		dcStructField(st, 'c', offsetof(union  A538, m1), 1);
		dcStructField(st, 'f', offsetof(union  A538, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<pj><dfiffpclc><lci>ld<flsll>c<fjdccjdpj>pi<icf>lp} */
struct A539 { union  A533 m0; union  A534 m1; union  A535 m2; l m3; d m4; union  A536 m5; c m6; union  A537 m7; p m8; i m9; union  A538 m10; l m11; p m12; };
void f_cpA539(struct A539 *x, const struct A539 *y) { f_cpA533(&x->m0, &y->m0); f_cpA534(&x->m1, &y->m1); f_cpA535(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA536(&x->m5, &y->m5); x->m6 = y->m6; f_cpA537(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; f_cpA538(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA539(const struct A539 *x, const struct A539 *y) { return f_cmpA533(&x->m0, &y->m0) && f_cmpA534(&x->m1, &y->m1) && f_cmpA535(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA536(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA537(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA538(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA539() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A539), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A539, m0), 1, f_touchdcstA533());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A539, m1), 1, f_touchdcstA534());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A539, m2), 1, f_touchdcstA535());
		dcStructField(st, 'l', offsetof(struct A539, m3), 1);
		dcStructField(st, 'd', offsetof(struct A539, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A539, m5), 1, f_touchdcstA536());
		dcStructField(st, 'c', offsetof(struct A539, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A539, m7), 1, f_touchdcstA537());
		dcStructField(st, 'p', offsetof(struct A539, m8), 1);
		dcStructField(st, 'i', offsetof(struct A539, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A539, m10), 1, f_touchdcstA538());
		dcStructField(st, 'l', offsetof(struct A539, m11), 1);
		dcStructField(st, 'p', offsetof(struct A539, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljpiijsfpcddsipd> */
union  A540 { l m0; j m1; p m2; i m3; i m4; j m5; s m6; f m7; p m8; c m9; d m10; d m11; s m12; i m13; p m14; d m15; };
void f_cpA540(union  A540 *x, const union  A540 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA540(const union  A540 *x, const union  A540 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA540() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A540), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A540, m0), 1);
		dcStructField(st, 'j', offsetof(union  A540, m1), 1);
		dcStructField(st, 'p', offsetof(union  A540, m2), 1);
		dcStructField(st, 'i', offsetof(union  A540, m3), 1);
		dcStructField(st, 'i', offsetof(union  A540, m4), 1);
		dcStructField(st, 'j', offsetof(union  A540, m5), 1);
		dcStructField(st, 's', offsetof(union  A540, m6), 1);
		dcStructField(st, 'f', offsetof(union  A540, m7), 1);
		dcStructField(st, 'p', offsetof(union  A540, m8), 1);
		dcStructField(st, 'c', offsetof(union  A540, m9), 1);
		dcStructField(st, 'd', offsetof(union  A540, m10), 1);
		dcStructField(st, 'd', offsetof(union  A540, m11), 1);
		dcStructField(st, 's', offsetof(union  A540, m12), 1);
		dcStructField(st, 'i', offsetof(union  A540, m13), 1);
		dcStructField(st, 'p', offsetof(union  A540, m14), 1);
		dcStructField(st, 'd', offsetof(union  A540, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sls<p>{jlj}> */
union  A541 { s m0; l m1; s m2; union  A161 m3; struct A508 m4; };
void f_cpA541(union  A541 *x, const union  A541 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA161(&x->m3, &y->m3); f_cpA508(&x->m4, &y->m4); };
int f_cmpA541(const union  A541 *x, const union  A541 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA161(&x->m3, &y->m3) && f_cmpA508(&x->m4, &y->m4); };
DCstruct* f_touchdcstA541() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A541), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A541, m0), 1);
		dcStructField(st, 'l', offsetof(union  A541, m1), 1);
		dcStructField(st, 's', offsetof(union  A541, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A541, m3), 1, f_touchdcstA161());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A541, m4), 1, f_touchdcstA508());
		dcCloseStruct(st);
	}
	return st;
};
/* {sjdiilicd} */
struct A542 { s m0; j m1; d m2; i m3; i m4; l m5; i m6; c m7; d m8; };
void f_cpA542(struct A542 *x, const struct A542 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA542(const struct A542 *x, const struct A542 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA542() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A542), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A542, m0), 1);
		dcStructField(st, 'j', offsetof(struct A542, m1), 1);
		dcStructField(st, 'd', offsetof(struct A542, m2), 1);
		dcStructField(st, 'i', offsetof(struct A542, m3), 1);
		dcStructField(st, 'i', offsetof(struct A542, m4), 1);
		dcStructField(st, 'l', offsetof(struct A542, m5), 1);
		dcStructField(st, 'i', offsetof(struct A542, m6), 1);
		dcStructField(st, 'c', offsetof(struct A542, m7), 1);
		dcStructField(st, 'd', offsetof(struct A542, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpp} */
struct A543 { c m0; p m1; p m2; };
void f_cpA543(struct A543 *x, const struct A543 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA543(const struct A543 *x, const struct A543 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA543() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A543), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A543, m0), 1);
		dcStructField(st, 'p', offsetof(struct A543, m1), 1);
		dcStructField(st, 'p', offsetof(struct A543, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {plijcffc} */
struct A544 { p m0; l m1; i m2; j m3; c m4; f m5; f m6; c m7; };
void f_cpA544(struct A544 *x, const struct A544 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA544(const struct A544 *x, const struct A544 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA544() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A544), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A544, m0), 1);
		dcStructField(st, 'l', offsetof(struct A544, m1), 1);
		dcStructField(st, 'i', offsetof(struct A544, m2), 1);
		dcStructField(st, 'j', offsetof(struct A544, m3), 1);
		dcStructField(st, 'c', offsetof(struct A544, m4), 1);
		dcStructField(st, 'f', offsetof(struct A544, m5), 1);
		dcStructField(st, 'f', offsetof(struct A544, m6), 1);
		dcStructField(st, 'c', offsetof(struct A544, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llp} */
struct A545 { l m0; l m1; p m2; };
void f_cpA545(struct A545 *x, const struct A545 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA545(const struct A545 *x, const struct A545 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA545() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A545), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A545, m0), 1);
		dcStructField(st, 'l', offsetof(struct A545, m1), 1);
		dcStructField(st, 'p', offsetof(struct A545, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lcipcjlj> */
union  A546 { l m0; c m1; i m2; p m3; c m4; j m5; l m6; j m7; };
void f_cpA546(union  A546 *x, const union  A546 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA546(const union  A546 *x, const union  A546 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA546() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A546), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A546, m0), 1);
		dcStructField(st, 'c', offsetof(union  A546, m1), 1);
		dcStructField(st, 'i', offsetof(union  A546, m2), 1);
		dcStructField(st, 'p', offsetof(union  A546, m3), 1);
		dcStructField(st, 'c', offsetof(union  A546, m4), 1);
		dcStructField(st, 'j', offsetof(union  A546, m5), 1);
		dcStructField(st, 'l', offsetof(union  A546, m6), 1);
		dcStructField(st, 'j', offsetof(union  A546, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddss} */
struct A547 { d m0; d m1; s m2; s m3; };
void f_cpA547(struct A547 *x, const struct A547 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA547(const struct A547 *x, const struct A547 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA547() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A547), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A547, m0), 1);
		dcStructField(st, 'd', offsetof(struct A547, m1), 1);
		dcStructField(st, 's', offsetof(struct A547, m2), 1);
		dcStructField(st, 's', offsetof(struct A547, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j{ddss}} */
struct A548 { j m0; struct A547 m1; };
void f_cpA548(struct A548 *x, const struct A548 *y) { x->m0 = y->m0; f_cpA547(&x->m1, &y->m1); };
int f_cmpA548(const struct A548 *x, const struct A548 *y) { return x->m0 == y->m0 && f_cmpA547(&x->m1, &y->m1); };
DCstruct* f_touchdcstA548() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A548), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A548, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A548, m1), 1, f_touchdcstA547());
		dcCloseStruct(st);
	}
	return st;
};
/* {fddlcipjsfspfcdcldj{j{ddss}}slp} */
struct A549 { f m0; d m1; d m2; l m3; c m4; i m5; p m6; j m7; s m8; f m9; s m10; p m11; f m12; c m13; d m14; c m15; l m16; d m17; j m18; struct A548 m19; s m20; l m21; p m22; };
void f_cpA549(struct A549 *x, const struct A549 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA548(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA549(const struct A549 *x, const struct A549 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA548(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA549() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A549), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A549, m0), 1);
		dcStructField(st, 'd', offsetof(struct A549, m1), 1);
		dcStructField(st, 'd', offsetof(struct A549, m2), 1);
		dcStructField(st, 'l', offsetof(struct A549, m3), 1);
		dcStructField(st, 'c', offsetof(struct A549, m4), 1);
		dcStructField(st, 'i', offsetof(struct A549, m5), 1);
		dcStructField(st, 'p', offsetof(struct A549, m6), 1);
		dcStructField(st, 'j', offsetof(struct A549, m7), 1);
		dcStructField(st, 's', offsetof(struct A549, m8), 1);
		dcStructField(st, 'f', offsetof(struct A549, m9), 1);
		dcStructField(st, 's', offsetof(struct A549, m10), 1);
		dcStructField(st, 'p', offsetof(struct A549, m11), 1);
		dcStructField(st, 'f', offsetof(struct A549, m12), 1);
		dcStructField(st, 'c', offsetof(struct A549, m13), 1);
		dcStructField(st, 'd', offsetof(struct A549, m14), 1);
		dcStructField(st, 'c', offsetof(struct A549, m15), 1);
		dcStructField(st, 'l', offsetof(struct A549, m16), 1);
		dcStructField(st, 'd', offsetof(struct A549, m17), 1);
		dcStructField(st, 'j', offsetof(struct A549, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A549, m19), 1, f_touchdcstA548());
		dcStructField(st, 's', offsetof(struct A549, m20), 1);
		dcStructField(st, 'l', offsetof(struct A549, m21), 1);
		dcStructField(st, 'p', offsetof(struct A549, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ccfiip> */
union  A550 { c m0; c m1; f m2; i m3; i m4; p m5; };
void f_cpA550(union  A550 *x, const union  A550 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA550(const union  A550 *x, const union  A550 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA550() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A550), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A550, m0), 1);
		dcStructField(st, 'c', offsetof(union  A550, m1), 1);
		dcStructField(st, 'f', offsetof(union  A550, m2), 1);
		dcStructField(st, 'i', offsetof(union  A550, m3), 1);
		dcStructField(st, 'i', offsetof(union  A550, m4), 1);
		dcStructField(st, 'p', offsetof(union  A550, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iisllpjj} */
struct A551 { i m0; i m1; s m2; l m3; l m4; p m5; j m6; j m7; };
void f_cpA551(struct A551 *x, const struct A551 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA551(const struct A551 *x, const struct A551 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA551() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A551), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A551, m0), 1);
		dcStructField(st, 'i', offsetof(struct A551, m1), 1);
		dcStructField(st, 's', offsetof(struct A551, m2), 1);
		dcStructField(st, 'l', offsetof(struct A551, m3), 1);
		dcStructField(st, 'l', offsetof(struct A551, m4), 1);
		dcStructField(st, 'p', offsetof(struct A551, m5), 1);
		dcStructField(st, 'j', offsetof(struct A551, m6), 1);
		dcStructField(st, 'j', offsetof(struct A551, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fssid> */
union  A552 { f m0; s m1; s m2; i m3; d m4; };
void f_cpA552(union  A552 *x, const union  A552 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA552(const union  A552 *x, const union  A552 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA552() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A552), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A552, m0), 1);
		dcStructField(st, 's', offsetof(union  A552, m1), 1);
		dcStructField(st, 's', offsetof(union  A552, m2), 1);
		dcStructField(st, 'i', offsetof(union  A552, m3), 1);
		dcStructField(st, 'd', offsetof(union  A552, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<fssid>} */
struct A553 { union  A552 m0; };
void f_cpA553(struct A553 *x, const struct A553 *y) { f_cpA552(&x->m0, &y->m0); };
int f_cmpA553(const struct A553 *x, const struct A553 *y) { return f_cmpA552(&x->m0, &y->m0); };
DCstruct* f_touchdcstA553() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A553), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A553, m0), 1, f_touchdcstA552());
		dcCloseStruct(st);
	}
	return st;
};
/* {sp} */
struct A554 { s m0; p m1; };
void f_cpA554(struct A554 *x, const struct A554 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA554(const struct A554 *x, const struct A554 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA554() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A554), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A554, m0), 1);
		dcStructField(st, 'p', offsetof(struct A554, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdcjl} */
struct A555 { p m0; d m1; c m2; j m3; l m4; };
void f_cpA555(struct A555 *x, const struct A555 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA555(const struct A555 *x, const struct A555 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA555() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A555), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A555, m0), 1);
		dcStructField(st, 'd', offsetof(struct A555, m1), 1);
		dcStructField(st, 'c', offsetof(struct A555, m2), 1);
		dcStructField(st, 'j', offsetof(struct A555, m3), 1);
		dcStructField(st, 'l', offsetof(struct A555, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ispi> */
union  A556 { i m0; s m1; p m2; i m3; };
void f_cpA556(union  A556 *x, const union  A556 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA556(const union  A556 *x, const union  A556 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA556() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A556), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A556, m0), 1);
		dcStructField(st, 's', offsetof(union  A556, m1), 1);
		dcStructField(st, 'p', offsetof(union  A556, m2), 1);
		dcStructField(st, 'i', offsetof(union  A556, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cccl{pdcjl}s<ispi>sii> */
union  A557 { c m0; c m1; c m2; l m3; struct A555 m4; s m5; union  A556 m6; s m7; i m8; i m9; };
void f_cpA557(union  A557 *x, const union  A557 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA555(&x->m4, &y->m4); x->m5 = y->m5; f_cpA556(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA557(const union  A557 *x, const union  A557 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA555(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA556(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA557() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A557), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A557, m0), 1);
		dcStructField(st, 'c', offsetof(union  A557, m1), 1);
		dcStructField(st, 'c', offsetof(union  A557, m2), 1);
		dcStructField(st, 'l', offsetof(union  A557, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A557, m4), 1, f_touchdcstA555());
		dcStructField(st, 's', offsetof(union  A557, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A557, m6), 1, f_touchdcstA556());
		dcStructField(st, 's', offsetof(union  A557, m7), 1);
		dcStructField(st, 'i', offsetof(union  A557, m8), 1);
		dcStructField(st, 'i', offsetof(union  A557, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <isc> */
union  A558 { i m0; s m1; c m2; };
void f_cpA558(union  A558 *x, const union  A558 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA558(const union  A558 *x, const union  A558 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA558() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A558), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A558, m0), 1);
		dcStructField(st, 's', offsetof(union  A558, m1), 1);
		dcStructField(st, 'c', offsetof(union  A558, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <j<isc>lpd> */
union  A559 { j m0; union  A558 m1; l m2; p m3; d m4; };
void f_cpA559(union  A559 *x, const union  A559 *y) { x->m0 = y->m0; f_cpA558(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA559(const union  A559 *x, const union  A559 *y) { return x->m0 == y->m0 && f_cmpA558(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA559() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A559), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A559, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A559, m1), 1, f_touchdcstA558());
		dcStructField(st, 'l', offsetof(union  A559, m2), 1);
		dcStructField(st, 'p', offsetof(union  A559, m3), 1);
		dcStructField(st, 'd', offsetof(union  A559, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lccspppfjl} */
struct A560 { l m0; c m1; c m2; s m3; p m4; p m5; p m6; f m7; j m8; l m9; };
void f_cpA560(struct A560 *x, const struct A560 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA560(const struct A560 *x, const struct A560 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA560() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A560), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A560, m0), 1);
		dcStructField(st, 'c', offsetof(struct A560, m1), 1);
		dcStructField(st, 'c', offsetof(struct A560, m2), 1);
		dcStructField(st, 's', offsetof(struct A560, m3), 1);
		dcStructField(st, 'p', offsetof(struct A560, m4), 1);
		dcStructField(st, 'p', offsetof(struct A560, m5), 1);
		dcStructField(st, 'p', offsetof(struct A560, m6), 1);
		dcStructField(st, 'f', offsetof(struct A560, m7), 1);
		dcStructField(st, 'j', offsetof(struct A560, m8), 1);
		dcStructField(st, 'l', offsetof(struct A560, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <si{lccspppfjl}sj> */
union  A561 { s m0; i m1; struct A560 m2; s m3; j m4; };
void f_cpA561(union  A561 *x, const union  A561 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA560(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA561(const union  A561 *x, const union  A561 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA560(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA561() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A561), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A561, m0), 1);
		dcStructField(st, 'i', offsetof(union  A561, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A561, m2), 1, f_touchdcstA560());
		dcStructField(st, 's', offsetof(union  A561, m3), 1);
		dcStructField(st, 'j', offsetof(union  A561, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfcfs> */
union  A562 { s m0; f m1; c m2; f m3; s m4; };
void f_cpA562(union  A562 *x, const union  A562 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA562(const union  A562 *x, const union  A562 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA562() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A562), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A562, m0), 1);
		dcStructField(st, 'f', offsetof(union  A562, m1), 1);
		dcStructField(st, 'c', offsetof(union  A562, m2), 1);
		dcStructField(st, 'f', offsetof(union  A562, m3), 1);
		dcStructField(st, 's', offsetof(union  A562, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pdd> */
union  A563 { p m0; d m1; d m2; };
void f_cpA563(union  A563 *x, const union  A563 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA563(const union  A563 *x, const union  A563 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA563() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A563), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A563, m0), 1);
		dcStructField(st, 'd', offsetof(union  A563, m1), 1);
		dcStructField(st, 'd', offsetof(union  A563, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sijsccpsf} */
struct A564 { s m0; i m1; j m2; s m3; c m4; c m5; p m6; s m7; f m8; };
void f_cpA564(struct A564 *x, const struct A564 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA564(const struct A564 *x, const struct A564 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA564() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A564), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A564, m0), 1);
		dcStructField(st, 'i', offsetof(struct A564, m1), 1);
		dcStructField(st, 'j', offsetof(struct A564, m2), 1);
		dcStructField(st, 's', offsetof(struct A564, m3), 1);
		dcStructField(st, 'c', offsetof(struct A564, m4), 1);
		dcStructField(st, 'c', offsetof(struct A564, m5), 1);
		dcStructField(st, 'p', offsetof(struct A564, m6), 1);
		dcStructField(st, 's', offsetof(struct A564, m7), 1);
		dcStructField(st, 'f', offsetof(struct A564, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djpdjspjp> */
union  A565 { d m0; j m1; p m2; d m3; j m4; s m5; p m6; j m7; p m8; };
void f_cpA565(union  A565 *x, const union  A565 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA565(const union  A565 *x, const union  A565 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA565() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A565), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A565, m0), 1);
		dcStructField(st, 'j', offsetof(union  A565, m1), 1);
		dcStructField(st, 'p', offsetof(union  A565, m2), 1);
		dcStructField(st, 'd', offsetof(union  A565, m3), 1);
		dcStructField(st, 'j', offsetof(union  A565, m4), 1);
		dcStructField(st, 's', offsetof(union  A565, m5), 1);
		dcStructField(st, 'p', offsetof(union  A565, m6), 1);
		dcStructField(st, 'j', offsetof(union  A565, m7), 1);
		dcStructField(st, 'p', offsetof(union  A565, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjc<sfcfs>flsjjlspj<pdd>jpsff{sijsccpsf}ccd<djpdjspjp>} */
struct A566 { s m0; j m1; c m2; union  A562 m3; f m4; l m5; s m6; j m7; j m8; l m9; s m10; p m11; j m12; union  A563 m13; j m14; p m15; s m16; f m17; f m18; struct A564 m19; c m20; c m21; d m22; union  A565 m23; };
void f_cpA566(struct A566 *x, const struct A566 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA562(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA563(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA564(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; f_cpA565(&x->m23, &y->m23); };
int f_cmpA566(const struct A566 *x, const struct A566 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA562(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA563(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA564(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && f_cmpA565(&x->m23, &y->m23); };
DCstruct* f_touchdcstA566() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A566), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A566, m0), 1);
		dcStructField(st, 'j', offsetof(struct A566, m1), 1);
		dcStructField(st, 'c', offsetof(struct A566, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A566, m3), 1, f_touchdcstA562());
		dcStructField(st, 'f', offsetof(struct A566, m4), 1);
		dcStructField(st, 'l', offsetof(struct A566, m5), 1);
		dcStructField(st, 's', offsetof(struct A566, m6), 1);
		dcStructField(st, 'j', offsetof(struct A566, m7), 1);
		dcStructField(st, 'j', offsetof(struct A566, m8), 1);
		dcStructField(st, 'l', offsetof(struct A566, m9), 1);
		dcStructField(st, 's', offsetof(struct A566, m10), 1);
		dcStructField(st, 'p', offsetof(struct A566, m11), 1);
		dcStructField(st, 'j', offsetof(struct A566, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A566, m13), 1, f_touchdcstA563());
		dcStructField(st, 'j', offsetof(struct A566, m14), 1);
		dcStructField(st, 'p', offsetof(struct A566, m15), 1);
		dcStructField(st, 's', offsetof(struct A566, m16), 1);
		dcStructField(st, 'f', offsetof(struct A566, m17), 1);
		dcStructField(st, 'f', offsetof(struct A566, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A566, m19), 1, f_touchdcstA564());
		dcStructField(st, 'c', offsetof(struct A566, m20), 1);
		dcStructField(st, 'c', offsetof(struct A566, m21), 1);
		dcStructField(st, 'd', offsetof(struct A566, m22), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A566, m23), 1, f_touchdcstA565());
		dcCloseStruct(st);
	}
	return st;
};
/* <cissill> */
union  A567 { c m0; i m1; s m2; s m3; i m4; l m5; l m6; };
void f_cpA567(union  A567 *x, const union  A567 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA567(const union  A567 *x, const union  A567 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA567() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A567), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A567, m0), 1);
		dcStructField(st, 'i', offsetof(union  A567, m1), 1);
		dcStructField(st, 's', offsetof(union  A567, m2), 1);
		dcStructField(st, 's', offsetof(union  A567, m3), 1);
		dcStructField(st, 'i', offsetof(union  A567, m4), 1);
		dcStructField(st, 'l', offsetof(union  A567, m5), 1);
		dcStructField(st, 'l', offsetof(union  A567, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jsjil> */
union  A568 { j m0; s m1; j m2; i m3; l m4; };
void f_cpA568(union  A568 *x, const union  A568 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA568(const union  A568 *x, const union  A568 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA568() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A568), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A568, m0), 1);
		dcStructField(st, 's', offsetof(union  A568, m1), 1);
		dcStructField(st, 'j', offsetof(union  A568, m2), 1);
		dcStructField(st, 'i', offsetof(union  A568, m3), 1);
		dcStructField(st, 'l', offsetof(union  A568, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pilfjc} */
struct A569 { p m0; i m1; l m2; f m3; j m4; c m5; };
void f_cpA569(struct A569 *x, const struct A569 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA569(const struct A569 *x, const struct A569 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA569() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A569), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A569, m0), 1);
		dcStructField(st, 'i', offsetof(struct A569, m1), 1);
		dcStructField(st, 'l', offsetof(struct A569, m2), 1);
		dcStructField(st, 'f', offsetof(struct A569, m3), 1);
		dcStructField(st, 'j', offsetof(struct A569, m4), 1);
		dcStructField(st, 'c', offsetof(struct A569, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <diicipidd> */
union  A570 { d m0; i m1; i m2; c m3; i m4; p m5; i m6; d m7; d m8; };
void f_cpA570(union  A570 *x, const union  A570 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA570(const union  A570 *x, const union  A570 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA570() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A570), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A570, m0), 1);
		dcStructField(st, 'i', offsetof(union  A570, m1), 1);
		dcStructField(st, 'i', offsetof(union  A570, m2), 1);
		dcStructField(st, 'c', offsetof(union  A570, m3), 1);
		dcStructField(st, 'i', offsetof(union  A570, m4), 1);
		dcStructField(st, 'p', offsetof(union  A570, m5), 1);
		dcStructField(st, 'i', offsetof(union  A570, m6), 1);
		dcStructField(st, 'd', offsetof(union  A570, m7), 1);
		dcStructField(st, 'd', offsetof(union  A570, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ijjlj> */
union  A571 { i m0; j m1; j m2; l m3; j m4; };
void f_cpA571(union  A571 *x, const union  A571 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA571(const union  A571 *x, const union  A571 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA571() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A571), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A571, m0), 1);
		dcStructField(st, 'j', offsetof(union  A571, m1), 1);
		dcStructField(st, 'j', offsetof(union  A571, m2), 1);
		dcStructField(st, 'l', offsetof(union  A571, m3), 1);
		dcStructField(st, 'j', offsetof(union  A571, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifjippddjssc} */
struct A572 { i m0; f m1; j m2; i m3; p m4; p m5; d m6; d m7; j m8; s m9; s m10; c m11; };
void f_cpA572(struct A572 *x, const struct A572 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA572(const struct A572 *x, const struct A572 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA572() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A572), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A572, m0), 1);
		dcStructField(st, 'f', offsetof(struct A572, m1), 1);
		dcStructField(st, 'j', offsetof(struct A572, m2), 1);
		dcStructField(st, 'i', offsetof(struct A572, m3), 1);
		dcStructField(st, 'p', offsetof(struct A572, m4), 1);
		dcStructField(st, 'p', offsetof(struct A572, m5), 1);
		dcStructField(st, 'd', offsetof(struct A572, m6), 1);
		dcStructField(st, 'd', offsetof(struct A572, m7), 1);
		dcStructField(st, 'j', offsetof(struct A572, m8), 1);
		dcStructField(st, 's', offsetof(struct A572, m9), 1);
		dcStructField(st, 's', offsetof(struct A572, m10), 1);
		dcStructField(st, 'c', offsetof(struct A572, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l<cissill>p<jsjil>ci{pilfjc}isf<diicipidd>d<ijjlj>cl{ifjippddjssc}} */
struct A573 { l m0; union  A567 m1; p m2; union  A568 m3; c m4; i m5; struct A569 m6; i m7; s m8; f m9; union  A570 m10; d m11; union  A571 m12; c m13; l m14; struct A572 m15; };
void f_cpA573(struct A573 *x, const struct A573 *y) { x->m0 = y->m0; f_cpA567(&x->m1, &y->m1); x->m2 = y->m2; f_cpA568(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA569(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA570(&x->m10, &y->m10); x->m11 = y->m11; f_cpA571(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; f_cpA572(&x->m15, &y->m15); };
int f_cmpA573(const struct A573 *x, const struct A573 *y) { return x->m0 == y->m0 && f_cmpA567(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA568(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA569(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA570(&x->m10, &y->m10) && x->m11 == y->m11 && f_cmpA571(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA572(&x->m15, &y->m15); };
DCstruct* f_touchdcstA573() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A573), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A573, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A573, m1), 1, f_touchdcstA567());
		dcStructField(st, 'p', offsetof(struct A573, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A573, m3), 1, f_touchdcstA568());
		dcStructField(st, 'c', offsetof(struct A573, m4), 1);
		dcStructField(st, 'i', offsetof(struct A573, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A573, m6), 1, f_touchdcstA569());
		dcStructField(st, 'i', offsetof(struct A573, m7), 1);
		dcStructField(st, 's', offsetof(struct A573, m8), 1);
		dcStructField(st, 'f', offsetof(struct A573, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A573, m10), 1, f_touchdcstA570());
		dcStructField(st, 'd', offsetof(struct A573, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A573, m12), 1, f_touchdcstA571());
		dcStructField(st, 'c', offsetof(struct A573, m13), 1);
		dcStructField(st, 'l', offsetof(struct A573, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A573, m15), 1, f_touchdcstA572());
		dcCloseStruct(st);
	}
	return st;
};
/* {llljpcdjjijlidcs} */
struct A574 { l m0; l m1; l m2; j m3; p m4; c m5; d m6; j m7; j m8; i m9; j m10; l m11; i m12; d m13; c m14; s m15; };
void f_cpA574(struct A574 *x, const struct A574 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA574(const struct A574 *x, const struct A574 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA574() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A574), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A574, m0), 1);
		dcStructField(st, 'l', offsetof(struct A574, m1), 1);
		dcStructField(st, 'l', offsetof(struct A574, m2), 1);
		dcStructField(st, 'j', offsetof(struct A574, m3), 1);
		dcStructField(st, 'p', offsetof(struct A574, m4), 1);
		dcStructField(st, 'c', offsetof(struct A574, m5), 1);
		dcStructField(st, 'd', offsetof(struct A574, m6), 1);
		dcStructField(st, 'j', offsetof(struct A574, m7), 1);
		dcStructField(st, 'j', offsetof(struct A574, m8), 1);
		dcStructField(st, 'i', offsetof(struct A574, m9), 1);
		dcStructField(st, 'j', offsetof(struct A574, m10), 1);
		dcStructField(st, 'l', offsetof(struct A574, m11), 1);
		dcStructField(st, 'i', offsetof(struct A574, m12), 1);
		dcStructField(st, 'd', offsetof(struct A574, m13), 1);
		dcStructField(st, 'c', offsetof(struct A574, m14), 1);
		dcStructField(st, 's', offsetof(struct A574, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcs} */
struct A575 { d m0; c m1; s m2; };
void f_cpA575(struct A575 *x, const struct A575 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA575(const struct A575 *x, const struct A575 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA575() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A575), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A575, m0), 1);
		dcStructField(st, 'c', offsetof(struct A575, m1), 1);
		dcStructField(st, 's', offsetof(struct A575, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psjj} */
struct A576 { p m0; s m1; j m2; j m3; };
void f_cpA576(struct A576 *x, const struct A576 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA576(const struct A576 *x, const struct A576 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA576() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A576), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A576, m0), 1);
		dcStructField(st, 's', offsetof(struct A576, m1), 1);
		dcStructField(st, 'j', offsetof(struct A576, m2), 1);
		dcStructField(st, 'j', offsetof(struct A576, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lips> */
union  A577 { l m0; i m1; p m2; s m3; };
void f_cpA577(union  A577 *x, const union  A577 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA577(const union  A577 *x, const union  A577 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA577() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A577), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A577, m0), 1);
		dcStructField(st, 'i', offsetof(union  A577, m1), 1);
		dcStructField(st, 'p', offsetof(union  A577, m2), 1);
		dcStructField(st, 's', offsetof(union  A577, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {li} */
struct A578 { l m0; i m1; };
void f_cpA578(struct A578 *x, const struct A578 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA578(const struct A578 *x, const struct A578 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA578() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A578), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A578, m0), 1);
		dcStructField(st, 'i', offsetof(struct A578, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppjd} */
struct A579 { p m0; p m1; j m2; d m3; };
void f_cpA579(struct A579 *x, const struct A579 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA579(const struct A579 *x, const struct A579 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA579() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A579), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A579, m0), 1);
		dcStructField(st, 'p', offsetof(struct A579, m1), 1);
		dcStructField(st, 'j', offsetof(struct A579, m2), 1);
		dcStructField(st, 'd', offsetof(struct A579, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <s{ppjd}f> */
union  A580 { s m0; struct A579 m1; f m2; };
void f_cpA580(union  A580 *x, const union  A580 *y) { x->m0 = y->m0; f_cpA579(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA580(const union  A580 *x, const union  A580 *y) { return x->m0 == y->m0 && f_cmpA579(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA580() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A580), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A580, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A580, m1), 1, f_touchdcstA579());
		dcStructField(st, 'f', offsetof(union  A580, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<s{ppjd}f>c} */
struct A581 { union  A580 m0; c m1; };
void f_cpA581(struct A581 *x, const struct A581 *y) { f_cpA580(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA581(const struct A581 *x, const struct A581 *y) { return f_cmpA580(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA581() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A581), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A581, m0), 1, f_touchdcstA580());
		dcStructField(st, 'c', offsetof(struct A581, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dclp} */
struct A582 { d m0; c m1; l m2; p m3; };
void f_cpA582(struct A582 *x, const struct A582 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA582(const struct A582 *x, const struct A582 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA582() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A582), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A582, m0), 1);
		dcStructField(st, 'c', offsetof(struct A582, m1), 1);
		dcStructField(st, 'l', offsetof(struct A582, m2), 1);
		dcStructField(st, 'p', offsetof(struct A582, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pp} */
struct A583 { p m0; p m1; };
void f_cpA583(struct A583 *x, const struct A583 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA583(const struct A583 *x, const struct A583 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA583() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A583), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A583, m0), 1);
		dcStructField(st, 'p', offsetof(struct A583, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cll> */
union  A584 { c m0; l m1; l m2; };
void f_cpA584(union  A584 *x, const union  A584 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA584(const union  A584 *x, const union  A584 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA584() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A584), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A584, m0), 1);
		dcStructField(st, 'l', offsetof(union  A584, m1), 1);
		dcStructField(st, 'l', offsetof(union  A584, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sisp> */
union  A585 { s m0; i m1; s m2; p m3; };
void f_cpA585(union  A585 *x, const union  A585 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA585(const union  A585 *x, const union  A585 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA585() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A585), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A585, m0), 1);
		dcStructField(st, 'i', offsetof(union  A585, m1), 1);
		dcStructField(st, 's', offsetof(union  A585, m2), 1);
		dcStructField(st, 'p', offsetof(union  A585, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lipsdiic> */
union  A586 { l m0; i m1; p m2; s m3; d m4; i m5; i m6; c m7; };
void f_cpA586(union  A586 *x, const union  A586 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA586(const union  A586 *x, const union  A586 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA586() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A586), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A586, m0), 1);
		dcStructField(st, 'i', offsetof(union  A586, m1), 1);
		dcStructField(st, 'p', offsetof(union  A586, m2), 1);
		dcStructField(st, 's', offsetof(union  A586, m3), 1);
		dcStructField(st, 'd', offsetof(union  A586, m4), 1);
		dcStructField(st, 'i', offsetof(union  A586, m5), 1);
		dcStructField(st, 'i', offsetof(union  A586, m6), 1);
		dcStructField(st, 'c', offsetof(union  A586, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sp{dclp}icf{pp}islldll<cll>ps<sisp>j<lipsdiic>sfscl{f}pddsl} */
struct A587 { s m0; p m1; struct A582 m2; i m3; c m4; f m5; struct A583 m6; i m7; s m8; l m9; l m10; d m11; l m12; l m13; union  A584 m14; p m15; s m16; union  A585 m17; j m18; union  A586 m19; s m20; f m21; s m22; c m23; l m24; struct A257 m25; p m26; d m27; d m28; s m29; l m30; };
void f_cpA587(struct A587 *x, const struct A587 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA582(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA583(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA584(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; f_cpA585(&x->m17, &y->m17); x->m18 = y->m18; f_cpA586(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; f_cpA257(&x->m25, &y->m25); x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; };
int f_cmpA587(const struct A587 *x, const struct A587 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA582(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA583(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA584(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA585(&x->m17, &y->m17) && x->m18 == y->m18 && f_cmpA586(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && f_cmpA257(&x->m25, &y->m25) && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30; };
DCstruct* f_touchdcstA587() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(31, sizeof(struct A587), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A587, m0), 1);
		dcStructField(st, 'p', offsetof(struct A587, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A587, m2), 1, f_touchdcstA582());
		dcStructField(st, 'i', offsetof(struct A587, m3), 1);
		dcStructField(st, 'c', offsetof(struct A587, m4), 1);
		dcStructField(st, 'f', offsetof(struct A587, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A587, m6), 1, f_touchdcstA583());
		dcStructField(st, 'i', offsetof(struct A587, m7), 1);
		dcStructField(st, 's', offsetof(struct A587, m8), 1);
		dcStructField(st, 'l', offsetof(struct A587, m9), 1);
		dcStructField(st, 'l', offsetof(struct A587, m10), 1);
		dcStructField(st, 'd', offsetof(struct A587, m11), 1);
		dcStructField(st, 'l', offsetof(struct A587, m12), 1);
		dcStructField(st, 'l', offsetof(struct A587, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A587, m14), 1, f_touchdcstA584());
		dcStructField(st, 'p', offsetof(struct A587, m15), 1);
		dcStructField(st, 's', offsetof(struct A587, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A587, m17), 1, f_touchdcstA585());
		dcStructField(st, 'j', offsetof(struct A587, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A587, m19), 1, f_touchdcstA586());
		dcStructField(st, 's', offsetof(struct A587, m20), 1);
		dcStructField(st, 'f', offsetof(struct A587, m21), 1);
		dcStructField(st, 's', offsetof(struct A587, m22), 1);
		dcStructField(st, 'c', offsetof(struct A587, m23), 1);
		dcStructField(st, 'l', offsetof(struct A587, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A587, m25), 1, f_touchdcstA257());
		dcStructField(st, 'p', offsetof(struct A587, m26), 1);
		dcStructField(st, 'd', offsetof(struct A587, m27), 1);
		dcStructField(st, 'd', offsetof(struct A587, m28), 1);
		dcStructField(st, 's', offsetof(struct A587, m29), 1);
		dcStructField(st, 'l', offsetof(struct A587, m30), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssdp} */
struct A588 { s m0; s m1; d m2; p m3; };
void f_cpA588(struct A588 *x, const struct A588 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA588(const struct A588 *x, const struct A588 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA588() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A588), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A588, m0), 1);
		dcStructField(st, 's', offsetof(struct A588, m1), 1);
		dcStructField(st, 'd', offsetof(struct A588, m2), 1);
		dcStructField(st, 'p', offsetof(struct A588, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sf{ssdp}ps> */
union  A589 { s m0; f m1; struct A588 m2; p m3; s m4; };
void f_cpA589(union  A589 *x, const union  A589 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA588(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA589(const union  A589 *x, const union  A589 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA588(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA589() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A589), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A589, m0), 1);
		dcStructField(st, 'f', offsetof(union  A589, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A589, m2), 1, f_touchdcstA588());
		dcStructField(st, 'p', offsetof(union  A589, m3), 1);
		dcStructField(st, 's', offsetof(union  A589, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isicdjd} */
struct A590 { i m0; s m1; i m2; c m3; d m4; j m5; d m6; };
void f_cpA590(struct A590 *x, const struct A590 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA590(const struct A590 *x, const struct A590 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA590() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A590), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A590, m0), 1);
		dcStructField(st, 's', offsetof(struct A590, m1), 1);
		dcStructField(st, 'i', offsetof(struct A590, m2), 1);
		dcStructField(st, 'c', offsetof(struct A590, m3), 1);
		dcStructField(st, 'd', offsetof(struct A590, m4), 1);
		dcStructField(st, 'j', offsetof(struct A590, m5), 1);
		dcStructField(st, 'd', offsetof(struct A590, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<sf{ssdp}ps>f{isicdjd}> */
union  A591 { union  A589 m0; f m1; struct A590 m2; };
void f_cpA591(union  A591 *x, const union  A591 *y) { f_cpA589(&x->m0, &y->m0); x->m1 = y->m1; f_cpA590(&x->m2, &y->m2); };
int f_cmpA591(const union  A591 *x, const union  A591 *y) { return f_cmpA589(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA590(&x->m2, &y->m2); };
DCstruct* f_touchdcstA591() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A591), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A591, m0), 1, f_touchdcstA589());
		dcStructField(st, 'f', offsetof(union  A591, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A591, m2), 1, f_touchdcstA590());
		dcCloseStruct(st);
	}
	return st;
};
/* {cfc} */
struct A592 { c m0; f m1; c m2; };
void f_cpA592(struct A592 *x, const struct A592 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA592(const struct A592 *x, const struct A592 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA592() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A592), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A592, m0), 1);
		dcStructField(st, 'f', offsetof(struct A592, m1), 1);
		dcStructField(st, 'c', offsetof(struct A592, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcdcp} */
struct A593 { j m0; c m1; d m2; c m3; p m4; };
void f_cpA593(struct A593 *x, const struct A593 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA593(const struct A593 *x, const struct A593 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA593() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A593), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A593, m0), 1);
		dcStructField(st, 'c', offsetof(struct A593, m1), 1);
		dcStructField(st, 'd', offsetof(struct A593, m2), 1);
		dcStructField(st, 'c', offsetof(struct A593, m3), 1);
		dcStructField(st, 'p', offsetof(struct A593, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dsjdfdpjliji> */
union  A594 { d m0; s m1; j m2; d m3; f m4; d m5; p m6; j m7; l m8; i m9; j m10; i m11; };
void f_cpA594(union  A594 *x, const union  A594 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA594(const union  A594 *x, const union  A594 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA594() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A594), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A594, m0), 1);
		dcStructField(st, 's', offsetof(union  A594, m1), 1);
		dcStructField(st, 'j', offsetof(union  A594, m2), 1);
		dcStructField(st, 'd', offsetof(union  A594, m3), 1);
		dcStructField(st, 'f', offsetof(union  A594, m4), 1);
		dcStructField(st, 'd', offsetof(union  A594, m5), 1);
		dcStructField(st, 'p', offsetof(union  A594, m6), 1);
		dcStructField(st, 'j', offsetof(union  A594, m7), 1);
		dcStructField(st, 'l', offsetof(union  A594, m8), 1);
		dcStructField(st, 'i', offsetof(union  A594, m9), 1);
		dcStructField(st, 'j', offsetof(union  A594, m10), 1);
		dcStructField(st, 'i', offsetof(union  A594, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {f{jcdcp}<dsjdfdpjliji>} */
struct A595 { f m0; struct A593 m1; union  A594 m2; };
void f_cpA595(struct A595 *x, const struct A595 *y) { x->m0 = y->m0; f_cpA593(&x->m1, &y->m1); f_cpA594(&x->m2, &y->m2); };
int f_cmpA595(const struct A595 *x, const struct A595 *y) { return x->m0 == y->m0 && f_cmpA593(&x->m1, &y->m1) && f_cmpA594(&x->m2, &y->m2); };
DCstruct* f_touchdcstA595() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A595), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A595, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A595, m1), 1, f_touchdcstA593());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A595, m2), 1, f_touchdcstA594());
		dcCloseStruct(st);
	}
	return st;
};
/* {fp} */
struct A596 { f m0; p m1; };
void f_cpA596(struct A596 *x, const struct A596 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA596(const struct A596 *x, const struct A596 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA596() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A596), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A596, m0), 1);
		dcStructField(st, 'p', offsetof(struct A596, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ippjsll> */
union  A597 { i m0; p m1; p m2; j m3; s m4; l m5; l m6; };
void f_cpA597(union  A597 *x, const union  A597 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA597(const union  A597 *x, const union  A597 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA597() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A597), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A597, m0), 1);
		dcStructField(st, 'p', offsetof(union  A597, m1), 1);
		dcStructField(st, 'p', offsetof(union  A597, m2), 1);
		dcStructField(st, 'j', offsetof(union  A597, m3), 1);
		dcStructField(st, 's', offsetof(union  A597, m4), 1);
		dcStructField(st, 'l', offsetof(union  A597, m5), 1);
		dcStructField(st, 'l', offsetof(union  A597, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pd> */
union  A598 { p m0; d m1; };
void f_cpA598(union  A598 *x, const union  A598 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA598(const union  A598 *x, const union  A598 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA598() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A598), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A598, m0), 1);
		dcStructField(st, 'd', offsetof(union  A598, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spcij} */
struct A599 { s m0; p m1; c m2; i m3; j m4; };
void f_cpA599(struct A599 *x, const struct A599 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA599(const struct A599 *x, const struct A599 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA599() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A599), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A599, m0), 1);
		dcStructField(st, 'p', offsetof(struct A599, m1), 1);
		dcStructField(st, 'c', offsetof(struct A599, m2), 1);
		dcStructField(st, 'i', offsetof(struct A599, m3), 1);
		dcStructField(st, 'j', offsetof(struct A599, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lspl} */
struct A600 { l m0; s m1; p m2; l m3; };
void f_cpA600(struct A600 *x, const struct A600 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA600(const struct A600 *x, const struct A600 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA600() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A600), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A600, m0), 1);
		dcStructField(st, 's', offsetof(struct A600, m1), 1);
		dcStructField(st, 'p', offsetof(struct A600, m2), 1);
		dcStructField(st, 'l', offsetof(struct A600, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{fp}l<ippjsll>d<pd>sdd{spcij}dsdldld{lspl}jii> */
union  A601 { struct A596 m0; l m1; union  A597 m2; d m3; union  A598 m4; s m5; d m6; d m7; struct A599 m8; d m9; s m10; d m11; l m12; d m13; l m14; d m15; struct A600 m16; j m17; i m18; i m19; };
void f_cpA601(union  A601 *x, const union  A601 *y) { f_cpA596(&x->m0, &y->m0); x->m1 = y->m1; f_cpA597(&x->m2, &y->m2); x->m3 = y->m3; f_cpA598(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA599(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA600(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA601(const union  A601 *x, const union  A601 *y) { return f_cmpA596(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA597(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA598(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA599(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA600(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA601() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A601), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A601, m0), 1, f_touchdcstA596());
		dcStructField(st, 'l', offsetof(union  A601, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A601, m2), 1, f_touchdcstA597());
		dcStructField(st, 'd', offsetof(union  A601, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A601, m4), 1, f_touchdcstA598());
		dcStructField(st, 's', offsetof(union  A601, m5), 1);
		dcStructField(st, 'd', offsetof(union  A601, m6), 1);
		dcStructField(st, 'd', offsetof(union  A601, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A601, m8), 1, f_touchdcstA599());
		dcStructField(st, 'd', offsetof(union  A601, m9), 1);
		dcStructField(st, 's', offsetof(union  A601, m10), 1);
		dcStructField(st, 'd', offsetof(union  A601, m11), 1);
		dcStructField(st, 'l', offsetof(union  A601, m12), 1);
		dcStructField(st, 'd', offsetof(union  A601, m13), 1);
		dcStructField(st, 'l', offsetof(union  A601, m14), 1);
		dcStructField(st, 'd', offsetof(union  A601, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A601, m16), 1, f_touchdcstA600());
		dcStructField(st, 'j', offsetof(union  A601, m17), 1);
		dcStructField(st, 'i', offsetof(union  A601, m18), 1);
		dcStructField(st, 'i', offsetof(union  A601, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pp<{fp}l<ippjsll>d<pd>sdd{spcij}dsdldld{lspl}jii>ssd} */
struct A602 { p m0; p m1; union  A601 m2; s m3; s m4; d m5; };
void f_cpA602(struct A602 *x, const struct A602 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA601(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA602(const struct A602 *x, const struct A602 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA601(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA602() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A602), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A602, m0), 1);
		dcStructField(st, 'p', offsetof(struct A602, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A602, m2), 1, f_touchdcstA601());
		dcStructField(st, 's', offsetof(struct A602, m3), 1);
		dcStructField(st, 's', offsetof(struct A602, m4), 1);
		dcStructField(st, 'd', offsetof(struct A602, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcipdd> */
union  A603 { f m0; c m1; i m2; p m3; d m4; d m5; };
void f_cpA603(union  A603 *x, const union  A603 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA603(const union  A603 *x, const union  A603 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA603() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A603), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A603, m0), 1);
		dcStructField(st, 'c', offsetof(union  A603, m1), 1);
		dcStructField(st, 'i', offsetof(union  A603, m2), 1);
		dcStructField(st, 'p', offsetof(union  A603, m3), 1);
		dcStructField(st, 'd', offsetof(union  A603, m4), 1);
		dcStructField(st, 'd', offsetof(union  A603, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfcjsl<fcipdd>} */
struct A604 { s m0; f m1; c m2; j m3; s m4; l m5; union  A603 m6; };
void f_cpA604(struct A604 *x, const struct A604 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA603(&x->m6, &y->m6); };
int f_cmpA604(const struct A604 *x, const struct A604 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA603(&x->m6, &y->m6); };
DCstruct* f_touchdcstA604() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A604), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A604, m0), 1);
		dcStructField(st, 'f', offsetof(struct A604, m1), 1);
		dcStructField(st, 'c', offsetof(struct A604, m2), 1);
		dcStructField(st, 'j', offsetof(struct A604, m3), 1);
		dcStructField(st, 's', offsetof(struct A604, m4), 1);
		dcStructField(st, 'l', offsetof(struct A604, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A604, m6), 1, f_touchdcstA603());
		dcCloseStruct(st);
	}
	return st;
};
/* <sfiijlfdldcicplifllppplficljpijdfi> */
union  A605 { s m0; f m1; i m2; i m3; j m4; l m5; f m6; d m7; l m8; d m9; c m10; i m11; c m12; p m13; l m14; i m15; f m16; l m17; l m18; p m19; p m20; p m21; l m22; f m23; i m24; c m25; l m26; j m27; p m28; i m29; j m30; d m31; f m32; i m33; };
void f_cpA605(union  A605 *x, const union  A605 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; };
int f_cmpA605(const union  A605 *x, const union  A605 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33; };
DCstruct* f_touchdcstA605() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(34, sizeof(union  A605), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A605, m0), 1);
		dcStructField(st, 'f', offsetof(union  A605, m1), 1);
		dcStructField(st, 'i', offsetof(union  A605, m2), 1);
		dcStructField(st, 'i', offsetof(union  A605, m3), 1);
		dcStructField(st, 'j', offsetof(union  A605, m4), 1);
		dcStructField(st, 'l', offsetof(union  A605, m5), 1);
		dcStructField(st, 'f', offsetof(union  A605, m6), 1);
		dcStructField(st, 'd', offsetof(union  A605, m7), 1);
		dcStructField(st, 'l', offsetof(union  A605, m8), 1);
		dcStructField(st, 'd', offsetof(union  A605, m9), 1);
		dcStructField(st, 'c', offsetof(union  A605, m10), 1);
		dcStructField(st, 'i', offsetof(union  A605, m11), 1);
		dcStructField(st, 'c', offsetof(union  A605, m12), 1);
		dcStructField(st, 'p', offsetof(union  A605, m13), 1);
		dcStructField(st, 'l', offsetof(union  A605, m14), 1);
		dcStructField(st, 'i', offsetof(union  A605, m15), 1);
		dcStructField(st, 'f', offsetof(union  A605, m16), 1);
		dcStructField(st, 'l', offsetof(union  A605, m17), 1);
		dcStructField(st, 'l', offsetof(union  A605, m18), 1);
		dcStructField(st, 'p', offsetof(union  A605, m19), 1);
		dcStructField(st, 'p', offsetof(union  A605, m20), 1);
		dcStructField(st, 'p', offsetof(union  A605, m21), 1);
		dcStructField(st, 'l', offsetof(union  A605, m22), 1);
		dcStructField(st, 'f', offsetof(union  A605, m23), 1);
		dcStructField(st, 'i', offsetof(union  A605, m24), 1);
		dcStructField(st, 'c', offsetof(union  A605, m25), 1);
		dcStructField(st, 'l', offsetof(union  A605, m26), 1);
		dcStructField(st, 'j', offsetof(union  A605, m27), 1);
		dcStructField(st, 'p', offsetof(union  A605, m28), 1);
		dcStructField(st, 'i', offsetof(union  A605, m29), 1);
		dcStructField(st, 'j', offsetof(union  A605, m30), 1);
		dcStructField(st, 'd', offsetof(union  A605, m31), 1);
		dcStructField(st, 'f', offsetof(union  A605, m32), 1);
		dcStructField(st, 'i', offsetof(union  A605, m33), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sccflf> */
union  A606 { s m0; c m1; c m2; f m3; l m4; f m5; };
void f_cpA606(union  A606 *x, const union  A606 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA606(const union  A606 *x, const union  A606 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA606() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A606), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A606, m0), 1);
		dcStructField(st, 'c', offsetof(union  A606, m1), 1);
		dcStructField(st, 'c', offsetof(union  A606, m2), 1);
		dcStructField(st, 'f', offsetof(union  A606, m3), 1);
		dcStructField(st, 'l', offsetof(union  A606, m4), 1);
		dcStructField(st, 'f', offsetof(union  A606, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ldp> */
union  A607 { l m0; d m1; p m2; };
void f_cpA607(union  A607 *x, const union  A607 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA607(const union  A607 *x, const union  A607 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA607() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A607), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A607, m0), 1);
		dcStructField(st, 'd', offsetof(union  A607, m1), 1);
		dcStructField(st, 'p', offsetof(union  A607, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jflspic> */
union  A608 { j m0; f m1; l m2; s m3; p m4; i m5; c m6; };
void f_cpA608(union  A608 *x, const union  A608 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA608(const union  A608 *x, const union  A608 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA608() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A608), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A608, m0), 1);
		dcStructField(st, 'f', offsetof(union  A608, m1), 1);
		dcStructField(st, 'l', offsetof(union  A608, m2), 1);
		dcStructField(st, 's', offsetof(union  A608, m3), 1);
		dcStructField(st, 'p', offsetof(union  A608, m4), 1);
		dcStructField(st, 'i', offsetof(union  A608, m5), 1);
		dcStructField(st, 'c', offsetof(union  A608, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llipis} */
struct A609 { l m0; l m1; i m2; p m3; i m4; s m5; };
void f_cpA609(struct A609 *x, const struct A609 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA609(const struct A609 *x, const struct A609 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA609() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A609), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A609, m0), 1);
		dcStructField(st, 'l', offsetof(struct A609, m1), 1);
		dcStructField(st, 'i', offsetof(struct A609, m2), 1);
		dcStructField(st, 'p', offsetof(struct A609, m3), 1);
		dcStructField(st, 'i', offsetof(struct A609, m4), 1);
		dcStructField(st, 's', offsetof(struct A609, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djlpd> */
union  A610 { d m0; j m1; l m2; p m3; d m4; };
void f_cpA610(union  A610 *x, const union  A610 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA610(const union  A610 *x, const union  A610 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA610() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A610), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A610, m0), 1);
		dcStructField(st, 'j', offsetof(union  A610, m1), 1);
		dcStructField(st, 'l', offsetof(union  A610, m2), 1);
		dcStructField(st, 'p', offsetof(union  A610, m3), 1);
		dcStructField(st, 'd', offsetof(union  A610, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pipp> */
union  A611 { p m0; i m1; p m2; p m3; };
void f_cpA611(union  A611 *x, const union  A611 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA611(const union  A611 *x, const union  A611 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA611() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A611), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A611, m0), 1);
		dcStructField(st, 'i', offsetof(union  A611, m1), 1);
		dcStructField(st, 'p', offsetof(union  A611, m2), 1);
		dcStructField(st, 'p', offsetof(union  A611, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<ldp>scf<jflspic>jscpf{llipis}<djlpd>c<pipp>pjp> */
union  A612 { union  A607 m0; s m1; c m2; f m3; union  A608 m4; j m5; s m6; c m7; p m8; f m9; struct A609 m10; union  A610 m11; c m12; union  A611 m13; p m14; j m15; p m16; };
void f_cpA612(union  A612 *x, const union  A612 *y) { f_cpA607(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA608(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA609(&x->m10, &y->m10); f_cpA610(&x->m11, &y->m11); x->m12 = y->m12; f_cpA611(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA612(const union  A612 *x, const union  A612 *y) { return f_cmpA607(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA608(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA609(&x->m10, &y->m10) && f_cmpA610(&x->m11, &y->m11) && x->m12 == y->m12 && f_cmpA611(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA612() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(union  A612), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A612, m0), 1, f_touchdcstA607());
		dcStructField(st, 's', offsetof(union  A612, m1), 1);
		dcStructField(st, 'c', offsetof(union  A612, m2), 1);
		dcStructField(st, 'f', offsetof(union  A612, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A612, m4), 1, f_touchdcstA608());
		dcStructField(st, 'j', offsetof(union  A612, m5), 1);
		dcStructField(st, 's', offsetof(union  A612, m6), 1);
		dcStructField(st, 'c', offsetof(union  A612, m7), 1);
		dcStructField(st, 'p', offsetof(union  A612, m8), 1);
		dcStructField(st, 'f', offsetof(union  A612, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A612, m10), 1, f_touchdcstA609());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A612, m11), 1, f_touchdcstA610());
		dcStructField(st, 'c', offsetof(union  A612, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A612, m13), 1, f_touchdcstA611());
		dcStructField(st, 'p', offsetof(union  A612, m14), 1);
		dcStructField(st, 'j', offsetof(union  A612, m15), 1);
		dcStructField(st, 'p', offsetof(union  A612, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pc<<ldp>scf<jflspic>jscpf{llipis}<djlpd>c<pipp>pjp>> */
union  A613 { p m0; c m1; union  A612 m2; };
void f_cpA613(union  A613 *x, const union  A613 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA612(&x->m2, &y->m2); };
int f_cmpA613(const union  A613 *x, const union  A613 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA612(&x->m2, &y->m2); };
DCstruct* f_touchdcstA613() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A613), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A613, m0), 1);
		dcStructField(st, 'c', offsetof(union  A613, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A613, m2), 1, f_touchdcstA612());
		dcCloseStruct(st);
	}
	return st;
};
/* {jjjpcslsiijlcpiciscp} */
struct A614 { j m0; j m1; j m2; p m3; c m4; s m5; l m6; s m7; i m8; i m9; j m10; l m11; c m12; p m13; i m14; c m15; i m16; s m17; c m18; p m19; };
void f_cpA614(struct A614 *x, const struct A614 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA614(const struct A614 *x, const struct A614 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA614() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A614), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A614, m0), 1);
		dcStructField(st, 'j', offsetof(struct A614, m1), 1);
		dcStructField(st, 'j', offsetof(struct A614, m2), 1);
		dcStructField(st, 'p', offsetof(struct A614, m3), 1);
		dcStructField(st, 'c', offsetof(struct A614, m4), 1);
		dcStructField(st, 's', offsetof(struct A614, m5), 1);
		dcStructField(st, 'l', offsetof(struct A614, m6), 1);
		dcStructField(st, 's', offsetof(struct A614, m7), 1);
		dcStructField(st, 'i', offsetof(struct A614, m8), 1);
		dcStructField(st, 'i', offsetof(struct A614, m9), 1);
		dcStructField(st, 'j', offsetof(struct A614, m10), 1);
		dcStructField(st, 'l', offsetof(struct A614, m11), 1);
		dcStructField(st, 'c', offsetof(struct A614, m12), 1);
		dcStructField(st, 'p', offsetof(struct A614, m13), 1);
		dcStructField(st, 'i', offsetof(struct A614, m14), 1);
		dcStructField(st, 'c', offsetof(struct A614, m15), 1);
		dcStructField(st, 'i', offsetof(struct A614, m16), 1);
		dcStructField(st, 's', offsetof(struct A614, m17), 1);
		dcStructField(st, 'c', offsetof(struct A614, m18), 1);
		dcStructField(st, 'p', offsetof(struct A614, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lijspjccis} */
struct A615 { l m0; i m1; j m2; s m3; p m4; j m5; c m6; c m7; i m8; s m9; };
void f_cpA615(struct A615 *x, const struct A615 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA615(const struct A615 *x, const struct A615 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA615() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A615), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A615, m0), 1);
		dcStructField(st, 'i', offsetof(struct A615, m1), 1);
		dcStructField(st, 'j', offsetof(struct A615, m2), 1);
		dcStructField(st, 's', offsetof(struct A615, m3), 1);
		dcStructField(st, 'p', offsetof(struct A615, m4), 1);
		dcStructField(st, 'j', offsetof(struct A615, m5), 1);
		dcStructField(st, 'c', offsetof(struct A615, m6), 1);
		dcStructField(st, 'c', offsetof(struct A615, m7), 1);
		dcStructField(st, 'i', offsetof(struct A615, m8), 1);
		dcStructField(st, 's', offsetof(struct A615, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slfpsc} */
struct A616 { s m0; l m1; f m2; p m3; s m4; c m5; };
void f_cpA616(struct A616 *x, const struct A616 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA616(const struct A616 *x, const struct A616 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA616() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A616), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A616, m0), 1);
		dcStructField(st, 'l', offsetof(struct A616, m1), 1);
		dcStructField(st, 'f', offsetof(struct A616, m2), 1);
		dcStructField(st, 'p', offsetof(struct A616, m3), 1);
		dcStructField(st, 's', offsetof(struct A616, m4), 1);
		dcStructField(st, 'c', offsetof(struct A616, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfcp} */
struct A617 { c m0; f m1; c m2; p m3; };
void f_cpA617(struct A617 *x, const struct A617 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA617(const struct A617 *x, const struct A617 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA617() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A617), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A617, m0), 1);
		dcStructField(st, 'f', offsetof(struct A617, m1), 1);
		dcStructField(st, 'c', offsetof(struct A617, m2), 1);
		dcStructField(st, 'p', offsetof(struct A617, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpcjplpsdiisidipdlpj} */
struct A618 { d m0; p m1; c m2; j m3; p m4; l m5; p m6; s m7; d m8; i m9; i m10; s m11; i m12; d m13; i m14; p m15; d m16; l m17; p m18; j m19; };
void f_cpA618(struct A618 *x, const struct A618 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA618(const struct A618 *x, const struct A618 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA618() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A618), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A618, m0), 1);
		dcStructField(st, 'p', offsetof(struct A618, m1), 1);
		dcStructField(st, 'c', offsetof(struct A618, m2), 1);
		dcStructField(st, 'j', offsetof(struct A618, m3), 1);
		dcStructField(st, 'p', offsetof(struct A618, m4), 1);
		dcStructField(st, 'l', offsetof(struct A618, m5), 1);
		dcStructField(st, 'p', offsetof(struct A618, m6), 1);
		dcStructField(st, 's', offsetof(struct A618, m7), 1);
		dcStructField(st, 'd', offsetof(struct A618, m8), 1);
		dcStructField(st, 'i', offsetof(struct A618, m9), 1);
		dcStructField(st, 'i', offsetof(struct A618, m10), 1);
		dcStructField(st, 's', offsetof(struct A618, m11), 1);
		dcStructField(st, 'i', offsetof(struct A618, m12), 1);
		dcStructField(st, 'd', offsetof(struct A618, m13), 1);
		dcStructField(st, 'i', offsetof(struct A618, m14), 1);
		dcStructField(st, 'p', offsetof(struct A618, m15), 1);
		dcStructField(st, 'd', offsetof(struct A618, m16), 1);
		dcStructField(st, 'l', offsetof(struct A618, m17), 1);
		dcStructField(st, 'p', offsetof(struct A618, m18), 1);
		dcStructField(st, 'j', offsetof(struct A618, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <l{dpcjplpsdiisidipdlpj}> */
union  A619 { l m0; struct A618 m1; };
void f_cpA619(union  A619 *x, const union  A619 *y) { x->m0 = y->m0; f_cpA618(&x->m1, &y->m1); };
int f_cmpA619(const union  A619 *x, const union  A619 *y) { return x->m0 == y->m0 && f_cmpA618(&x->m1, &y->m1); };
DCstruct* f_touchdcstA619() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A619), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A619, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A619, m1), 1, f_touchdcstA618());
		dcCloseStruct(st);
	}
	return st;
};
/* {jscl<l{dpcjplpsdiisidipdlpj}>} */
struct A620 { j m0; s m1; c m2; l m3; union  A619 m4; };
void f_cpA620(struct A620 *x, const struct A620 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA619(&x->m4, &y->m4); };
int f_cmpA620(const struct A620 *x, const struct A620 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA619(&x->m4, &y->m4); };
DCstruct* f_touchdcstA620() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A620), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A620, m0), 1);
		dcStructField(st, 's', offsetof(struct A620, m1), 1);
		dcStructField(st, 'c', offsetof(struct A620, m2), 1);
		dcStructField(st, 'l', offsetof(struct A620, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A620, m4), 1, f_touchdcstA619());
		dcCloseStruct(st);
	}
	return st;
};
/* <{l}d> */
union  A621 { struct A51 m0; d m1; };
void f_cpA621(union  A621 *x, const union  A621 *y) { f_cpA51(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA621(const union  A621 *x, const union  A621 *y) { return f_cmpA51(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA621() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A621), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A621, m0), 1, f_touchdcstA51());
		dcStructField(st, 'd', offsetof(union  A621, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pficfpflclslsdsjjidi} */
struct A622 { p m0; f m1; i m2; c m3; f m4; p m5; f m6; l m7; c m8; l m9; s m10; l m11; s m12; d m13; s m14; j m15; j m16; i m17; d m18; i m19; };
void f_cpA622(struct A622 *x, const struct A622 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA622(const struct A622 *x, const struct A622 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA622() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A622), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A622, m0), 1);
		dcStructField(st, 'f', offsetof(struct A622, m1), 1);
		dcStructField(st, 'i', offsetof(struct A622, m2), 1);
		dcStructField(st, 'c', offsetof(struct A622, m3), 1);
		dcStructField(st, 'f', offsetof(struct A622, m4), 1);
		dcStructField(st, 'p', offsetof(struct A622, m5), 1);
		dcStructField(st, 'f', offsetof(struct A622, m6), 1);
		dcStructField(st, 'l', offsetof(struct A622, m7), 1);
		dcStructField(st, 'c', offsetof(struct A622, m8), 1);
		dcStructField(st, 'l', offsetof(struct A622, m9), 1);
		dcStructField(st, 's', offsetof(struct A622, m10), 1);
		dcStructField(st, 'l', offsetof(struct A622, m11), 1);
		dcStructField(st, 's', offsetof(struct A622, m12), 1);
		dcStructField(st, 'd', offsetof(struct A622, m13), 1);
		dcStructField(st, 's', offsetof(struct A622, m14), 1);
		dcStructField(st, 'j', offsetof(struct A622, m15), 1);
		dcStructField(st, 'j', offsetof(struct A622, m16), 1);
		dcStructField(st, 'i', offsetof(struct A622, m17), 1);
		dcStructField(st, 'd', offsetof(struct A622, m18), 1);
		dcStructField(st, 'i', offsetof(struct A622, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{f}ils{fp}psf{pficfpflclslsdsjjidi}scdfc{s}sdpl{c}jl} */
struct A623 { struct A257 m0; i m1; l m2; s m3; struct A596 m4; p m5; s m6; f m7; struct A622 m8; s m9; c m10; d m11; f m12; c m13; struct A4 m14; s m15; d m16; p m17; l m18; struct A122 m19; j m20; l m21; };
void f_cpA623(struct A623 *x, const struct A623 *y) { f_cpA257(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA596(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA622(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA4(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA122(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA623(const struct A623 *x, const struct A623 *y) { return f_cmpA257(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA596(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA622(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA4(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA122(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA623() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A623), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A623, m0), 1, f_touchdcstA257());
		dcStructField(st, 'i', offsetof(struct A623, m1), 1);
		dcStructField(st, 'l', offsetof(struct A623, m2), 1);
		dcStructField(st, 's', offsetof(struct A623, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A623, m4), 1, f_touchdcstA596());
		dcStructField(st, 'p', offsetof(struct A623, m5), 1);
		dcStructField(st, 's', offsetof(struct A623, m6), 1);
		dcStructField(st, 'f', offsetof(struct A623, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A623, m8), 1, f_touchdcstA622());
		dcStructField(st, 's', offsetof(struct A623, m9), 1);
		dcStructField(st, 'c', offsetof(struct A623, m10), 1);
		dcStructField(st, 'd', offsetof(struct A623, m11), 1);
		dcStructField(st, 'f', offsetof(struct A623, m12), 1);
		dcStructField(st, 'c', offsetof(struct A623, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A623, m14), 1, f_touchdcstA4());
		dcStructField(st, 's', offsetof(struct A623, m15), 1);
		dcStructField(st, 'd', offsetof(struct A623, m16), 1);
		dcStructField(st, 'p', offsetof(struct A623, m17), 1);
		dcStructField(st, 'l', offsetof(struct A623, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A623, m19), 1, f_touchdcstA122());
		dcStructField(st, 'j', offsetof(struct A623, m20), 1);
		dcStructField(st, 'l', offsetof(struct A623, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdlcjp} */
struct A624 { c m0; d m1; l m2; c m3; j m4; p m5; };
void f_cpA624(struct A624 *x, const struct A624 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA624(const struct A624 *x, const struct A624 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA624() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A624), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A624, m0), 1);
		dcStructField(st, 'd', offsetof(struct A624, m1), 1);
		dcStructField(st, 'l', offsetof(struct A624, m2), 1);
		dcStructField(st, 'c', offsetof(struct A624, m3), 1);
		dcStructField(st, 'j', offsetof(struct A624, m4), 1);
		dcStructField(st, 'p', offsetof(struct A624, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdijjsjl} */
struct A625 { f m0; d m1; i m2; j m3; j m4; s m5; j m6; l m7; };
void f_cpA625(struct A625 *x, const struct A625 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA625(const struct A625 *x, const struct A625 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA625() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A625), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A625, m0), 1);
		dcStructField(st, 'd', offsetof(struct A625, m1), 1);
		dcStructField(st, 'i', offsetof(struct A625, m2), 1);
		dcStructField(st, 'j', offsetof(struct A625, m3), 1);
		dcStructField(st, 'j', offsetof(struct A625, m4), 1);
		dcStructField(st, 's', offsetof(struct A625, m5), 1);
		dcStructField(st, 'j', offsetof(struct A625, m6), 1);
		dcStructField(st, 'l', offsetof(struct A625, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slpp} */
struct A626 { s m0; l m1; p m2; p m3; };
void f_cpA626(struct A626 *x, const struct A626 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA626(const struct A626 *x, const struct A626 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA626() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A626), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A626, m0), 1);
		dcStructField(st, 'l', offsetof(struct A626, m1), 1);
		dcStructField(st, 'p', offsetof(struct A626, m2), 1);
		dcStructField(st, 'p', offsetof(struct A626, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{slpp}} */
struct A627 { struct A626 m0; };
void f_cpA627(struct A627 *x, const struct A627 *y) { f_cpA626(&x->m0, &y->m0); };
int f_cmpA627(const struct A627 *x, const struct A627 *y) { return f_cmpA626(&x->m0, &y->m0); };
DCstruct* f_touchdcstA627() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A627), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A627, m0), 1, f_touchdcstA626());
		dcCloseStruct(st);
	}
	return st;
};
/* {dp} */
struct A628 { d m0; p m1; };
void f_cpA628(struct A628 *x, const struct A628 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA628(const struct A628 *x, const struct A628 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA628() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A628), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A628, m0), 1);
		dcStructField(st, 'p', offsetof(struct A628, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cf} */
struct A629 { c m0; f m1; };
void f_cpA629(struct A629 *x, const struct A629 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA629(const struct A629 *x, const struct A629 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA629() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A629), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A629, m0), 1);
		dcStructField(st, 'f', offsetof(struct A629, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cifl{cf}} */
struct A630 { c m0; i m1; f m2; l m3; struct A629 m4; };
void f_cpA630(struct A630 *x, const struct A630 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA629(&x->m4, &y->m4); };
int f_cmpA630(const struct A630 *x, const struct A630 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA629(&x->m4, &y->m4); };
DCstruct* f_touchdcstA630() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A630), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A630, m0), 1);
		dcStructField(st, 'i', offsetof(struct A630, m1), 1);
		dcStructField(st, 'f', offsetof(struct A630, m2), 1);
		dcStructField(st, 'l', offsetof(struct A630, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A630, m4), 1, f_touchdcstA629());
		dcCloseStruct(st);
	}
	return st;
};
/* {ccflcjpipi} */
struct A631 { c m0; c m1; f m2; l m3; c m4; j m5; p m6; i m7; p m8; i m9; };
void f_cpA631(struct A631 *x, const struct A631 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA631(const struct A631 *x, const struct A631 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA631() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A631), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A631, m0), 1);
		dcStructField(st, 'c', offsetof(struct A631, m1), 1);
		dcStructField(st, 'f', offsetof(struct A631, m2), 1);
		dcStructField(st, 'l', offsetof(struct A631, m3), 1);
		dcStructField(st, 'c', offsetof(struct A631, m4), 1);
		dcStructField(st, 'j', offsetof(struct A631, m5), 1);
		dcStructField(st, 'p', offsetof(struct A631, m6), 1);
		dcStructField(st, 'i', offsetof(struct A631, m7), 1);
		dcStructField(st, 'p', offsetof(struct A631, m8), 1);
		dcStructField(st, 'i', offsetof(struct A631, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlf} */
struct A632 { j m0; l m1; f m2; };
void f_cpA632(struct A632 *x, const struct A632 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA632(const struct A632 *x, const struct A632 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA632() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A632), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A632, m0), 1);
		dcStructField(st, 'l', offsetof(struct A632, m1), 1);
		dcStructField(st, 'f', offsetof(struct A632, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fdclf{ccflcjpipi}fllfl{jlf}sld> */
union  A633 { f m0; d m1; c m2; l m3; f m4; struct A631 m5; f m6; l m7; l m8; f m9; l m10; struct A632 m11; s m12; l m13; d m14; };
void f_cpA633(union  A633 *x, const union  A633 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA631(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA632(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA633(const union  A633 *x, const union  A633 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA631(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA632(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA633() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A633), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A633, m0), 1);
		dcStructField(st, 'd', offsetof(union  A633, m1), 1);
		dcStructField(st, 'c', offsetof(union  A633, m2), 1);
		dcStructField(st, 'l', offsetof(union  A633, m3), 1);
		dcStructField(st, 'f', offsetof(union  A633, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A633, m5), 1, f_touchdcstA631());
		dcStructField(st, 'f', offsetof(union  A633, m6), 1);
		dcStructField(st, 'l', offsetof(union  A633, m7), 1);
		dcStructField(st, 'l', offsetof(union  A633, m8), 1);
		dcStructField(st, 'f', offsetof(union  A633, m9), 1);
		dcStructField(st, 'l', offsetof(union  A633, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A633, m11), 1, f_touchdcstA632());
		dcStructField(st, 's', offsetof(union  A633, m12), 1);
		dcStructField(st, 'l', offsetof(union  A633, m13), 1);
		dcStructField(st, 'd', offsetof(union  A633, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdsssjdjsccllfsf} */
struct A634 { j m0; d m1; s m2; s m3; s m4; j m5; d m6; j m7; s m8; c m9; c m10; l m11; l m12; f m13; s m14; f m15; };
void f_cpA634(struct A634 *x, const struct A634 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA634(const struct A634 *x, const struct A634 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA634() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A634), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A634, m0), 1);
		dcStructField(st, 'd', offsetof(struct A634, m1), 1);
		dcStructField(st, 's', offsetof(struct A634, m2), 1);
		dcStructField(st, 's', offsetof(struct A634, m3), 1);
		dcStructField(st, 's', offsetof(struct A634, m4), 1);
		dcStructField(st, 'j', offsetof(struct A634, m5), 1);
		dcStructField(st, 'd', offsetof(struct A634, m6), 1);
		dcStructField(st, 'j', offsetof(struct A634, m7), 1);
		dcStructField(st, 's', offsetof(struct A634, m8), 1);
		dcStructField(st, 'c', offsetof(struct A634, m9), 1);
		dcStructField(st, 'c', offsetof(struct A634, m10), 1);
		dcStructField(st, 'l', offsetof(struct A634, m11), 1);
		dcStructField(st, 'l', offsetof(struct A634, m12), 1);
		dcStructField(st, 'f', offsetof(struct A634, m13), 1);
		dcStructField(st, 's', offsetof(struct A634, m14), 1);
		dcStructField(st, 'f', offsetof(struct A634, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <icd> */
union  A635 { i m0; c m1; d m2; };
void f_cpA635(union  A635 *x, const union  A635 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA635(const union  A635 *x, const union  A635 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA635() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A635), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A635, m0), 1);
		dcStructField(st, 'c', offsetof(union  A635, m1), 1);
		dcStructField(st, 'd', offsetof(union  A635, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jcs> */
union  A636 { j m0; c m1; s m2; };
void f_cpA636(union  A636 *x, const union  A636 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA636(const union  A636 *x, const union  A636 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA636() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A636), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A636, m0), 1);
		dcStructField(st, 'c', offsetof(union  A636, m1), 1);
		dcStructField(st, 's', offsetof(union  A636, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsfjj<s><icd><jcs>} */
struct A637 { l m0; s m1; f m2; j m3; j m4; union  A75 m5; union  A635 m6; union  A636 m7; };
void f_cpA637(struct A637 *x, const struct A637 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA75(&x->m5, &y->m5); f_cpA635(&x->m6, &y->m6); f_cpA636(&x->m7, &y->m7); };
int f_cmpA637(const struct A637 *x, const struct A637 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA75(&x->m5, &y->m5) && f_cmpA635(&x->m6, &y->m6) && f_cmpA636(&x->m7, &y->m7); };
DCstruct* f_touchdcstA637() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A637), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A637, m0), 1);
		dcStructField(st, 's', offsetof(struct A637, m1), 1);
		dcStructField(st, 'f', offsetof(struct A637, m2), 1);
		dcStructField(st, 'j', offsetof(struct A637, m3), 1);
		dcStructField(st, 'j', offsetof(struct A637, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A637, m5), 1, f_touchdcstA75());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A637, m6), 1, f_touchdcstA635());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A637, m7), 1, f_touchdcstA636());
		dcCloseStruct(st);
	}
	return st;
};
/* <sdlllfijlcdppi> */
union  A638 { s m0; d m1; l m2; l m3; l m4; f m5; i m6; j m7; l m8; c m9; d m10; p m11; p m12; i m13; };
void f_cpA638(union  A638 *x, const union  A638 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA638(const union  A638 *x, const union  A638 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA638() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A638), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A638, m0), 1);
		dcStructField(st, 'd', offsetof(union  A638, m1), 1);
		dcStructField(st, 'l', offsetof(union  A638, m2), 1);
		dcStructField(st, 'l', offsetof(union  A638, m3), 1);
		dcStructField(st, 'l', offsetof(union  A638, m4), 1);
		dcStructField(st, 'f', offsetof(union  A638, m5), 1);
		dcStructField(st, 'i', offsetof(union  A638, m6), 1);
		dcStructField(st, 'j', offsetof(union  A638, m7), 1);
		dcStructField(st, 'l', offsetof(union  A638, m8), 1);
		dcStructField(st, 'c', offsetof(union  A638, m9), 1);
		dcStructField(st, 'd', offsetof(union  A638, m10), 1);
		dcStructField(st, 'p', offsetof(union  A638, m11), 1);
		dcStructField(st, 'p', offsetof(union  A638, m12), 1);
		dcStructField(st, 'i', offsetof(union  A638, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lffpcpipsf> */
union  A639 { l m0; f m1; f m2; p m3; c m4; p m5; i m6; p m7; s m8; f m9; };
void f_cpA639(union  A639 *x, const union  A639 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA639(const union  A639 *x, const union  A639 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA639() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A639), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A639, m0), 1);
		dcStructField(st, 'f', offsetof(union  A639, m1), 1);
		dcStructField(st, 'f', offsetof(union  A639, m2), 1);
		dcStructField(st, 'p', offsetof(union  A639, m3), 1);
		dcStructField(st, 'c', offsetof(union  A639, m4), 1);
		dcStructField(st, 'p', offsetof(union  A639, m5), 1);
		dcStructField(st, 'i', offsetof(union  A639, m6), 1);
		dcStructField(st, 'p', offsetof(union  A639, m7), 1);
		dcStructField(st, 's', offsetof(union  A639, m8), 1);
		dcStructField(st, 'f', offsetof(union  A639, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <llpddffpf> */
union  A640 { l m0; l m1; p m2; d m3; d m4; f m5; f m6; p m7; f m8; };
void f_cpA640(union  A640 *x, const union  A640 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA640(const union  A640 *x, const union  A640 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA640() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A640), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A640, m0), 1);
		dcStructField(st, 'l', offsetof(union  A640, m1), 1);
		dcStructField(st, 'p', offsetof(union  A640, m2), 1);
		dcStructField(st, 'd', offsetof(union  A640, m3), 1);
		dcStructField(st, 'd', offsetof(union  A640, m4), 1);
		dcStructField(st, 'f', offsetof(union  A640, m5), 1);
		dcStructField(st, 'f', offsetof(union  A640, m6), 1);
		dcStructField(st, 'p', offsetof(union  A640, m7), 1);
		dcStructField(st, 'f', offsetof(union  A640, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pijddpidc> */
union  A641 { p m0; i m1; j m2; d m3; d m4; p m5; i m6; d m7; c m8; };
void f_cpA641(union  A641 *x, const union  A641 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA641(const union  A641 *x, const union  A641 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA641() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A641), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A641, m0), 1);
		dcStructField(st, 'i', offsetof(union  A641, m1), 1);
		dcStructField(st, 'j', offsetof(union  A641, m2), 1);
		dcStructField(st, 'd', offsetof(union  A641, m3), 1);
		dcStructField(st, 'd', offsetof(union  A641, m4), 1);
		dcStructField(st, 'p', offsetof(union  A641, m5), 1);
		dcStructField(st, 'i', offsetof(union  A641, m6), 1);
		dcStructField(st, 'd', offsetof(union  A641, m7), 1);
		dcStructField(st, 'c', offsetof(union  A641, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sifljcs<sdlllfijlcdppi>l<lffpcpipsf>j<llpddffpf>ldjplcs<pijddpidc>sf} */
struct A642 { s m0; i m1; f m2; l m3; j m4; c m5; s m6; union  A638 m7; l m8; union  A639 m9; j m10; union  A640 m11; l m12; d m13; j m14; p m15; l m16; c m17; s m18; union  A641 m19; s m20; f m21; };
void f_cpA642(struct A642 *x, const struct A642 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA638(&x->m7, &y->m7); x->m8 = y->m8; f_cpA639(&x->m9, &y->m9); x->m10 = y->m10; f_cpA640(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA641(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA642(const struct A642 *x, const struct A642 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA638(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA639(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA640(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA641(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA642() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A642), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A642, m0), 1);
		dcStructField(st, 'i', offsetof(struct A642, m1), 1);
		dcStructField(st, 'f', offsetof(struct A642, m2), 1);
		dcStructField(st, 'l', offsetof(struct A642, m3), 1);
		dcStructField(st, 'j', offsetof(struct A642, m4), 1);
		dcStructField(st, 'c', offsetof(struct A642, m5), 1);
		dcStructField(st, 's', offsetof(struct A642, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A642, m7), 1, f_touchdcstA638());
		dcStructField(st, 'l', offsetof(struct A642, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A642, m9), 1, f_touchdcstA639());
		dcStructField(st, 'j', offsetof(struct A642, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A642, m11), 1, f_touchdcstA640());
		dcStructField(st, 'l', offsetof(struct A642, m12), 1);
		dcStructField(st, 'd', offsetof(struct A642, m13), 1);
		dcStructField(st, 'j', offsetof(struct A642, m14), 1);
		dcStructField(st, 'p', offsetof(struct A642, m15), 1);
		dcStructField(st, 'l', offsetof(struct A642, m16), 1);
		dcStructField(st, 'c', offsetof(struct A642, m17), 1);
		dcStructField(st, 's', offsetof(struct A642, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A642, m19), 1, f_touchdcstA641());
		dcStructField(st, 's', offsetof(struct A642, m20), 1);
		dcStructField(st, 'f', offsetof(struct A642, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jcldlj{sifljcs<sdlllfijlcdppi>l<lffpcpipsf>j<llpddffpf>ldjplcs<pijddpidc>sf}> */
union  A643 { j m0; c m1; l m2; d m3; l m4; j m5; struct A642 m6; };
void f_cpA643(union  A643 *x, const union  A643 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA642(&x->m6, &y->m6); };
int f_cmpA643(const union  A643 *x, const union  A643 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA642(&x->m6, &y->m6); };
DCstruct* f_touchdcstA643() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A643), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A643, m0), 1);
		dcStructField(st, 'c', offsetof(union  A643, m1), 1);
		dcStructField(st, 'l', offsetof(union  A643, m2), 1);
		dcStructField(st, 'd', offsetof(union  A643, m3), 1);
		dcStructField(st, 'l', offsetof(union  A643, m4), 1);
		dcStructField(st, 'j', offsetof(union  A643, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A643, m6), 1, f_touchdcstA642());
		dcCloseStruct(st);
	}
	return st;
};
/* <dj> */
union  A644 { d m0; j m1; };
void f_cpA644(union  A644 *x, const union  A644 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA644(const union  A644 *x, const union  A644 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA644() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A644), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A644, m0), 1);
		dcStructField(st, 'j', offsetof(union  A644, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scpij} */
struct A645 { s m0; c m1; p m2; i m3; j m4; };
void f_cpA645(struct A645 *x, const struct A645 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA645(const struct A645 *x, const struct A645 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA645() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A645), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A645, m0), 1);
		dcStructField(st, 'c', offsetof(struct A645, m1), 1);
		dcStructField(st, 'p', offsetof(struct A645, m2), 1);
		dcStructField(st, 'i', offsetof(struct A645, m3), 1);
		dcStructField(st, 'j', offsetof(struct A645, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsfcj} */
struct A646 { l m0; s m1; f m2; c m3; j m4; };
void f_cpA646(struct A646 *x, const struct A646 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA646(const struct A646 *x, const struct A646 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA646() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A646), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A646, m0), 1);
		dcStructField(st, 's', offsetof(struct A646, m1), 1);
		dcStructField(st, 'f', offsetof(struct A646, m2), 1);
		dcStructField(st, 'c', offsetof(struct A646, m3), 1);
		dcStructField(st, 'j', offsetof(struct A646, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfppspfpcpf> */
union  A647 { s m0; f m1; p m2; p m3; s m4; p m5; f m6; p m7; c m8; p m9; f m10; };
void f_cpA647(union  A647 *x, const union  A647 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA647(const union  A647 *x, const union  A647 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA647() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A647), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A647, m0), 1);
		dcStructField(st, 'f', offsetof(union  A647, m1), 1);
		dcStructField(st, 'p', offsetof(union  A647, m2), 1);
		dcStructField(st, 'p', offsetof(union  A647, m3), 1);
		dcStructField(st, 's', offsetof(union  A647, m4), 1);
		dcStructField(st, 'p', offsetof(union  A647, m5), 1);
		dcStructField(st, 'f', offsetof(union  A647, m6), 1);
		dcStructField(st, 'p', offsetof(union  A647, m7), 1);
		dcStructField(st, 'c', offsetof(union  A647, m8), 1);
		dcStructField(st, 'p', offsetof(union  A647, m9), 1);
		dcStructField(st, 'f', offsetof(union  A647, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jjsddf> */
union  A648 { j m0; j m1; s m2; d m3; d m4; f m5; };
void f_cpA648(union  A648 *x, const union  A648 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA648(const union  A648 *x, const union  A648 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA648() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A648), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A648, m0), 1);
		dcStructField(st, 'j', offsetof(union  A648, m1), 1);
		dcStructField(st, 's', offsetof(union  A648, m2), 1);
		dcStructField(st, 'd', offsetof(union  A648, m3), 1);
		dcStructField(st, 'd', offsetof(union  A648, m4), 1);
		dcStructField(st, 'f', offsetof(union  A648, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{lsfcj}lljs<sfppspfpcpf>sij<jjsddf>dd} */
struct A649 { struct A646 m0; l m1; l m2; j m3; s m4; union  A647 m5; s m6; i m7; j m8; union  A648 m9; d m10; d m11; };
void f_cpA649(struct A649 *x, const struct A649 *y) { f_cpA646(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA647(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA648(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA649(const struct A649 *x, const struct A649 *y) { return f_cmpA646(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA647(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA648(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA649() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A649), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A649, m0), 1, f_touchdcstA646());
		dcStructField(st, 'l', offsetof(struct A649, m1), 1);
		dcStructField(st, 'l', offsetof(struct A649, m2), 1);
		dcStructField(st, 'j', offsetof(struct A649, m3), 1);
		dcStructField(st, 's', offsetof(struct A649, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A649, m5), 1, f_touchdcstA647());
		dcStructField(st, 's', offsetof(struct A649, m6), 1);
		dcStructField(st, 'i', offsetof(struct A649, m7), 1);
		dcStructField(st, 'j', offsetof(struct A649, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A649, m9), 1, f_touchdcstA648());
		dcStructField(st, 'd', offsetof(struct A649, m10), 1);
		dcStructField(st, 'd', offsetof(struct A649, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcjfifi{{lsfcj}lljs<sfppspfpcpf>sij<jjsddf>dd}} */
struct A650 { d m0; c m1; j m2; f m3; i m4; f m5; i m6; struct A649 m7; };
void f_cpA650(struct A650 *x, const struct A650 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA649(&x->m7, &y->m7); };
int f_cmpA650(const struct A650 *x, const struct A650 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA649(&x->m7, &y->m7); };
DCstruct* f_touchdcstA650() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A650), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A650, m0), 1);
		dcStructField(st, 'c', offsetof(struct A650, m1), 1);
		dcStructField(st, 'j', offsetof(struct A650, m2), 1);
		dcStructField(st, 'f', offsetof(struct A650, m3), 1);
		dcStructField(st, 'i', offsetof(struct A650, m4), 1);
		dcStructField(st, 'f', offsetof(struct A650, m5), 1);
		dcStructField(st, 'i', offsetof(struct A650, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A650, m7), 1, f_touchdcstA649());
		dcCloseStruct(st);
	}
	return st;
};
/* <ij> */
union  A651 { i m0; j m1; };
void f_cpA651(union  A651 *x, const union  A651 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA651(const union  A651 *x, const union  A651 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA651() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A651), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A651, m0), 1);
		dcStructField(st, 'j', offsetof(union  A651, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iidlsjssc} */
struct A652 { i m0; i m1; d m2; l m3; s m4; j m5; s m6; s m7; c m8; };
void f_cpA652(struct A652 *x, const struct A652 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA652(const struct A652 *x, const struct A652 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA652() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A652), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A652, m0), 1);
		dcStructField(st, 'i', offsetof(struct A652, m1), 1);
		dcStructField(st, 'd', offsetof(struct A652, m2), 1);
		dcStructField(st, 'l', offsetof(struct A652, m3), 1);
		dcStructField(st, 's', offsetof(struct A652, m4), 1);
		dcStructField(st, 'j', offsetof(struct A652, m5), 1);
		dcStructField(st, 's', offsetof(struct A652, m6), 1);
		dcStructField(st, 's', offsetof(struct A652, m7), 1);
		dcStructField(st, 'c', offsetof(struct A652, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpj<ij>jjsfj{iidlsjssc}l} */
struct A653 { c m0; p m1; j m2; union  A651 m3; j m4; j m5; s m6; f m7; j m8; struct A652 m9; l m10; };
void f_cpA653(struct A653 *x, const struct A653 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA651(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA652(&x->m9, &y->m9); x->m10 = y->m10; };
int f_cmpA653(const struct A653 *x, const struct A653 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA651(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA652(&x->m9, &y->m9) && x->m10 == y->m10; };
DCstruct* f_touchdcstA653() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A653), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A653, m0), 1);
		dcStructField(st, 'p', offsetof(struct A653, m1), 1);
		dcStructField(st, 'j', offsetof(struct A653, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A653, m3), 1, f_touchdcstA651());
		dcStructField(st, 'j', offsetof(struct A653, m4), 1);
		dcStructField(st, 'j', offsetof(struct A653, m5), 1);
		dcStructField(st, 's', offsetof(struct A653, m6), 1);
		dcStructField(st, 'f', offsetof(struct A653, m7), 1);
		dcStructField(st, 'j', offsetof(struct A653, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A653, m9), 1, f_touchdcstA652());
		dcStructField(st, 'l', offsetof(struct A653, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcjsl> */
union  A654 { f m0; c m1; j m2; s m3; l m4; };
void f_cpA654(union  A654 *x, const union  A654 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA654(const union  A654 *x, const union  A654 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA654() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A654), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A654, m0), 1);
		dcStructField(st, 'c', offsetof(union  A654, m1), 1);
		dcStructField(st, 'j', offsetof(union  A654, m2), 1);
		dcStructField(st, 's', offsetof(union  A654, m3), 1);
		dcStructField(st, 'l', offsetof(union  A654, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i<fcjsl>} */
struct A655 { i m0; union  A654 m1; };
void f_cpA655(struct A655 *x, const struct A655 *y) { x->m0 = y->m0; f_cpA654(&x->m1, &y->m1); };
int f_cmpA655(const struct A655 *x, const struct A655 *y) { return x->m0 == y->m0 && f_cmpA654(&x->m1, &y->m1); };
DCstruct* f_touchdcstA655() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A655), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A655, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A655, m1), 1, f_touchdcstA654());
		dcCloseStruct(st);
	}
	return st;
};
/* <cfdcc> */
union  A656 { c m0; f m1; d m2; c m3; c m4; };
void f_cpA656(union  A656 *x, const union  A656 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA656(const union  A656 *x, const union  A656 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA656() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A656), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A656, m0), 1);
		dcStructField(st, 'f', offsetof(union  A656, m1), 1);
		dcStructField(st, 'd', offsetof(union  A656, m2), 1);
		dcStructField(st, 'c', offsetof(union  A656, m3), 1);
		dcStructField(st, 'c', offsetof(union  A656, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sifcpcj> */
union  A657 { s m0; i m1; f m2; c m3; p m4; c m5; j m6; };
void f_cpA657(union  A657 *x, const union  A657 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA657(const union  A657 *x, const union  A657 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA657() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A657), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A657, m0), 1);
		dcStructField(st, 'i', offsetof(union  A657, m1), 1);
		dcStructField(st, 'f', offsetof(union  A657, m2), 1);
		dcStructField(st, 'c', offsetof(union  A657, m3), 1);
		dcStructField(st, 'p', offsetof(union  A657, m4), 1);
		dcStructField(st, 'c', offsetof(union  A657, m5), 1);
		dcStructField(st, 'j', offsetof(union  A657, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <csspilsf> */
union  A658 { c m0; s m1; s m2; p m3; i m4; l m5; s m6; f m7; };
void f_cpA658(union  A658 *x, const union  A658 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA658(const union  A658 *x, const union  A658 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA658() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A658), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A658, m0), 1);
		dcStructField(st, 's', offsetof(union  A658, m1), 1);
		dcStructField(st, 's', offsetof(union  A658, m2), 1);
		dcStructField(st, 'p', offsetof(union  A658, m3), 1);
		dcStructField(st, 'i', offsetof(union  A658, m4), 1);
		dcStructField(st, 'l', offsetof(union  A658, m5), 1);
		dcStructField(st, 's', offsetof(union  A658, m6), 1);
		dcStructField(st, 'f', offsetof(union  A658, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<csspilsf>cplldpis} */
struct A659 { union  A658 m0; c m1; p m2; l m3; l m4; d m5; p m6; i m7; s m8; };
void f_cpA659(struct A659 *x, const struct A659 *y) { f_cpA658(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA659(const struct A659 *x, const struct A659 *y) { return f_cmpA658(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA659() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A659), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A659, m0), 1, f_touchdcstA658());
		dcStructField(st, 'c', offsetof(struct A659, m1), 1);
		dcStructField(st, 'p', offsetof(struct A659, m2), 1);
		dcStructField(st, 'l', offsetof(struct A659, m3), 1);
		dcStructField(st, 'l', offsetof(struct A659, m4), 1);
		dcStructField(st, 'd', offsetof(struct A659, m5), 1);
		dcStructField(st, 'p', offsetof(struct A659, m6), 1);
		dcStructField(st, 'i', offsetof(struct A659, m7), 1);
		dcStructField(st, 's', offsetof(struct A659, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlfpcd} */
struct A660 { j m0; l m1; f m2; p m3; c m4; d m5; };
void f_cpA660(struct A660 *x, const struct A660 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA660(const struct A660 *x, const struct A660 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA660() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A660), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A660, m0), 1);
		dcStructField(st, 'l', offsetof(struct A660, m1), 1);
		dcStructField(st, 'f', offsetof(struct A660, m2), 1);
		dcStructField(st, 'p', offsetof(struct A660, m3), 1);
		dcStructField(st, 'c', offsetof(struct A660, m4), 1);
		dcStructField(st, 'd', offsetof(struct A660, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldc} */
struct A661 { l m0; d m1; c m2; };
void f_cpA661(struct A661 *x, const struct A661 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA661(const struct A661 *x, const struct A661 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA661() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A661), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A661, m0), 1);
		dcStructField(st, 'd', offsetof(struct A661, m1), 1);
		dcStructField(st, 'c', offsetof(struct A661, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljdfcj> */
union  A662 { l m0; j m1; d m2; f m3; c m4; j m5; };
void f_cpA662(union  A662 *x, const union  A662 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA662(const union  A662 *x, const union  A662 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA662() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A662), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A662, m0), 1);
		dcStructField(st, 'j', offsetof(union  A662, m1), 1);
		dcStructField(st, 'd', offsetof(union  A662, m2), 1);
		dcStructField(st, 'f', offsetof(union  A662, m3), 1);
		dcStructField(st, 'c', offsetof(union  A662, m4), 1);
		dcStructField(st, 'j', offsetof(union  A662, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{ldc}dlii<ljdfcj>jj{p}pjd<cll>} */
struct A663 { struct A661 m0; d m1; l m2; i m3; i m4; union  A662 m5; j m6; j m7; struct A250 m8; p m9; j m10; d m11; union  A584 m12; };
void f_cpA663(struct A663 *x, const struct A663 *y) { f_cpA661(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA662(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; f_cpA250(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA584(&x->m12, &y->m12); };
int f_cmpA663(const struct A663 *x, const struct A663 *y) { return f_cmpA661(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA662(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA250(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA584(&x->m12, &y->m12); };
DCstruct* f_touchdcstA663() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A663), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A663, m0), 1, f_touchdcstA661());
		dcStructField(st, 'd', offsetof(struct A663, m1), 1);
		dcStructField(st, 'l', offsetof(struct A663, m2), 1);
		dcStructField(st, 'i', offsetof(struct A663, m3), 1);
		dcStructField(st, 'i', offsetof(struct A663, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A663, m5), 1, f_touchdcstA662());
		dcStructField(st, 'j', offsetof(struct A663, m6), 1);
		dcStructField(st, 'j', offsetof(struct A663, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A663, m8), 1, f_touchdcstA250());
		dcStructField(st, 'p', offsetof(struct A663, m9), 1);
		dcStructField(st, 'j', offsetof(struct A663, m10), 1);
		dcStructField(st, 'd', offsetof(struct A663, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A663, m12), 1, f_touchdcstA584());
		dcCloseStruct(st);
	}
	return st;
};
/* {cj} */
struct A664 { c m0; j m1; };
void f_cpA664(struct A664 *x, const struct A664 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA664(const struct A664 *x, const struct A664 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA664() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A664), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A664, m0), 1);
		dcStructField(st, 'j', offsetof(struct A664, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcf} */
struct A665 { d m0; c m1; f m2; };
void f_cpA665(struct A665 *x, const struct A665 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA665(const struct A665 *x, const struct A665 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA665() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A665), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A665, m0), 1);
		dcStructField(st, 'c', offsetof(struct A665, m1), 1);
		dcStructField(st, 'f', offsetof(struct A665, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfilcfipfdsic} */
struct A666 { d m0; f m1; i m2; l m3; c m4; f m5; i m6; p m7; f m8; d m9; s m10; i m11; c m12; };
void f_cpA666(struct A666 *x, const struct A666 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA666(const struct A666 *x, const struct A666 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA666() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A666), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A666, m0), 1);
		dcStructField(st, 'f', offsetof(struct A666, m1), 1);
		dcStructField(st, 'i', offsetof(struct A666, m2), 1);
		dcStructField(st, 'l', offsetof(struct A666, m3), 1);
		dcStructField(st, 'c', offsetof(struct A666, m4), 1);
		dcStructField(st, 'f', offsetof(struct A666, m5), 1);
		dcStructField(st, 'i', offsetof(struct A666, m6), 1);
		dcStructField(st, 'p', offsetof(struct A666, m7), 1);
		dcStructField(st, 'f', offsetof(struct A666, m8), 1);
		dcStructField(st, 'd', offsetof(struct A666, m9), 1);
		dcStructField(st, 's', offsetof(struct A666, m10), 1);
		dcStructField(st, 'i', offsetof(struct A666, m11), 1);
		dcStructField(st, 'c', offsetof(struct A666, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c{cj}{dcf}c{dfilcfipfdsic}i} */
struct A667 { c m0; struct A664 m1; struct A665 m2; c m3; struct A666 m4; i m5; };
void f_cpA667(struct A667 *x, const struct A667 *y) { x->m0 = y->m0; f_cpA664(&x->m1, &y->m1); f_cpA665(&x->m2, &y->m2); x->m3 = y->m3; f_cpA666(&x->m4, &y->m4); x->m5 = y->m5; };
int f_cmpA667(const struct A667 *x, const struct A667 *y) { return x->m0 == y->m0 && f_cmpA664(&x->m1, &y->m1) && f_cmpA665(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA666(&x->m4, &y->m4) && x->m5 == y->m5; };
DCstruct* f_touchdcstA667() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A667), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A667, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A667, m1), 1, f_touchdcstA664());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A667, m2), 1, f_touchdcstA665());
		dcStructField(st, 'c', offsetof(struct A667, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A667, m4), 1, f_touchdcstA666());
		dcStructField(st, 'i', offsetof(struct A667, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <isidlljli<cfdcc><sifcpcj>ds<fl>lfd{<csspilsf>cplldpis}splij{jlfpcd}l{{ldc}dlii<ljdfcj>jj{p}pjd<cll>}ifil{c{cj}{dcf}c{dfilcfipfdsic}i}> */
union  A668 { i m0; s m1; i m2; d m3; l m4; l m5; j m6; l m7; i m8; union  A656 m9; union  A657 m10; d m11; s m12; union  A225 m13; l m14; f m15; d m16; struct A659 m17; s m18; p m19; l m20; i m21; j m22; struct A660 m23; l m24; struct A663 m25; i m26; f m27; i m28; l m29; struct A667 m30; };
void f_cpA668(union  A668 *x, const union  A668 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA656(&x->m9, &y->m9); f_cpA657(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; f_cpA225(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; f_cpA659(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; f_cpA660(&x->m23, &y->m23); x->m24 = y->m24; f_cpA663(&x->m25, &y->m25); x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; f_cpA667(&x->m30, &y->m30); };
int f_cmpA668(const union  A668 *x, const union  A668 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA656(&x->m9, &y->m9) && f_cmpA657(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA225(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && f_cmpA659(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && f_cmpA660(&x->m23, &y->m23) && x->m24 == y->m24 && f_cmpA663(&x->m25, &y->m25) && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && f_cmpA667(&x->m30, &y->m30); };
DCstruct* f_touchdcstA668() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(31, sizeof(union  A668), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A668, m0), 1);
		dcStructField(st, 's', offsetof(union  A668, m1), 1);
		dcStructField(st, 'i', offsetof(union  A668, m2), 1);
		dcStructField(st, 'd', offsetof(union  A668, m3), 1);
		dcStructField(st, 'l', offsetof(union  A668, m4), 1);
		dcStructField(st, 'l', offsetof(union  A668, m5), 1);
		dcStructField(st, 'j', offsetof(union  A668, m6), 1);
		dcStructField(st, 'l', offsetof(union  A668, m7), 1);
		dcStructField(st, 'i', offsetof(union  A668, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A668, m9), 1, f_touchdcstA656());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A668, m10), 1, f_touchdcstA657());
		dcStructField(st, 'd', offsetof(union  A668, m11), 1);
		dcStructField(st, 's', offsetof(union  A668, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A668, m13), 1, f_touchdcstA225());
		dcStructField(st, 'l', offsetof(union  A668, m14), 1);
		dcStructField(st, 'f', offsetof(union  A668, m15), 1);
		dcStructField(st, 'd', offsetof(union  A668, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A668, m17), 1, f_touchdcstA659());
		dcStructField(st, 's', offsetof(union  A668, m18), 1);
		dcStructField(st, 'p', offsetof(union  A668, m19), 1);
		dcStructField(st, 'l', offsetof(union  A668, m20), 1);
		dcStructField(st, 'i', offsetof(union  A668, m21), 1);
		dcStructField(st, 'j', offsetof(union  A668, m22), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A668, m23), 1, f_touchdcstA660());
		dcStructField(st, 'l', offsetof(union  A668, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A668, m25), 1, f_touchdcstA663());
		dcStructField(st, 'i', offsetof(union  A668, m26), 1);
		dcStructField(st, 'f', offsetof(union  A668, m27), 1);
		dcStructField(st, 'i', offsetof(union  A668, m28), 1);
		dcStructField(st, 'l', offsetof(union  A668, m29), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A668, m30), 1, f_touchdcstA667());
		dcCloseStruct(st);
	}
	return st;
};
/* {jfjs} */
struct A669 { j m0; f m1; j m2; s m3; };
void f_cpA669(struct A669 *x, const struct A669 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA669(const struct A669 *x, const struct A669 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA669() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A669), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A669, m0), 1);
		dcStructField(st, 'f', offsetof(struct A669, m1), 1);
		dcStructField(st, 'j', offsetof(struct A669, m2), 1);
		dcStructField(st, 's', offsetof(struct A669, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jcjipffdcissdscs{p}dc> */
union  A670 { j m0; c m1; j m2; i m3; p m4; f m5; f m6; d m7; c m8; i m9; s m10; s m11; d m12; s m13; c m14; s m15; struct A250 m16; d m17; c m18; };
void f_cpA670(union  A670 *x, const union  A670 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA250(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA670(const union  A670 *x, const union  A670 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA250(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA670() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A670), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A670, m0), 1);
		dcStructField(st, 'c', offsetof(union  A670, m1), 1);
		dcStructField(st, 'j', offsetof(union  A670, m2), 1);
		dcStructField(st, 'i', offsetof(union  A670, m3), 1);
		dcStructField(st, 'p', offsetof(union  A670, m4), 1);
		dcStructField(st, 'f', offsetof(union  A670, m5), 1);
		dcStructField(st, 'f', offsetof(union  A670, m6), 1);
		dcStructField(st, 'd', offsetof(union  A670, m7), 1);
		dcStructField(st, 'c', offsetof(union  A670, m8), 1);
		dcStructField(st, 'i', offsetof(union  A670, m9), 1);
		dcStructField(st, 's', offsetof(union  A670, m10), 1);
		dcStructField(st, 's', offsetof(union  A670, m11), 1);
		dcStructField(st, 'd', offsetof(union  A670, m12), 1);
		dcStructField(st, 's', offsetof(union  A670, m13), 1);
		dcStructField(st, 'c', offsetof(union  A670, m14), 1);
		dcStructField(st, 's', offsetof(union  A670, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A670, m16), 1, f_touchdcstA250());
		dcStructField(st, 'd', offsetof(union  A670, m17), 1);
		dcStructField(st, 'c', offsetof(union  A670, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ls> */
union  A671 { l m0; s m1; };
void f_cpA671(union  A671 *x, const union  A671 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA671(const union  A671 *x, const union  A671 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA671() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A671), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A671, m0), 1);
		dcStructField(st, 's', offsetof(union  A671, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<ls>j> */
union  A672 { union  A671 m0; j m1; };
void f_cpA672(union  A672 *x, const union  A672 *y) { f_cpA671(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA672(const union  A672 *x, const union  A672 *y) { return f_cmpA671(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA672() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A672), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A672, m0), 1, f_touchdcstA671());
		dcStructField(st, 'j', offsetof(union  A672, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sc} */
struct A673 { s m0; c m1; };
void f_cpA673(struct A673 *x, const struct A673 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA673(const struct A673 *x, const struct A673 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA673() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A673), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A673, m0), 1);
		dcStructField(st, 'c', offsetof(struct A673, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sp> */
union  A674 { s m0; p m1; };
void f_cpA674(union  A674 *x, const union  A674 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA674(const union  A674 *x, const union  A674 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA674() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A674), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A674, m0), 1);
		dcStructField(st, 'p', offsetof(union  A674, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jl<j>pj> */
union  A675 { j m0; l m1; union  A47 m2; p m3; j m4; };
void f_cpA675(union  A675 *x, const union  A675 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA47(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA675(const union  A675 *x, const union  A675 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA47(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA675() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A675), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A675, m0), 1);
		dcStructField(st, 'l', offsetof(union  A675, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A675, m2), 1, f_touchdcstA47());
		dcStructField(st, 'p', offsetof(union  A675, m3), 1);
		dcStructField(st, 'j', offsetof(union  A675, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcsidjljclsl> */
union  A676 { f m0; c m1; s m2; i m3; d m4; j m5; l m6; j m7; c m8; l m9; s m10; l m11; };
void f_cpA676(union  A676 *x, const union  A676 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA676(const union  A676 *x, const union  A676 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA676() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A676), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A676, m0), 1);
		dcStructField(st, 'c', offsetof(union  A676, m1), 1);
		dcStructField(st, 's', offsetof(union  A676, m2), 1);
		dcStructField(st, 'i', offsetof(union  A676, m3), 1);
		dcStructField(st, 'd', offsetof(union  A676, m4), 1);
		dcStructField(st, 'j', offsetof(union  A676, m5), 1);
		dcStructField(st, 'l', offsetof(union  A676, m6), 1);
		dcStructField(st, 'j', offsetof(union  A676, m7), 1);
		dcStructField(st, 'c', offsetof(union  A676, m8), 1);
		dcStructField(st, 'l', offsetof(union  A676, m9), 1);
		dcStructField(st, 's', offsetof(union  A676, m10), 1);
		dcStructField(st, 'l', offsetof(union  A676, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fplf> */
union  A677 { f m0; p m1; l m2; f m3; };
void f_cpA677(union  A677 *x, const union  A677 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA677(const union  A677 *x, const union  A677 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA677() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A677), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A677, m0), 1);
		dcStructField(st, 'p', offsetof(union  A677, m1), 1);
		dcStructField(st, 'l', offsetof(union  A677, m2), 1);
		dcStructField(st, 'f', offsetof(union  A677, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sddfdc> */
union  A678 { s m0; d m1; d m2; f m3; d m4; c m5; };
void f_cpA678(union  A678 *x, const union  A678 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA678(const union  A678 *x, const union  A678 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA678() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A678), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A678, m0), 1);
		dcStructField(st, 'd', offsetof(union  A678, m1), 1);
		dcStructField(st, 'd', offsetof(union  A678, m2), 1);
		dcStructField(st, 'f', offsetof(union  A678, m3), 1);
		dcStructField(st, 'd', offsetof(union  A678, m4), 1);
		dcStructField(st, 'c', offsetof(union  A678, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clf} */
struct A679 { c m0; l m1; f m2; };
void f_cpA679(struct A679 *x, const struct A679 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA679(const struct A679 *x, const struct A679 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA679() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A679), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A679, m0), 1);
		dcStructField(st, 'l', offsetof(struct A679, m1), 1);
		dcStructField(st, 'f', offsetof(struct A679, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<fcsidjljclsl>scfj<fplf>jdcc<sddfdc>dcs{clf}} */
struct A680 { union  A676 m0; s m1; c m2; f m3; j m4; union  A677 m5; j m6; d m7; c m8; c m9; union  A678 m10; d m11; c m12; s m13; struct A679 m14; };
void f_cpA680(struct A680 *x, const struct A680 *y) { f_cpA676(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA677(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA678(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA679(&x->m14, &y->m14); };
int f_cmpA680(const struct A680 *x, const struct A680 *y) { return f_cmpA676(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA677(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA678(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA679(&x->m14, &y->m14); };
DCstruct* f_touchdcstA680() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A680), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A680, m0), 1, f_touchdcstA676());
		dcStructField(st, 's', offsetof(struct A680, m1), 1);
		dcStructField(st, 'c', offsetof(struct A680, m2), 1);
		dcStructField(st, 'f', offsetof(struct A680, m3), 1);
		dcStructField(st, 'j', offsetof(struct A680, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A680, m5), 1, f_touchdcstA677());
		dcStructField(st, 'j', offsetof(struct A680, m6), 1);
		dcStructField(st, 'd', offsetof(struct A680, m7), 1);
		dcStructField(st, 'c', offsetof(struct A680, m8), 1);
		dcStructField(st, 'c', offsetof(struct A680, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A680, m10), 1, f_touchdcstA678());
		dcStructField(st, 'd', offsetof(struct A680, m11), 1);
		dcStructField(st, 'c', offsetof(struct A680, m12), 1);
		dcStructField(st, 's', offsetof(struct A680, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A680, m14), 1, f_touchdcstA679());
		dcCloseStruct(st);
	}
	return st;
};
/* {cld<sp>sjccli<jl<j>pj>iic{<fcsidjljclsl>scfj<fplf>jdcc<sddfdc>dcs{clf}}l} */
struct A681 { c m0; l m1; d m2; union  A674 m3; s m4; j m5; c m6; c m7; l m8; i m9; union  A675 m10; i m11; i m12; c m13; struct A680 m14; l m15; };
void f_cpA681(struct A681 *x, const struct A681 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA674(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA675(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA680(&x->m14, &y->m14); x->m15 = y->m15; };
int f_cmpA681(const struct A681 *x, const struct A681 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA674(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA675(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA680(&x->m14, &y->m14) && x->m15 == y->m15; };
DCstruct* f_touchdcstA681() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A681), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A681, m0), 1);
		dcStructField(st, 'l', offsetof(struct A681, m1), 1);
		dcStructField(st, 'd', offsetof(struct A681, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A681, m3), 1, f_touchdcstA674());
		dcStructField(st, 's', offsetof(struct A681, m4), 1);
		dcStructField(st, 'j', offsetof(struct A681, m5), 1);
		dcStructField(st, 'c', offsetof(struct A681, m6), 1);
		dcStructField(st, 'c', offsetof(struct A681, m7), 1);
		dcStructField(st, 'l', offsetof(struct A681, m8), 1);
		dcStructField(st, 'i', offsetof(struct A681, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A681, m10), 1, f_touchdcstA675());
		dcStructField(st, 'i', offsetof(struct A681, m11), 1);
		dcStructField(st, 'i', offsetof(struct A681, m12), 1);
		dcStructField(st, 'c', offsetof(struct A681, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A681, m14), 1, f_touchdcstA680());
		dcStructField(st, 'l', offsetof(struct A681, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clpsjssp} */
struct A682 { c m0; l m1; p m2; s m3; j m4; s m5; s m6; p m7; };
void f_cpA682(struct A682 *x, const struct A682 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA682(const struct A682 *x, const struct A682 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA682() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A682), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A682, m0), 1);
		dcStructField(st, 'l', offsetof(struct A682, m1), 1);
		dcStructField(st, 'p', offsetof(struct A682, m2), 1);
		dcStructField(st, 's', offsetof(struct A682, m3), 1);
		dcStructField(st, 'j', offsetof(struct A682, m4), 1);
		dcStructField(st, 's', offsetof(struct A682, m5), 1);
		dcStructField(st, 's', offsetof(struct A682, m6), 1);
		dcStructField(st, 'p', offsetof(struct A682, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcscsljccs> */
union  A683 { f m0; c m1; s m2; c m3; s m4; l m5; j m6; c m7; c m8; s m9; };
void f_cpA683(union  A683 *x, const union  A683 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA683(const union  A683 *x, const union  A683 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA683() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A683), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A683, m0), 1);
		dcStructField(st, 'c', offsetof(union  A683, m1), 1);
		dcStructField(st, 's', offsetof(union  A683, m2), 1);
		dcStructField(st, 'c', offsetof(union  A683, m3), 1);
		dcStructField(st, 's', offsetof(union  A683, m4), 1);
		dcStructField(st, 'l', offsetof(union  A683, m5), 1);
		dcStructField(st, 'j', offsetof(union  A683, m6), 1);
		dcStructField(st, 'c', offsetof(union  A683, m7), 1);
		dcStructField(st, 'c', offsetof(union  A683, m8), 1);
		dcStructField(st, 's', offsetof(union  A683, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pi> */
union  A684 { p m0; i m1; };
void f_cpA684(union  A684 *x, const union  A684 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA684(const union  A684 *x, const union  A684 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA684() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A684), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A684, m0), 1);
		dcStructField(st, 'i', offsetof(union  A684, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jcjlclssiifcf> */
union  A685 { j m0; c m1; j m2; l m3; c m4; l m5; s m6; s m7; i m8; i m9; f m10; c m11; f m12; };
void f_cpA685(union  A685 *x, const union  A685 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA685(const union  A685 *x, const union  A685 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA685() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A685), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A685, m0), 1);
		dcStructField(st, 'c', offsetof(union  A685, m1), 1);
		dcStructField(st, 'j', offsetof(union  A685, m2), 1);
		dcStructField(st, 'l', offsetof(union  A685, m3), 1);
		dcStructField(st, 'c', offsetof(union  A685, m4), 1);
		dcStructField(st, 'l', offsetof(union  A685, m5), 1);
		dcStructField(st, 's', offsetof(union  A685, m6), 1);
		dcStructField(st, 's', offsetof(union  A685, m7), 1);
		dcStructField(st, 'i', offsetof(union  A685, m8), 1);
		dcStructField(st, 'i', offsetof(union  A685, m9), 1);
		dcStructField(st, 'f', offsetof(union  A685, m10), 1);
		dcStructField(st, 'c', offsetof(union  A685, m11), 1);
		dcStructField(st, 'f', offsetof(union  A685, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dijclssil> */
union  A686 { d m0; i m1; j m2; c m3; l m4; s m5; s m6; i m7; l m8; };
void f_cpA686(union  A686 *x, const union  A686 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA686(const union  A686 *x, const union  A686 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA686() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A686), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A686, m0), 1);
		dcStructField(st, 'i', offsetof(union  A686, m1), 1);
		dcStructField(st, 'j', offsetof(union  A686, m2), 1);
		dcStructField(st, 'c', offsetof(union  A686, m3), 1);
		dcStructField(st, 'l', offsetof(union  A686, m4), 1);
		dcStructField(st, 's', offsetof(union  A686, m5), 1);
		dcStructField(st, 's', offsetof(union  A686, m6), 1);
		dcStructField(st, 'i', offsetof(union  A686, m7), 1);
		dcStructField(st, 'l', offsetof(union  A686, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcdid} */
struct A687 { d m0; c m1; d m2; i m3; d m4; };
void f_cpA687(struct A687 *x, const struct A687 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA687(const struct A687 *x, const struct A687 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA687() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A687), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A687, m0), 1);
		dcStructField(st, 'c', offsetof(struct A687, m1), 1);
		dcStructField(st, 'd', offsetof(struct A687, m2), 1);
		dcStructField(st, 'i', offsetof(struct A687, m3), 1);
		dcStructField(st, 'd', offsetof(struct A687, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sd} */
struct A688 { s m0; d m1; };
void f_cpA688(struct A688 *x, const struct A688 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA688(const struct A688 *x, const struct A688 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA688() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A688), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A688, m0), 1);
		dcStructField(st, 'd', offsetof(struct A688, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jiljffdlcjfciijipliipcsplsclcdc} */
struct A689 { j m0; i m1; l m2; j m3; f m4; f m5; d m6; l m7; c m8; j m9; f m10; c m11; i m12; i m13; j m14; i m15; p m16; l m17; i m18; i m19; p m20; c m21; s m22; p m23; l m24; s m25; c m26; l m27; c m28; d m29; c m30; };
void f_cpA689(struct A689 *x, const struct A689 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; };
int f_cmpA689(const struct A689 *x, const struct A689 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30; };
DCstruct* f_touchdcstA689() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(31, sizeof(struct A689), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A689, m0), 1);
		dcStructField(st, 'i', offsetof(struct A689, m1), 1);
		dcStructField(st, 'l', offsetof(struct A689, m2), 1);
		dcStructField(st, 'j', offsetof(struct A689, m3), 1);
		dcStructField(st, 'f', offsetof(struct A689, m4), 1);
		dcStructField(st, 'f', offsetof(struct A689, m5), 1);
		dcStructField(st, 'd', offsetof(struct A689, m6), 1);
		dcStructField(st, 'l', offsetof(struct A689, m7), 1);
		dcStructField(st, 'c', offsetof(struct A689, m8), 1);
		dcStructField(st, 'j', offsetof(struct A689, m9), 1);
		dcStructField(st, 'f', offsetof(struct A689, m10), 1);
		dcStructField(st, 'c', offsetof(struct A689, m11), 1);
		dcStructField(st, 'i', offsetof(struct A689, m12), 1);
		dcStructField(st, 'i', offsetof(struct A689, m13), 1);
		dcStructField(st, 'j', offsetof(struct A689, m14), 1);
		dcStructField(st, 'i', offsetof(struct A689, m15), 1);
		dcStructField(st, 'p', offsetof(struct A689, m16), 1);
		dcStructField(st, 'l', offsetof(struct A689, m17), 1);
		dcStructField(st, 'i', offsetof(struct A689, m18), 1);
		dcStructField(st, 'i', offsetof(struct A689, m19), 1);
		dcStructField(st, 'p', offsetof(struct A689, m20), 1);
		dcStructField(st, 'c', offsetof(struct A689, m21), 1);
		dcStructField(st, 's', offsetof(struct A689, m22), 1);
		dcStructField(st, 'p', offsetof(struct A689, m23), 1);
		dcStructField(st, 'l', offsetof(struct A689, m24), 1);
		dcStructField(st, 's', offsetof(struct A689, m25), 1);
		dcStructField(st, 'c', offsetof(struct A689, m26), 1);
		dcStructField(st, 'l', offsetof(struct A689, m27), 1);
		dcStructField(st, 'c', offsetof(struct A689, m28), 1);
		dcStructField(st, 'd', offsetof(struct A689, m29), 1);
		dcStructField(st, 'c', offsetof(struct A689, m30), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {liccsj} */
struct A690 { l m0; i m1; c m2; c m3; s m4; j m5; };
void f_cpA690(struct A690 *x, const struct A690 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA690(const struct A690 *x, const struct A690 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA690() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A690), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A690, m0), 1);
		dcStructField(st, 'i', offsetof(struct A690, m1), 1);
		dcStructField(st, 'c', offsetof(struct A690, m2), 1);
		dcStructField(st, 'c', offsetof(struct A690, m3), 1);
		dcStructField(st, 's', offsetof(struct A690, m4), 1);
		dcStructField(st, 'j', offsetof(struct A690, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jiilissfcsfdilppdccjlilplliplsfls} */
struct A691 { j m0; i m1; i m2; l m3; i m4; s m5; s m6; f m7; c m8; s m9; f m10; d m11; i m12; l m13; p m14; p m15; d m16; c m17; c m18; j m19; l m20; i m21; l m22; p m23; l m24; l m25; i m26; p m27; l m28; s m29; f m30; l m31; s m32; };
void f_cpA691(struct A691 *x, const struct A691 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; };
int f_cmpA691(const struct A691 *x, const struct A691 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32; };
DCstruct* f_touchdcstA691() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(33, sizeof(struct A691), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A691, m0), 1);
		dcStructField(st, 'i', offsetof(struct A691, m1), 1);
		dcStructField(st, 'i', offsetof(struct A691, m2), 1);
		dcStructField(st, 'l', offsetof(struct A691, m3), 1);
		dcStructField(st, 'i', offsetof(struct A691, m4), 1);
		dcStructField(st, 's', offsetof(struct A691, m5), 1);
		dcStructField(st, 's', offsetof(struct A691, m6), 1);
		dcStructField(st, 'f', offsetof(struct A691, m7), 1);
		dcStructField(st, 'c', offsetof(struct A691, m8), 1);
		dcStructField(st, 's', offsetof(struct A691, m9), 1);
		dcStructField(st, 'f', offsetof(struct A691, m10), 1);
		dcStructField(st, 'd', offsetof(struct A691, m11), 1);
		dcStructField(st, 'i', offsetof(struct A691, m12), 1);
		dcStructField(st, 'l', offsetof(struct A691, m13), 1);
		dcStructField(st, 'p', offsetof(struct A691, m14), 1);
		dcStructField(st, 'p', offsetof(struct A691, m15), 1);
		dcStructField(st, 'd', offsetof(struct A691, m16), 1);
		dcStructField(st, 'c', offsetof(struct A691, m17), 1);
		dcStructField(st, 'c', offsetof(struct A691, m18), 1);
		dcStructField(st, 'j', offsetof(struct A691, m19), 1);
		dcStructField(st, 'l', offsetof(struct A691, m20), 1);
		dcStructField(st, 'i', offsetof(struct A691, m21), 1);
		dcStructField(st, 'l', offsetof(struct A691, m22), 1);
		dcStructField(st, 'p', offsetof(struct A691, m23), 1);
		dcStructField(st, 'l', offsetof(struct A691, m24), 1);
		dcStructField(st, 'l', offsetof(struct A691, m25), 1);
		dcStructField(st, 'i', offsetof(struct A691, m26), 1);
		dcStructField(st, 'p', offsetof(struct A691, m27), 1);
		dcStructField(st, 'l', offsetof(struct A691, m28), 1);
		dcStructField(st, 's', offsetof(struct A691, m29), 1);
		dcStructField(st, 'f', offsetof(struct A691, m30), 1);
		dcStructField(st, 'l', offsetof(struct A691, m31), 1);
		dcStructField(st, 's', offsetof(struct A691, m32), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <spjf> */
union  A692 { s m0; p m1; j m2; f m3; };
void f_cpA692(union  A692 *x, const union  A692 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA692(const union  A692 *x, const union  A692 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA692() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A692), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A692, m0), 1);
		dcStructField(st, 'p', offsetof(union  A692, m1), 1);
		dcStructField(st, 'j', offsetof(union  A692, m2), 1);
		dcStructField(st, 'f', offsetof(union  A692, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcicjdpd> */
union  A693 { d m0; c m1; i m2; c m3; j m4; d m5; p m6; d m7; };
void f_cpA693(union  A693 *x, const union  A693 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA693(const union  A693 *x, const union  A693 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA693() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A693), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A693, m0), 1);
		dcStructField(st, 'c', offsetof(union  A693, m1), 1);
		dcStructField(st, 'i', offsetof(union  A693, m2), 1);
		dcStructField(st, 'c', offsetof(union  A693, m3), 1);
		dcStructField(st, 'j', offsetof(union  A693, m4), 1);
		dcStructField(st, 'd', offsetof(union  A693, m5), 1);
		dcStructField(st, 'p', offsetof(union  A693, m6), 1);
		dcStructField(st, 'd', offsetof(union  A693, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{dcdid}f{sd}lfsldcs<p>jff{jiljffdlcjfciijipliipcsplsclcdc}jidf{liccsj}s{jiilissfcsfdilppdccjlilplliplsfls}pijfj<spjf><dcicjdpd>i<pd>sijj} */
struct A694 { struct A687 m0; f m1; struct A688 m2; l m3; f m4; s m5; l m6; d m7; c m8; s m9; union  A161 m10; j m11; f m12; f m13; struct A689 m14; j m15; i m16; d m17; f m18; struct A690 m19; s m20; struct A691 m21; p m22; i m23; j m24; f m25; j m26; union  A692 m27; union  A693 m28; i m29; union  A598 m30; s m31; i m32; j m33; j m34; };
void f_cpA694(struct A694 *x, const struct A694 *y) { f_cpA687(&x->m0, &y->m0); x->m1 = y->m1; f_cpA688(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA161(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA689(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA690(&x->m19, &y->m19); x->m20 = y->m20; f_cpA691(&x->m21, &y->m21); x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; f_cpA692(&x->m27, &y->m27); f_cpA693(&x->m28, &y->m28); x->m29 = y->m29; f_cpA598(&x->m30, &y->m30); x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; };
int f_cmpA694(const struct A694 *x, const struct A694 *y) { return f_cmpA687(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA688(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA161(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA689(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA690(&x->m19, &y->m19) && x->m20 == y->m20 && f_cmpA691(&x->m21, &y->m21) && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && f_cmpA692(&x->m27, &y->m27) && f_cmpA693(&x->m28, &y->m28) && x->m29 == y->m29 && f_cmpA598(&x->m30, &y->m30) && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34; };
DCstruct* f_touchdcstA694() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(35, sizeof(struct A694), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m0), 1, f_touchdcstA687());
		dcStructField(st, 'f', offsetof(struct A694, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m2), 1, f_touchdcstA688());
		dcStructField(st, 'l', offsetof(struct A694, m3), 1);
		dcStructField(st, 'f', offsetof(struct A694, m4), 1);
		dcStructField(st, 's', offsetof(struct A694, m5), 1);
		dcStructField(st, 'l', offsetof(struct A694, m6), 1);
		dcStructField(st, 'd', offsetof(struct A694, m7), 1);
		dcStructField(st, 'c', offsetof(struct A694, m8), 1);
		dcStructField(st, 's', offsetof(struct A694, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m10), 1, f_touchdcstA161());
		dcStructField(st, 'j', offsetof(struct A694, m11), 1);
		dcStructField(st, 'f', offsetof(struct A694, m12), 1);
		dcStructField(st, 'f', offsetof(struct A694, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m14), 1, f_touchdcstA689());
		dcStructField(st, 'j', offsetof(struct A694, m15), 1);
		dcStructField(st, 'i', offsetof(struct A694, m16), 1);
		dcStructField(st, 'd', offsetof(struct A694, m17), 1);
		dcStructField(st, 'f', offsetof(struct A694, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m19), 1, f_touchdcstA690());
		dcStructField(st, 's', offsetof(struct A694, m20), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m21), 1, f_touchdcstA691());
		dcStructField(st, 'p', offsetof(struct A694, m22), 1);
		dcStructField(st, 'i', offsetof(struct A694, m23), 1);
		dcStructField(st, 'j', offsetof(struct A694, m24), 1);
		dcStructField(st, 'f', offsetof(struct A694, m25), 1);
		dcStructField(st, 'j', offsetof(struct A694, m26), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m27), 1, f_touchdcstA692());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m28), 1, f_touchdcstA693());
		dcStructField(st, 'i', offsetof(struct A694, m29), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A694, m30), 1, f_touchdcstA598());
		dcStructField(st, 's', offsetof(struct A694, m31), 1);
		dcStructField(st, 'i', offsetof(struct A694, m32), 1);
		dcStructField(st, 'j', offsetof(struct A694, m33), 1);
		dcStructField(st, 'j', offsetof(struct A694, m34), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fp{{dcdid}f{sd}lfsldcs<p>jff{jiljffdlcjfciijipliipcsplsclcdc}jidf{liccsj}s{jiilissfcsfdilppdccjlilplliplsfls}pijfj<spjf><dcicjdpd>i<pd>sijj}pjjspjl> */
union  A695 { f m0; p m1; struct A694 m2; p m3; j m4; j m5; s m6; p m7; j m8; l m9; };
void f_cpA695(union  A695 *x, const union  A695 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA694(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA695(const union  A695 *x, const union  A695 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA694(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA695() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A695), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A695, m0), 1);
		dcStructField(st, 'p', offsetof(union  A695, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A695, m2), 1, f_touchdcstA694());
		dcStructField(st, 'p', offsetof(union  A695, m3), 1);
		dcStructField(st, 'j', offsetof(union  A695, m4), 1);
		dcStructField(st, 'j', offsetof(union  A695, m5), 1);
		dcStructField(st, 's', offsetof(union  A695, m6), 1);
		dcStructField(st, 'p', offsetof(union  A695, m7), 1);
		dcStructField(st, 'j', offsetof(union  A695, m8), 1);
		dcStructField(st, 'l', offsetof(union  A695, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddfdjjpspf} */
struct A696 { d m0; d m1; f m2; d m3; j m4; j m5; p m6; s m7; p m8; f m9; };
void f_cpA696(struct A696 *x, const struct A696 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA696(const struct A696 *x, const struct A696 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA696() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A696), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A696, m0), 1);
		dcStructField(st, 'd', offsetof(struct A696, m1), 1);
		dcStructField(st, 'f', offsetof(struct A696, m2), 1);
		dcStructField(st, 'd', offsetof(struct A696, m3), 1);
		dcStructField(st, 'j', offsetof(struct A696, m4), 1);
		dcStructField(st, 'j', offsetof(struct A696, m5), 1);
		dcStructField(st, 'p', offsetof(struct A696, m6), 1);
		dcStructField(st, 's', offsetof(struct A696, m7), 1);
		dcStructField(st, 'p', offsetof(struct A696, m8), 1);
		dcStructField(st, 'f', offsetof(struct A696, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjis} */
struct A697 { p m0; j m1; i m2; s m3; };
void f_cpA697(struct A697 *x, const struct A697 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA697(const struct A697 *x, const struct A697 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA697() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A697), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A697, m0), 1);
		dcStructField(st, 'j', offsetof(struct A697, m1), 1);
		dcStructField(st, 'i', offsetof(struct A697, m2), 1);
		dcStructField(st, 's', offsetof(struct A697, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdsiflijdcdpcpisipcjsd> */
union  A698 { c m0; d m1; s m2; i m3; f m4; l m5; i m6; j m7; d m8; c m9; d m10; p m11; c m12; p m13; i m14; s m15; i m16; p m17; c m18; j m19; s m20; d m21; };
void f_cpA698(union  A698 *x, const union  A698 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA698(const union  A698 *x, const union  A698 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA698() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(union  A698), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A698, m0), 1);
		dcStructField(st, 'd', offsetof(union  A698, m1), 1);
		dcStructField(st, 's', offsetof(union  A698, m2), 1);
		dcStructField(st, 'i', offsetof(union  A698, m3), 1);
		dcStructField(st, 'f', offsetof(union  A698, m4), 1);
		dcStructField(st, 'l', offsetof(union  A698, m5), 1);
		dcStructField(st, 'i', offsetof(union  A698, m6), 1);
		dcStructField(st, 'j', offsetof(union  A698, m7), 1);
		dcStructField(st, 'd', offsetof(union  A698, m8), 1);
		dcStructField(st, 'c', offsetof(union  A698, m9), 1);
		dcStructField(st, 'd', offsetof(union  A698, m10), 1);
		dcStructField(st, 'p', offsetof(union  A698, m11), 1);
		dcStructField(st, 'c', offsetof(union  A698, m12), 1);
		dcStructField(st, 'p', offsetof(union  A698, m13), 1);
		dcStructField(st, 'i', offsetof(union  A698, m14), 1);
		dcStructField(st, 's', offsetof(union  A698, m15), 1);
		dcStructField(st, 'i', offsetof(union  A698, m16), 1);
		dcStructField(st, 'p', offsetof(union  A698, m17), 1);
		dcStructField(st, 'c', offsetof(union  A698, m18), 1);
		dcStructField(st, 'j', offsetof(union  A698, m19), 1);
		dcStructField(st, 's', offsetof(union  A698, m20), 1);
		dcStructField(st, 'd', offsetof(union  A698, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l<cdsiflijdcdpcpisipcjsd>f} */
struct A699 { l m0; union  A698 m1; f m2; };
void f_cpA699(struct A699 *x, const struct A699 *y) { x->m0 = y->m0; f_cpA698(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA699(const struct A699 *x, const struct A699 *y) { return x->m0 == y->m0 && f_cmpA698(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA699() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A699), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A699, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A699, m1), 1, f_touchdcstA698());
		dcStructField(st, 'f', offsetof(struct A699, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sj> */
union  A700 { s m0; j m1; };
void f_cpA700(union  A700 *x, const union  A700 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA700(const union  A700 *x, const union  A700 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA700() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A700), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A700, m0), 1);
		dcStructField(st, 'j', offsetof(union  A700, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ff} */
struct A701 { f m0; f m1; };
void f_cpA701(struct A701 *x, const struct A701 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA701(const struct A701 *x, const struct A701 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA701() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A701), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A701, m0), 1);
		dcStructField(st, 'f', offsetof(struct A701, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djs{ff}j} */
struct A702 { d m0; j m1; s m2; struct A701 m3; j m4; };
void f_cpA702(struct A702 *x, const struct A702 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA701(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA702(const struct A702 *x, const struct A702 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA701(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA702() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A702), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A702, m0), 1);
		dcStructField(st, 'j', offsetof(struct A702, m1), 1);
		dcStructField(st, 's', offsetof(struct A702, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A702, m3), 1, f_touchdcstA701());
		dcStructField(st, 'j', offsetof(struct A702, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idipfcssf} */
struct A703 { i m0; d m1; i m2; p m3; f m4; c m5; s m6; s m7; f m8; };
void f_cpA703(struct A703 *x, const struct A703 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA703(const struct A703 *x, const struct A703 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA703() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A703), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A703, m0), 1);
		dcStructField(st, 'd', offsetof(struct A703, m1), 1);
		dcStructField(st, 'i', offsetof(struct A703, m2), 1);
		dcStructField(st, 'p', offsetof(struct A703, m3), 1);
		dcStructField(st, 'f', offsetof(struct A703, m4), 1);
		dcStructField(st, 'c', offsetof(struct A703, m5), 1);
		dcStructField(st, 's', offsetof(struct A703, m6), 1);
		dcStructField(st, 's', offsetof(struct A703, m7), 1);
		dcStructField(st, 'f', offsetof(struct A703, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jcpspi> */
union  A704 { j m0; c m1; p m2; s m3; p m4; i m5; };
void f_cpA704(union  A704 *x, const union  A704 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA704(const union  A704 *x, const union  A704 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA704() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A704), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A704, m0), 1);
		dcStructField(st, 'c', offsetof(union  A704, m1), 1);
		dcStructField(st, 'p', offsetof(union  A704, m2), 1);
		dcStructField(st, 's', offsetof(union  A704, m3), 1);
		dcStructField(st, 'p', offsetof(union  A704, m4), 1);
		dcStructField(st, 'i', offsetof(union  A704, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lcclci> */
union  A705 { l m0; c m1; c m2; l m3; c m4; i m5; };
void f_cpA705(union  A705 *x, const union  A705 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA705(const union  A705 *x, const union  A705 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA705() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A705), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A705, m0), 1);
		dcStructField(st, 'c', offsetof(union  A705, m1), 1);
		dcStructField(st, 'c', offsetof(union  A705, m2), 1);
		dcStructField(st, 'l', offsetof(union  A705, m3), 1);
		dcStructField(st, 'c', offsetof(union  A705, m4), 1);
		dcStructField(st, 'i', offsetof(union  A705, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ii} */
struct A706 { i m0; i m1; };
void f_cpA706(struct A706 *x, const struct A706 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA706(const struct A706 *x, const struct A706 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA706() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A706), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A706, m0), 1);
		dcStructField(st, 'i', offsetof(struct A706, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcji} */
struct A707 { f m0; c m1; j m2; i m3; };
void f_cpA707(struct A707 *x, const struct A707 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA707(const struct A707 *x, const struct A707 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA707() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A707), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A707, m0), 1);
		dcStructField(st, 'c', offsetof(struct A707, m1), 1);
		dcStructField(st, 'j', offsetof(struct A707, m2), 1);
		dcStructField(st, 'i', offsetof(struct A707, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<jcpspi>pd<lcclci>{ii}cpscj{fcji}{s}p> */
union  A708 { union  A704 m0; p m1; d m2; union  A705 m3; struct A706 m4; c m5; p m6; s m7; c m8; j m9; struct A707 m10; struct A4 m11; p m12; };
void f_cpA708(union  A708 *x, const union  A708 *y) { f_cpA704(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA705(&x->m3, &y->m3); f_cpA706(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA707(&x->m10, &y->m10); f_cpA4(&x->m11, &y->m11); x->m12 = y->m12; };
int f_cmpA708(const union  A708 *x, const union  A708 *y) { return f_cmpA704(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA705(&x->m3, &y->m3) && f_cmpA706(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA707(&x->m10, &y->m10) && f_cmpA4(&x->m11, &y->m11) && x->m12 == y->m12; };
DCstruct* f_touchdcstA708() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A708), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A708, m0), 1, f_touchdcstA704());
		dcStructField(st, 'p', offsetof(union  A708, m1), 1);
		dcStructField(st, 'd', offsetof(union  A708, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A708, m3), 1, f_touchdcstA705());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A708, m4), 1, f_touchdcstA706());
		dcStructField(st, 'c', offsetof(union  A708, m5), 1);
		dcStructField(st, 'p', offsetof(union  A708, m6), 1);
		dcStructField(st, 's', offsetof(union  A708, m7), 1);
		dcStructField(st, 'c', offsetof(union  A708, m8), 1);
		dcStructField(st, 'j', offsetof(union  A708, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A708, m10), 1, f_touchdcstA707());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A708, m11), 1, f_touchdcstA4());
		dcStructField(st, 'p', offsetof(union  A708, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ilslji> */
union  A709 { i m0; l m1; s m2; l m3; j m4; i m5; };
void f_cpA709(union  A709 *x, const union  A709 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA709(const union  A709 *x, const union  A709 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA709() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A709), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A709, m0), 1);
		dcStructField(st, 'l', offsetof(union  A709, m1), 1);
		dcStructField(st, 's', offsetof(union  A709, m2), 1);
		dcStructField(st, 'l', offsetof(union  A709, m3), 1);
		dcStructField(st, 'j', offsetof(union  A709, m4), 1);
		dcStructField(st, 'i', offsetof(union  A709, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ip<ilslji>s} */
struct A710 { i m0; p m1; union  A709 m2; s m3; };
void f_cpA710(struct A710 *x, const struct A710 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA709(&x->m2, &y->m2); x->m3 = y->m3; };
int f_cmpA710(const struct A710 *x, const struct A710 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA709(&x->m2, &y->m2) && x->m3 == y->m3; };
DCstruct* f_touchdcstA710() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A710), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A710, m0), 1);
		dcStructField(st, 'p', offsetof(struct A710, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A710, m2), 1, f_touchdcstA709());
		dcStructField(st, 's', offsetof(struct A710, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfif} */
struct A711 { l m0; f m1; i m2; f m3; };
void f_cpA711(struct A711 *x, const struct A711 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA711(const struct A711 *x, const struct A711 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA711() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A711), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A711, m0), 1);
		dcStructField(st, 'f', offsetof(struct A711, m1), 1);
		dcStructField(st, 'i', offsetof(struct A711, m2), 1);
		dcStructField(st, 'f', offsetof(struct A711, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifl} */
struct A712 { i m0; f m1; l m2; };
void f_cpA712(struct A712 *x, const struct A712 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA712(const struct A712 *x, const struct A712 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA712() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A712), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A712, m0), 1);
		dcStructField(st, 'f', offsetof(struct A712, m1), 1);
		dcStructField(st, 'l', offsetof(struct A712, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fjj> */
union  A713 { f m0; j m1; j m2; };
void f_cpA713(union  A713 *x, const union  A713 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA713(const union  A713 *x, const union  A713 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA713() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A713), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A713, m0), 1);
		dcStructField(st, 'j', offsetof(union  A713, m1), 1);
		dcStructField(st, 'j', offsetof(union  A713, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djjj> */
union  A714 { d m0; j m1; j m2; j m3; };
void f_cpA714(union  A714 *x, const union  A714 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA714(const union  A714 *x, const union  A714 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA714() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A714), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A714, m0), 1);
		dcStructField(st, 'j', offsetof(union  A714, m1), 1);
		dcStructField(st, 'j', offsetof(union  A714, m2), 1);
		dcStructField(st, 'j', offsetof(union  A714, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfdci> */
union  A715 { p m0; f m1; d m2; c m3; i m4; };
void f_cpA715(union  A715 *x, const union  A715 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA715(const union  A715 *x, const union  A715 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA715() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A715), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A715, m0), 1);
		dcStructField(st, 'f', offsetof(union  A715, m1), 1);
		dcStructField(st, 'd', offsetof(union  A715, m2), 1);
		dcStructField(st, 'c', offsetof(union  A715, m3), 1);
		dcStructField(st, 'i', offsetof(union  A715, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iijsjddldffisp} */
struct A716 { i m0; i m1; j m2; s m3; j m4; d m5; d m6; l m7; d m8; f m9; f m10; i m11; s m12; p m13; };
void f_cpA716(struct A716 *x, const struct A716 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA716(const struct A716 *x, const struct A716 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA716() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A716), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A716, m0), 1);
		dcStructField(st, 'i', offsetof(struct A716, m1), 1);
		dcStructField(st, 'j', offsetof(struct A716, m2), 1);
		dcStructField(st, 's', offsetof(struct A716, m3), 1);
		dcStructField(st, 'j', offsetof(struct A716, m4), 1);
		dcStructField(st, 'd', offsetof(struct A716, m5), 1);
		dcStructField(st, 'd', offsetof(struct A716, m6), 1);
		dcStructField(st, 'l', offsetof(struct A716, m7), 1);
		dcStructField(st, 'd', offsetof(struct A716, m8), 1);
		dcStructField(st, 'f', offsetof(struct A716, m9), 1);
		dcStructField(st, 'f', offsetof(struct A716, m10), 1);
		dcStructField(st, 'i', offsetof(struct A716, m11), 1);
		dcStructField(st, 's', offsetof(struct A716, m12), 1);
		dcStructField(st, 'p', offsetof(struct A716, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<p>{ld}{lfif}d{ifl}pff<fjj>sdd<djjj><pfdci>{iijsjddldffisp}p} */
struct A717 { union  A161 m0; struct A455 m1; struct A711 m2; d m3; struct A712 m4; p m5; f m6; f m7; union  A713 m8; s m9; d m10; d m11; union  A714 m12; union  A715 m13; struct A716 m14; p m15; };
void f_cpA717(struct A717 *x, const struct A717 *y) { f_cpA161(&x->m0, &y->m0); f_cpA455(&x->m1, &y->m1); f_cpA711(&x->m2, &y->m2); x->m3 = y->m3; f_cpA712(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA713(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA714(&x->m12, &y->m12); f_cpA715(&x->m13, &y->m13); f_cpA716(&x->m14, &y->m14); x->m15 = y->m15; };
int f_cmpA717(const struct A717 *x, const struct A717 *y) { return f_cmpA161(&x->m0, &y->m0) && f_cmpA455(&x->m1, &y->m1) && f_cmpA711(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA712(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA713(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA714(&x->m12, &y->m12) && f_cmpA715(&x->m13, &y->m13) && f_cmpA716(&x->m14, &y->m14) && x->m15 == y->m15; };
DCstruct* f_touchdcstA717() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A717), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m0), 1, f_touchdcstA161());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m1), 1, f_touchdcstA455());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m2), 1, f_touchdcstA711());
		dcStructField(st, 'd', offsetof(struct A717, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m4), 1, f_touchdcstA712());
		dcStructField(st, 'p', offsetof(struct A717, m5), 1);
		dcStructField(st, 'f', offsetof(struct A717, m6), 1);
		dcStructField(st, 'f', offsetof(struct A717, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m8), 1, f_touchdcstA713());
		dcStructField(st, 's', offsetof(struct A717, m9), 1);
		dcStructField(st, 'd', offsetof(struct A717, m10), 1);
		dcStructField(st, 'd', offsetof(struct A717, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m12), 1, f_touchdcstA714());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m13), 1, f_touchdcstA715());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A717, m14), 1, f_touchdcstA716());
		dcStructField(st, 'p', offsetof(struct A717, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljcsdsljc> */
union  A718 { l m0; j m1; c m2; s m3; d m4; s m5; l m6; j m7; c m8; };
void f_cpA718(union  A718 *x, const union  A718 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA718(const union  A718 *x, const union  A718 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA718() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A718), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A718, m0), 1);
		dcStructField(st, 'j', offsetof(union  A718, m1), 1);
		dcStructField(st, 'c', offsetof(union  A718, m2), 1);
		dcStructField(st, 's', offsetof(union  A718, m3), 1);
		dcStructField(st, 'd', offsetof(union  A718, m4), 1);
		dcStructField(st, 's', offsetof(union  A718, m5), 1);
		dcStructField(st, 'l', offsetof(union  A718, m6), 1);
		dcStructField(st, 'j', offsetof(union  A718, m7), 1);
		dcStructField(st, 'c', offsetof(union  A718, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dsffslpp> */
union  A719 { d m0; s m1; f m2; f m3; s m4; l m5; p m6; p m7; };
void f_cpA719(union  A719 *x, const union  A719 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA719(const union  A719 *x, const union  A719 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA719() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A719), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A719, m0), 1);
		dcStructField(st, 's', offsetof(union  A719, m1), 1);
		dcStructField(st, 'f', offsetof(union  A719, m2), 1);
		dcStructField(st, 'f', offsetof(union  A719, m3), 1);
		dcStructField(st, 's', offsetof(union  A719, m4), 1);
		dcStructField(st, 'l', offsetof(union  A719, m5), 1);
		dcStructField(st, 'p', offsetof(union  A719, m6), 1);
		dcStructField(st, 'p', offsetof(union  A719, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfj<dsffslpp>dffp<f>fdl} */
struct A720 { d m0; f m1; j m2; union  A719 m3; d m4; f m5; f m6; p m7; union  A189 m8; f m9; d m10; l m11; };
void f_cpA720(struct A720 *x, const struct A720 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA719(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA189(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA720(const struct A720 *x, const struct A720 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA719(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA189(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA720() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A720), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A720, m0), 1);
		dcStructField(st, 'f', offsetof(struct A720, m1), 1);
		dcStructField(st, 'j', offsetof(struct A720, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A720, m3), 1, f_touchdcstA719());
		dcStructField(st, 'd', offsetof(struct A720, m4), 1);
		dcStructField(st, 'f', offsetof(struct A720, m5), 1);
		dcStructField(st, 'f', offsetof(struct A720, m6), 1);
		dcStructField(st, 'p', offsetof(struct A720, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A720, m8), 1, f_touchdcstA189());
		dcStructField(st, 'f', offsetof(struct A720, m9), 1);
		dcStructField(st, 'd', offsetof(struct A720, m10), 1);
		dcStructField(st, 'l', offsetof(struct A720, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfj} */
struct A721 { j m0; f m1; j m2; };
void f_cpA721(struct A721 *x, const struct A721 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA721(const struct A721 *x, const struct A721 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA721() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A721), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A721, m0), 1);
		dcStructField(st, 'f', offsetof(struct A721, m1), 1);
		dcStructField(st, 'j', offsetof(struct A721, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slccd{ip<ilslji>s}pc{<p>{ld}{lfif}d{ifl}pff<fjj>sdd<djjj><pfdci>{iijsjddldffisp}p}spdfjdssf<ljcsdsljc>{dfj<dsffslpp>dffp<f>fdl}{jfj}} */
struct A722 { s m0; l m1; c m2; c m3; d m4; struct A710 m5; p m6; c m7; struct A717 m8; s m9; p m10; d m11; f m12; j m13; d m14; s m15; s m16; f m17; union  A718 m18; struct A720 m19; struct A721 m20; };
void f_cpA722(struct A722 *x, const struct A722 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA710(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; f_cpA717(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA718(&x->m18, &y->m18); f_cpA720(&x->m19, &y->m19); f_cpA721(&x->m20, &y->m20); };
int f_cmpA722(const struct A722 *x, const struct A722 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA710(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA717(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA718(&x->m18, &y->m18) && f_cmpA720(&x->m19, &y->m19) && f_cmpA721(&x->m20, &y->m20); };
DCstruct* f_touchdcstA722() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A722), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A722, m0), 1);
		dcStructField(st, 'l', offsetof(struct A722, m1), 1);
		dcStructField(st, 'c', offsetof(struct A722, m2), 1);
		dcStructField(st, 'c', offsetof(struct A722, m3), 1);
		dcStructField(st, 'd', offsetof(struct A722, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A722, m5), 1, f_touchdcstA710());
		dcStructField(st, 'p', offsetof(struct A722, m6), 1);
		dcStructField(st, 'c', offsetof(struct A722, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A722, m8), 1, f_touchdcstA717());
		dcStructField(st, 's', offsetof(struct A722, m9), 1);
		dcStructField(st, 'p', offsetof(struct A722, m10), 1);
		dcStructField(st, 'd', offsetof(struct A722, m11), 1);
		dcStructField(st, 'f', offsetof(struct A722, m12), 1);
		dcStructField(st, 'j', offsetof(struct A722, m13), 1);
		dcStructField(st, 'd', offsetof(struct A722, m14), 1);
		dcStructField(st, 's', offsetof(struct A722, m15), 1);
		dcStructField(st, 's', offsetof(struct A722, m16), 1);
		dcStructField(st, 'f', offsetof(struct A722, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A722, m18), 1, f_touchdcstA718());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A722, m19), 1, f_touchdcstA720());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A722, m20), 1, f_touchdcstA721());
		dcCloseStruct(st);
	}
	return st;
};
/* {pcjpjilf<d>dpsjp} */
struct A723 { p m0; c m1; j m2; p m3; j m4; i m5; l m6; f m7; union  A94 m8; d m9; p m10; s m11; j m12; p m13; };
void f_cpA723(struct A723 *x, const struct A723 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA94(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA723(const struct A723 *x, const struct A723 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA94(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA723() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A723), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A723, m0), 1);
		dcStructField(st, 'c', offsetof(struct A723, m1), 1);
		dcStructField(st, 'j', offsetof(struct A723, m2), 1);
		dcStructField(st, 'p', offsetof(struct A723, m3), 1);
		dcStructField(st, 'j', offsetof(struct A723, m4), 1);
		dcStructField(st, 'i', offsetof(struct A723, m5), 1);
		dcStructField(st, 'l', offsetof(struct A723, m6), 1);
		dcStructField(st, 'f', offsetof(struct A723, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A723, m8), 1, f_touchdcstA94());
		dcStructField(st, 'd', offsetof(struct A723, m9), 1);
		dcStructField(st, 'p', offsetof(struct A723, m10), 1);
		dcStructField(st, 's', offsetof(struct A723, m11), 1);
		dcStructField(st, 'j', offsetof(struct A723, m12), 1);
		dcStructField(st, 'p', offsetof(struct A723, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljiildcdcsliijclfsdccjdjilpsssliffl> */
union  A724 { l m0; j m1; i m2; i m3; l m4; d m5; c m6; d m7; c m8; s m9; l m10; i m11; i m12; j m13; c m14; l m15; f m16; s m17; d m18; c m19; c m20; j m21; d m22; j m23; i m24; l m25; p m26; s m27; s m28; s m29; l m30; i m31; f m32; f m33; l m34; };
void f_cpA724(union  A724 *x, const union  A724 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; };
int f_cmpA724(const union  A724 *x, const union  A724 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34; };
DCstruct* f_touchdcstA724() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(35, sizeof(union  A724), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A724, m0), 1);
		dcStructField(st, 'j', offsetof(union  A724, m1), 1);
		dcStructField(st, 'i', offsetof(union  A724, m2), 1);
		dcStructField(st, 'i', offsetof(union  A724, m3), 1);
		dcStructField(st, 'l', offsetof(union  A724, m4), 1);
		dcStructField(st, 'd', offsetof(union  A724, m5), 1);
		dcStructField(st, 'c', offsetof(union  A724, m6), 1);
		dcStructField(st, 'd', offsetof(union  A724, m7), 1);
		dcStructField(st, 'c', offsetof(union  A724, m8), 1);
		dcStructField(st, 's', offsetof(union  A724, m9), 1);
		dcStructField(st, 'l', offsetof(union  A724, m10), 1);
		dcStructField(st, 'i', offsetof(union  A724, m11), 1);
		dcStructField(st, 'i', offsetof(union  A724, m12), 1);
		dcStructField(st, 'j', offsetof(union  A724, m13), 1);
		dcStructField(st, 'c', offsetof(union  A724, m14), 1);
		dcStructField(st, 'l', offsetof(union  A724, m15), 1);
		dcStructField(st, 'f', offsetof(union  A724, m16), 1);
		dcStructField(st, 's', offsetof(union  A724, m17), 1);
		dcStructField(st, 'd', offsetof(union  A724, m18), 1);
		dcStructField(st, 'c', offsetof(union  A724, m19), 1);
		dcStructField(st, 'c', offsetof(union  A724, m20), 1);
		dcStructField(st, 'j', offsetof(union  A724, m21), 1);
		dcStructField(st, 'd', offsetof(union  A724, m22), 1);
		dcStructField(st, 'j', offsetof(union  A724, m23), 1);
		dcStructField(st, 'i', offsetof(union  A724, m24), 1);
		dcStructField(st, 'l', offsetof(union  A724, m25), 1);
		dcStructField(st, 'p', offsetof(union  A724, m26), 1);
		dcStructField(st, 's', offsetof(union  A724, m27), 1);
		dcStructField(st, 's', offsetof(union  A724, m28), 1);
		dcStructField(st, 's', offsetof(union  A724, m29), 1);
		dcStructField(st, 'l', offsetof(union  A724, m30), 1);
		dcStructField(st, 'i', offsetof(union  A724, m31), 1);
		dcStructField(st, 'f', offsetof(union  A724, m32), 1);
		dcStructField(st, 'f', offsetof(union  A724, m33), 1);
		dcStructField(st, 'l', offsetof(union  A724, m34), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jppscj} */
struct A725 { j m0; p m1; p m2; s m3; c m4; j m5; };
void f_cpA725(struct A725 *x, const struct A725 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA725(const struct A725 *x, const struct A725 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA725() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A725), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A725, m0), 1);
		dcStructField(st, 'p', offsetof(struct A725, m1), 1);
		dcStructField(st, 'p', offsetof(struct A725, m2), 1);
		dcStructField(st, 's', offsetof(struct A725, m3), 1);
		dcStructField(st, 'c', offsetof(struct A725, m4), 1);
		dcStructField(st, 'j', offsetof(struct A725, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scsf{jppscj}} */
struct A726 { s m0; c m1; s m2; f m3; struct A725 m4; };
void f_cpA726(struct A726 *x, const struct A726 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA725(&x->m4, &y->m4); };
int f_cmpA726(const struct A726 *x, const struct A726 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA725(&x->m4, &y->m4); };
DCstruct* f_touchdcstA726() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A726), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A726, m0), 1);
		dcStructField(st, 'c', offsetof(struct A726, m1), 1);
		dcStructField(st, 's', offsetof(struct A726, m2), 1);
		dcStructField(st, 'f', offsetof(struct A726, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A726, m4), 1, f_touchdcstA725());
		dcCloseStruct(st);
	}
	return st;
};
/* {iii} */
struct A727 { i m0; i m1; i m2; };
void f_cpA727(struct A727 *x, const struct A727 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA727(const struct A727 *x, const struct A727 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA727() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A727), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A727, m0), 1);
		dcStructField(st, 'i', offsetof(struct A727, m1), 1);
		dcStructField(st, 'i', offsetof(struct A727, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cpip} */
struct A728 { c m0; p m1; i m2; p m3; };
void f_cpA728(struct A728 *x, const struct A728 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA728(const struct A728 *x, const struct A728 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA728() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A728), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A728, m0), 1);
		dcStructField(st, 'p', offsetof(struct A728, m1), 1);
		dcStructField(st, 'i', offsetof(struct A728, m2), 1);
		dcStructField(st, 'p', offsetof(struct A728, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfisjfdsijilidciifjlidcddf} */
struct A729 { c m0; f m1; i m2; s m3; j m4; f m5; d m6; s m7; i m8; j m9; i m10; l m11; i m12; d m13; c m14; i m15; i m16; f m17; j m18; l m19; i m20; d m21; c m22; d m23; d m24; f m25; };
void f_cpA729(struct A729 *x, const struct A729 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA729(const struct A729 *x, const struct A729 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA729() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A729), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A729, m0), 1);
		dcStructField(st, 'f', offsetof(struct A729, m1), 1);
		dcStructField(st, 'i', offsetof(struct A729, m2), 1);
		dcStructField(st, 's', offsetof(struct A729, m3), 1);
		dcStructField(st, 'j', offsetof(struct A729, m4), 1);
		dcStructField(st, 'f', offsetof(struct A729, m5), 1);
		dcStructField(st, 'd', offsetof(struct A729, m6), 1);
		dcStructField(st, 's', offsetof(struct A729, m7), 1);
		dcStructField(st, 'i', offsetof(struct A729, m8), 1);
		dcStructField(st, 'j', offsetof(struct A729, m9), 1);
		dcStructField(st, 'i', offsetof(struct A729, m10), 1);
		dcStructField(st, 'l', offsetof(struct A729, m11), 1);
		dcStructField(st, 'i', offsetof(struct A729, m12), 1);
		dcStructField(st, 'd', offsetof(struct A729, m13), 1);
		dcStructField(st, 'c', offsetof(struct A729, m14), 1);
		dcStructField(st, 'i', offsetof(struct A729, m15), 1);
		dcStructField(st, 'i', offsetof(struct A729, m16), 1);
		dcStructField(st, 'f', offsetof(struct A729, m17), 1);
		dcStructField(st, 'j', offsetof(struct A729, m18), 1);
		dcStructField(st, 'l', offsetof(struct A729, m19), 1);
		dcStructField(st, 'i', offsetof(struct A729, m20), 1);
		dcStructField(st, 'd', offsetof(struct A729, m21), 1);
		dcStructField(st, 'c', offsetof(struct A729, m22), 1);
		dcStructField(st, 'd', offsetof(struct A729, m23), 1);
		dcStructField(st, 'd', offsetof(struct A729, m24), 1);
		dcStructField(st, 'f', offsetof(struct A729, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llfpfdcjjfisj} */
struct A730 { l m0; l m1; f m2; p m3; f m4; d m5; c m6; j m7; j m8; f m9; i m10; s m11; j m12; };
void f_cpA730(struct A730 *x, const struct A730 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA730(const struct A730 *x, const struct A730 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA730() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A730), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A730, m0), 1);
		dcStructField(st, 'l', offsetof(struct A730, m1), 1);
		dcStructField(st, 'f', offsetof(struct A730, m2), 1);
		dcStructField(st, 'p', offsetof(struct A730, m3), 1);
		dcStructField(st, 'f', offsetof(struct A730, m4), 1);
		dcStructField(st, 'd', offsetof(struct A730, m5), 1);
		dcStructField(st, 'c', offsetof(struct A730, m6), 1);
		dcStructField(st, 'j', offsetof(struct A730, m7), 1);
		dcStructField(st, 'j', offsetof(struct A730, m8), 1);
		dcStructField(st, 'f', offsetof(struct A730, m9), 1);
		dcStructField(st, 'i', offsetof(struct A730, m10), 1);
		dcStructField(st, 's', offsetof(struct A730, m11), 1);
		dcStructField(st, 'j', offsetof(struct A730, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{iii}{cpip}lfpffdci<pd>f{lj}scpji{cfisjfdsijilidciifjlidcddf}{llfpfdcjjfisj}ds} */
struct A731 { struct A727 m0; struct A728 m1; l m2; f m3; p m4; f m5; f m6; d m7; c m8; i m9; union  A598 m10; f m11; struct A145 m12; s m13; c m14; p m15; j m16; i m17; struct A729 m18; struct A730 m19; d m20; s m21; };
void f_cpA731(struct A731 *x, const struct A731 *y) { f_cpA727(&x->m0, &y->m0); f_cpA728(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA598(&x->m10, &y->m10); x->m11 = y->m11; f_cpA145(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA729(&x->m18, &y->m18); f_cpA730(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA731(const struct A731 *x, const struct A731 *y) { return f_cmpA727(&x->m0, &y->m0) && f_cmpA728(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA598(&x->m10, &y->m10) && x->m11 == y->m11 && f_cmpA145(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA729(&x->m18, &y->m18) && f_cmpA730(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA731() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A731), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A731, m0), 1, f_touchdcstA727());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A731, m1), 1, f_touchdcstA728());
		dcStructField(st, 'l', offsetof(struct A731, m2), 1);
		dcStructField(st, 'f', offsetof(struct A731, m3), 1);
		dcStructField(st, 'p', offsetof(struct A731, m4), 1);
		dcStructField(st, 'f', offsetof(struct A731, m5), 1);
		dcStructField(st, 'f', offsetof(struct A731, m6), 1);
		dcStructField(st, 'd', offsetof(struct A731, m7), 1);
		dcStructField(st, 'c', offsetof(struct A731, m8), 1);
		dcStructField(st, 'i', offsetof(struct A731, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A731, m10), 1, f_touchdcstA598());
		dcStructField(st, 'f', offsetof(struct A731, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A731, m12), 1, f_touchdcstA145());
		dcStructField(st, 's', offsetof(struct A731, m13), 1);
		dcStructField(st, 'c', offsetof(struct A731, m14), 1);
		dcStructField(st, 'p', offsetof(struct A731, m15), 1);
		dcStructField(st, 'j', offsetof(struct A731, m16), 1);
		dcStructField(st, 'i', offsetof(struct A731, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A731, m18), 1, f_touchdcstA729());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A731, m19), 1, f_touchdcstA730());
		dcStructField(st, 'd', offsetof(struct A731, m20), 1);
		dcStructField(st, 's', offsetof(struct A731, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjdsipiisspcsidlipj} */
struct A732 { p m0; j m1; d m2; s m3; i m4; p m5; i m6; i m7; s m8; s m9; p m10; c m11; s m12; i m13; d m14; l m15; i m16; p m17; j m18; };
void f_cpA732(struct A732 *x, const struct A732 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA732(const struct A732 *x, const struct A732 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA732() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A732), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A732, m0), 1);
		dcStructField(st, 'j', offsetof(struct A732, m1), 1);
		dcStructField(st, 'd', offsetof(struct A732, m2), 1);
		dcStructField(st, 's', offsetof(struct A732, m3), 1);
		dcStructField(st, 'i', offsetof(struct A732, m4), 1);
		dcStructField(st, 'p', offsetof(struct A732, m5), 1);
		dcStructField(st, 'i', offsetof(struct A732, m6), 1);
		dcStructField(st, 'i', offsetof(struct A732, m7), 1);
		dcStructField(st, 's', offsetof(struct A732, m8), 1);
		dcStructField(st, 's', offsetof(struct A732, m9), 1);
		dcStructField(st, 'p', offsetof(struct A732, m10), 1);
		dcStructField(st, 'c', offsetof(struct A732, m11), 1);
		dcStructField(st, 's', offsetof(struct A732, m12), 1);
		dcStructField(st, 'i', offsetof(struct A732, m13), 1);
		dcStructField(st, 'd', offsetof(struct A732, m14), 1);
		dcStructField(st, 'l', offsetof(struct A732, m15), 1);
		dcStructField(st, 'i', offsetof(struct A732, m16), 1);
		dcStructField(st, 'p', offsetof(struct A732, m17), 1);
		dcStructField(st, 'j', offsetof(struct A732, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dldlic{pjdsipiisspcsidlipj}<i>> */
union  A733 { d m0; l m1; d m2; l m3; i m4; c m5; struct A732 m6; union  A22 m7; };
void f_cpA733(union  A733 *x, const union  A733 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA732(&x->m6, &y->m6); f_cpA22(&x->m7, &y->m7); };
int f_cmpA733(const union  A733 *x, const union  A733 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA732(&x->m6, &y->m6) && f_cmpA22(&x->m7, &y->m7); };
DCstruct* f_touchdcstA733() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A733), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A733, m0), 1);
		dcStructField(st, 'l', offsetof(union  A733, m1), 1);
		dcStructField(st, 'd', offsetof(union  A733, m2), 1);
		dcStructField(st, 'l', offsetof(union  A733, m3), 1);
		dcStructField(st, 'i', offsetof(union  A733, m4), 1);
		dcStructField(st, 'c', offsetof(union  A733, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A733, m6), 1, f_touchdcstA732());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A733, m7), 1, f_touchdcstA22());
		dcCloseStruct(st);
	}
	return st;
};
/* <pljic{scsf{jppscj}}lc{{iii}{cpip}lfpffdci<pd>f{lj}scpji{cfisjfdsijilidciifjlidcddf}{llfpfdcjjfisj}ds}jc<dldlic{pjdsipiisspcsidlipj}<i>>> */
union  A734 { p m0; l m1; j m2; i m3; c m4; struct A726 m5; l m6; c m7; struct A731 m8; j m9; c m10; union  A733 m11; };
void f_cpA734(union  A734 *x, const union  A734 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA726(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; f_cpA731(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; f_cpA733(&x->m11, &y->m11); };
int f_cmpA734(const union  A734 *x, const union  A734 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA726(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA731(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA733(&x->m11, &y->m11); };
DCstruct* f_touchdcstA734() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A734), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A734, m0), 1);
		dcStructField(st, 'l', offsetof(union  A734, m1), 1);
		dcStructField(st, 'j', offsetof(union  A734, m2), 1);
		dcStructField(st, 'i', offsetof(union  A734, m3), 1);
		dcStructField(st, 'c', offsetof(union  A734, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A734, m5), 1, f_touchdcstA726());
		dcStructField(st, 'l', offsetof(union  A734, m6), 1);
		dcStructField(st, 'c', offsetof(union  A734, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A734, m8), 1, f_touchdcstA731());
		dcStructField(st, 'j', offsetof(union  A734, m9), 1);
		dcStructField(st, 'c', offsetof(union  A734, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A734, m11), 1, f_touchdcstA733());
		dcCloseStruct(st);
	}
	return st;
};
/* {ilfpcdc} */
struct A735 { i m0; l m1; f m2; p m3; c m4; d m5; c m6; };
void f_cpA735(struct A735 *x, const struct A735 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA735(const struct A735 *x, const struct A735 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA735() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A735), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A735, m0), 1);
		dcStructField(st, 'l', offsetof(struct A735, m1), 1);
		dcStructField(st, 'f', offsetof(struct A735, m2), 1);
		dcStructField(st, 'p', offsetof(struct A735, m3), 1);
		dcStructField(st, 'c', offsetof(struct A735, m4), 1);
		dcStructField(st, 'd', offsetof(struct A735, m5), 1);
		dcStructField(st, 'c', offsetof(struct A735, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {slpidjffspfs} */
struct A736 { s m0; l m1; p m2; i m3; d m4; j m5; f m6; f m7; s m8; p m9; f m10; s m11; };
void f_cpA736(struct A736 *x, const struct A736 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA736(const struct A736 *x, const struct A736 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA736() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A736), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A736, m0), 1);
		dcStructField(st, 'l', offsetof(struct A736, m1), 1);
		dcStructField(st, 'p', offsetof(struct A736, m2), 1);
		dcStructField(st, 'i', offsetof(struct A736, m3), 1);
		dcStructField(st, 'd', offsetof(struct A736, m4), 1);
		dcStructField(st, 'j', offsetof(struct A736, m5), 1);
		dcStructField(st, 'f', offsetof(struct A736, m6), 1);
		dcStructField(st, 'f', offsetof(struct A736, m7), 1);
		dcStructField(st, 's', offsetof(struct A736, m8), 1);
		dcStructField(st, 'p', offsetof(struct A736, m9), 1);
		dcStructField(st, 'f', offsetof(struct A736, m10), 1);
		dcStructField(st, 's', offsetof(struct A736, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lfcljs> */
union  A737 { l m0; f m1; c m2; l m3; j m4; s m5; };
void f_cpA737(union  A737 *x, const union  A737 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA737(const union  A737 *x, const union  A737 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA737() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A737), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A737, m0), 1);
		dcStructField(st, 'f', offsetof(union  A737, m1), 1);
		dcStructField(st, 'c', offsetof(union  A737, m2), 1);
		dcStructField(st, 'l', offsetof(union  A737, m3), 1);
		dcStructField(st, 'j', offsetof(union  A737, m4), 1);
		dcStructField(st, 's', offsetof(union  A737, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pisccsdc} */
struct A738 { p m0; i m1; s m2; c m3; c m4; s m5; d m6; c m7; };
void f_cpA738(struct A738 *x, const struct A738 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA738(const struct A738 *x, const struct A738 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA738() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A738), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A738, m0), 1);
		dcStructField(st, 'i', offsetof(struct A738, m1), 1);
		dcStructField(st, 's', offsetof(struct A738, m2), 1);
		dcStructField(st, 'c', offsetof(struct A738, m3), 1);
		dcStructField(st, 'c', offsetof(struct A738, m4), 1);
		dcStructField(st, 's', offsetof(struct A738, m5), 1);
		dcStructField(st, 'd', offsetof(struct A738, m6), 1);
		dcStructField(st, 'c', offsetof(struct A738, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <silcccij> */
union  A739 { s m0; i m1; l m2; c m3; c m4; c m5; i m6; j m7; };
void f_cpA739(union  A739 *x, const union  A739 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA739(const union  A739 *x, const union  A739 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA739() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A739), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A739, m0), 1);
		dcStructField(st, 'i', offsetof(union  A739, m1), 1);
		dcStructField(st, 'l', offsetof(union  A739, m2), 1);
		dcStructField(st, 'c', offsetof(union  A739, m3), 1);
		dcStructField(st, 'c', offsetof(union  A739, m4), 1);
		dcStructField(st, 'c', offsetof(union  A739, m5), 1);
		dcStructField(st, 'i', offsetof(union  A739, m6), 1);
		dcStructField(st, 'j', offsetof(union  A739, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <j{pisccsdc}lljp{s}<silcccij>f> */
union  A740 { j m0; struct A738 m1; l m2; l m3; j m4; p m5; struct A4 m6; union  A739 m7; f m8; };
void f_cpA740(union  A740 *x, const union  A740 *y) { x->m0 = y->m0; f_cpA738(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA4(&x->m6, &y->m6); f_cpA739(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA740(const union  A740 *x, const union  A740 *y) { return x->m0 == y->m0 && f_cmpA738(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA4(&x->m6, &y->m6) && f_cmpA739(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA740() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A740), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A740, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A740, m1), 1, f_touchdcstA738());
		dcStructField(st, 'l', offsetof(union  A740, m2), 1);
		dcStructField(st, 'l', offsetof(union  A740, m3), 1);
		dcStructField(st, 'j', offsetof(union  A740, m4), 1);
		dcStructField(st, 'p', offsetof(union  A740, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A740, m6), 1, f_touchdcstA4());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A740, m7), 1, f_touchdcstA739());
		dcStructField(st, 'f', offsetof(union  A740, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cfjdsdj> */
union  A741 { c m0; f m1; j m2; d m3; s m4; d m5; j m6; };
void f_cpA741(union  A741 *x, const union  A741 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA741(const union  A741 *x, const union  A741 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA741() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A741), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A741, m0), 1);
		dcStructField(st, 'f', offsetof(union  A741, m1), 1);
		dcStructField(st, 'j', offsetof(union  A741, m2), 1);
		dcStructField(st, 'd', offsetof(union  A741, m3), 1);
		dcStructField(st, 's', offsetof(union  A741, m4), 1);
		dcStructField(st, 'd', offsetof(union  A741, m5), 1);
		dcStructField(st, 'j', offsetof(union  A741, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dppdi<cfjdsdj>fl> */
union  A742 { d m0; p m1; p m2; d m3; i m4; union  A741 m5; f m6; l m7; };
void f_cpA742(union  A742 *x, const union  A742 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA741(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA742(const union  A742 *x, const union  A742 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA741(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA742() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A742), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A742, m0), 1);
		dcStructField(st, 'p', offsetof(union  A742, m1), 1);
		dcStructField(st, 'p', offsetof(union  A742, m2), 1);
		dcStructField(st, 'd', offsetof(union  A742, m3), 1);
		dcStructField(st, 'i', offsetof(union  A742, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A742, m5), 1, f_touchdcstA741());
		dcStructField(st, 'f', offsetof(union  A742, m6), 1);
		dcStructField(st, 'l', offsetof(union  A742, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jsi<j{pisccsdc}lljp{s}<silcccij>f>lp<dppdi<cfjdsdj>fl>dfjfsj> */
union  A743 { j m0; s m1; i m2; union  A740 m3; l m4; p m5; union  A742 m6; d m7; f m8; j m9; f m10; s m11; j m12; };
void f_cpA743(union  A743 *x, const union  A743 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA740(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA742(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA743(const union  A743 *x, const union  A743 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA740(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA742(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA743() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A743), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A743, m0), 1);
		dcStructField(st, 's', offsetof(union  A743, m1), 1);
		dcStructField(st, 'i', offsetof(union  A743, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A743, m3), 1, f_touchdcstA740());
		dcStructField(st, 'l', offsetof(union  A743, m4), 1);
		dcStructField(st, 'p', offsetof(union  A743, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A743, m6), 1, f_touchdcstA742());
		dcStructField(st, 'd', offsetof(union  A743, m7), 1);
		dcStructField(st, 'f', offsetof(union  A743, m8), 1);
		dcStructField(st, 'j', offsetof(union  A743, m9), 1);
		dcStructField(st, 'f', offsetof(union  A743, m10), 1);
		dcStructField(st, 's', offsetof(union  A743, m11), 1);
		dcStructField(st, 'j', offsetof(union  A743, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<j>dcl} */
struct A744 { union  A47 m0; d m1; c m2; l m3; };
void f_cpA744(struct A744 *x, const struct A744 *y) { f_cpA47(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA744(const struct A744 *x, const struct A744 *y) { return f_cmpA47(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA744() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A744), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A744, m0), 1, f_touchdcstA47());
		dcStructField(st, 'd', offsetof(struct A744, m1), 1);
		dcStructField(st, 'c', offsetof(struct A744, m2), 1);
		dcStructField(st, 'l', offsetof(struct A744, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lf} */
struct A745 { l m0; f m1; };
void f_cpA745(struct A745 *x, const struct A745 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA745(const struct A745 *x, const struct A745 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA745() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A745), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A745, m0), 1);
		dcStructField(st, 'f', offsetof(struct A745, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ic{lf}d{l}dsfidpp> */
union  A746 { i m0; c m1; struct A745 m2; d m3; struct A51 m4; d m5; s m6; f m7; i m8; d m9; p m10; p m11; };
void f_cpA746(union  A746 *x, const union  A746 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA745(&x->m2, &y->m2); x->m3 = y->m3; f_cpA51(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA746(const union  A746 *x, const union  A746 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA745(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA51(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA746() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A746), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A746, m0), 1);
		dcStructField(st, 'c', offsetof(union  A746, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A746, m2), 1, f_touchdcstA745());
		dcStructField(st, 'd', offsetof(union  A746, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A746, m4), 1, f_touchdcstA51());
		dcStructField(st, 'd', offsetof(union  A746, m5), 1);
		dcStructField(st, 's', offsetof(union  A746, m6), 1);
		dcStructField(st, 'f', offsetof(union  A746, m7), 1);
		dcStructField(st, 'i', offsetof(union  A746, m8), 1);
		dcStructField(st, 'd', offsetof(union  A746, m9), 1);
		dcStructField(st, 'p', offsetof(union  A746, m10), 1);
		dcStructField(st, 'p', offsetof(union  A746, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<ic{lf}d{l}dsfidpp>jdsljddspl> */
union  A747 { union  A746 m0; j m1; d m2; s m3; l m4; j m5; d m6; d m7; s m8; p m9; l m10; };
void f_cpA747(union  A747 *x, const union  A747 *y) { f_cpA746(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA747(const union  A747 *x, const union  A747 *y) { return f_cmpA746(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA747() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A747), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A747, m0), 1, f_touchdcstA746());
		dcStructField(st, 'j', offsetof(union  A747, m1), 1);
		dcStructField(st, 'd', offsetof(union  A747, m2), 1);
		dcStructField(st, 's', offsetof(union  A747, m3), 1);
		dcStructField(st, 'l', offsetof(union  A747, m4), 1);
		dcStructField(st, 'j', offsetof(union  A747, m5), 1);
		dcStructField(st, 'd', offsetof(union  A747, m6), 1);
		dcStructField(st, 'd', offsetof(union  A747, m7), 1);
		dcStructField(st, 's', offsetof(union  A747, m8), 1);
		dcStructField(st, 'p', offsetof(union  A747, m9), 1);
		dcStructField(st, 'l', offsetof(union  A747, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iijp} */
struct A748 { i m0; i m1; j m2; p m3; };
void f_cpA748(struct A748 *x, const struct A748 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA748(const struct A748 *x, const struct A748 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA748() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A748), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A748, m0), 1);
		dcStructField(st, 'i', offsetof(struct A748, m1), 1);
		dcStructField(st, 'j', offsetof(struct A748, m2), 1);
		dcStructField(st, 'p', offsetof(struct A748, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <c{iijp}> */
union  A749 { c m0; struct A748 m1; };
void f_cpA749(union  A749 *x, const union  A749 *y) { x->m0 = y->m0; f_cpA748(&x->m1, &y->m1); };
int f_cmpA749(const union  A749 *x, const union  A749 *y) { return x->m0 == y->m0 && f_cmpA748(&x->m1, &y->m1); };
DCstruct* f_touchdcstA749() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A749), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A749, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A749, m1), 1, f_touchdcstA748());
		dcCloseStruct(st);
	}
	return st;
};
/* <lsiddcpdpi> */
union  A750 { l m0; s m1; i m2; d m3; d m4; c m5; p m6; d m7; p m8; i m9; };
void f_cpA750(union  A750 *x, const union  A750 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA750(const union  A750 *x, const union  A750 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA750() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A750), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A750, m0), 1);
		dcStructField(st, 's', offsetof(union  A750, m1), 1);
		dcStructField(st, 'i', offsetof(union  A750, m2), 1);
		dcStructField(st, 'd', offsetof(union  A750, m3), 1);
		dcStructField(st, 'd', offsetof(union  A750, m4), 1);
		dcStructField(st, 'c', offsetof(union  A750, m5), 1);
		dcStructField(st, 'p', offsetof(union  A750, m6), 1);
		dcStructField(st, 'd', offsetof(union  A750, m7), 1);
		dcStructField(st, 'p', offsetof(union  A750, m8), 1);
		dcStructField(st, 'i', offsetof(union  A750, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idcji} */
struct A751 { i m0; d m1; c m2; j m3; i m4; };
void f_cpA751(struct A751 *x, const struct A751 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA751(const struct A751 *x, const struct A751 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA751() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A751), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A751, m0), 1);
		dcStructField(st, 'd', offsetof(struct A751, m1), 1);
		dcStructField(st, 'c', offsetof(struct A751, m2), 1);
		dcStructField(st, 'j', offsetof(struct A751, m3), 1);
		dcStructField(st, 'i', offsetof(struct A751, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dssd> */
union  A752 { d m0; s m1; s m2; d m3; };
void f_cpA752(union  A752 *x, const union  A752 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA752(const union  A752 *x, const union  A752 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA752() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A752), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A752, m0), 1);
		dcStructField(st, 's', offsetof(union  A752, m1), 1);
		dcStructField(st, 's', offsetof(union  A752, m2), 1);
		dcStructField(st, 'd', offsetof(union  A752, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lslilljdiicdc> */
union  A753 { l m0; s m1; l m2; i m3; l m4; l m5; j m6; d m7; i m8; i m9; c m10; d m11; c m12; };
void f_cpA753(union  A753 *x, const union  A753 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA753(const union  A753 *x, const union  A753 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA753() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A753), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A753, m0), 1);
		dcStructField(st, 's', offsetof(union  A753, m1), 1);
		dcStructField(st, 'l', offsetof(union  A753, m2), 1);
		dcStructField(st, 'i', offsetof(union  A753, m3), 1);
		dcStructField(st, 'l', offsetof(union  A753, m4), 1);
		dcStructField(st, 'l', offsetof(union  A753, m5), 1);
		dcStructField(st, 'j', offsetof(union  A753, m6), 1);
		dcStructField(st, 'd', offsetof(union  A753, m7), 1);
		dcStructField(st, 'i', offsetof(union  A753, m8), 1);
		dcStructField(st, 'i', offsetof(union  A753, m9), 1);
		dcStructField(st, 'c', offsetof(union  A753, m10), 1);
		dcStructField(st, 'd', offsetof(union  A753, m11), 1);
		dcStructField(st, 'c', offsetof(union  A753, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cs> */
union  A754 { c m0; s m1; };
void f_cpA754(union  A754 *x, const union  A754 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA754(const union  A754 *x, const union  A754 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA754() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A754), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A754, m0), 1);
		dcStructField(st, 's', offsetof(union  A754, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fsdjddifii> */
union  A755 { f m0; s m1; d m2; j m3; d m4; d m5; i m6; f m7; i m8; i m9; };
void f_cpA755(union  A755 *x, const union  A755 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA755(const union  A755 *x, const union  A755 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA755() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A755), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A755, m0), 1);
		dcStructField(st, 's', offsetof(union  A755, m1), 1);
		dcStructField(st, 'd', offsetof(union  A755, m2), 1);
		dcStructField(st, 'j', offsetof(union  A755, m3), 1);
		dcStructField(st, 'd', offsetof(union  A755, m4), 1);
		dcStructField(st, 'd', offsetof(union  A755, m5), 1);
		dcStructField(st, 'i', offsetof(union  A755, m6), 1);
		dcStructField(st, 'f', offsetof(union  A755, m7), 1);
		dcStructField(st, 'i', offsetof(union  A755, m8), 1);
		dcStructField(st, 'i', offsetof(union  A755, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dslifdlf} */
struct A756 { d m0; s m1; l m2; i m3; f m4; d m5; l m6; f m7; };
void f_cpA756(struct A756 *x, const struct A756 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA756(const struct A756 *x, const struct A756 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA756() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A756), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A756, m0), 1);
		dcStructField(st, 's', offsetof(struct A756, m1), 1);
		dcStructField(st, 'l', offsetof(struct A756, m2), 1);
		dcStructField(st, 'i', offsetof(struct A756, m3), 1);
		dcStructField(st, 'f', offsetof(struct A756, m4), 1);
		dcStructField(st, 'd', offsetof(struct A756, m5), 1);
		dcStructField(st, 'l', offsetof(struct A756, m6), 1);
		dcStructField(st, 'f', offsetof(struct A756, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <icss> */
union  A757 { i m0; c m1; s m2; s m3; };
void f_cpA757(union  A757 *x, const union  A757 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA757(const union  A757 *x, const union  A757 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA757() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A757), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A757, m0), 1);
		dcStructField(st, 'c', offsetof(union  A757, m1), 1);
		dcStructField(st, 's', offsetof(union  A757, m2), 1);
		dcStructField(st, 's', offsetof(union  A757, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fdpfi> */
union  A758 { f m0; d m1; p m2; f m3; i m4; };
void f_cpA758(union  A758 *x, const union  A758 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA758(const union  A758 *x, const union  A758 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA758() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A758), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A758, m0), 1);
		dcStructField(st, 'd', offsetof(union  A758, m1), 1);
		dcStructField(st, 'p', offsetof(union  A758, m2), 1);
		dcStructField(st, 'f', offsetof(union  A758, m3), 1);
		dcStructField(st, 'i', offsetof(union  A758, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlips> */
union  A759 { d m0; l m1; i m2; p m3; s m4; };
void f_cpA759(union  A759 *x, const union  A759 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA759(const union  A759 *x, const union  A759 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA759() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A759), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A759, m0), 1);
		dcStructField(st, 'l', offsetof(union  A759, m1), 1);
		dcStructField(st, 'i', offsetof(union  A759, m2), 1);
		dcStructField(st, 'p', offsetof(union  A759, m3), 1);
		dcStructField(st, 's', offsetof(union  A759, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cpclflciffjfdjisll> */
union  A760 { c m0; p m1; c m2; l m3; f m4; l m5; c m6; i m7; f m8; f m9; j m10; f m11; d m12; j m13; i m14; s m15; l m16; l m17; };
void f_cpA760(union  A760 *x, const union  A760 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA760(const union  A760 *x, const union  A760 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA760() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A760), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A760, m0), 1);
		dcStructField(st, 'p', offsetof(union  A760, m1), 1);
		dcStructField(st, 'c', offsetof(union  A760, m2), 1);
		dcStructField(st, 'l', offsetof(union  A760, m3), 1);
		dcStructField(st, 'f', offsetof(union  A760, m4), 1);
		dcStructField(st, 'l', offsetof(union  A760, m5), 1);
		dcStructField(st, 'c', offsetof(union  A760, m6), 1);
		dcStructField(st, 'i', offsetof(union  A760, m7), 1);
		dcStructField(st, 'f', offsetof(union  A760, m8), 1);
		dcStructField(st, 'f', offsetof(union  A760, m9), 1);
		dcStructField(st, 'j', offsetof(union  A760, m10), 1);
		dcStructField(st, 'f', offsetof(union  A760, m11), 1);
		dcStructField(st, 'd', offsetof(union  A760, m12), 1);
		dcStructField(st, 'j', offsetof(union  A760, m13), 1);
		dcStructField(st, 'i', offsetof(union  A760, m14), 1);
		dcStructField(st, 's', offsetof(union  A760, m15), 1);
		dcStructField(st, 'l', offsetof(union  A760, m16), 1);
		dcStructField(st, 'l', offsetof(union  A760, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifcsijfdpsi<dlips><cpclflciffjfdjisll>cj} */
struct A761 { i m0; f m1; c m2; s m3; i m4; j m5; f m6; d m7; p m8; s m9; i m10; union  A759 m11; union  A760 m12; c m13; j m14; };
void f_cpA761(struct A761 *x, const struct A761 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA759(&x->m11, &y->m11); f_cpA760(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA761(const struct A761 *x, const struct A761 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA759(&x->m11, &y->m11) && f_cmpA760(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA761() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A761), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A761, m0), 1);
		dcStructField(st, 'f', offsetof(struct A761, m1), 1);
		dcStructField(st, 'c', offsetof(struct A761, m2), 1);
		dcStructField(st, 's', offsetof(struct A761, m3), 1);
		dcStructField(st, 'i', offsetof(struct A761, m4), 1);
		dcStructField(st, 'j', offsetof(struct A761, m5), 1);
		dcStructField(st, 'f', offsetof(struct A761, m6), 1);
		dcStructField(st, 'd', offsetof(struct A761, m7), 1);
		dcStructField(st, 'p', offsetof(struct A761, m8), 1);
		dcStructField(st, 's', offsetof(struct A761, m9), 1);
		dcStructField(st, 'i', offsetof(struct A761, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A761, m11), 1, f_touchdcstA759());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A761, m12), 1, f_touchdcstA760());
		dcStructField(st, 'c', offsetof(struct A761, m13), 1);
		dcStructField(st, 'j', offsetof(struct A761, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dijcjffjfl> */
union  A762 { d m0; i m1; j m2; c m3; j m4; f m5; f m6; j m7; f m8; l m9; };
void f_cpA762(union  A762 *x, const union  A762 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA762(const union  A762 *x, const union  A762 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA762() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A762), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A762, m0), 1);
		dcStructField(st, 'i', offsetof(union  A762, m1), 1);
		dcStructField(st, 'j', offsetof(union  A762, m2), 1);
		dcStructField(st, 'c', offsetof(union  A762, m3), 1);
		dcStructField(st, 'j', offsetof(union  A762, m4), 1);
		dcStructField(st, 'f', offsetof(union  A762, m5), 1);
		dcStructField(st, 'f', offsetof(union  A762, m6), 1);
		dcStructField(st, 'j', offsetof(union  A762, m7), 1);
		dcStructField(st, 'f', offsetof(union  A762, m8), 1);
		dcStructField(st, 'l', offsetof(union  A762, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fci> */
union  A763 { f m0; c m1; i m2; };
void f_cpA763(union  A763 *x, const union  A763 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA763(const union  A763 *x, const union  A763 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA763() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A763), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A763, m0), 1);
		dcStructField(st, 'c', offsetof(union  A763, m1), 1);
		dcStructField(st, 'i', offsetof(union  A763, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jd{ifcsijfdpsi<dlips><cpclflciffjfdjisll>cj}lpjplsf<dijcjffjfl><fci>cjiddss> */
union  A764 { j m0; d m1; struct A761 m2; l m3; p m4; j m5; p m6; l m7; s m8; f m9; union  A762 m10; union  A763 m11; c m12; j m13; i m14; d m15; d m16; s m17; s m18; };
void f_cpA764(union  A764 *x, const union  A764 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA761(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA762(&x->m10, &y->m10); f_cpA763(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA764(const union  A764 *x, const union  A764 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA761(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA762(&x->m10, &y->m10) && f_cmpA763(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA764() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A764), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A764, m0), 1);
		dcStructField(st, 'd', offsetof(union  A764, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A764, m2), 1, f_touchdcstA761());
		dcStructField(st, 'l', offsetof(union  A764, m3), 1);
		dcStructField(st, 'p', offsetof(union  A764, m4), 1);
		dcStructField(st, 'j', offsetof(union  A764, m5), 1);
		dcStructField(st, 'p', offsetof(union  A764, m6), 1);
		dcStructField(st, 'l', offsetof(union  A764, m7), 1);
		dcStructField(st, 's', offsetof(union  A764, m8), 1);
		dcStructField(st, 'f', offsetof(union  A764, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A764, m10), 1, f_touchdcstA762());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A764, m11), 1, f_touchdcstA763());
		dcStructField(st, 'c', offsetof(union  A764, m12), 1);
		dcStructField(st, 'j', offsetof(union  A764, m13), 1);
		dcStructField(st, 'i', offsetof(union  A764, m14), 1);
		dcStructField(st, 'd', offsetof(union  A764, m15), 1);
		dcStructField(st, 'd', offsetof(union  A764, m16), 1);
		dcStructField(st, 's', offsetof(union  A764, m17), 1);
		dcStructField(st, 's', offsetof(union  A764, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ddd> */
union  A765 { d m0; d m1; d m2; };
void f_cpA765(union  A765 *x, const union  A765 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA765(const union  A765 *x, const union  A765 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA765() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A765), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A765, m0), 1);
		dcStructField(st, 'd', offsetof(union  A765, m1), 1);
		dcStructField(st, 'd', offsetof(union  A765, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffpcpddifpji<ddd>ipj} */
struct A766 { f m0; f m1; p m2; c m3; p m4; d m5; d m6; i m7; f m8; p m9; j m10; i m11; union  A765 m12; i m13; p m14; j m15; };
void f_cpA766(struct A766 *x, const struct A766 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA765(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA766(const struct A766 *x, const struct A766 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA765(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA766() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A766), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A766, m0), 1);
		dcStructField(st, 'f', offsetof(struct A766, m1), 1);
		dcStructField(st, 'p', offsetof(struct A766, m2), 1);
		dcStructField(st, 'c', offsetof(struct A766, m3), 1);
		dcStructField(st, 'p', offsetof(struct A766, m4), 1);
		dcStructField(st, 'd', offsetof(struct A766, m5), 1);
		dcStructField(st, 'd', offsetof(struct A766, m6), 1);
		dcStructField(st, 'i', offsetof(struct A766, m7), 1);
		dcStructField(st, 'f', offsetof(struct A766, m8), 1);
		dcStructField(st, 'p', offsetof(struct A766, m9), 1);
		dcStructField(st, 'j', offsetof(struct A766, m10), 1);
		dcStructField(st, 'i', offsetof(struct A766, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A766, m12), 1, f_touchdcstA765());
		dcStructField(st, 'i', offsetof(struct A766, m13), 1);
		dcStructField(st, 'p', offsetof(struct A766, m14), 1);
		dcStructField(st, 'j', offsetof(struct A766, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djisiclj} */
struct A767 { d m0; j m1; i m2; s m3; i m4; c m5; l m6; j m7; };
void f_cpA767(struct A767 *x, const struct A767 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA767(const struct A767 *x, const struct A767 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA767() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A767), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A767, m0), 1);
		dcStructField(st, 'j', offsetof(struct A767, m1), 1);
		dcStructField(st, 'i', offsetof(struct A767, m2), 1);
		dcStructField(st, 's', offsetof(struct A767, m3), 1);
		dcStructField(st, 'i', offsetof(struct A767, m4), 1);
		dcStructField(st, 'c', offsetof(struct A767, m5), 1);
		dcStructField(st, 'l', offsetof(struct A767, m6), 1);
		dcStructField(st, 'j', offsetof(struct A767, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfpfcpccsip> */
union  A768 { d m0; f m1; p m2; f m3; c m4; p m5; c m6; c m7; s m8; i m9; p m10; };
void f_cpA768(union  A768 *x, const union  A768 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA768(const union  A768 *x, const union  A768 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA768() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A768), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A768, m0), 1);
		dcStructField(st, 'f', offsetof(union  A768, m1), 1);
		dcStructField(st, 'p', offsetof(union  A768, m2), 1);
		dcStructField(st, 'f', offsetof(union  A768, m3), 1);
		dcStructField(st, 'c', offsetof(union  A768, m4), 1);
		dcStructField(st, 'p', offsetof(union  A768, m5), 1);
		dcStructField(st, 'c', offsetof(union  A768, m6), 1);
		dcStructField(st, 'c', offsetof(union  A768, m7), 1);
		dcStructField(st, 's', offsetof(union  A768, m8), 1);
		dcStructField(st, 'i', offsetof(union  A768, m9), 1);
		dcStructField(st, 'p', offsetof(union  A768, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfds{djisiclj}pjic<dfpfcpccsip>fdifpll} */
struct A769 { j m0; f m1; d m2; s m3; struct A767 m4; p m5; j m6; i m7; c m8; union  A768 m9; f m10; d m11; i m12; f m13; p m14; l m15; l m16; };
void f_cpA769(struct A769 *x, const struct A769 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA767(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA768(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA769(const struct A769 *x, const struct A769 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA767(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA768(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA769() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A769), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A769, m0), 1);
		dcStructField(st, 'f', offsetof(struct A769, m1), 1);
		dcStructField(st, 'd', offsetof(struct A769, m2), 1);
		dcStructField(st, 's', offsetof(struct A769, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A769, m4), 1, f_touchdcstA767());
		dcStructField(st, 'p', offsetof(struct A769, m5), 1);
		dcStructField(st, 'j', offsetof(struct A769, m6), 1);
		dcStructField(st, 'i', offsetof(struct A769, m7), 1);
		dcStructField(st, 'c', offsetof(struct A769, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A769, m9), 1, f_touchdcstA768());
		dcStructField(st, 'f', offsetof(struct A769, m10), 1);
		dcStructField(st, 'd', offsetof(struct A769, m11), 1);
		dcStructField(st, 'i', offsetof(struct A769, m12), 1);
		dcStructField(st, 'f', offsetof(struct A769, m13), 1);
		dcStructField(st, 'p', offsetof(struct A769, m14), 1);
		dcStructField(st, 'l', offsetof(struct A769, m15), 1);
		dcStructField(st, 'l', offsetof(struct A769, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sf} */
struct A770 { s m0; f m1; };
void f_cpA770(struct A770 *x, const struct A770 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA770(const struct A770 *x, const struct A770 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA770() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A770), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A770, m0), 1);
		dcStructField(st, 'f', offsetof(struct A770, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jppc> */
union  A771 { j m0; p m1; p m2; c m3; };
void f_cpA771(union  A771 *x, const union  A771 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA771(const union  A771 *x, const union  A771 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA771() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A771), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A771, m0), 1);
		dcStructField(st, 'p', offsetof(union  A771, m1), 1);
		dcStructField(st, 'p', offsetof(union  A771, m2), 1);
		dcStructField(st, 'c', offsetof(union  A771, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sclsslpfppdlidpicsc} */
struct A772 { s m0; c m1; l m2; s m3; s m4; l m5; p m6; f m7; p m8; p m9; d m10; l m11; i m12; d m13; p m14; i m15; c m16; s m17; c m18; };
void f_cpA772(struct A772 *x, const struct A772 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA772(const struct A772 *x, const struct A772 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA772() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A772), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A772, m0), 1);
		dcStructField(st, 'c', offsetof(struct A772, m1), 1);
		dcStructField(st, 'l', offsetof(struct A772, m2), 1);
		dcStructField(st, 's', offsetof(struct A772, m3), 1);
		dcStructField(st, 's', offsetof(struct A772, m4), 1);
		dcStructField(st, 'l', offsetof(struct A772, m5), 1);
		dcStructField(st, 'p', offsetof(struct A772, m6), 1);
		dcStructField(st, 'f', offsetof(struct A772, m7), 1);
		dcStructField(st, 'p', offsetof(struct A772, m8), 1);
		dcStructField(st, 'p', offsetof(struct A772, m9), 1);
		dcStructField(st, 'd', offsetof(struct A772, m10), 1);
		dcStructField(st, 'l', offsetof(struct A772, m11), 1);
		dcStructField(st, 'i', offsetof(struct A772, m12), 1);
		dcStructField(st, 'd', offsetof(struct A772, m13), 1);
		dcStructField(st, 'p', offsetof(struct A772, m14), 1);
		dcStructField(st, 'i', offsetof(struct A772, m15), 1);
		dcStructField(st, 'c', offsetof(struct A772, m16), 1);
		dcStructField(st, 's', offsetof(struct A772, m17), 1);
		dcStructField(st, 'c', offsetof(struct A772, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sic> */
union  A773 { s m0; i m1; c m2; };
void f_cpA773(union  A773 *x, const union  A773 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA773(const union  A773 *x, const union  A773 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA773() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A773), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A773, m0), 1);
		dcStructField(st, 'i', offsetof(union  A773, m1), 1);
		dcStructField(st, 'c', offsetof(union  A773, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cpll> */
union  A774 { c m0; p m1; l m2; l m3; };
void f_cpA774(union  A774 *x, const union  A774 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA774(const union  A774 *x, const union  A774 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA774() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A774), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A774, m0), 1);
		dcStructField(st, 'p', offsetof(union  A774, m1), 1);
		dcStructField(st, 'l', offsetof(union  A774, m2), 1);
		dcStructField(st, 'l', offsetof(union  A774, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddppdfcicdjjilcdccsppcsf} */
struct A775 { d m0; d m1; p m2; p m3; d m4; f m5; c m6; i m7; c m8; d m9; j m10; j m11; i m12; l m13; c m14; d m15; c m16; c m17; s m18; p m19; p m20; c m21; s m22; f m23; };
void f_cpA775(struct A775 *x, const struct A775 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA775(const struct A775 *x, const struct A775 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA775() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A775), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A775, m0), 1);
		dcStructField(st, 'd', offsetof(struct A775, m1), 1);
		dcStructField(st, 'p', offsetof(struct A775, m2), 1);
		dcStructField(st, 'p', offsetof(struct A775, m3), 1);
		dcStructField(st, 'd', offsetof(struct A775, m4), 1);
		dcStructField(st, 'f', offsetof(struct A775, m5), 1);
		dcStructField(st, 'c', offsetof(struct A775, m6), 1);
		dcStructField(st, 'i', offsetof(struct A775, m7), 1);
		dcStructField(st, 'c', offsetof(struct A775, m8), 1);
		dcStructField(st, 'd', offsetof(struct A775, m9), 1);
		dcStructField(st, 'j', offsetof(struct A775, m10), 1);
		dcStructField(st, 'j', offsetof(struct A775, m11), 1);
		dcStructField(st, 'i', offsetof(struct A775, m12), 1);
		dcStructField(st, 'l', offsetof(struct A775, m13), 1);
		dcStructField(st, 'c', offsetof(struct A775, m14), 1);
		dcStructField(st, 'd', offsetof(struct A775, m15), 1);
		dcStructField(st, 'c', offsetof(struct A775, m16), 1);
		dcStructField(st, 'c', offsetof(struct A775, m17), 1);
		dcStructField(st, 's', offsetof(struct A775, m18), 1);
		dcStructField(st, 'p', offsetof(struct A775, m19), 1);
		dcStructField(st, 'p', offsetof(struct A775, m20), 1);
		dcStructField(st, 'c', offsetof(struct A775, m21), 1);
		dcStructField(st, 's', offsetof(struct A775, m22), 1);
		dcStructField(st, 'f', offsetof(struct A775, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icsp} */
struct A776 { i m0; c m1; s m2; p m3; };
void f_cpA776(struct A776 *x, const struct A776 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA776(const struct A776 *x, const struct A776 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA776() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A776), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A776, m0), 1);
		dcStructField(st, 'c', offsetof(struct A776, m1), 1);
		dcStructField(st, 's', offsetof(struct A776, m2), 1);
		dcStructField(st, 'p', offsetof(struct A776, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {liijp} */
struct A777 { l m0; i m1; i m2; j m3; p m4; };
void f_cpA777(struct A777 *x, const struct A777 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA777(const struct A777 *x, const struct A777 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA777() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A777), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A777, m0), 1);
		dcStructField(st, 'i', offsetof(struct A777, m1), 1);
		dcStructField(st, 'i', offsetof(struct A777, m2), 1);
		dcStructField(st, 'j', offsetof(struct A777, m3), 1);
		dcStructField(st, 'p', offsetof(struct A777, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jildid> */
union  A778 { j m0; i m1; l m2; d m3; i m4; d m5; };
void f_cpA778(union  A778 *x, const union  A778 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA778(const union  A778 *x, const union  A778 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA778() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A778), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A778, m0), 1);
		dcStructField(st, 'i', offsetof(union  A778, m1), 1);
		dcStructField(st, 'l', offsetof(union  A778, m2), 1);
		dcStructField(st, 'd', offsetof(union  A778, m3), 1);
		dcStructField(st, 'i', offsetof(union  A778, m4), 1);
		dcStructField(st, 'd', offsetof(union  A778, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ccdpjpcdlss> */
union  A779 { c m0; c m1; d m2; p m3; j m4; p m5; c m6; d m7; l m8; s m9; s m10; };
void f_cpA779(union  A779 *x, const union  A779 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA779(const union  A779 *x, const union  A779 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA779() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A779), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A779, m0), 1);
		dcStructField(st, 'c', offsetof(union  A779, m1), 1);
		dcStructField(st, 'd', offsetof(union  A779, m2), 1);
		dcStructField(st, 'p', offsetof(union  A779, m3), 1);
		dcStructField(st, 'j', offsetof(union  A779, m4), 1);
		dcStructField(st, 'p', offsetof(union  A779, m5), 1);
		dcStructField(st, 'c', offsetof(union  A779, m6), 1);
		dcStructField(st, 'd', offsetof(union  A779, m7), 1);
		dcStructField(st, 'l', offsetof(union  A779, m8), 1);
		dcStructField(st, 's', offsetof(union  A779, m9), 1);
		dcStructField(st, 's', offsetof(union  A779, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jci{liijp}jcfd<jildid><ccdpjpcdlss>icf} */
struct A780 { j m0; c m1; i m2; struct A777 m3; j m4; c m5; f m6; d m7; union  A778 m8; union  A779 m9; i m10; c m11; f m12; };
void f_cpA780(struct A780 *x, const struct A780 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA777(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA778(&x->m8, &y->m8); f_cpA779(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA780(const struct A780 *x, const struct A780 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA777(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA778(&x->m8, &y->m8) && f_cmpA779(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA780() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A780), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A780, m0), 1);
		dcStructField(st, 'c', offsetof(struct A780, m1), 1);
		dcStructField(st, 'i', offsetof(struct A780, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A780, m3), 1, f_touchdcstA777());
		dcStructField(st, 'j', offsetof(struct A780, m4), 1);
		dcStructField(st, 'c', offsetof(struct A780, m5), 1);
		dcStructField(st, 'f', offsetof(struct A780, m6), 1);
		dcStructField(st, 'd', offsetof(struct A780, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A780, m8), 1, f_touchdcstA778());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A780, m9), 1, f_touchdcstA779());
		dcStructField(st, 'i', offsetof(struct A780, m10), 1);
		dcStructField(st, 'c', offsetof(struct A780, m11), 1);
		dcStructField(st, 'f', offsetof(struct A780, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfjdjfj{jci{liijp}jcfd<jildid><ccdpjpcdlss>icf}> */
union  A781 { d m0; f m1; j m2; d m3; j m4; f m5; j m6; struct A780 m7; };
void f_cpA781(union  A781 *x, const union  A781 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA780(&x->m7, &y->m7); };
int f_cmpA781(const union  A781 *x, const union  A781 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA780(&x->m7, &y->m7); };
DCstruct* f_touchdcstA781() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A781), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A781, m0), 1);
		dcStructField(st, 'f', offsetof(union  A781, m1), 1);
		dcStructField(st, 'j', offsetof(union  A781, m2), 1);
		dcStructField(st, 'd', offsetof(union  A781, m3), 1);
		dcStructField(st, 'j', offsetof(union  A781, m4), 1);
		dcStructField(st, 'f', offsetof(union  A781, m5), 1);
		dcStructField(st, 'j', offsetof(union  A781, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A781, m7), 1, f_touchdcstA780());
		dcCloseStruct(st);
	}
	return st;
};
/* <lpcpcflsf> */
union  A782 { l m0; p m1; c m2; p m3; c m4; f m5; l m6; s m7; f m8; };
void f_cpA782(union  A782 *x, const union  A782 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA782(const union  A782 *x, const union  A782 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA782() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A782), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A782, m0), 1);
		dcStructField(st, 'p', offsetof(union  A782, m1), 1);
		dcStructField(st, 'c', offsetof(union  A782, m2), 1);
		dcStructField(st, 'p', offsetof(union  A782, m3), 1);
		dcStructField(st, 'c', offsetof(union  A782, m4), 1);
		dcStructField(st, 'f', offsetof(union  A782, m5), 1);
		dcStructField(st, 'l', offsetof(union  A782, m6), 1);
		dcStructField(st, 's', offsetof(union  A782, m7), 1);
		dcStructField(st, 'f', offsetof(union  A782, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dllijc} */
struct A783 { d m0; l m1; l m2; i m3; j m4; c m5; };
void f_cpA783(struct A783 *x, const struct A783 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA783(const struct A783 *x, const struct A783 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA783() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A783), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A783, m0), 1);
		dcStructField(st, 'l', offsetof(struct A783, m1), 1);
		dcStructField(st, 'l', offsetof(struct A783, m2), 1);
		dcStructField(st, 'i', offsetof(struct A783, m3), 1);
		dcStructField(st, 'j', offsetof(struct A783, m4), 1);
		dcStructField(st, 'c', offsetof(struct A783, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{dllijc}dcljp> */
union  A784 { struct A783 m0; d m1; c m2; l m3; j m4; p m5; };
void f_cpA784(union  A784 *x, const union  A784 *y) { f_cpA783(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA784(const union  A784 *x, const union  A784 *y) { return f_cmpA783(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA784() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A784), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A784, m0), 1, f_touchdcstA783());
		dcStructField(st, 'd', offsetof(union  A784, m1), 1);
		dcStructField(st, 'c', offsetof(union  A784, m2), 1);
		dcStructField(st, 'l', offsetof(union  A784, m3), 1);
		dcStructField(st, 'j', offsetof(union  A784, m4), 1);
		dcStructField(st, 'p', offsetof(union  A784, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djpfi} */
struct A785 { d m0; j m1; p m2; f m3; i m4; };
void f_cpA785(struct A785 *x, const struct A785 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA785(const struct A785 *x, const struct A785 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA785() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A785), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A785, m0), 1);
		dcStructField(st, 'j', offsetof(struct A785, m1), 1);
		dcStructField(st, 'p', offsetof(struct A785, m2), 1);
		dcStructField(st, 'f', offsetof(struct A785, m3), 1);
		dcStructField(st, 'i', offsetof(struct A785, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{j}jildcip<{dllijc}dcljp>d{djpfi}iicdcipisplppscpfj> */
union  A786 { struct A303 m0; j m1; i m2; l m3; d m4; c m5; i m6; p m7; union  A784 m8; d m9; struct A785 m10; i m11; i m12; c m13; d m14; c m15; i m16; p m17; i m18; s m19; p m20; l m21; p m22; p m23; s m24; c m25; p m26; f m27; j m28; };
void f_cpA786(union  A786 *x, const union  A786 *y) { f_cpA303(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA784(&x->m8, &y->m8); x->m9 = y->m9; f_cpA785(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA786(const union  A786 *x, const union  A786 *y) { return f_cmpA303(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA784(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA785(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA786() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(union  A786), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A786, m0), 1, f_touchdcstA303());
		dcStructField(st, 'j', offsetof(union  A786, m1), 1);
		dcStructField(st, 'i', offsetof(union  A786, m2), 1);
		dcStructField(st, 'l', offsetof(union  A786, m3), 1);
		dcStructField(st, 'd', offsetof(union  A786, m4), 1);
		dcStructField(st, 'c', offsetof(union  A786, m5), 1);
		dcStructField(st, 'i', offsetof(union  A786, m6), 1);
		dcStructField(st, 'p', offsetof(union  A786, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A786, m8), 1, f_touchdcstA784());
		dcStructField(st, 'd', offsetof(union  A786, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A786, m10), 1, f_touchdcstA785());
		dcStructField(st, 'i', offsetof(union  A786, m11), 1);
		dcStructField(st, 'i', offsetof(union  A786, m12), 1);
		dcStructField(st, 'c', offsetof(union  A786, m13), 1);
		dcStructField(st, 'd', offsetof(union  A786, m14), 1);
		dcStructField(st, 'c', offsetof(union  A786, m15), 1);
		dcStructField(st, 'i', offsetof(union  A786, m16), 1);
		dcStructField(st, 'p', offsetof(union  A786, m17), 1);
		dcStructField(st, 'i', offsetof(union  A786, m18), 1);
		dcStructField(st, 's', offsetof(union  A786, m19), 1);
		dcStructField(st, 'p', offsetof(union  A786, m20), 1);
		dcStructField(st, 'l', offsetof(union  A786, m21), 1);
		dcStructField(st, 'p', offsetof(union  A786, m22), 1);
		dcStructField(st, 'p', offsetof(union  A786, m23), 1);
		dcStructField(st, 's', offsetof(union  A786, m24), 1);
		dcStructField(st, 'c', offsetof(union  A786, m25), 1);
		dcStructField(st, 'p', offsetof(union  A786, m26), 1);
		dcStructField(st, 'f', offsetof(union  A786, m27), 1);
		dcStructField(st, 'j', offsetof(union  A786, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ifjfdsdsff> */
union  A787 { i m0; f m1; j m2; f m3; d m4; s m5; d m6; s m7; f m8; f m9; };
void f_cpA787(union  A787 *x, const union  A787 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA787(const union  A787 *x, const union  A787 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA787() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A787), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A787, m0), 1);
		dcStructField(st, 'f', offsetof(union  A787, m1), 1);
		dcStructField(st, 'j', offsetof(union  A787, m2), 1);
		dcStructField(st, 'f', offsetof(union  A787, m3), 1);
		dcStructField(st, 'd', offsetof(union  A787, m4), 1);
		dcStructField(st, 's', offsetof(union  A787, m5), 1);
		dcStructField(st, 'd', offsetof(union  A787, m6), 1);
		dcStructField(st, 's', offsetof(union  A787, m7), 1);
		dcStructField(st, 'f', offsetof(union  A787, m8), 1);
		dcStructField(st, 'f', offsetof(union  A787, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pipicf> */
union  A788 { p m0; i m1; p m2; i m3; c m4; f m5; };
void f_cpA788(union  A788 *x, const union  A788 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA788(const union  A788 *x, const union  A788 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA788() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A788), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A788, m0), 1);
		dcStructField(st, 'i', offsetof(union  A788, m1), 1);
		dcStructField(st, 'p', offsetof(union  A788, m2), 1);
		dcStructField(st, 'i', offsetof(union  A788, m3), 1);
		dcStructField(st, 'c', offsetof(union  A788, m4), 1);
		dcStructField(st, 'f', offsetof(union  A788, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffd<ifjfdsdsff>jfif<pipicf>} */
struct A789 { f m0; f m1; d m2; union  A787 m3; j m4; f m5; i m6; f m7; union  A788 m8; };
void f_cpA789(struct A789 *x, const struct A789 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA787(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA788(&x->m8, &y->m8); };
int f_cmpA789(const struct A789 *x, const struct A789 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA787(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA788(&x->m8, &y->m8); };
DCstruct* f_touchdcstA789() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A789), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A789, m0), 1);
		dcStructField(st, 'f', offsetof(struct A789, m1), 1);
		dcStructField(st, 'd', offsetof(struct A789, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A789, m3), 1, f_touchdcstA787());
		dcStructField(st, 'j', offsetof(struct A789, m4), 1);
		dcStructField(st, 'f', offsetof(struct A789, m5), 1);
		dcStructField(st, 'i', offsetof(struct A789, m6), 1);
		dcStructField(st, 'f', offsetof(struct A789, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A789, m8), 1, f_touchdcstA788());
		dcCloseStruct(st);
	}
	return st;
};
/* {dji} */
struct A790 { d m0; j m1; i m2; };
void f_cpA790(struct A790 *x, const struct A790 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA790(const struct A790 *x, const struct A790 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA790() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A790), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A790, m0), 1);
		dcStructField(st, 'j', offsetof(struct A790, m1), 1);
		dcStructField(st, 'i', offsetof(struct A790, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ic{l}> */
union  A791 { i m0; c m1; struct A51 m2; };
void f_cpA791(union  A791 *x, const union  A791 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA51(&x->m2, &y->m2); };
int f_cmpA791(const union  A791 *x, const union  A791 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA51(&x->m2, &y->m2); };
DCstruct* f_touchdcstA791() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A791), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A791, m0), 1);
		dcStructField(st, 'c', offsetof(union  A791, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A791, m2), 1, f_touchdcstA51());
		dcCloseStruct(st);
	}
	return st;
};
/* {pcfdcpijfj} */
struct A792 { p m0; c m1; f m2; d m3; c m4; p m5; i m6; j m7; f m8; j m9; };
void f_cpA792(struct A792 *x, const struct A792 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA792(const struct A792 *x, const struct A792 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA792() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A792), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A792, m0), 1);
		dcStructField(st, 'c', offsetof(struct A792, m1), 1);
		dcStructField(st, 'f', offsetof(struct A792, m2), 1);
		dcStructField(st, 'd', offsetof(struct A792, m3), 1);
		dcStructField(st, 'c', offsetof(struct A792, m4), 1);
		dcStructField(st, 'p', offsetof(struct A792, m5), 1);
		dcStructField(st, 'i', offsetof(struct A792, m6), 1);
		dcStructField(st, 'j', offsetof(struct A792, m7), 1);
		dcStructField(st, 'f', offsetof(struct A792, m8), 1);
		dcStructField(st, 'j', offsetof(struct A792, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lilipjcjcij} */
struct A793 { l m0; i m1; l m2; i m3; p m4; j m5; c m6; j m7; c m8; i m9; j m10; };
void f_cpA793(struct A793 *x, const struct A793 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA793(const struct A793 *x, const struct A793 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA793() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A793), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A793, m0), 1);
		dcStructField(st, 'i', offsetof(struct A793, m1), 1);
		dcStructField(st, 'l', offsetof(struct A793, m2), 1);
		dcStructField(st, 'i', offsetof(struct A793, m3), 1);
		dcStructField(st, 'p', offsetof(struct A793, m4), 1);
		dcStructField(st, 'j', offsetof(struct A793, m5), 1);
		dcStructField(st, 'c', offsetof(struct A793, m6), 1);
		dcStructField(st, 'j', offsetof(struct A793, m7), 1);
		dcStructField(st, 'c', offsetof(struct A793, m8), 1);
		dcStructField(st, 'i', offsetof(struct A793, m9), 1);
		dcStructField(st, 'j', offsetof(struct A793, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ffjidl<s>{pcfdcpijfj}{lilipjcjcij}<pl>> */
union  A794 { f m0; f m1; j m2; i m3; d m4; l m5; union  A75 m6; struct A792 m7; struct A793 m8; union  A494 m9; };
void f_cpA794(union  A794 *x, const union  A794 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA75(&x->m6, &y->m6); f_cpA792(&x->m7, &y->m7); f_cpA793(&x->m8, &y->m8); f_cpA494(&x->m9, &y->m9); };
int f_cmpA794(const union  A794 *x, const union  A794 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA75(&x->m6, &y->m6) && f_cmpA792(&x->m7, &y->m7) && f_cmpA793(&x->m8, &y->m8) && f_cmpA494(&x->m9, &y->m9); };
DCstruct* f_touchdcstA794() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A794), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A794, m0), 1);
		dcStructField(st, 'f', offsetof(union  A794, m1), 1);
		dcStructField(st, 'j', offsetof(union  A794, m2), 1);
		dcStructField(st, 'i', offsetof(union  A794, m3), 1);
		dcStructField(st, 'd', offsetof(union  A794, m4), 1);
		dcStructField(st, 'l', offsetof(union  A794, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A794, m6), 1, f_touchdcstA75());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A794, m7), 1, f_touchdcstA792());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A794, m8), 1, f_touchdcstA793());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A794, m9), 1, f_touchdcstA494());
		dcCloseStruct(st);
	}
	return st;
};
/* <idssjjpf> */
union  A795 { i m0; d m1; s m2; s m3; j m4; j m5; p m6; f m7; };
void f_cpA795(union  A795 *x, const union  A795 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA795(const union  A795 *x, const union  A795 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA795() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A795), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A795, m0), 1);
		dcStructField(st, 'd', offsetof(union  A795, m1), 1);
		dcStructField(st, 's', offsetof(union  A795, m2), 1);
		dcStructField(st, 's', offsetof(union  A795, m3), 1);
		dcStructField(st, 'j', offsetof(union  A795, m4), 1);
		dcStructField(st, 'j', offsetof(union  A795, m5), 1);
		dcStructField(st, 'p', offsetof(union  A795, m6), 1);
		dcStructField(st, 'f', offsetof(union  A795, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {liipfd} */
struct A796 { l m0; i m1; i m2; p m3; f m4; d m5; };
void f_cpA796(struct A796 *x, const struct A796 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA796(const struct A796 *x, const struct A796 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA796() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A796), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A796, m0), 1);
		dcStructField(st, 'i', offsetof(struct A796, m1), 1);
		dcStructField(st, 'i', offsetof(struct A796, m2), 1);
		dcStructField(st, 'p', offsetof(struct A796, m3), 1);
		dcStructField(st, 'f', offsetof(struct A796, m4), 1);
		dcStructField(st, 'd', offsetof(struct A796, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdcsdipjfciclpjd} */
struct A797 { s m0; d m1; c m2; s m3; d m4; i m5; p m6; j m7; f m8; c m9; i m10; c m11; l m12; p m13; j m14; d m15; };
void f_cpA797(struct A797 *x, const struct A797 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA797(const struct A797 *x, const struct A797 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA797() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A797), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A797, m0), 1);
		dcStructField(st, 'd', offsetof(struct A797, m1), 1);
		dcStructField(st, 'c', offsetof(struct A797, m2), 1);
		dcStructField(st, 's', offsetof(struct A797, m3), 1);
		dcStructField(st, 'd', offsetof(struct A797, m4), 1);
		dcStructField(st, 'i', offsetof(struct A797, m5), 1);
		dcStructField(st, 'p', offsetof(struct A797, m6), 1);
		dcStructField(st, 'j', offsetof(struct A797, m7), 1);
		dcStructField(st, 'f', offsetof(struct A797, m8), 1);
		dcStructField(st, 'c', offsetof(struct A797, m9), 1);
		dcStructField(st, 'i', offsetof(struct A797, m10), 1);
		dcStructField(st, 'c', offsetof(struct A797, m11), 1);
		dcStructField(st, 'l', offsetof(struct A797, m12), 1);
		dcStructField(st, 'p', offsetof(struct A797, m13), 1);
		dcStructField(st, 'j', offsetof(struct A797, m14), 1);
		dcStructField(st, 'd', offsetof(struct A797, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{sdcsdipjfciclpjd}lj> */
union  A798 { struct A797 m0; l m1; j m2; };
void f_cpA798(union  A798 *x, const union  A798 *y) { f_cpA797(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA798(const union  A798 *x, const union  A798 *y) { return f_cmpA797(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA798() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A798), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A798, m0), 1, f_touchdcstA797());
		dcStructField(st, 'l', offsetof(union  A798, m1), 1);
		dcStructField(st, 'j', offsetof(union  A798, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fsssij> */
union  A799 { f m0; s m1; s m2; s m3; i m4; j m5; };
void f_cpA799(union  A799 *x, const union  A799 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA799(const union  A799 *x, const union  A799 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA799() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A799), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A799, m0), 1);
		dcStructField(st, 's', offsetof(union  A799, m1), 1);
		dcStructField(st, 's', offsetof(union  A799, m2), 1);
		dcStructField(st, 's', offsetof(union  A799, m3), 1);
		dcStructField(st, 'i', offsetof(union  A799, m4), 1);
		dcStructField(st, 'j', offsetof(union  A799, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipicfflpfcc} */
struct A800 { i m0; p m1; i m2; c m3; f m4; f m5; l m6; p m7; f m8; c m9; c m10; };
void f_cpA800(struct A800 *x, const struct A800 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA800(const struct A800 *x, const struct A800 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA800() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A800), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A800, m0), 1);
		dcStructField(st, 'p', offsetof(struct A800, m1), 1);
		dcStructField(st, 'i', offsetof(struct A800, m2), 1);
		dcStructField(st, 'c', offsetof(struct A800, m3), 1);
		dcStructField(st, 'f', offsetof(struct A800, m4), 1);
		dcStructField(st, 'f', offsetof(struct A800, m5), 1);
		dcStructField(st, 'l', offsetof(struct A800, m6), 1);
		dcStructField(st, 'p', offsetof(struct A800, m7), 1);
		dcStructField(st, 'f', offsetof(struct A800, m8), 1);
		dcStructField(st, 'c', offsetof(struct A800, m9), 1);
		dcStructField(st, 'c', offsetof(struct A800, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d<fsssij>d{ipicfflpfcc}> */
union  A801 { d m0; union  A799 m1; d m2; struct A800 m3; };
void f_cpA801(union  A801 *x, const union  A801 *y) { x->m0 = y->m0; f_cpA799(&x->m1, &y->m1); x->m2 = y->m2; f_cpA800(&x->m3, &y->m3); };
int f_cmpA801(const union  A801 *x, const union  A801 *y) { return x->m0 == y->m0 && f_cmpA799(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA800(&x->m3, &y->m3); };
DCstruct* f_touchdcstA801() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A801), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A801, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A801, m1), 1, f_touchdcstA799());
		dcStructField(st, 'd', offsetof(union  A801, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A801, m3), 1, f_touchdcstA800());
		dcCloseStruct(st);
	}
	return st;
};
/* {d<d<fsssij>d{ipicfflpfcc}>{l}ljlflppd} */
struct A802 { d m0; union  A801 m1; struct A51 m2; l m3; j m4; l m5; f m6; l m7; p m8; p m9; d m10; };
void f_cpA802(struct A802 *x, const struct A802 *y) { x->m0 = y->m0; f_cpA801(&x->m1, &y->m1); f_cpA51(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA802(const struct A802 *x, const struct A802 *y) { return x->m0 == y->m0 && f_cmpA801(&x->m1, &y->m1) && f_cmpA51(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA802() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A802), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A802, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A802, m1), 1, f_touchdcstA801());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A802, m2), 1, f_touchdcstA51());
		dcStructField(st, 'l', offsetof(struct A802, m3), 1);
		dcStructField(st, 'j', offsetof(struct A802, m4), 1);
		dcStructField(st, 'l', offsetof(struct A802, m5), 1);
		dcStructField(st, 'f', offsetof(struct A802, m6), 1);
		dcStructField(st, 'l', offsetof(struct A802, m7), 1);
		dcStructField(st, 'p', offsetof(struct A802, m8), 1);
		dcStructField(st, 'p', offsetof(struct A802, m9), 1);
		dcStructField(st, 'd', offsetof(struct A802, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djdsfjlflcsdpdssdpis> */
union  A803 { d m0; j m1; d m2; s m3; f m4; j m5; l m6; f m7; l m8; c m9; s m10; d m11; p m12; d m13; s m14; s m15; d m16; p m17; i m18; s m19; };
void f_cpA803(union  A803 *x, const union  A803 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA803(const union  A803 *x, const union  A803 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA803() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A803), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A803, m0), 1);
		dcStructField(st, 'j', offsetof(union  A803, m1), 1);
		dcStructField(st, 'd', offsetof(union  A803, m2), 1);
		dcStructField(st, 's', offsetof(union  A803, m3), 1);
		dcStructField(st, 'f', offsetof(union  A803, m4), 1);
		dcStructField(st, 'j', offsetof(union  A803, m5), 1);
		dcStructField(st, 'l', offsetof(union  A803, m6), 1);
		dcStructField(st, 'f', offsetof(union  A803, m7), 1);
		dcStructField(st, 'l', offsetof(union  A803, m8), 1);
		dcStructField(st, 'c', offsetof(union  A803, m9), 1);
		dcStructField(st, 's', offsetof(union  A803, m10), 1);
		dcStructField(st, 'd', offsetof(union  A803, m11), 1);
		dcStructField(st, 'p', offsetof(union  A803, m12), 1);
		dcStructField(st, 'd', offsetof(union  A803, m13), 1);
		dcStructField(st, 's', offsetof(union  A803, m14), 1);
		dcStructField(st, 's', offsetof(union  A803, m15), 1);
		dcStructField(st, 'd', offsetof(union  A803, m16), 1);
		dcStructField(st, 'p', offsetof(union  A803, m17), 1);
		dcStructField(st, 'i', offsetof(union  A803, m18), 1);
		dcStructField(st, 's', offsetof(union  A803, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifc} */
struct A804 { i m0; f m1; c m2; };
void f_cpA804(struct A804 *x, const struct A804 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA804(const struct A804 *x, const struct A804 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA804() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A804), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A804, m0), 1);
		dcStructField(st, 'f', offsetof(struct A804, m1), 1);
		dcStructField(st, 'c', offsetof(struct A804, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilffldjjfpslliil} */
struct A805 { i m0; l m1; f m2; f m3; l m4; d m5; j m6; j m7; f m8; p m9; s m10; l m11; l m12; i m13; i m14; l m15; };
void f_cpA805(struct A805 *x, const struct A805 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA805(const struct A805 *x, const struct A805 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA805() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A805), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A805, m0), 1);
		dcStructField(st, 'l', offsetof(struct A805, m1), 1);
		dcStructField(st, 'f', offsetof(struct A805, m2), 1);
		dcStructField(st, 'f', offsetof(struct A805, m3), 1);
		dcStructField(st, 'l', offsetof(struct A805, m4), 1);
		dcStructField(st, 'd', offsetof(struct A805, m5), 1);
		dcStructField(st, 'j', offsetof(struct A805, m6), 1);
		dcStructField(st, 'j', offsetof(struct A805, m7), 1);
		dcStructField(st, 'f', offsetof(struct A805, m8), 1);
		dcStructField(st, 'p', offsetof(struct A805, m9), 1);
		dcStructField(st, 's', offsetof(struct A805, m10), 1);
		dcStructField(st, 'l', offsetof(struct A805, m11), 1);
		dcStructField(st, 'l', offsetof(struct A805, m12), 1);
		dcStructField(st, 'i', offsetof(struct A805, m13), 1);
		dcStructField(st, 'i', offsetof(struct A805, m14), 1);
		dcStructField(st, 'l', offsetof(struct A805, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cjdfc> */
union  A806 { c m0; j m1; d m2; f m3; c m4; };
void f_cpA806(union  A806 *x, const union  A806 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA806(const union  A806 *x, const union  A806 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA806() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A806), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A806, m0), 1);
		dcStructField(st, 'j', offsetof(union  A806, m1), 1);
		dcStructField(st, 'd', offsetof(union  A806, m2), 1);
		dcStructField(st, 'f', offsetof(union  A806, m3), 1);
		dcStructField(st, 'c', offsetof(union  A806, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fdfslsldplcls> */
union  A807 { f m0; d m1; f m2; s m3; l m4; s m5; l m6; d m7; p m8; l m9; c m10; l m11; s m12; };
void f_cpA807(union  A807 *x, const union  A807 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA807(const union  A807 *x, const union  A807 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA807() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A807), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A807, m0), 1);
		dcStructField(st, 'd', offsetof(union  A807, m1), 1);
		dcStructField(st, 'f', offsetof(union  A807, m2), 1);
		dcStructField(st, 's', offsetof(union  A807, m3), 1);
		dcStructField(st, 'l', offsetof(union  A807, m4), 1);
		dcStructField(st, 's', offsetof(union  A807, m5), 1);
		dcStructField(st, 'l', offsetof(union  A807, m6), 1);
		dcStructField(st, 'd', offsetof(union  A807, m7), 1);
		dcStructField(st, 'p', offsetof(union  A807, m8), 1);
		dcStructField(st, 'l', offsetof(union  A807, m9), 1);
		dcStructField(st, 'c', offsetof(union  A807, m10), 1);
		dcStructField(st, 'l', offsetof(union  A807, m11), 1);
		dcStructField(st, 's', offsetof(union  A807, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcdsicjldpljcs} */
struct A808 { d m0; c m1; d m2; s m3; i m4; c m5; j m6; l m7; d m8; p m9; l m10; j m11; c m12; s m13; };
void f_cpA808(struct A808 *x, const struct A808 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA808(const struct A808 *x, const struct A808 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA808() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A808), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A808, m0), 1);
		dcStructField(st, 'c', offsetof(struct A808, m1), 1);
		dcStructField(st, 'd', offsetof(struct A808, m2), 1);
		dcStructField(st, 's', offsetof(struct A808, m3), 1);
		dcStructField(st, 'i', offsetof(struct A808, m4), 1);
		dcStructField(st, 'c', offsetof(struct A808, m5), 1);
		dcStructField(st, 'j', offsetof(struct A808, m6), 1);
		dcStructField(st, 'l', offsetof(struct A808, m7), 1);
		dcStructField(st, 'd', offsetof(struct A808, m8), 1);
		dcStructField(st, 'p', offsetof(struct A808, m9), 1);
		dcStructField(st, 'l', offsetof(struct A808, m10), 1);
		dcStructField(st, 'j', offsetof(struct A808, m11), 1);
		dcStructField(st, 'c', offsetof(struct A808, m12), 1);
		dcStructField(st, 's', offsetof(struct A808, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjpspdd<fdfslsldplcls>fjicl{dcdsicjldpljcs}p} */
struct A809 { s m0; j m1; p m2; s m3; p m4; d m5; d m6; union  A807 m7; f m8; j m9; i m10; c m11; l m12; struct A808 m13; p m14; };
void f_cpA809(struct A809 *x, const struct A809 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA807(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA808(&x->m13, &y->m13); x->m14 = y->m14; };
int f_cmpA809(const struct A809 *x, const struct A809 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA807(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA808(&x->m13, &y->m13) && x->m14 == y->m14; };
DCstruct* f_touchdcstA809() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A809), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A809, m0), 1);
		dcStructField(st, 'j', offsetof(struct A809, m1), 1);
		dcStructField(st, 'p', offsetof(struct A809, m2), 1);
		dcStructField(st, 's', offsetof(struct A809, m3), 1);
		dcStructField(st, 'p', offsetof(struct A809, m4), 1);
		dcStructField(st, 'd', offsetof(struct A809, m5), 1);
		dcStructField(st, 'd', offsetof(struct A809, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A809, m7), 1, f_touchdcstA807());
		dcStructField(st, 'f', offsetof(struct A809, m8), 1);
		dcStructField(st, 'j', offsetof(struct A809, m9), 1);
		dcStructField(st, 'i', offsetof(struct A809, m10), 1);
		dcStructField(st, 'c', offsetof(struct A809, m11), 1);
		dcStructField(st, 'l', offsetof(struct A809, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A809, m13), 1, f_touchdcstA808());
		dcStructField(st, 'p', offsetof(struct A809, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {illsfls} */
struct A810 { i m0; l m1; l m2; s m3; f m4; l m5; s m6; };
void f_cpA810(struct A810 *x, const struct A810 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA810(const struct A810 *x, const struct A810 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA810() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A810), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A810, m0), 1);
		dcStructField(st, 'l', offsetof(struct A810, m1), 1);
		dcStructField(st, 'l', offsetof(struct A810, m2), 1);
		dcStructField(st, 's', offsetof(struct A810, m3), 1);
		dcStructField(st, 'f', offsetof(struct A810, m4), 1);
		dcStructField(st, 'l', offsetof(struct A810, m5), 1);
		dcStructField(st, 's', offsetof(struct A810, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sj} */
struct A811 { s m0; j m1; };
void f_cpA811(struct A811 *x, const struct A811 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA811(const struct A811 *x, const struct A811 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA811() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A811), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A811, m0), 1);
		dcStructField(st, 'j', offsetof(struct A811, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iiflsf} */
struct A812 { i m0; i m1; f m2; l m3; s m4; f m5; };
void f_cpA812(struct A812 *x, const struct A812 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA812(const struct A812 *x, const struct A812 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA812() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A812), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A812, m0), 1);
		dcStructField(st, 'i', offsetof(struct A812, m1), 1);
		dcStructField(st, 'f', offsetof(struct A812, m2), 1);
		dcStructField(st, 'l', offsetof(struct A812, m3), 1);
		dcStructField(st, 's', offsetof(struct A812, m4), 1);
		dcStructField(st, 'f', offsetof(struct A812, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdplfi> */
union  A813 { j m0; d m1; p m2; l m3; f m4; i m5; };
void f_cpA813(union  A813 *x, const union  A813 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA813(const union  A813 *x, const union  A813 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA813() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A813), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A813, m0), 1);
		dcStructField(st, 'd', offsetof(union  A813, m1), 1);
		dcStructField(st, 'p', offsetof(union  A813, m2), 1);
		dcStructField(st, 'l', offsetof(union  A813, m3), 1);
		dcStructField(st, 'f', offsetof(union  A813, m4), 1);
		dcStructField(st, 'i', offsetof(union  A813, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcljcdjpfccfipdils} */
struct A814 { d m0; c m1; l m2; j m3; c m4; d m5; j m6; p m7; f m8; c m9; c m10; f m11; i m12; p m13; d m14; i m15; l m16; s m17; };
void f_cpA814(struct A814 *x, const struct A814 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA814(const struct A814 *x, const struct A814 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA814() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A814), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A814, m0), 1);
		dcStructField(st, 'c', offsetof(struct A814, m1), 1);
		dcStructField(st, 'l', offsetof(struct A814, m2), 1);
		dcStructField(st, 'j', offsetof(struct A814, m3), 1);
		dcStructField(st, 'c', offsetof(struct A814, m4), 1);
		dcStructField(st, 'd', offsetof(struct A814, m5), 1);
		dcStructField(st, 'j', offsetof(struct A814, m6), 1);
		dcStructField(st, 'p', offsetof(struct A814, m7), 1);
		dcStructField(st, 'f', offsetof(struct A814, m8), 1);
		dcStructField(st, 'c', offsetof(struct A814, m9), 1);
		dcStructField(st, 'c', offsetof(struct A814, m10), 1);
		dcStructField(st, 'f', offsetof(struct A814, m11), 1);
		dcStructField(st, 'i', offsetof(struct A814, m12), 1);
		dcStructField(st, 'p', offsetof(struct A814, m13), 1);
		dcStructField(st, 'd', offsetof(struct A814, m14), 1);
		dcStructField(st, 'i', offsetof(struct A814, m15), 1);
		dcStructField(st, 'l', offsetof(struct A814, m16), 1);
		dcStructField(st, 's', offsetof(struct A814, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfjfd> */
union  A815 { d m0; f m1; j m2; f m3; d m4; };
void f_cpA815(union  A815 *x, const union  A815 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA815(const union  A815 *x, const union  A815 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA815() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A815), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A815, m0), 1);
		dcStructField(st, 'f', offsetof(union  A815, m1), 1);
		dcStructField(st, 'j', offsetof(union  A815, m2), 1);
		dcStructField(st, 'f', offsetof(union  A815, m3), 1);
		dcStructField(st, 'd', offsetof(union  A815, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fip{illsfls}lj{sj}icjc{iiflsf}s<jdplfi>{dcljcdjpfccfipdils}d<dfjfd>fjji} */
struct A816 { f m0; i m1; p m2; struct A810 m3; l m4; j m5; struct A811 m6; i m7; c m8; j m9; c m10; struct A812 m11; s m12; union  A813 m13; struct A814 m14; d m15; union  A815 m16; f m17; j m18; j m19; i m20; };
void f_cpA816(struct A816 *x, const struct A816 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA810(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA811(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA812(&x->m11, &y->m11); x->m12 = y->m12; f_cpA813(&x->m13, &y->m13); f_cpA814(&x->m14, &y->m14); x->m15 = y->m15; f_cpA815(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA816(const struct A816 *x, const struct A816 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA810(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA811(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA812(&x->m11, &y->m11) && x->m12 == y->m12 && f_cmpA813(&x->m13, &y->m13) && f_cmpA814(&x->m14, &y->m14) && x->m15 == y->m15 && f_cmpA815(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA816() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A816), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A816, m0), 1);
		dcStructField(st, 'i', offsetof(struct A816, m1), 1);
		dcStructField(st, 'p', offsetof(struct A816, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A816, m3), 1, f_touchdcstA810());
		dcStructField(st, 'l', offsetof(struct A816, m4), 1);
		dcStructField(st, 'j', offsetof(struct A816, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A816, m6), 1, f_touchdcstA811());
		dcStructField(st, 'i', offsetof(struct A816, m7), 1);
		dcStructField(st, 'c', offsetof(struct A816, m8), 1);
		dcStructField(st, 'j', offsetof(struct A816, m9), 1);
		dcStructField(st, 'c', offsetof(struct A816, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A816, m11), 1, f_touchdcstA812());
		dcStructField(st, 's', offsetof(struct A816, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A816, m13), 1, f_touchdcstA813());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A816, m14), 1, f_touchdcstA814());
		dcStructField(st, 'd', offsetof(struct A816, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A816, m16), 1, f_touchdcstA815());
		dcStructField(st, 'f', offsetof(struct A816, m17), 1);
		dcStructField(st, 'j', offsetof(struct A816, m18), 1);
		dcStructField(st, 'j', offsetof(struct A816, m19), 1);
		dcStructField(st, 'i', offsetof(struct A816, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cd{sjpspdd<fdfslsldplcls>fjicl{dcdsicjldpljcs}p}{fip{illsfls}lj{sj}icjc{iiflsf}s<jdplfi>{dcljcdjpfccfipdils}d<dfjfd>fjji}} */
struct A817 { c m0; d m1; struct A809 m2; struct A816 m3; };
void f_cpA817(struct A817 *x, const struct A817 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA809(&x->m2, &y->m2); f_cpA816(&x->m3, &y->m3); };
int f_cmpA817(const struct A817 *x, const struct A817 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA809(&x->m2, &y->m2) && f_cmpA816(&x->m3, &y->m3); };
DCstruct* f_touchdcstA817() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A817), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A817, m0), 1);
		dcStructField(st, 'd', offsetof(struct A817, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A817, m2), 1, f_touchdcstA809());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A817, m3), 1, f_touchdcstA816());
		dcCloseStruct(st);
	}
	return st;
};
/* {cc{j}fldipd} */
struct A818 { c m0; c m1; struct A303 m2; f m3; l m4; d m5; i m6; p m7; d m8; };
void f_cpA818(struct A818 *x, const struct A818 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA303(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA818(const struct A818 *x, const struct A818 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA303(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA818() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A818), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A818, m0), 1);
		dcStructField(st, 'c', offsetof(struct A818, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A818, m2), 1, f_touchdcstA303());
		dcStructField(st, 'f', offsetof(struct A818, m3), 1);
		dcStructField(st, 'l', offsetof(struct A818, m4), 1);
		dcStructField(st, 'd', offsetof(struct A818, m5), 1);
		dcStructField(st, 'i', offsetof(struct A818, m6), 1);
		dcStructField(st, 'p', offsetof(struct A818, m7), 1);
		dcStructField(st, 'd', offsetof(struct A818, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dddlsp> */
union  A819 { d m0; d m1; d m2; l m3; s m4; p m5; };
void f_cpA819(union  A819 *x, const union  A819 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA819(const union  A819 *x, const union  A819 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA819() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A819), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A819, m0), 1);
		dcStructField(st, 'd', offsetof(union  A819, m1), 1);
		dcStructField(st, 'd', offsetof(union  A819, m2), 1);
		dcStructField(st, 'l', offsetof(union  A819, m3), 1);
		dcStructField(st, 's', offsetof(union  A819, m4), 1);
		dcStructField(st, 'p', offsetof(union  A819, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spjcfsll} */
struct A820 { s m0; p m1; j m2; c m3; f m4; s m5; l m6; l m7; };
void f_cpA820(struct A820 *x, const struct A820 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA820(const struct A820 *x, const struct A820 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA820() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A820), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A820, m0), 1);
		dcStructField(st, 'p', offsetof(struct A820, m1), 1);
		dcStructField(st, 'j', offsetof(struct A820, m2), 1);
		dcStructField(st, 'c', offsetof(struct A820, m3), 1);
		dcStructField(st, 'f', offsetof(struct A820, m4), 1);
		dcStructField(st, 's', offsetof(struct A820, m5), 1);
		dcStructField(st, 'l', offsetof(struct A820, m6), 1);
		dcStructField(st, 'l', offsetof(struct A820, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfc> */
union  A821 { p m0; f m1; c m2; };
void f_cpA821(union  A821 *x, const union  A821 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA821(const union  A821 *x, const union  A821 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA821() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A821), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A821, m0), 1);
		dcStructField(st, 'f', offsetof(union  A821, m1), 1);
		dcStructField(st, 'c', offsetof(union  A821, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sisjijicji} */
struct A822 { s m0; i m1; s m2; j m3; i m4; j m5; i m6; c m7; j m8; i m9; };
void f_cpA822(struct A822 *x, const struct A822 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA822(const struct A822 *x, const struct A822 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA822() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A822), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A822, m0), 1);
		dcStructField(st, 'i', offsetof(struct A822, m1), 1);
		dcStructField(st, 's', offsetof(struct A822, m2), 1);
		dcStructField(st, 'j', offsetof(struct A822, m3), 1);
		dcStructField(st, 'i', offsetof(struct A822, m4), 1);
		dcStructField(st, 'j', offsetof(struct A822, m5), 1);
		dcStructField(st, 'i', offsetof(struct A822, m6), 1);
		dcStructField(st, 'c', offsetof(struct A822, m7), 1);
		dcStructField(st, 'j', offsetof(struct A822, m8), 1);
		dcStructField(st, 'i', offsetof(struct A822, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jddpfdscssc<pfc><cf>l{sisjijicji}jcd} */
struct A823 { j m0; d m1; d m2; p m3; f m4; d m5; s m6; c m7; s m8; s m9; c m10; union  A821 m11; union  A525 m12; l m13; struct A822 m14; j m15; c m16; d m17; };
void f_cpA823(struct A823 *x, const struct A823 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA821(&x->m11, &y->m11); f_cpA525(&x->m12, &y->m12); x->m13 = y->m13; f_cpA822(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA823(const struct A823 *x, const struct A823 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA821(&x->m11, &y->m11) && f_cmpA525(&x->m12, &y->m12) && x->m13 == y->m13 && f_cmpA822(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA823() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A823), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A823, m0), 1);
		dcStructField(st, 'd', offsetof(struct A823, m1), 1);
		dcStructField(st, 'd', offsetof(struct A823, m2), 1);
		dcStructField(st, 'p', offsetof(struct A823, m3), 1);
		dcStructField(st, 'f', offsetof(struct A823, m4), 1);
		dcStructField(st, 'd', offsetof(struct A823, m5), 1);
		dcStructField(st, 's', offsetof(struct A823, m6), 1);
		dcStructField(st, 'c', offsetof(struct A823, m7), 1);
		dcStructField(st, 's', offsetof(struct A823, m8), 1);
		dcStructField(st, 's', offsetof(struct A823, m9), 1);
		dcStructField(st, 'c', offsetof(struct A823, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A823, m11), 1, f_touchdcstA821());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A823, m12), 1, f_touchdcstA525());
		dcStructField(st, 'l', offsetof(struct A823, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A823, m14), 1, f_touchdcstA822());
		dcStructField(st, 'j', offsetof(struct A823, m15), 1);
		dcStructField(st, 'c', offsetof(struct A823, m16), 1);
		dcStructField(st, 'd', offsetof(struct A823, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlsisipdsijpsdsjpjjsc} */
struct A824 { j m0; l m1; s m2; i m3; s m4; i m5; p m6; d m7; s m8; i m9; j m10; p m11; s m12; d m13; s m14; j m15; p m16; j m17; j m18; s m19; c m20; };
void f_cpA824(struct A824 *x, const struct A824 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA824(const struct A824 *x, const struct A824 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA824() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A824), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A824, m0), 1);
		dcStructField(st, 'l', offsetof(struct A824, m1), 1);
		dcStructField(st, 's', offsetof(struct A824, m2), 1);
		dcStructField(st, 'i', offsetof(struct A824, m3), 1);
		dcStructField(st, 's', offsetof(struct A824, m4), 1);
		dcStructField(st, 'i', offsetof(struct A824, m5), 1);
		dcStructField(st, 'p', offsetof(struct A824, m6), 1);
		dcStructField(st, 'd', offsetof(struct A824, m7), 1);
		dcStructField(st, 's', offsetof(struct A824, m8), 1);
		dcStructField(st, 'i', offsetof(struct A824, m9), 1);
		dcStructField(st, 'j', offsetof(struct A824, m10), 1);
		dcStructField(st, 'p', offsetof(struct A824, m11), 1);
		dcStructField(st, 's', offsetof(struct A824, m12), 1);
		dcStructField(st, 'd', offsetof(struct A824, m13), 1);
		dcStructField(st, 's', offsetof(struct A824, m14), 1);
		dcStructField(st, 'j', offsetof(struct A824, m15), 1);
		dcStructField(st, 'p', offsetof(struct A824, m16), 1);
		dcStructField(st, 'j', offsetof(struct A824, m17), 1);
		dcStructField(st, 'j', offsetof(struct A824, m18), 1);
		dcStructField(st, 's', offsetof(struct A824, m19), 1);
		dcStructField(st, 'c', offsetof(struct A824, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fj} */
struct A825 { f m0; j m1; };
void f_cpA825(struct A825 *x, const struct A825 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA825(const struct A825 *x, const struct A825 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA825() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A825), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A825, m0), 1);
		dcStructField(st, 'j', offsetof(struct A825, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdjcdijps} */
struct A826 { j m0; d m1; j m2; c m3; d m4; i m5; j m6; p m7; s m8; };
void f_cpA826(struct A826 *x, const struct A826 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA826(const struct A826 *x, const struct A826 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA826() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A826), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A826, m0), 1);
		dcStructField(st, 'd', offsetof(struct A826, m1), 1);
		dcStructField(st, 'j', offsetof(struct A826, m2), 1);
		dcStructField(st, 'c', offsetof(struct A826, m3), 1);
		dcStructField(st, 'd', offsetof(struct A826, m4), 1);
		dcStructField(st, 'i', offsetof(struct A826, m5), 1);
		dcStructField(st, 'j', offsetof(struct A826, m6), 1);
		dcStructField(st, 'p', offsetof(struct A826, m7), 1);
		dcStructField(st, 's', offsetof(struct A826, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{jlsisipdsijpsdsjpjjsc}jpc{fj}{jdjcdijps}} */
struct A827 { p m0; struct A824 m1; j m2; p m3; c m4; struct A825 m5; struct A826 m6; };
void f_cpA827(struct A827 *x, const struct A827 *y) { x->m0 = y->m0; f_cpA824(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA825(&x->m5, &y->m5); f_cpA826(&x->m6, &y->m6); };
int f_cmpA827(const struct A827 *x, const struct A827 *y) { return x->m0 == y->m0 && f_cmpA824(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA825(&x->m5, &y->m5) && f_cmpA826(&x->m6, &y->m6); };
DCstruct* f_touchdcstA827() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A827), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A827, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A827, m1), 1, f_touchdcstA824());
		dcStructField(st, 'j', offsetof(struct A827, m2), 1);
		dcStructField(st, 'p', offsetof(struct A827, m3), 1);
		dcStructField(st, 'c', offsetof(struct A827, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A827, m5), 1, f_touchdcstA825());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A827, m6), 1, f_touchdcstA826());
		dcCloseStruct(st);
	}
	return st;
};
/* {fcc} */
struct A828 { f m0; c m1; c m2; };
void f_cpA828(struct A828 *x, const struct A828 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA828(const struct A828 *x, const struct A828 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA828() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A828), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A828, m0), 1);
		dcStructField(st, 'c', offsetof(struct A828, m1), 1);
		dcStructField(st, 'c', offsetof(struct A828, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {silcddsdpsffdpscdcliddfi} */
struct A829 { s m0; i m1; l m2; c m3; d m4; d m5; s m6; d m7; p m8; s m9; f m10; f m11; d m12; p m13; s m14; c m15; d m16; c m17; l m18; i m19; d m20; d m21; f m22; i m23; };
void f_cpA829(struct A829 *x, const struct A829 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA829(const struct A829 *x, const struct A829 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA829() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A829), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A829, m0), 1);
		dcStructField(st, 'i', offsetof(struct A829, m1), 1);
		dcStructField(st, 'l', offsetof(struct A829, m2), 1);
		dcStructField(st, 'c', offsetof(struct A829, m3), 1);
		dcStructField(st, 'd', offsetof(struct A829, m4), 1);
		dcStructField(st, 'd', offsetof(struct A829, m5), 1);
		dcStructField(st, 's', offsetof(struct A829, m6), 1);
		dcStructField(st, 'd', offsetof(struct A829, m7), 1);
		dcStructField(st, 'p', offsetof(struct A829, m8), 1);
		dcStructField(st, 's', offsetof(struct A829, m9), 1);
		dcStructField(st, 'f', offsetof(struct A829, m10), 1);
		dcStructField(st, 'f', offsetof(struct A829, m11), 1);
		dcStructField(st, 'd', offsetof(struct A829, m12), 1);
		dcStructField(st, 'p', offsetof(struct A829, m13), 1);
		dcStructField(st, 's', offsetof(struct A829, m14), 1);
		dcStructField(st, 'c', offsetof(struct A829, m15), 1);
		dcStructField(st, 'd', offsetof(struct A829, m16), 1);
		dcStructField(st, 'c', offsetof(struct A829, m17), 1);
		dcStructField(st, 'l', offsetof(struct A829, m18), 1);
		dcStructField(st, 'i', offsetof(struct A829, m19), 1);
		dcStructField(st, 'd', offsetof(struct A829, m20), 1);
		dcStructField(st, 'd', offsetof(struct A829, m21), 1);
		dcStructField(st, 'f', offsetof(struct A829, m22), 1);
		dcStructField(st, 'i', offsetof(struct A829, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jddpll{silcddsdpsffdpscdcliddfi}> */
union  A830 { j m0; d m1; d m2; p m3; l m4; l m5; struct A829 m6; };
void f_cpA830(union  A830 *x, const union  A830 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA829(&x->m6, &y->m6); };
int f_cmpA830(const union  A830 *x, const union  A830 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA829(&x->m6, &y->m6); };
DCstruct* f_touchdcstA830() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A830), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A830, m0), 1);
		dcStructField(st, 'd', offsetof(union  A830, m1), 1);
		dcStructField(st, 'd', offsetof(union  A830, m2), 1);
		dcStructField(st, 'p', offsetof(union  A830, m3), 1);
		dcStructField(st, 'l', offsetof(union  A830, m4), 1);
		dcStructField(st, 'l', offsetof(union  A830, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A830, m6), 1, f_touchdcstA829());
		dcCloseStruct(st);
	}
	return st;
};
/* {f{spjcfsll}{jddpfdscssc<pfc><cf>l{sisjijicji}jcd}fd{p{jlsisipdsijpsdsjpjjsc}jpc{fj}{jdjcdijps}}i{fcc}pjdicllicpdls<jddpll{silcddsdpsffdpscdcliddfi}><i>p} */
struct A831 { f m0; struct A820 m1; struct A823 m2; f m3; d m4; struct A827 m5; i m6; struct A828 m7; p m8; j m9; d m10; i m11; c m12; l m13; l m14; i m15; c m16; p m17; d m18; l m19; s m20; union  A830 m21; union  A22 m22; p m23; };
void f_cpA831(struct A831 *x, const struct A831 *y) { x->m0 = y->m0; f_cpA820(&x->m1, &y->m1); f_cpA823(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA827(&x->m5, &y->m5); x->m6 = y->m6; f_cpA828(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; f_cpA830(&x->m21, &y->m21); f_cpA22(&x->m22, &y->m22); x->m23 = y->m23; };
int f_cmpA831(const struct A831 *x, const struct A831 *y) { return x->m0 == y->m0 && f_cmpA820(&x->m1, &y->m1) && f_cmpA823(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA827(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA828(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && f_cmpA830(&x->m21, &y->m21) && f_cmpA22(&x->m22, &y->m22) && x->m23 == y->m23; };
DCstruct* f_touchdcstA831() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A831), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A831, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A831, m1), 1, f_touchdcstA820());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A831, m2), 1, f_touchdcstA823());
		dcStructField(st, 'f', offsetof(struct A831, m3), 1);
		dcStructField(st, 'd', offsetof(struct A831, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A831, m5), 1, f_touchdcstA827());
		dcStructField(st, 'i', offsetof(struct A831, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A831, m7), 1, f_touchdcstA828());
		dcStructField(st, 'p', offsetof(struct A831, m8), 1);
		dcStructField(st, 'j', offsetof(struct A831, m9), 1);
		dcStructField(st, 'd', offsetof(struct A831, m10), 1);
		dcStructField(st, 'i', offsetof(struct A831, m11), 1);
		dcStructField(st, 'c', offsetof(struct A831, m12), 1);
		dcStructField(st, 'l', offsetof(struct A831, m13), 1);
		dcStructField(st, 'l', offsetof(struct A831, m14), 1);
		dcStructField(st, 'i', offsetof(struct A831, m15), 1);
		dcStructField(st, 'c', offsetof(struct A831, m16), 1);
		dcStructField(st, 'p', offsetof(struct A831, m17), 1);
		dcStructField(st, 'd', offsetof(struct A831, m18), 1);
		dcStructField(st, 'l', offsetof(struct A831, m19), 1);
		dcStructField(st, 's', offsetof(struct A831, m20), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A831, m21), 1, f_touchdcstA830());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A831, m22), 1, f_touchdcstA22());
		dcStructField(st, 'p', offsetof(struct A831, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfij} */
struct A832 { p m0; f m1; i m2; j m3; };
void f_cpA832(struct A832 *x, const struct A832 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA832(const struct A832 *x, const struct A832 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA832() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A832), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A832, m0), 1);
		dcStructField(st, 'f', offsetof(struct A832, m1), 1);
		dcStructField(st, 'i', offsetof(struct A832, m2), 1);
		dcStructField(st, 'j', offsetof(struct A832, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfcc> */
union  A833 { d m0; f m1; c m2; c m3; };
void f_cpA833(union  A833 *x, const union  A833 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA833(const union  A833 *x, const union  A833 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA833() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A833), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A833, m0), 1);
		dcStructField(st, 'f', offsetof(union  A833, m1), 1);
		dcStructField(st, 'c', offsetof(union  A833, m2), 1);
		dcStructField(st, 'c', offsetof(union  A833, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {csp} */
struct A834 { c m0; s m1; p m2; };
void f_cpA834(struct A834 *x, const struct A834 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA834(const struct A834 *x, const struct A834 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA834() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A834), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A834, m0), 1);
		dcStructField(st, 's', offsetof(struct A834, m1), 1);
		dcStructField(st, 'p', offsetof(struct A834, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcifdsfcfpffsdffpldi> */
union  A835 { f m0; c m1; i m2; f m3; d m4; s m5; f m6; c m7; f m8; p m9; f m10; f m11; s m12; d m13; f m14; f m15; p m16; l m17; d m18; i m19; };
void f_cpA835(union  A835 *x, const union  A835 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA835(const union  A835 *x, const union  A835 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA835() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A835), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A835, m0), 1);
		dcStructField(st, 'c', offsetof(union  A835, m1), 1);
		dcStructField(st, 'i', offsetof(union  A835, m2), 1);
		dcStructField(st, 'f', offsetof(union  A835, m3), 1);
		dcStructField(st, 'd', offsetof(union  A835, m4), 1);
		dcStructField(st, 's', offsetof(union  A835, m5), 1);
		dcStructField(st, 'f', offsetof(union  A835, m6), 1);
		dcStructField(st, 'c', offsetof(union  A835, m7), 1);
		dcStructField(st, 'f', offsetof(union  A835, m8), 1);
		dcStructField(st, 'p', offsetof(union  A835, m9), 1);
		dcStructField(st, 'f', offsetof(union  A835, m10), 1);
		dcStructField(st, 'f', offsetof(union  A835, m11), 1);
		dcStructField(st, 's', offsetof(union  A835, m12), 1);
		dcStructField(st, 'd', offsetof(union  A835, m13), 1);
		dcStructField(st, 'f', offsetof(union  A835, m14), 1);
		dcStructField(st, 'f', offsetof(union  A835, m15), 1);
		dcStructField(st, 'p', offsetof(union  A835, m16), 1);
		dcStructField(st, 'l', offsetof(union  A835, m17), 1);
		dcStructField(st, 'd', offsetof(union  A835, m18), 1);
		dcStructField(st, 'i', offsetof(union  A835, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<dfcc>j<i>cffc{csp}cjlfi<fcifdsfcfpffsdffpldi>d> */
union  A836 { union  A833 m0; j m1; union  A22 m2; c m3; f m4; f m5; c m6; struct A834 m7; c m8; j m9; l m10; f m11; i m12; union  A835 m13; d m14; };
void f_cpA836(union  A836 *x, const union  A836 *y) { f_cpA833(&x->m0, &y->m0); x->m1 = y->m1; f_cpA22(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA834(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA835(&x->m13, &y->m13); x->m14 = y->m14; };
int f_cmpA836(const union  A836 *x, const union  A836 *y) { return f_cmpA833(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA22(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA834(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA835(&x->m13, &y->m13) && x->m14 == y->m14; };
DCstruct* f_touchdcstA836() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A836), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A836, m0), 1, f_touchdcstA833());
		dcStructField(st, 'j', offsetof(union  A836, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A836, m2), 1, f_touchdcstA22());
		dcStructField(st, 'c', offsetof(union  A836, m3), 1);
		dcStructField(st, 'f', offsetof(union  A836, m4), 1);
		dcStructField(st, 'f', offsetof(union  A836, m5), 1);
		dcStructField(st, 'c', offsetof(union  A836, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A836, m7), 1, f_touchdcstA834());
		dcStructField(st, 'c', offsetof(union  A836, m8), 1);
		dcStructField(st, 'j', offsetof(union  A836, m9), 1);
		dcStructField(st, 'l', offsetof(union  A836, m10), 1);
		dcStructField(st, 'f', offsetof(union  A836, m11), 1);
		dcStructField(st, 'i', offsetof(union  A836, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A836, m13), 1, f_touchdcstA835());
		dcStructField(st, 'd', offsetof(union  A836, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flsfdff<<dfcc>j<i>cffc{csp}cjlfi<fcifdsfcfpffsdffpldi>d>p} */
struct A837 { f m0; l m1; s m2; f m3; d m4; f m5; f m6; union  A836 m7; p m8; };
void f_cpA837(struct A837 *x, const struct A837 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA836(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA837(const struct A837 *x, const struct A837 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA836(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA837() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A837), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A837, m0), 1);
		dcStructField(st, 'l', offsetof(struct A837, m1), 1);
		dcStructField(st, 's', offsetof(struct A837, m2), 1);
		dcStructField(st, 'f', offsetof(struct A837, m3), 1);
		dcStructField(st, 'd', offsetof(struct A837, m4), 1);
		dcStructField(st, 'f', offsetof(struct A837, m5), 1);
		dcStructField(st, 'f', offsetof(struct A837, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A837, m7), 1, f_touchdcstA836());
		dcStructField(st, 'p', offsetof(struct A837, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilfl} */
struct A838 { i m0; l m1; f m2; l m3; };
void f_cpA838(struct A838 *x, const struct A838 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA838(const struct A838 *x, const struct A838 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA838() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A838), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A838, m0), 1);
		dcStructField(st, 'l', offsetof(struct A838, m1), 1);
		dcStructField(st, 'f', offsetof(struct A838, m2), 1);
		dcStructField(st, 'l', offsetof(struct A838, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cpif> */
union  A839 { c m0; p m1; i m2; f m3; };
void f_cpA839(union  A839 *x, const union  A839 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA839(const union  A839 *x, const union  A839 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA839() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A839), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A839, m0), 1);
		dcStructField(st, 'p', offsetof(union  A839, m1), 1);
		dcStructField(st, 'i', offsetof(union  A839, m2), 1);
		dcStructField(st, 'f', offsetof(union  A839, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfs} */
struct A840 { d m0; f m1; s m2; };
void f_cpA840(struct A840 *x, const struct A840 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA840(const struct A840 *x, const struct A840 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA840() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A840), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A840, m0), 1);
		dcStructField(st, 'f', offsetof(struct A840, m1), 1);
		dcStructField(st, 's', offsetof(struct A840, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llccsjsdpdfcilis} */
struct A841 { l m0; l m1; c m2; c m3; s m4; j m5; s m6; d m7; p m8; d m9; f m10; c m11; i m12; l m13; i m14; s m15; };
void f_cpA841(struct A841 *x, const struct A841 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA841(const struct A841 *x, const struct A841 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA841() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A841), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A841, m0), 1);
		dcStructField(st, 'l', offsetof(struct A841, m1), 1);
		dcStructField(st, 'c', offsetof(struct A841, m2), 1);
		dcStructField(st, 'c', offsetof(struct A841, m3), 1);
		dcStructField(st, 's', offsetof(struct A841, m4), 1);
		dcStructField(st, 'j', offsetof(struct A841, m5), 1);
		dcStructField(st, 's', offsetof(struct A841, m6), 1);
		dcStructField(st, 'd', offsetof(struct A841, m7), 1);
		dcStructField(st, 'p', offsetof(struct A841, m8), 1);
		dcStructField(st, 'd', offsetof(struct A841, m9), 1);
		dcStructField(st, 'f', offsetof(struct A841, m10), 1);
		dcStructField(st, 'c', offsetof(struct A841, m11), 1);
		dcStructField(st, 'i', offsetof(struct A841, m12), 1);
		dcStructField(st, 'l', offsetof(struct A841, m13), 1);
		dcStructField(st, 'i', offsetof(struct A841, m14), 1);
		dcStructField(st, 's', offsetof(struct A841, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jddfppsfsdljdfipli> */
union  A842 { j m0; d m1; d m2; f m3; p m4; p m5; s m6; f m7; s m8; d m9; l m10; j m11; d m12; f m13; i m14; p m15; l m16; i m17; };
void f_cpA842(union  A842 *x, const union  A842 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA842(const union  A842 *x, const union  A842 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA842() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A842), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A842, m0), 1);
		dcStructField(st, 'd', offsetof(union  A842, m1), 1);
		dcStructField(st, 'd', offsetof(union  A842, m2), 1);
		dcStructField(st, 'f', offsetof(union  A842, m3), 1);
		dcStructField(st, 'p', offsetof(union  A842, m4), 1);
		dcStructField(st, 'p', offsetof(union  A842, m5), 1);
		dcStructField(st, 's', offsetof(union  A842, m6), 1);
		dcStructField(st, 'f', offsetof(union  A842, m7), 1);
		dcStructField(st, 's', offsetof(union  A842, m8), 1);
		dcStructField(st, 'd', offsetof(union  A842, m9), 1);
		dcStructField(st, 'l', offsetof(union  A842, m10), 1);
		dcStructField(st, 'j', offsetof(union  A842, m11), 1);
		dcStructField(st, 'd', offsetof(union  A842, m12), 1);
		dcStructField(st, 'f', offsetof(union  A842, m13), 1);
		dcStructField(st, 'i', offsetof(union  A842, m14), 1);
		dcStructField(st, 'p', offsetof(union  A842, m15), 1);
		dcStructField(st, 'l', offsetof(union  A842, m16), 1);
		dcStructField(st, 'i', offsetof(union  A842, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpl} */
struct A843 { j m0; p m1; l m2; };
void f_cpA843(struct A843 *x, const struct A843 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA843(const struct A843 *x, const struct A843 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA843() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A843), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A843, m0), 1);
		dcStructField(st, 'p', offsetof(struct A843, m1), 1);
		dcStructField(st, 'l', offsetof(struct A843, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <p<jddfppsfsdljdfipli>i{jpl}ildcpsisfpcl> */
union  A844 { p m0; union  A842 m1; i m2; struct A843 m3; i m4; l m5; d m6; c m7; p m8; s m9; i m10; s m11; f m12; p m13; c m14; l m15; };
void f_cpA844(union  A844 *x, const union  A844 *y) { x->m0 = y->m0; f_cpA842(&x->m1, &y->m1); x->m2 = y->m2; f_cpA843(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA844(const union  A844 *x, const union  A844 *y) { return x->m0 == y->m0 && f_cmpA842(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA843(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA844() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A844), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A844, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A844, m1), 1, f_touchdcstA842());
		dcStructField(st, 'i', offsetof(union  A844, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A844, m3), 1, f_touchdcstA843());
		dcStructField(st, 'i', offsetof(union  A844, m4), 1);
		dcStructField(st, 'l', offsetof(union  A844, m5), 1);
		dcStructField(st, 'd', offsetof(union  A844, m6), 1);
		dcStructField(st, 'c', offsetof(union  A844, m7), 1);
		dcStructField(st, 'p', offsetof(union  A844, m8), 1);
		dcStructField(st, 's', offsetof(union  A844, m9), 1);
		dcStructField(st, 'i', offsetof(union  A844, m10), 1);
		dcStructField(st, 's', offsetof(union  A844, m11), 1);
		dcStructField(st, 'f', offsetof(union  A844, m12), 1);
		dcStructField(st, 'p', offsetof(union  A844, m13), 1);
		dcStructField(st, 'c', offsetof(union  A844, m14), 1);
		dcStructField(st, 'l', offsetof(union  A844, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfd} */
struct A845 { l m0; f m1; d m2; };
void f_cpA845(struct A845 *x, const struct A845 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA845(const struct A845 *x, const struct A845 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA845() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A845), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A845, m0), 1);
		dcStructField(st, 'f', offsetof(struct A845, m1), 1);
		dcStructField(st, 'd', offsetof(struct A845, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pilipssdljics} */
struct A846 { p m0; i m1; l m2; i m3; p m4; s m5; s m6; d m7; l m8; j m9; i m10; c m11; s m12; };
void f_cpA846(struct A846 *x, const struct A846 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA846(const struct A846 *x, const struct A846 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA846() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A846), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A846, m0), 1);
		dcStructField(st, 'i', offsetof(struct A846, m1), 1);
		dcStructField(st, 'l', offsetof(struct A846, m2), 1);
		dcStructField(st, 'i', offsetof(struct A846, m3), 1);
		dcStructField(st, 'p', offsetof(struct A846, m4), 1);
		dcStructField(st, 's', offsetof(struct A846, m5), 1);
		dcStructField(st, 's', offsetof(struct A846, m6), 1);
		dcStructField(st, 'd', offsetof(struct A846, m7), 1);
		dcStructField(st, 'l', offsetof(struct A846, m8), 1);
		dcStructField(st, 'j', offsetof(struct A846, m9), 1);
		dcStructField(st, 'i', offsetof(struct A846, m10), 1);
		dcStructField(st, 'c', offsetof(struct A846, m11), 1);
		dcStructField(st, 's', offsetof(struct A846, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcic} */
struct A847 { p m0; c m1; i m2; c m3; };
void f_cpA847(struct A847 *x, const struct A847 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA847(const struct A847 *x, const struct A847 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA847() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A847), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A847, m0), 1);
		dcStructField(st, 'c', offsetof(struct A847, m1), 1);
		dcStructField(st, 'i', offsetof(struct A847, m2), 1);
		dcStructField(st, 'c', offsetof(struct A847, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{lfd}lsscsfil{pilipssdljics}<s>scfjliid{pcic}} */
struct A848 { struct A845 m0; l m1; s m2; s m3; c m4; s m5; f m6; i m7; l m8; struct A846 m9; union  A75 m10; s m11; c m12; f m13; j m14; l m15; i m16; i m17; d m18; struct A847 m19; };
void f_cpA848(struct A848 *x, const struct A848 *y) { f_cpA845(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA846(&x->m9, &y->m9); f_cpA75(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA847(&x->m19, &y->m19); };
int f_cmpA848(const struct A848 *x, const struct A848 *y) { return f_cmpA845(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA846(&x->m9, &y->m9) && f_cmpA75(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA847(&x->m19, &y->m19); };
DCstruct* f_touchdcstA848() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A848), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A848, m0), 1, f_touchdcstA845());
		dcStructField(st, 'l', offsetof(struct A848, m1), 1);
		dcStructField(st, 's', offsetof(struct A848, m2), 1);
		dcStructField(st, 's', offsetof(struct A848, m3), 1);
		dcStructField(st, 'c', offsetof(struct A848, m4), 1);
		dcStructField(st, 's', offsetof(struct A848, m5), 1);
		dcStructField(st, 'f', offsetof(struct A848, m6), 1);
		dcStructField(st, 'i', offsetof(struct A848, m7), 1);
		dcStructField(st, 'l', offsetof(struct A848, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A848, m9), 1, f_touchdcstA846());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A848, m10), 1, f_touchdcstA75());
		dcStructField(st, 's', offsetof(struct A848, m11), 1);
		dcStructField(st, 'c', offsetof(struct A848, m12), 1);
		dcStructField(st, 'f', offsetof(struct A848, m13), 1);
		dcStructField(st, 'j', offsetof(struct A848, m14), 1);
		dcStructField(st, 'l', offsetof(struct A848, m15), 1);
		dcStructField(st, 'i', offsetof(struct A848, m16), 1);
		dcStructField(st, 'i', offsetof(struct A848, m17), 1);
		dcStructField(st, 'd', offsetof(struct A848, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A848, m19), 1, f_touchdcstA847());
		dcCloseStruct(st);
	}
	return st;
};
/* {il} */
struct A849 { i m0; l m1; };
void f_cpA849(struct A849 *x, const struct A849 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA849(const struct A849 *x, const struct A849 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA849() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A849), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A849, m0), 1);
		dcStructField(st, 'l', offsetof(struct A849, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ssdpfcfjppcsfpfpsif> */
union  A850 { s m0; s m1; d m2; p m3; f m4; c m5; f m6; j m7; p m8; p m9; c m10; s m11; f m12; p m13; f m14; p m15; s m16; i m17; f m18; };
void f_cpA850(union  A850 *x, const union  A850 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA850(const union  A850 *x, const union  A850 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA850() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A850), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A850, m0), 1);
		dcStructField(st, 's', offsetof(union  A850, m1), 1);
		dcStructField(st, 'd', offsetof(union  A850, m2), 1);
		dcStructField(st, 'p', offsetof(union  A850, m3), 1);
		dcStructField(st, 'f', offsetof(union  A850, m4), 1);
		dcStructField(st, 'c', offsetof(union  A850, m5), 1);
		dcStructField(st, 'f', offsetof(union  A850, m6), 1);
		dcStructField(st, 'j', offsetof(union  A850, m7), 1);
		dcStructField(st, 'p', offsetof(union  A850, m8), 1);
		dcStructField(st, 'p', offsetof(union  A850, m9), 1);
		dcStructField(st, 'c', offsetof(union  A850, m10), 1);
		dcStructField(st, 's', offsetof(union  A850, m11), 1);
		dcStructField(st, 'f', offsetof(union  A850, m12), 1);
		dcStructField(st, 'p', offsetof(union  A850, m13), 1);
		dcStructField(st, 'f', offsetof(union  A850, m14), 1);
		dcStructField(st, 'p', offsetof(union  A850, m15), 1);
		dcStructField(st, 's', offsetof(union  A850, m16), 1);
		dcStructField(st, 'i', offsetof(union  A850, m17), 1);
		dcStructField(st, 'f', offsetof(union  A850, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pildfsdpjcjcjdfddjsiipjilsjjppsjlfip> */
union  A851 { p m0; i m1; l m2; d m3; f m4; s m5; d m6; p m7; j m8; c m9; j m10; c m11; j m12; d m13; f m14; d m15; d m16; j m17; s m18; i m19; i m20; p m21; j m22; i m23; l m24; s m25; j m26; j m27; p m28; p m29; s m30; j m31; l m32; f m33; i m34; p m35; };
void f_cpA851(union  A851 *x, const union  A851 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; };
int f_cmpA851(const union  A851 *x, const union  A851 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35; };
DCstruct* f_touchdcstA851() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(36, sizeof(union  A851), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A851, m0), 1);
		dcStructField(st, 'i', offsetof(union  A851, m1), 1);
		dcStructField(st, 'l', offsetof(union  A851, m2), 1);
		dcStructField(st, 'd', offsetof(union  A851, m3), 1);
		dcStructField(st, 'f', offsetof(union  A851, m4), 1);
		dcStructField(st, 's', offsetof(union  A851, m5), 1);
		dcStructField(st, 'd', offsetof(union  A851, m6), 1);
		dcStructField(st, 'p', offsetof(union  A851, m7), 1);
		dcStructField(st, 'j', offsetof(union  A851, m8), 1);
		dcStructField(st, 'c', offsetof(union  A851, m9), 1);
		dcStructField(st, 'j', offsetof(union  A851, m10), 1);
		dcStructField(st, 'c', offsetof(union  A851, m11), 1);
		dcStructField(st, 'j', offsetof(union  A851, m12), 1);
		dcStructField(st, 'd', offsetof(union  A851, m13), 1);
		dcStructField(st, 'f', offsetof(union  A851, m14), 1);
		dcStructField(st, 'd', offsetof(union  A851, m15), 1);
		dcStructField(st, 'd', offsetof(union  A851, m16), 1);
		dcStructField(st, 'j', offsetof(union  A851, m17), 1);
		dcStructField(st, 's', offsetof(union  A851, m18), 1);
		dcStructField(st, 'i', offsetof(union  A851, m19), 1);
		dcStructField(st, 'i', offsetof(union  A851, m20), 1);
		dcStructField(st, 'p', offsetof(union  A851, m21), 1);
		dcStructField(st, 'j', offsetof(union  A851, m22), 1);
		dcStructField(st, 'i', offsetof(union  A851, m23), 1);
		dcStructField(st, 'l', offsetof(union  A851, m24), 1);
		dcStructField(st, 's', offsetof(union  A851, m25), 1);
		dcStructField(st, 'j', offsetof(union  A851, m26), 1);
		dcStructField(st, 'j', offsetof(union  A851, m27), 1);
		dcStructField(st, 'p', offsetof(union  A851, m28), 1);
		dcStructField(st, 'p', offsetof(union  A851, m29), 1);
		dcStructField(st, 's', offsetof(union  A851, m30), 1);
		dcStructField(st, 'j', offsetof(union  A851, m31), 1);
		dcStructField(st, 'l', offsetof(union  A851, m32), 1);
		dcStructField(st, 'f', offsetof(union  A851, m33), 1);
		dcStructField(st, 'i', offsetof(union  A851, m34), 1);
		dcStructField(st, 'p', offsetof(union  A851, m35), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jc> */
union  A852 { j m0; c m1; };
void f_cpA852(union  A852 *x, const union  A852 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA852(const union  A852 *x, const union  A852 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA852() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A852), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A852, m0), 1);
		dcStructField(st, 'c', offsetof(union  A852, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lpsld> */
union  A853 { l m0; p m1; s m2; l m3; d m4; };
void f_cpA853(union  A853 *x, const union  A853 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA853(const union  A853 *x, const union  A853 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA853() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A853), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A853, m0), 1);
		dcStructField(st, 'p', offsetof(union  A853, m1), 1);
		dcStructField(st, 's', offsetof(union  A853, m2), 1);
		dcStructField(st, 'l', offsetof(union  A853, m3), 1);
		dcStructField(st, 'd', offsetof(union  A853, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fl{il}<ssdpfcfjppcsfpfpsif><pildfsdpjcjcjdfddjsiipjilsjjppsjlfip>dldp<jc>di<lpsld>dl} */
struct A854 { f m0; l m1; struct A849 m2; union  A850 m3; union  A851 m4; d m5; l m6; d m7; p m8; union  A852 m9; d m10; i m11; union  A853 m12; d m13; l m14; };
void f_cpA854(struct A854 *x, const struct A854 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA849(&x->m2, &y->m2); f_cpA850(&x->m3, &y->m3); f_cpA851(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA852(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; f_cpA853(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA854(const struct A854 *x, const struct A854 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA849(&x->m2, &y->m2) && f_cmpA850(&x->m3, &y->m3) && f_cmpA851(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA852(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA853(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA854() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A854), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A854, m0), 1);
		dcStructField(st, 'l', offsetof(struct A854, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A854, m2), 1, f_touchdcstA849());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A854, m3), 1, f_touchdcstA850());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A854, m4), 1, f_touchdcstA851());
		dcStructField(st, 'd', offsetof(struct A854, m5), 1);
		dcStructField(st, 'l', offsetof(struct A854, m6), 1);
		dcStructField(st, 'd', offsetof(struct A854, m7), 1);
		dcStructField(st, 'p', offsetof(struct A854, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A854, m9), 1, f_touchdcstA852());
		dcStructField(st, 'd', offsetof(struct A854, m10), 1);
		dcStructField(st, 'i', offsetof(struct A854, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A854, m12), 1, f_touchdcstA853());
		dcStructField(st, 'd', offsetof(struct A854, m13), 1);
		dcStructField(st, 'l', offsetof(struct A854, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <j{fl{il}<ssdpfcfjppcsfpfpsif><pildfsdpjcjcjdfddjsiipjilsjjppsjlfip>dldp<jc>di<lpsld>dl}c> */
union  A855 { j m0; struct A854 m1; c m2; };
void f_cpA855(union  A855 *x, const union  A855 *y) { x->m0 = y->m0; f_cpA854(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA855(const union  A855 *x, const union  A855 *y) { return x->m0 == y->m0 && f_cmpA854(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA855() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A855), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A855, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A855, m1), 1, f_touchdcstA854());
		dcStructField(st, 'c', offsetof(union  A855, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ldldfsssfjlppdjdl> */
union  A856 { l m0; d m1; l m2; d m3; f m4; s m5; s m6; s m7; f m8; j m9; l m10; p m11; p m12; d m13; j m14; d m15; l m16; };
void f_cpA856(union  A856 *x, const union  A856 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA856(const union  A856 *x, const union  A856 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA856() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(union  A856), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A856, m0), 1);
		dcStructField(st, 'd', offsetof(union  A856, m1), 1);
		dcStructField(st, 'l', offsetof(union  A856, m2), 1);
		dcStructField(st, 'd', offsetof(union  A856, m3), 1);
		dcStructField(st, 'f', offsetof(union  A856, m4), 1);
		dcStructField(st, 's', offsetof(union  A856, m5), 1);
		dcStructField(st, 's', offsetof(union  A856, m6), 1);
		dcStructField(st, 's', offsetof(union  A856, m7), 1);
		dcStructField(st, 'f', offsetof(union  A856, m8), 1);
		dcStructField(st, 'j', offsetof(union  A856, m9), 1);
		dcStructField(st, 'l', offsetof(union  A856, m10), 1);
		dcStructField(st, 'p', offsetof(union  A856, m11), 1);
		dcStructField(st, 'p', offsetof(union  A856, m12), 1);
		dcStructField(st, 'd', offsetof(union  A856, m13), 1);
		dcStructField(st, 'j', offsetof(union  A856, m14), 1);
		dcStructField(st, 'd', offsetof(union  A856, m15), 1);
		dcStructField(st, 'l', offsetof(union  A856, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cljfjlll} */
struct A857 { c m0; l m1; j m2; f m3; j m4; l m5; l m6; l m7; };
void f_cpA857(struct A857 *x, const struct A857 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA857(const struct A857 *x, const struct A857 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA857() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A857), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A857, m0), 1);
		dcStructField(st, 'l', offsetof(struct A857, m1), 1);
		dcStructField(st, 'j', offsetof(struct A857, m2), 1);
		dcStructField(st, 'f', offsetof(struct A857, m3), 1);
		dcStructField(st, 'j', offsetof(struct A857, m4), 1);
		dcStructField(st, 'l', offsetof(struct A857, m5), 1);
		dcStructField(st, 'l', offsetof(struct A857, m6), 1);
		dcStructField(st, 'l', offsetof(struct A857, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jiis> */
union  A858 { j m0; i m1; i m2; s m3; };
void f_cpA858(union  A858 *x, const union  A858 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA858(const union  A858 *x, const union  A858 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA858() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A858), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A858, m0), 1);
		dcStructField(st, 'i', offsetof(union  A858, m1), 1);
		dcStructField(st, 'i', offsetof(union  A858, m2), 1);
		dcStructField(st, 's', offsetof(union  A858, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sipjf} */
struct A859 { s m0; i m1; p m2; j m3; f m4; };
void f_cpA859(struct A859 *x, const struct A859 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA859(const struct A859 *x, const struct A859 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA859() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A859), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A859, m0), 1);
		dcStructField(st, 'i', offsetof(struct A859, m1), 1);
		dcStructField(st, 'p', offsetof(struct A859, m2), 1);
		dcStructField(st, 'j', offsetof(struct A859, m3), 1);
		dcStructField(st, 'f', offsetof(struct A859, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdsspdlfd> */
union  A860 { c m0; d m1; s m2; s m3; p m4; d m5; l m6; f m7; d m8; };
void f_cpA860(union  A860 *x, const union  A860 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA860(const union  A860 *x, const union  A860 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA860() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A860), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A860, m0), 1);
		dcStructField(st, 'd', offsetof(union  A860, m1), 1);
		dcStructField(st, 's', offsetof(union  A860, m2), 1);
		dcStructField(st, 's', offsetof(union  A860, m3), 1);
		dcStructField(st, 'p', offsetof(union  A860, m4), 1);
		dcStructField(st, 'd', offsetof(union  A860, m5), 1);
		dcStructField(st, 'l', offsetof(union  A860, m6), 1);
		dcStructField(st, 'f', offsetof(union  A860, m7), 1);
		dcStructField(st, 'd', offsetof(union  A860, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcicjscdfcpjscl} */
struct A861 { j m0; c m1; i m2; c m3; j m4; s m5; c m6; d m7; f m8; c m9; p m10; j m11; s m12; c m13; l m14; };
void f_cpA861(struct A861 *x, const struct A861 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA861(const struct A861 *x, const struct A861 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA861() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A861), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A861, m0), 1);
		dcStructField(st, 'c', offsetof(struct A861, m1), 1);
		dcStructField(st, 'i', offsetof(struct A861, m2), 1);
		dcStructField(st, 'c', offsetof(struct A861, m3), 1);
		dcStructField(st, 'j', offsetof(struct A861, m4), 1);
		dcStructField(st, 's', offsetof(struct A861, m5), 1);
		dcStructField(st, 'c', offsetof(struct A861, m6), 1);
		dcStructField(st, 'd', offsetof(struct A861, m7), 1);
		dcStructField(st, 'f', offsetof(struct A861, m8), 1);
		dcStructField(st, 'c', offsetof(struct A861, m9), 1);
		dcStructField(st, 'p', offsetof(struct A861, m10), 1);
		dcStructField(st, 'j', offsetof(struct A861, m11), 1);
		dcStructField(st, 's', offsetof(struct A861, m12), 1);
		dcStructField(st, 'c', offsetof(struct A861, m13), 1);
		dcStructField(st, 'l', offsetof(struct A861, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cicid{dcf}pifii<ldldfsssfjlppdjdl>dsisllc{cljfjlll}scd<jiis>s{sj}p{sipjf}c<cdsspdlfd>i{jcicjscdfcpjscl}fjl> */
union  A862 { c m0; i m1; c m2; i m3; d m4; struct A665 m5; p m6; i m7; f m8; i m9; i m10; union  A856 m11; d m12; s m13; i m14; s m15; l m16; l m17; c m18; struct A857 m19; s m20; c m21; d m22; union  A858 m23; s m24; struct A811 m25; p m26; struct A859 m27; c m28; union  A860 m29; i m30; struct A861 m31; f m32; j m33; l m34; };
void f_cpA862(union  A862 *x, const union  A862 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA665(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA856(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA857(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; f_cpA858(&x->m23, &y->m23); x->m24 = y->m24; f_cpA811(&x->m25, &y->m25); x->m26 = y->m26; f_cpA859(&x->m27, &y->m27); x->m28 = y->m28; f_cpA860(&x->m29, &y->m29); x->m30 = y->m30; f_cpA861(&x->m31, &y->m31); x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; };
int f_cmpA862(const union  A862 *x, const union  A862 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA665(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA856(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA857(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && f_cmpA858(&x->m23, &y->m23) && x->m24 == y->m24 && f_cmpA811(&x->m25, &y->m25) && x->m26 == y->m26 && f_cmpA859(&x->m27, &y->m27) && x->m28 == y->m28 && f_cmpA860(&x->m29, &y->m29) && x->m30 == y->m30 && f_cmpA861(&x->m31, &y->m31) && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34; };
DCstruct* f_touchdcstA862() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(35, sizeof(union  A862), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A862, m0), 1);
		dcStructField(st, 'i', offsetof(union  A862, m1), 1);
		dcStructField(st, 'c', offsetof(union  A862, m2), 1);
		dcStructField(st, 'i', offsetof(union  A862, m3), 1);
		dcStructField(st, 'd', offsetof(union  A862, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m5), 1, f_touchdcstA665());
		dcStructField(st, 'p', offsetof(union  A862, m6), 1);
		dcStructField(st, 'i', offsetof(union  A862, m7), 1);
		dcStructField(st, 'f', offsetof(union  A862, m8), 1);
		dcStructField(st, 'i', offsetof(union  A862, m9), 1);
		dcStructField(st, 'i', offsetof(union  A862, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m11), 1, f_touchdcstA856());
		dcStructField(st, 'd', offsetof(union  A862, m12), 1);
		dcStructField(st, 's', offsetof(union  A862, m13), 1);
		dcStructField(st, 'i', offsetof(union  A862, m14), 1);
		dcStructField(st, 's', offsetof(union  A862, m15), 1);
		dcStructField(st, 'l', offsetof(union  A862, m16), 1);
		dcStructField(st, 'l', offsetof(union  A862, m17), 1);
		dcStructField(st, 'c', offsetof(union  A862, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m19), 1, f_touchdcstA857());
		dcStructField(st, 's', offsetof(union  A862, m20), 1);
		dcStructField(st, 'c', offsetof(union  A862, m21), 1);
		dcStructField(st, 'd', offsetof(union  A862, m22), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m23), 1, f_touchdcstA858());
		dcStructField(st, 's', offsetof(union  A862, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m25), 1, f_touchdcstA811());
		dcStructField(st, 'p', offsetof(union  A862, m26), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m27), 1, f_touchdcstA859());
		dcStructField(st, 'c', offsetof(union  A862, m28), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m29), 1, f_touchdcstA860());
		dcStructField(st, 'i', offsetof(union  A862, m30), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A862, m31), 1, f_touchdcstA861());
		dcStructField(st, 'f', offsetof(union  A862, m32), 1);
		dcStructField(st, 'j', offsetof(union  A862, m33), 1);
		dcStructField(st, 'l', offsetof(union  A862, m34), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdjjpldcssfd} */
struct A863 { j m0; d m1; j m2; j m3; p m4; l m5; d m6; c m7; s m8; s m9; f m10; d m11; };
void f_cpA863(struct A863 *x, const struct A863 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA863(const struct A863 *x, const struct A863 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA863() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A863), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A863, m0), 1);
		dcStructField(st, 'd', offsetof(struct A863, m1), 1);
		dcStructField(st, 'j', offsetof(struct A863, m2), 1);
		dcStructField(st, 'j', offsetof(struct A863, m3), 1);
		dcStructField(st, 'p', offsetof(struct A863, m4), 1);
		dcStructField(st, 'l', offsetof(struct A863, m5), 1);
		dcStructField(st, 'd', offsetof(struct A863, m6), 1);
		dcStructField(st, 'c', offsetof(struct A863, m7), 1);
		dcStructField(st, 's', offsetof(struct A863, m8), 1);
		dcStructField(st, 's', offsetof(struct A863, m9), 1);
		dcStructField(st, 'f', offsetof(struct A863, m10), 1);
		dcStructField(st, 'd', offsetof(struct A863, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifldjfcsfpicciccsdpps} */
struct A864 { i m0; f m1; l m2; d m3; j m4; f m5; c m6; s m7; f m8; p m9; i m10; c m11; c m12; i m13; c m14; c m15; s m16; d m17; p m18; p m19; s m20; };
void f_cpA864(struct A864 *x, const struct A864 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA864(const struct A864 *x, const struct A864 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA864() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A864), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A864, m0), 1);
		dcStructField(st, 'f', offsetof(struct A864, m1), 1);
		dcStructField(st, 'l', offsetof(struct A864, m2), 1);
		dcStructField(st, 'd', offsetof(struct A864, m3), 1);
		dcStructField(st, 'j', offsetof(struct A864, m4), 1);
		dcStructField(st, 'f', offsetof(struct A864, m5), 1);
		dcStructField(st, 'c', offsetof(struct A864, m6), 1);
		dcStructField(st, 's', offsetof(struct A864, m7), 1);
		dcStructField(st, 'f', offsetof(struct A864, m8), 1);
		dcStructField(st, 'p', offsetof(struct A864, m9), 1);
		dcStructField(st, 'i', offsetof(struct A864, m10), 1);
		dcStructField(st, 'c', offsetof(struct A864, m11), 1);
		dcStructField(st, 'c', offsetof(struct A864, m12), 1);
		dcStructField(st, 'i', offsetof(struct A864, m13), 1);
		dcStructField(st, 'c', offsetof(struct A864, m14), 1);
		dcStructField(st, 'c', offsetof(struct A864, m15), 1);
		dcStructField(st, 's', offsetof(struct A864, m16), 1);
		dcStructField(st, 'd', offsetof(struct A864, m17), 1);
		dcStructField(st, 'p', offsetof(struct A864, m18), 1);
		dcStructField(st, 'p', offsetof(struct A864, m19), 1);
		dcStructField(st, 's', offsetof(struct A864, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <clpjldcpdiflsijcddfsclji> */
union  A865 { c m0; l m1; p m2; j m3; l m4; d m5; c m6; p m7; d m8; i m9; f m10; l m11; s m12; i m13; j m14; c m15; d m16; d m17; f m18; s m19; c m20; l m21; j m22; i m23; };
void f_cpA865(union  A865 *x, const union  A865 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA865(const union  A865 *x, const union  A865 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA865() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(union  A865), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A865, m0), 1);
		dcStructField(st, 'l', offsetof(union  A865, m1), 1);
		dcStructField(st, 'p', offsetof(union  A865, m2), 1);
		dcStructField(st, 'j', offsetof(union  A865, m3), 1);
		dcStructField(st, 'l', offsetof(union  A865, m4), 1);
		dcStructField(st, 'd', offsetof(union  A865, m5), 1);
		dcStructField(st, 'c', offsetof(union  A865, m6), 1);
		dcStructField(st, 'p', offsetof(union  A865, m7), 1);
		dcStructField(st, 'd', offsetof(union  A865, m8), 1);
		dcStructField(st, 'i', offsetof(union  A865, m9), 1);
		dcStructField(st, 'f', offsetof(union  A865, m10), 1);
		dcStructField(st, 'l', offsetof(union  A865, m11), 1);
		dcStructField(st, 's', offsetof(union  A865, m12), 1);
		dcStructField(st, 'i', offsetof(union  A865, m13), 1);
		dcStructField(st, 'j', offsetof(union  A865, m14), 1);
		dcStructField(st, 'c', offsetof(union  A865, m15), 1);
		dcStructField(st, 'd', offsetof(union  A865, m16), 1);
		dcStructField(st, 'd', offsetof(union  A865, m17), 1);
		dcStructField(st, 'f', offsetof(union  A865, m18), 1);
		dcStructField(st, 's', offsetof(union  A865, m19), 1);
		dcStructField(st, 'c', offsetof(union  A865, m20), 1);
		dcStructField(st, 'l', offsetof(union  A865, m21), 1);
		dcStructField(st, 'j', offsetof(union  A865, m22), 1);
		dcStructField(st, 'i', offsetof(union  A865, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji> */
union  A866 { p m0; d m1; c m2; p m3; p m4; f m5; s m6; s m7; f m8; s m9; s m10; s m11; s m12; d m13; l m14; l m15; d m16; l m17; p m18; i m19; i m20; d m21; s m22; i m23; f m24; d m25; l m26; l m27; p m28; c m29; f m30; i m31; p m32; c m33; l m34; f m35; d m36; p m37; d m38; j m39; i m40; };
void f_cpA866(union  A866 *x, const union  A866 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; };
int f_cmpA866(const union  A866 *x, const union  A866 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40; };
DCstruct* f_touchdcstA866() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(41, sizeof(union  A866), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A866, m0), 1);
		dcStructField(st, 'd', offsetof(union  A866, m1), 1);
		dcStructField(st, 'c', offsetof(union  A866, m2), 1);
		dcStructField(st, 'p', offsetof(union  A866, m3), 1);
		dcStructField(st, 'p', offsetof(union  A866, m4), 1);
		dcStructField(st, 'f', offsetof(union  A866, m5), 1);
		dcStructField(st, 's', offsetof(union  A866, m6), 1);
		dcStructField(st, 's', offsetof(union  A866, m7), 1);
		dcStructField(st, 'f', offsetof(union  A866, m8), 1);
		dcStructField(st, 's', offsetof(union  A866, m9), 1);
		dcStructField(st, 's', offsetof(union  A866, m10), 1);
		dcStructField(st, 's', offsetof(union  A866, m11), 1);
		dcStructField(st, 's', offsetof(union  A866, m12), 1);
		dcStructField(st, 'd', offsetof(union  A866, m13), 1);
		dcStructField(st, 'l', offsetof(union  A866, m14), 1);
		dcStructField(st, 'l', offsetof(union  A866, m15), 1);
		dcStructField(st, 'd', offsetof(union  A866, m16), 1);
		dcStructField(st, 'l', offsetof(union  A866, m17), 1);
		dcStructField(st, 'p', offsetof(union  A866, m18), 1);
		dcStructField(st, 'i', offsetof(union  A866, m19), 1);
		dcStructField(st, 'i', offsetof(union  A866, m20), 1);
		dcStructField(st, 'd', offsetof(union  A866, m21), 1);
		dcStructField(st, 's', offsetof(union  A866, m22), 1);
		dcStructField(st, 'i', offsetof(union  A866, m23), 1);
		dcStructField(st, 'f', offsetof(union  A866, m24), 1);
		dcStructField(st, 'd', offsetof(union  A866, m25), 1);
		dcStructField(st, 'l', offsetof(union  A866, m26), 1);
		dcStructField(st, 'l', offsetof(union  A866, m27), 1);
		dcStructField(st, 'p', offsetof(union  A866, m28), 1);
		dcStructField(st, 'c', offsetof(union  A866, m29), 1);
		dcStructField(st, 'f', offsetof(union  A866, m30), 1);
		dcStructField(st, 'i', offsetof(union  A866, m31), 1);
		dcStructField(st, 'p', offsetof(union  A866, m32), 1);
		dcStructField(st, 'c', offsetof(union  A866, m33), 1);
		dcStructField(st, 'l', offsetof(union  A866, m34), 1);
		dcStructField(st, 'f', offsetof(union  A866, m35), 1);
		dcStructField(st, 'd', offsetof(union  A866, m36), 1);
		dcStructField(st, 'p', offsetof(union  A866, m37), 1);
		dcStructField(st, 'd', offsetof(union  A866, m38), 1);
		dcStructField(st, 'j', offsetof(union  A866, m39), 1);
		dcStructField(st, 'i', offsetof(union  A866, m40), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pi<pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji>> */
union  A867 { p m0; i m1; union  A866 m2; };
void f_cpA867(union  A867 *x, const union  A867 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA866(&x->m2, &y->m2); };
int f_cmpA867(const union  A867 *x, const union  A867 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA866(&x->m2, &y->m2); };
DCstruct* f_touchdcstA867() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A867), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A867, m0), 1);
		dcStructField(st, 'i', offsetof(union  A867, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A867, m2), 1, f_touchdcstA866());
		dcCloseStruct(st);
	}
	return st;
};
/* {ccdisspfjifpc} */
struct A868 { c m0; c m1; d m2; i m3; s m4; s m5; p m6; f m7; j m8; i m9; f m10; p m11; c m12; };
void f_cpA868(struct A868 *x, const struct A868 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA868(const struct A868 *x, const struct A868 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA868() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A868), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A868, m0), 1);
		dcStructField(st, 'c', offsetof(struct A868, m1), 1);
		dcStructField(st, 'd', offsetof(struct A868, m2), 1);
		dcStructField(st, 'i', offsetof(struct A868, m3), 1);
		dcStructField(st, 's', offsetof(struct A868, m4), 1);
		dcStructField(st, 's', offsetof(struct A868, m5), 1);
		dcStructField(st, 'p', offsetof(struct A868, m6), 1);
		dcStructField(st, 'f', offsetof(struct A868, m7), 1);
		dcStructField(st, 'j', offsetof(struct A868, m8), 1);
		dcStructField(st, 'i', offsetof(struct A868, m9), 1);
		dcStructField(st, 'f', offsetof(struct A868, m10), 1);
		dcStructField(st, 'p', offsetof(struct A868, m11), 1);
		dcStructField(st, 'c', offsetof(struct A868, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{ccdisspfjifpc}ffjjj> */
union  A869 { struct A868 m0; f m1; f m2; j m3; j m4; j m5; };
void f_cpA869(union  A869 *x, const union  A869 *y) { f_cpA868(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA869(const union  A869 *x, const union  A869 *y) { return f_cmpA868(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA869() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A869), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A869, m0), 1, f_touchdcstA868());
		dcStructField(st, 'f', offsetof(union  A869, m1), 1);
		dcStructField(st, 'f', offsetof(union  A869, m2), 1);
		dcStructField(st, 'j', offsetof(union  A869, m3), 1);
		dcStructField(st, 'j', offsetof(union  A869, m4), 1);
		dcStructField(st, 'j', offsetof(union  A869, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jc} */
struct A870 { j m0; c m1; };
void f_cpA870(struct A870 *x, const struct A870 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA870(const struct A870 *x, const struct A870 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA870() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A870), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A870, m0), 1);
		dcStructField(st, 'c', offsetof(struct A870, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjlicpcjdfdfpllclsjpfs} */
struct A871 { c m0; j m1; l m2; i m3; c m4; p m5; c m6; j m7; d m8; f m9; d m10; f m11; p m12; l m13; l m14; c m15; l m16; s m17; j m18; p m19; f m20; s m21; };
void f_cpA871(struct A871 *x, const struct A871 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA871(const struct A871 *x, const struct A871 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA871() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A871), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A871, m0), 1);
		dcStructField(st, 'j', offsetof(struct A871, m1), 1);
		dcStructField(st, 'l', offsetof(struct A871, m2), 1);
		dcStructField(st, 'i', offsetof(struct A871, m3), 1);
		dcStructField(st, 'c', offsetof(struct A871, m4), 1);
		dcStructField(st, 'p', offsetof(struct A871, m5), 1);
		dcStructField(st, 'c', offsetof(struct A871, m6), 1);
		dcStructField(st, 'j', offsetof(struct A871, m7), 1);
		dcStructField(st, 'd', offsetof(struct A871, m8), 1);
		dcStructField(st, 'f', offsetof(struct A871, m9), 1);
		dcStructField(st, 'd', offsetof(struct A871, m10), 1);
		dcStructField(st, 'f', offsetof(struct A871, m11), 1);
		dcStructField(st, 'p', offsetof(struct A871, m12), 1);
		dcStructField(st, 'l', offsetof(struct A871, m13), 1);
		dcStructField(st, 'l', offsetof(struct A871, m14), 1);
		dcStructField(st, 'c', offsetof(struct A871, m15), 1);
		dcStructField(st, 'l', offsetof(struct A871, m16), 1);
		dcStructField(st, 's', offsetof(struct A871, m17), 1);
		dcStructField(st, 'j', offsetof(struct A871, m18), 1);
		dcStructField(st, 'p', offsetof(struct A871, m19), 1);
		dcStructField(st, 'f', offsetof(struct A871, m20), 1);
		dcStructField(st, 's', offsetof(struct A871, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ppcplspsicdpjldlsdi> */
union  A872 { p m0; p m1; c m2; p m3; l m4; s m5; p m6; s m7; i m8; c m9; d m10; p m11; j m12; l m13; d m14; l m15; s m16; d m17; i m18; };
void f_cpA872(union  A872 *x, const union  A872 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA872(const union  A872 *x, const union  A872 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA872() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A872), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A872, m0), 1);
		dcStructField(st, 'p', offsetof(union  A872, m1), 1);
		dcStructField(st, 'c', offsetof(union  A872, m2), 1);
		dcStructField(st, 'p', offsetof(union  A872, m3), 1);
		dcStructField(st, 'l', offsetof(union  A872, m4), 1);
		dcStructField(st, 's', offsetof(union  A872, m5), 1);
		dcStructField(st, 'p', offsetof(union  A872, m6), 1);
		dcStructField(st, 's', offsetof(union  A872, m7), 1);
		dcStructField(st, 'i', offsetof(union  A872, m8), 1);
		dcStructField(st, 'c', offsetof(union  A872, m9), 1);
		dcStructField(st, 'd', offsetof(union  A872, m10), 1);
		dcStructField(st, 'p', offsetof(union  A872, m11), 1);
		dcStructField(st, 'j', offsetof(union  A872, m12), 1);
		dcStructField(st, 'l', offsetof(union  A872, m13), 1);
		dcStructField(st, 'd', offsetof(union  A872, m14), 1);
		dcStructField(st, 'l', offsetof(union  A872, m15), 1);
		dcStructField(st, 's', offsetof(union  A872, m16), 1);
		dcStructField(st, 'd', offsetof(union  A872, m17), 1);
		dcStructField(st, 'i', offsetof(union  A872, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fpiddc} */
struct A873 { f m0; p m1; i m2; d m3; d m4; c m5; };
void f_cpA873(struct A873 *x, const struct A873 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA873(const struct A873 *x, const struct A873 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA873() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A873), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A873, m0), 1);
		dcStructField(st, 'p', offsetof(struct A873, m1), 1);
		dcStructField(st, 'i', offsetof(struct A873, m2), 1);
		dcStructField(st, 'd', offsetof(struct A873, m3), 1);
		dcStructField(st, 'd', offsetof(struct A873, m4), 1);
		dcStructField(st, 'c', offsetof(struct A873, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fc{jc}i{cjlicpcjdfdfpllclsjpfs}c<ppcplspsicdpjldlsdi>{fpiddc}ccl> */
union  A874 { f m0; c m1; struct A870 m2; i m3; struct A871 m4; c m5; union  A872 m6; struct A873 m7; c m8; c m9; l m10; };
void f_cpA874(union  A874 *x, const union  A874 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA870(&x->m2, &y->m2); x->m3 = y->m3; f_cpA871(&x->m4, &y->m4); x->m5 = y->m5; f_cpA872(&x->m6, &y->m6); f_cpA873(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA874(const union  A874 *x, const union  A874 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA870(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA871(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA872(&x->m6, &y->m6) && f_cmpA873(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA874() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A874), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A874, m0), 1);
		dcStructField(st, 'c', offsetof(union  A874, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A874, m2), 1, f_touchdcstA870());
		dcStructField(st, 'i', offsetof(union  A874, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A874, m4), 1, f_touchdcstA871());
		dcStructField(st, 'c', offsetof(union  A874, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A874, m6), 1, f_touchdcstA872());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A874, m7), 1, f_touchdcstA873());
		dcStructField(st, 'c', offsetof(union  A874, m8), 1);
		dcStructField(st, 'c', offsetof(union  A874, m9), 1);
		dcStructField(st, 'l', offsetof(union  A874, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdcpjifssjlic<pi<pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji>>f<{ccdisspfjifpc}ffjjj>df<fc{jc}i{cjlicpcjdfdfpllclsjpfs}c<ppcplspsicdpjldlsdi>{fpiddc}ccl>} */
struct A875 { c m0; d m1; c m2; p m3; j m4; i m5; f m6; s m7; s m8; j m9; l m10; i m11; c m12; union  A867 m13; f m14; union  A869 m15; d m16; f m17; union  A874 m18; };
void f_cpA875(struct A875 *x, const struct A875 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA867(&x->m13, &y->m13); x->m14 = y->m14; f_cpA869(&x->m15, &y->m15); x->m16 = y->m16; x->m17 = y->m17; f_cpA874(&x->m18, &y->m18); };
int f_cmpA875(const struct A875 *x, const struct A875 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA867(&x->m13, &y->m13) && x->m14 == y->m14 && f_cmpA869(&x->m15, &y->m15) && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA874(&x->m18, &y->m18); };
DCstruct* f_touchdcstA875() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A875), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A875, m0), 1);
		dcStructField(st, 'd', offsetof(struct A875, m1), 1);
		dcStructField(st, 'c', offsetof(struct A875, m2), 1);
		dcStructField(st, 'p', offsetof(struct A875, m3), 1);
		dcStructField(st, 'j', offsetof(struct A875, m4), 1);
		dcStructField(st, 'i', offsetof(struct A875, m5), 1);
		dcStructField(st, 'f', offsetof(struct A875, m6), 1);
		dcStructField(st, 's', offsetof(struct A875, m7), 1);
		dcStructField(st, 's', offsetof(struct A875, m8), 1);
		dcStructField(st, 'j', offsetof(struct A875, m9), 1);
		dcStructField(st, 'l', offsetof(struct A875, m10), 1);
		dcStructField(st, 'i', offsetof(struct A875, m11), 1);
		dcStructField(st, 'c', offsetof(struct A875, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A875, m13), 1, f_touchdcstA867());
		dcStructField(st, 'f', offsetof(struct A875, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A875, m15), 1, f_touchdcstA869());
		dcStructField(st, 'd', offsetof(struct A875, m16), 1);
		dcStructField(st, 'f', offsetof(struct A875, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A875, m18), 1, f_touchdcstA874());
		dcCloseStruct(st);
	}
	return st;
};
/* {ffjci} */
struct A876 { f m0; f m1; j m2; c m3; i m4; };
void f_cpA876(struct A876 *x, const struct A876 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA876(const struct A876 *x, const struct A876 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA876() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A876), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A876, m0), 1);
		dcStructField(st, 'f', offsetof(struct A876, m1), 1);
		dcStructField(st, 'j', offsetof(struct A876, m2), 1);
		dcStructField(st, 'c', offsetof(struct A876, m3), 1);
		dcStructField(st, 'i', offsetof(struct A876, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{ffjci}spiddisdpjjijf> */
union  A877 { struct A876 m0; s m1; p m2; i m3; d m4; d m5; i m6; s m7; d m8; p m9; j m10; j m11; i m12; j m13; f m14; };
void f_cpA877(union  A877 *x, const union  A877 *y) { f_cpA876(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA877(const union  A877 *x, const union  A877 *y) { return f_cmpA876(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA877() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A877), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A877, m0), 1, f_touchdcstA876());
		dcStructField(st, 's', offsetof(union  A877, m1), 1);
		dcStructField(st, 'p', offsetof(union  A877, m2), 1);
		dcStructField(st, 'i', offsetof(union  A877, m3), 1);
		dcStructField(st, 'd', offsetof(union  A877, m4), 1);
		dcStructField(st, 'd', offsetof(union  A877, m5), 1);
		dcStructField(st, 'i', offsetof(union  A877, m6), 1);
		dcStructField(st, 's', offsetof(union  A877, m7), 1);
		dcStructField(st, 'd', offsetof(union  A877, m8), 1);
		dcStructField(st, 'p', offsetof(union  A877, m9), 1);
		dcStructField(st, 'j', offsetof(union  A877, m10), 1);
		dcStructField(st, 'j', offsetof(union  A877, m11), 1);
		dcStructField(st, 'i', offsetof(union  A877, m12), 1);
		dcStructField(st, 'j', offsetof(union  A877, m13), 1);
		dcStructField(st, 'f', offsetof(union  A877, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lp<{ffjci}spiddisdpjjijf>cplpjsj} */
struct A878 { l m0; p m1; union  A877 m2; c m3; p m4; l m5; p m6; j m7; s m8; j m9; };
void f_cpA878(struct A878 *x, const struct A878 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA877(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA878(const struct A878 *x, const struct A878 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA877(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA878() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A878), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A878, m0), 1);
		dcStructField(st, 'p', offsetof(struct A878, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A878, m2), 1, f_touchdcstA877());
		dcStructField(st, 'c', offsetof(struct A878, m3), 1);
		dcStructField(st, 'p', offsetof(struct A878, m4), 1);
		dcStructField(st, 'l', offsetof(struct A878, m5), 1);
		dcStructField(st, 'p', offsetof(struct A878, m6), 1);
		dcStructField(st, 'j', offsetof(struct A878, m7), 1);
		dcStructField(st, 's', offsetof(struct A878, m8), 1);
		dcStructField(st, 'j', offsetof(struct A878, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sji> */
union  A879 { s m0; j m1; i m2; };
void f_cpA879(union  A879 *x, const union  A879 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA879(const union  A879 *x, const union  A879 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA879() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A879), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A879, m0), 1);
		dcStructField(st, 'j', offsetof(union  A879, m1), 1);
		dcStructField(st, 'i', offsetof(union  A879, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <i<sji>iljlf> */
union  A880 { i m0; union  A879 m1; i m2; l m3; j m4; l m5; f m6; };
void f_cpA880(union  A880 *x, const union  A880 *y) { x->m0 = y->m0; f_cpA879(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA880(const union  A880 *x, const union  A880 *y) { return x->m0 == y->m0 && f_cmpA879(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA880() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A880), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A880, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A880, m1), 1, f_touchdcstA879());
		dcStructField(st, 'i', offsetof(union  A880, m2), 1);
		dcStructField(st, 'l', offsetof(union  A880, m3), 1);
		dcStructField(st, 'j', offsetof(union  A880, m4), 1);
		dcStructField(st, 'l', offsetof(union  A880, m5), 1);
		dcStructField(st, 'f', offsetof(union  A880, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpi} */
struct A881 { l m0; p m1; i m2; };
void f_cpA881(struct A881 *x, const struct A881 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA881(const struct A881 *x, const struct A881 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA881() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A881), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A881, m0), 1);
		dcStructField(st, 'p', offsetof(struct A881, m1), 1);
		dcStructField(st, 'i', offsetof(struct A881, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dspfjids} */
struct A882 { d m0; s m1; p m2; f m3; j m4; i m5; d m6; s m7; };
void f_cpA882(struct A882 *x, const struct A882 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA882(const struct A882 *x, const struct A882 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA882() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A882), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A882, m0), 1);
		dcStructField(st, 's', offsetof(struct A882, m1), 1);
		dcStructField(st, 'p', offsetof(struct A882, m2), 1);
		dcStructField(st, 'f', offsetof(struct A882, m3), 1);
		dcStructField(st, 'j', offsetof(struct A882, m4), 1);
		dcStructField(st, 'i', offsetof(struct A882, m5), 1);
		dcStructField(st, 'd', offsetof(struct A882, m6), 1);
		dcStructField(st, 's', offsetof(struct A882, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flcdispifidd} */
struct A883 { f m0; l m1; c m2; d m3; i m4; s m5; p m6; i m7; f m8; i m9; d m10; d m11; };
void f_cpA883(struct A883 *x, const struct A883 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA883(const struct A883 *x, const struct A883 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA883() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A883), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A883, m0), 1);
		dcStructField(st, 'l', offsetof(struct A883, m1), 1);
		dcStructField(st, 'c', offsetof(struct A883, m2), 1);
		dcStructField(st, 'd', offsetof(struct A883, m3), 1);
		dcStructField(st, 'i', offsetof(struct A883, m4), 1);
		dcStructField(st, 's', offsetof(struct A883, m5), 1);
		dcStructField(st, 'p', offsetof(struct A883, m6), 1);
		dcStructField(st, 'i', offsetof(struct A883, m7), 1);
		dcStructField(st, 'f', offsetof(struct A883, m8), 1);
		dcStructField(st, 'i', offsetof(struct A883, m9), 1);
		dcStructField(st, 'd', offsetof(struct A883, m10), 1);
		dcStructField(st, 'd', offsetof(struct A883, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iicsccs{dspfjids}jcc{flcdispifidd}slsjjcijc} */
struct A884 { i m0; i m1; c m2; s m3; c m4; c m5; s m6; struct A882 m7; j m8; c m9; c m10; struct A883 m11; s m12; l m13; s m14; j m15; j m16; c m17; i m18; j m19; c m20; };
void f_cpA884(struct A884 *x, const struct A884 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA882(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA883(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA884(const struct A884 *x, const struct A884 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA882(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA883(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA884() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A884), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A884, m0), 1);
		dcStructField(st, 'i', offsetof(struct A884, m1), 1);
		dcStructField(st, 'c', offsetof(struct A884, m2), 1);
		dcStructField(st, 's', offsetof(struct A884, m3), 1);
		dcStructField(st, 'c', offsetof(struct A884, m4), 1);
		dcStructField(st, 'c', offsetof(struct A884, m5), 1);
		dcStructField(st, 's', offsetof(struct A884, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A884, m7), 1, f_touchdcstA882());
		dcStructField(st, 'j', offsetof(struct A884, m8), 1);
		dcStructField(st, 'c', offsetof(struct A884, m9), 1);
		dcStructField(st, 'c', offsetof(struct A884, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A884, m11), 1, f_touchdcstA883());
		dcStructField(st, 's', offsetof(struct A884, m12), 1);
		dcStructField(st, 'l', offsetof(struct A884, m13), 1);
		dcStructField(st, 's', offsetof(struct A884, m14), 1);
		dcStructField(st, 'j', offsetof(struct A884, m15), 1);
		dcStructField(st, 'j', offsetof(struct A884, m16), 1);
		dcStructField(st, 'c', offsetof(struct A884, m17), 1);
		dcStructField(st, 'i', offsetof(struct A884, m18), 1);
		dcStructField(st, 'j', offsetof(struct A884, m19), 1);
		dcStructField(st, 'c', offsetof(struct A884, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dsfcjssls> */
union  A885 { d m0; s m1; f m2; c m3; j m4; s m5; s m6; l m7; s m8; };
void f_cpA885(union  A885 *x, const union  A885 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA885(const union  A885 *x, const union  A885 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA885() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A885), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A885, m0), 1);
		dcStructField(st, 's', offsetof(union  A885, m1), 1);
		dcStructField(st, 'f', offsetof(union  A885, m2), 1);
		dcStructField(st, 'c', offsetof(union  A885, m3), 1);
		dcStructField(st, 'j', offsetof(union  A885, m4), 1);
		dcStructField(st, 's', offsetof(union  A885, m5), 1);
		dcStructField(st, 's', offsetof(union  A885, m6), 1);
		dcStructField(st, 'l', offsetof(union  A885, m7), 1);
		dcStructField(st, 's', offsetof(union  A885, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {liccj} */
struct A886 { l m0; i m1; c m2; c m3; j m4; };
void f_cpA886(struct A886 *x, const struct A886 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA886(const struct A886 *x, const struct A886 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA886() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A886), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A886, m0), 1);
		dcStructField(st, 'i', offsetof(struct A886, m1), 1);
		dcStructField(st, 'c', offsetof(struct A886, m2), 1);
		dcStructField(st, 'c', offsetof(struct A886, m3), 1);
		dcStructField(st, 'j', offsetof(struct A886, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjds} */
struct A887 { c m0; j m1; d m2; s m3; };
void f_cpA887(struct A887 *x, const struct A887 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA887(const struct A887 *x, const struct A887 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA887() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A887), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A887, m0), 1);
		dcStructField(st, 'j', offsetof(struct A887, m1), 1);
		dcStructField(st, 'd', offsetof(struct A887, m2), 1);
		dcStructField(st, 's', offsetof(struct A887, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ildllji} */
struct A888 { i m0; l m1; d m2; l m3; l m4; j m5; i m6; };
void f_cpA888(struct A888 *x, const struct A888 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA888(const struct A888 *x, const struct A888 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA888() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A888), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A888, m0), 1);
		dcStructField(st, 'l', offsetof(struct A888, m1), 1);
		dcStructField(st, 'd', offsetof(struct A888, m2), 1);
		dcStructField(st, 'l', offsetof(struct A888, m3), 1);
		dcStructField(st, 'l', offsetof(struct A888, m4), 1);
		dcStructField(st, 'j', offsetof(struct A888, m5), 1);
		dcStructField(st, 'i', offsetof(struct A888, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ciji} */
struct A889 { c m0; i m1; j m2; i m3; };
void f_cpA889(struct A889 *x, const struct A889 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA889(const struct A889 *x, const struct A889 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA889() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A889), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A889, m0), 1);
		dcStructField(st, 'i', offsetof(struct A889, m1), 1);
		dcStructField(st, 'j', offsetof(struct A889, m2), 1);
		dcStructField(st, 'i', offsetof(struct A889, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {l{ildllji}{ciji}} */
struct A890 { l m0; struct A888 m1; struct A889 m2; };
void f_cpA890(struct A890 *x, const struct A890 *y) { x->m0 = y->m0; f_cpA888(&x->m1, &y->m1); f_cpA889(&x->m2, &y->m2); };
int f_cmpA890(const struct A890 *x, const struct A890 *y) { return x->m0 == y->m0 && f_cmpA888(&x->m1, &y->m1) && f_cmpA889(&x->m2, &y->m2); };
DCstruct* f_touchdcstA890() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A890), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A890, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A890, m1), 1, f_touchdcstA888());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A890, m2), 1, f_touchdcstA889());
		dcCloseStruct(st);
	}
	return st;
};
/* <piddljl> */
union  A891 { p m0; i m1; d m2; d m3; l m4; j m5; l m6; };
void f_cpA891(union  A891 *x, const union  A891 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA891(const union  A891 *x, const union  A891 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA891() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A891), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A891, m0), 1);
		dcStructField(st, 'i', offsetof(union  A891, m1), 1);
		dcStructField(st, 'd', offsetof(union  A891, m2), 1);
		dcStructField(st, 'd', offsetof(union  A891, m3), 1);
		dcStructField(st, 'l', offsetof(union  A891, m4), 1);
		dcStructField(st, 'j', offsetof(union  A891, m5), 1);
		dcStructField(st, 'l', offsetof(union  A891, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lpcjpldddp> */
union  A892 { l m0; p m1; c m2; j m3; p m4; l m5; d m6; d m7; d m8; p m9; };
void f_cpA892(union  A892 *x, const union  A892 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA892(const union  A892 *x, const union  A892 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA892() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A892), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A892, m0), 1);
		dcStructField(st, 'p', offsetof(union  A892, m1), 1);
		dcStructField(st, 'c', offsetof(union  A892, m2), 1);
		dcStructField(st, 'j', offsetof(union  A892, m3), 1);
		dcStructField(st, 'p', offsetof(union  A892, m4), 1);
		dcStructField(st, 'l', offsetof(union  A892, m5), 1);
		dcStructField(st, 'd', offsetof(union  A892, m6), 1);
		dcStructField(st, 'd', offsetof(union  A892, m7), 1);
		dcStructField(st, 'd', offsetof(union  A892, m8), 1);
		dcStructField(st, 'p', offsetof(union  A892, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lcci<lpcjpldddp>p> */
union  A893 { l m0; c m1; c m2; i m3; union  A892 m4; p m5; };
void f_cpA893(union  A893 *x, const union  A893 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA892(&x->m4, &y->m4); x->m5 = y->m5; };
int f_cmpA893(const union  A893 *x, const union  A893 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA892(&x->m4, &y->m4) && x->m5 == y->m5; };
DCstruct* f_touchdcstA893() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A893), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A893, m0), 1);
		dcStructField(st, 'c', offsetof(union  A893, m1), 1);
		dcStructField(st, 'c', offsetof(union  A893, m2), 1);
		dcStructField(st, 'i', offsetof(union  A893, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A893, m4), 1, f_touchdcstA892());
		dcStructField(st, 'p', offsetof(union  A893, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <idjsj> */
union  A894 { i m0; d m1; j m2; s m3; j m4; };
void f_cpA894(union  A894 *x, const union  A894 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA894(const union  A894 *x, const union  A894 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA894() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A894), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A894, m0), 1);
		dcStructField(st, 'd', offsetof(union  A894, m1), 1);
		dcStructField(st, 'j', offsetof(union  A894, m2), 1);
		dcStructField(st, 's', offsetof(union  A894, m3), 1);
		dcStructField(st, 'j', offsetof(union  A894, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pici> */
union  A895 { p m0; i m1; c m2; i m3; };
void f_cpA895(union  A895 *x, const union  A895 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA895(const union  A895 *x, const union  A895 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA895() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A895), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A895, m0), 1);
		dcStructField(st, 'i', offsetof(union  A895, m1), 1);
		dcStructField(st, 'c', offsetof(union  A895, m2), 1);
		dcStructField(st, 'i', offsetof(union  A895, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pscjjjld> */
union  A896 { p m0; s m1; c m2; j m3; j m4; j m5; l m6; d m7; };
void f_cpA896(union  A896 *x, const union  A896 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA896(const union  A896 *x, const union  A896 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA896() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A896), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A896, m0), 1);
		dcStructField(st, 's', offsetof(union  A896, m1), 1);
		dcStructField(st, 'c', offsetof(union  A896, m2), 1);
		dcStructField(st, 'j', offsetof(union  A896, m3), 1);
		dcStructField(st, 'j', offsetof(union  A896, m4), 1);
		dcStructField(st, 'j', offsetof(union  A896, m5), 1);
		dcStructField(st, 'l', offsetof(union  A896, m6), 1);
		dcStructField(st, 'd', offsetof(union  A896, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlllddi> */
union  A897 { d m0; l m1; l m2; l m3; d m4; d m5; i m6; };
void f_cpA897(union  A897 *x, const union  A897 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA897(const union  A897 *x, const union  A897 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA897() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A897), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A897, m0), 1);
		dcStructField(st, 'l', offsetof(union  A897, m1), 1);
		dcStructField(st, 'l', offsetof(union  A897, m2), 1);
		dcStructField(st, 'l', offsetof(union  A897, m3), 1);
		dcStructField(st, 'd', offsetof(union  A897, m4), 1);
		dcStructField(st, 'd', offsetof(union  A897, m5), 1);
		dcStructField(st, 'i', offsetof(union  A897, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fp<pscjjjld>dcdjjsjp<dlllddi>} */
struct A898 { f m0; p m1; union  A896 m2; d m3; c m4; d m5; j m6; j m7; s m8; j m9; p m10; union  A897 m11; };
void f_cpA898(struct A898 *x, const struct A898 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA896(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA897(&x->m11, &y->m11); };
int f_cmpA898(const struct A898 *x, const struct A898 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA896(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA897(&x->m11, &y->m11); };
DCstruct* f_touchdcstA898() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A898), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A898, m0), 1);
		dcStructField(st, 'p', offsetof(struct A898, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A898, m2), 1, f_touchdcstA896());
		dcStructField(st, 'd', offsetof(struct A898, m3), 1);
		dcStructField(st, 'c', offsetof(struct A898, m4), 1);
		dcStructField(st, 'd', offsetof(struct A898, m5), 1);
		dcStructField(st, 'j', offsetof(struct A898, m6), 1);
		dcStructField(st, 'j', offsetof(struct A898, m7), 1);
		dcStructField(st, 's', offsetof(struct A898, m8), 1);
		dcStructField(st, 'j', offsetof(struct A898, m9), 1);
		dcStructField(st, 'p', offsetof(struct A898, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A898, m11), 1, f_touchdcstA897());
		dcCloseStruct(st);
	}
	return st;
};
/* {sfcijlc} */
struct A899 { s m0; f m1; c m2; i m3; j m4; l m5; c m6; };
void f_cpA899(struct A899 *x, const struct A899 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA899(const struct A899 *x, const struct A899 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA899() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A899), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A899, m0), 1);
		dcStructField(st, 'f', offsetof(struct A899, m1), 1);
		dcStructField(st, 'c', offsetof(struct A899, m2), 1);
		dcStructField(st, 'i', offsetof(struct A899, m3), 1);
		dcStructField(st, 'j', offsetof(struct A899, m4), 1);
		dcStructField(st, 'l', offsetof(struct A899, m5), 1);
		dcStructField(st, 'c', offsetof(struct A899, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljpjcjffi} */
struct A900 { l m0; j m1; p m2; j m3; c m4; j m5; f m6; f m7; i m8; };
void f_cpA900(struct A900 *x, const struct A900 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA900(const struct A900 *x, const struct A900 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA900() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A900), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A900, m0), 1);
		dcStructField(st, 'j', offsetof(struct A900, m1), 1);
		dcStructField(st, 'p', offsetof(struct A900, m2), 1);
		dcStructField(st, 'j', offsetof(struct A900, m3), 1);
		dcStructField(st, 'c', offsetof(struct A900, m4), 1);
		dcStructField(st, 'j', offsetof(struct A900, m5), 1);
		dcStructField(st, 'f', offsetof(struct A900, m6), 1);
		dcStructField(st, 'f', offsetof(struct A900, m7), 1);
		dcStructField(st, 'i', offsetof(struct A900, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {silsisp} */
struct A901 { s m0; i m1; l m2; s m3; i m4; s m5; p m6; };
void f_cpA901(struct A901 *x, const struct A901 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA901(const struct A901 *x, const struct A901 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA901() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A901), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A901, m0), 1);
		dcStructField(st, 'i', offsetof(struct A901, m1), 1);
		dcStructField(st, 'l', offsetof(struct A901, m2), 1);
		dcStructField(st, 's', offsetof(struct A901, m3), 1);
		dcStructField(st, 'i', offsetof(struct A901, m4), 1);
		dcStructField(st, 's', offsetof(struct A901, m5), 1);
		dcStructField(st, 'p', offsetof(struct A901, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfjifjpfd{sfcijlc}{ljpjcjffi}fdpp{silsisp}f} */
struct A902 { l m0; f m1; j m2; i m3; f m4; j m5; p m6; f m7; d m8; struct A899 m9; struct A900 m10; f m11; d m12; p m13; p m14; struct A901 m15; f m16; };
void f_cpA902(struct A902 *x, const struct A902 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA899(&x->m9, &y->m9); f_cpA900(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA901(&x->m15, &y->m15); x->m16 = y->m16; };
int f_cmpA902(const struct A902 *x, const struct A902 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA899(&x->m9, &y->m9) && f_cmpA900(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA901(&x->m15, &y->m15) && x->m16 == y->m16; };
DCstruct* f_touchdcstA902() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A902), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A902, m0), 1);
		dcStructField(st, 'f', offsetof(struct A902, m1), 1);
		dcStructField(st, 'j', offsetof(struct A902, m2), 1);
		dcStructField(st, 'i', offsetof(struct A902, m3), 1);
		dcStructField(st, 'f', offsetof(struct A902, m4), 1);
		dcStructField(st, 'j', offsetof(struct A902, m5), 1);
		dcStructField(st, 'p', offsetof(struct A902, m6), 1);
		dcStructField(st, 'f', offsetof(struct A902, m7), 1);
		dcStructField(st, 'd', offsetof(struct A902, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A902, m9), 1, f_touchdcstA899());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A902, m10), 1, f_touchdcstA900());
		dcStructField(st, 'f', offsetof(struct A902, m11), 1);
		dcStructField(st, 'd', offsetof(struct A902, m12), 1);
		dcStructField(st, 'p', offsetof(struct A902, m13), 1);
		dcStructField(st, 'p', offsetof(struct A902, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A902, m15), 1, f_touchdcstA901());
		dcStructField(st, 'f', offsetof(struct A902, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clfd<idjsj>jf{p}pcppd<pici>jjfi{fp<pscjjjld>dcdjjsjp<dlllddi>}{lfjifjpfd{sfcijlc}{ljpjcjffi}fdpp{silsisp}f}{c}cccddipfccipppfdd} */
struct A903 { c m0; l m1; f m2; d m3; union  A894 m4; j m5; f m6; struct A250 m7; p m8; c m9; p m10; p m11; d m12; union  A895 m13; j m14; j m15; f m16; i m17; struct A898 m18; struct A902 m19; struct A122 m20; c m21; c m22; c m23; d m24; d m25; i m26; p m27; f m28; c m29; c m30; i m31; p m32; p m33; p m34; f m35; d m36; d m37; };
void f_cpA903(struct A903 *x, const struct A903 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA894(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA250(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA895(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA898(&x->m18, &y->m18); f_cpA902(&x->m19, &y->m19); f_cpA122(&x->m20, &y->m20); x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; };
int f_cmpA903(const struct A903 *x, const struct A903 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA894(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA250(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA895(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA898(&x->m18, &y->m18) && f_cmpA902(&x->m19, &y->m19) && f_cmpA122(&x->m20, &y->m20) && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37; };
DCstruct* f_touchdcstA903() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(38, sizeof(struct A903), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A903, m0), 1);
		dcStructField(st, 'l', offsetof(struct A903, m1), 1);
		dcStructField(st, 'f', offsetof(struct A903, m2), 1);
		dcStructField(st, 'd', offsetof(struct A903, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A903, m4), 1, f_touchdcstA894());
		dcStructField(st, 'j', offsetof(struct A903, m5), 1);
		dcStructField(st, 'f', offsetof(struct A903, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A903, m7), 1, f_touchdcstA250());
		dcStructField(st, 'p', offsetof(struct A903, m8), 1);
		dcStructField(st, 'c', offsetof(struct A903, m9), 1);
		dcStructField(st, 'p', offsetof(struct A903, m10), 1);
		dcStructField(st, 'p', offsetof(struct A903, m11), 1);
		dcStructField(st, 'd', offsetof(struct A903, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A903, m13), 1, f_touchdcstA895());
		dcStructField(st, 'j', offsetof(struct A903, m14), 1);
		dcStructField(st, 'j', offsetof(struct A903, m15), 1);
		dcStructField(st, 'f', offsetof(struct A903, m16), 1);
		dcStructField(st, 'i', offsetof(struct A903, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A903, m18), 1, f_touchdcstA898());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A903, m19), 1, f_touchdcstA902());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A903, m20), 1, f_touchdcstA122());
		dcStructField(st, 'c', offsetof(struct A903, m21), 1);
		dcStructField(st, 'c', offsetof(struct A903, m22), 1);
		dcStructField(st, 'c', offsetof(struct A903, m23), 1);
		dcStructField(st, 'd', offsetof(struct A903, m24), 1);
		dcStructField(st, 'd', offsetof(struct A903, m25), 1);
		dcStructField(st, 'i', offsetof(struct A903, m26), 1);
		dcStructField(st, 'p', offsetof(struct A903, m27), 1);
		dcStructField(st, 'f', offsetof(struct A903, m28), 1);
		dcStructField(st, 'c', offsetof(struct A903, m29), 1);
		dcStructField(st, 'c', offsetof(struct A903, m30), 1);
		dcStructField(st, 'i', offsetof(struct A903, m31), 1);
		dcStructField(st, 'p', offsetof(struct A903, m32), 1);
		dcStructField(st, 'p', offsetof(struct A903, m33), 1);
		dcStructField(st, 'p', offsetof(struct A903, m34), 1);
		dcStructField(st, 'f', offsetof(struct A903, m35), 1);
		dcStructField(st, 'd', offsetof(struct A903, m36), 1);
		dcStructField(st, 'd', offsetof(struct A903, m37), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfcjfsfplilsjjcfjijsdslcl> */
union  A904 { d m0; f m1; c m2; j m3; f m4; s m5; f m6; p m7; l m8; i m9; l m10; s m11; j m12; j m13; c m14; f m15; j m16; i m17; j m18; s m19; d m20; s m21; l m22; c m23; l m24; };
void f_cpA904(union  A904 *x, const union  A904 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA904(const union  A904 *x, const union  A904 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA904() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(union  A904), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A904, m0), 1);
		dcStructField(st, 'f', offsetof(union  A904, m1), 1);
		dcStructField(st, 'c', offsetof(union  A904, m2), 1);
		dcStructField(st, 'j', offsetof(union  A904, m3), 1);
		dcStructField(st, 'f', offsetof(union  A904, m4), 1);
		dcStructField(st, 's', offsetof(union  A904, m5), 1);
		dcStructField(st, 'f', offsetof(union  A904, m6), 1);
		dcStructField(st, 'p', offsetof(union  A904, m7), 1);
		dcStructField(st, 'l', offsetof(union  A904, m8), 1);
		dcStructField(st, 'i', offsetof(union  A904, m9), 1);
		dcStructField(st, 'l', offsetof(union  A904, m10), 1);
		dcStructField(st, 's', offsetof(union  A904, m11), 1);
		dcStructField(st, 'j', offsetof(union  A904, m12), 1);
		dcStructField(st, 'j', offsetof(union  A904, m13), 1);
		dcStructField(st, 'c', offsetof(union  A904, m14), 1);
		dcStructField(st, 'f', offsetof(union  A904, m15), 1);
		dcStructField(st, 'j', offsetof(union  A904, m16), 1);
		dcStructField(st, 'i', offsetof(union  A904, m17), 1);
		dcStructField(st, 'j', offsetof(union  A904, m18), 1);
		dcStructField(st, 's', offsetof(union  A904, m19), 1);
		dcStructField(st, 'd', offsetof(union  A904, m20), 1);
		dcStructField(st, 's', offsetof(union  A904, m21), 1);
		dcStructField(st, 'l', offsetof(union  A904, m22), 1);
		dcStructField(st, 'c', offsetof(union  A904, m23), 1);
		dcStructField(st, 'l', offsetof(union  A904, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<dfcjfsfplilsjjcfjijsdslcl>j> */
union  A905 { union  A904 m0; j m1; };
void f_cpA905(union  A905 *x, const union  A905 *y) { f_cpA904(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA905(const union  A905 *x, const union  A905 *y) { return f_cmpA904(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA905() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A905), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A905, m0), 1, f_touchdcstA904());
		dcStructField(st, 'j', offsetof(union  A905, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlclsfcfp} */
struct A906 { d m0; l m1; c m2; l m3; s m4; f m5; c m6; f m7; p m8; };
void f_cpA906(struct A906 *x, const struct A906 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA906(const struct A906 *x, const struct A906 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA906() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A906), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A906, m0), 1);
		dcStructField(st, 'l', offsetof(struct A906, m1), 1);
		dcStructField(st, 'c', offsetof(struct A906, m2), 1);
		dcStructField(st, 'l', offsetof(struct A906, m3), 1);
		dcStructField(st, 's', offsetof(struct A906, m4), 1);
		dcStructField(st, 'f', offsetof(struct A906, m5), 1);
		dcStructField(st, 'c', offsetof(struct A906, m6), 1);
		dcStructField(st, 'f', offsetof(struct A906, m7), 1);
		dcStructField(st, 'p', offsetof(struct A906, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cilji} */
struct A907 { c m0; i m1; l m2; j m3; i m4; };
void f_cpA907(struct A907 *x, const struct A907 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA907(const struct A907 *x, const struct A907 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA907() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A907), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A907, m0), 1);
		dcStructField(st, 'i', offsetof(struct A907, m1), 1);
		dcStructField(st, 'l', offsetof(struct A907, m2), 1);
		dcStructField(st, 'j', offsetof(struct A907, m3), 1);
		dcStructField(st, 'i', offsetof(struct A907, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djdidfl} */
struct A908 { d m0; j m1; d m2; i m3; d m4; f m5; l m6; };
void f_cpA908(struct A908 *x, const struct A908 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA908(const struct A908 *x, const struct A908 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA908() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A908), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A908, m0), 1);
		dcStructField(st, 'j', offsetof(struct A908, m1), 1);
		dcStructField(st, 'd', offsetof(struct A908, m2), 1);
		dcStructField(st, 'i', offsetof(struct A908, m3), 1);
		dcStructField(st, 'd', offsetof(struct A908, m4), 1);
		dcStructField(st, 'f', offsetof(struct A908, m5), 1);
		dcStructField(st, 'l', offsetof(struct A908, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iplpppddsfdsfispflsj> */
union  A909 { i m0; p m1; l m2; p m3; p m4; p m5; d m6; d m7; s m8; f m9; d m10; s m11; f m12; i m13; s m14; p m15; f m16; l m17; s m18; j m19; };
void f_cpA909(union  A909 *x, const union  A909 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA909(const union  A909 *x, const union  A909 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA909() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A909), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A909, m0), 1);
		dcStructField(st, 'p', offsetof(union  A909, m1), 1);
		dcStructField(st, 'l', offsetof(union  A909, m2), 1);
		dcStructField(st, 'p', offsetof(union  A909, m3), 1);
		dcStructField(st, 'p', offsetof(union  A909, m4), 1);
		dcStructField(st, 'p', offsetof(union  A909, m5), 1);
		dcStructField(st, 'd', offsetof(union  A909, m6), 1);
		dcStructField(st, 'd', offsetof(union  A909, m7), 1);
		dcStructField(st, 's', offsetof(union  A909, m8), 1);
		dcStructField(st, 'f', offsetof(union  A909, m9), 1);
		dcStructField(st, 'd', offsetof(union  A909, m10), 1);
		dcStructField(st, 's', offsetof(union  A909, m11), 1);
		dcStructField(st, 'f', offsetof(union  A909, m12), 1);
		dcStructField(st, 'i', offsetof(union  A909, m13), 1);
		dcStructField(st, 's', offsetof(union  A909, m14), 1);
		dcStructField(st, 'p', offsetof(union  A909, m15), 1);
		dcStructField(st, 'f', offsetof(union  A909, m16), 1);
		dcStructField(st, 'l', offsetof(union  A909, m17), 1);
		dcStructField(st, 's', offsetof(union  A909, m18), 1);
		dcStructField(st, 'j', offsetof(union  A909, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{dlclsfcfp}{cilji}cccf{djdidfl}j<iplpppddsfdsfispflsj>psilp} */
struct A910 { struct A906 m0; struct A907 m1; c m2; c m3; c m4; f m5; struct A908 m6; j m7; union  A909 m8; p m9; s m10; i m11; l m12; p m13; };
void f_cpA910(struct A910 *x, const struct A910 *y) { f_cpA906(&x->m0, &y->m0); f_cpA907(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA908(&x->m6, &y->m6); x->m7 = y->m7; f_cpA909(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA910(const struct A910 *x, const struct A910 *y) { return f_cmpA906(&x->m0, &y->m0) && f_cmpA907(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA908(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA909(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA910() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A910), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A910, m0), 1, f_touchdcstA906());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A910, m1), 1, f_touchdcstA907());
		dcStructField(st, 'c', offsetof(struct A910, m2), 1);
		dcStructField(st, 'c', offsetof(struct A910, m3), 1);
		dcStructField(st, 'c', offsetof(struct A910, m4), 1);
		dcStructField(st, 'f', offsetof(struct A910, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A910, m6), 1, f_touchdcstA908());
		dcStructField(st, 'j', offsetof(struct A910, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A910, m8), 1, f_touchdcstA909());
		dcStructField(st, 'p', offsetof(struct A910, m9), 1);
		dcStructField(st, 's', offsetof(struct A910, m10), 1);
		dcStructField(st, 'i', offsetof(struct A910, m11), 1);
		dcStructField(st, 'l', offsetof(struct A910, m12), 1);
		dcStructField(st, 'p', offsetof(struct A910, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lsll> */
union  A911 { l m0; s m1; l m2; l m3; };
void f_cpA911(union  A911 *x, const union  A911 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA911(const union  A911 *x, const union  A911 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA911() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A911), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A911, m0), 1);
		dcStructField(st, 's', offsetof(union  A911, m1), 1);
		dcStructField(st, 'l', offsetof(union  A911, m2), 1);
		dcStructField(st, 'l', offsetof(union  A911, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjss{fp}c} */
struct A912 { f m0; j m1; s m2; s m3; struct A596 m4; c m5; };
void f_cpA912(struct A912 *x, const struct A912 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA596(&x->m4, &y->m4); x->m5 = y->m5; };
int f_cmpA912(const struct A912 *x, const struct A912 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA596(&x->m4, &y->m4) && x->m5 == y->m5; };
DCstruct* f_touchdcstA912() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A912), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A912, m0), 1);
		dcStructField(st, 'j', offsetof(struct A912, m1), 1);
		dcStructField(st, 's', offsetof(struct A912, m2), 1);
		dcStructField(st, 's', offsetof(struct A912, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A912, m4), 1, f_touchdcstA596());
		dcStructField(st, 'c', offsetof(struct A912, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lddjjj{fjss{fp}c}s> */
union  A913 { l m0; d m1; d m2; j m3; j m4; j m5; struct A912 m6; s m7; };
void f_cpA913(union  A913 *x, const union  A913 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA912(&x->m6, &y->m6); x->m7 = y->m7; };
int f_cmpA913(const union  A913 *x, const union  A913 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA912(&x->m6, &y->m6) && x->m7 == y->m7; };
DCstruct* f_touchdcstA913() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A913), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A913, m0), 1);
		dcStructField(st, 'd', offsetof(union  A913, m1), 1);
		dcStructField(st, 'd', offsetof(union  A913, m2), 1);
		dcStructField(st, 'j', offsetof(union  A913, m3), 1);
		dcStructField(st, 'j', offsetof(union  A913, m4), 1);
		dcStructField(st, 'j', offsetof(union  A913, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A913, m6), 1, f_touchdcstA912());
		dcStructField(st, 's', offsetof(union  A913, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdcl} */
struct A914 { s m0; d m1; c m2; l m3; };
void f_cpA914(struct A914 *x, const struct A914 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA914(const struct A914 *x, const struct A914 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA914() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A914), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A914, m0), 1);
		dcStructField(st, 'd', offsetof(struct A914, m1), 1);
		dcStructField(st, 'c', offsetof(struct A914, m2), 1);
		dcStructField(st, 'l', offsetof(struct A914, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ic{sdcl}s> */
union  A915 { i m0; c m1; struct A914 m2; s m3; };
void f_cpA915(union  A915 *x, const union  A915 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA914(&x->m2, &y->m2); x->m3 = y->m3; };
int f_cmpA915(const union  A915 *x, const union  A915 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA914(&x->m2, &y->m2) && x->m3 == y->m3; };
DCstruct* f_touchdcstA915() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A915), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A915, m0), 1);
		dcStructField(st, 'c', offsetof(union  A915, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A915, m2), 1, f_touchdcstA914());
		dcStructField(st, 's', offsetof(union  A915, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpd} */
struct A916 { d m0; p m1; d m2; };
void f_cpA916(struct A916 *x, const struct A916 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA916(const struct A916 *x, const struct A916 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA916() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A916), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A916, m0), 1);
		dcStructField(st, 'p', offsetof(struct A916, m1), 1);
		dcStructField(st, 'd', offsetof(struct A916, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ls<ic{sdcl}s>{l}{i}p{dpd}ic> */
union  A917 { l m0; s m1; union  A915 m2; struct A51 m3; struct A71 m4; p m5; struct A916 m6; i m7; c m8; };
void f_cpA917(union  A917 *x, const union  A917 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA915(&x->m2, &y->m2); f_cpA51(&x->m3, &y->m3); f_cpA71(&x->m4, &y->m4); x->m5 = y->m5; f_cpA916(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA917(const union  A917 *x, const union  A917 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA915(&x->m2, &y->m2) && f_cmpA51(&x->m3, &y->m3) && f_cmpA71(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA916(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA917() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A917), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A917, m0), 1);
		dcStructField(st, 's', offsetof(union  A917, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A917, m2), 1, f_touchdcstA915());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A917, m3), 1, f_touchdcstA51());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A917, m4), 1, f_touchdcstA71());
		dcStructField(st, 'p', offsetof(union  A917, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A917, m6), 1, f_touchdcstA916());
		dcStructField(st, 'i', offsetof(union  A917, m7), 1);
		dcStructField(st, 'c', offsetof(union  A917, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljcficps> */
union  A918 { l m0; j m1; c m2; f m3; i m4; c m5; p m6; s m7; };
void f_cpA918(union  A918 *x, const union  A918 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA918(const union  A918 *x, const union  A918 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA918() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A918), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A918, m0), 1);
		dcStructField(st, 'j', offsetof(union  A918, m1), 1);
		dcStructField(st, 'c', offsetof(union  A918, m2), 1);
		dcStructField(st, 'f', offsetof(union  A918, m3), 1);
		dcStructField(st, 'i', offsetof(union  A918, m4), 1);
		dcStructField(st, 'c', offsetof(union  A918, m5), 1);
		dcStructField(st, 'p', offsetof(union  A918, m6), 1);
		dcStructField(st, 's', offsetof(union  A918, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsi} */
struct A919 { l m0; s m1; i m2; };
void f_cpA919(struct A919 *x, const struct A919 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA919(const struct A919 *x, const struct A919 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA919() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A919), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A919, m0), 1);
		dcStructField(st, 's', offsetof(struct A919, m1), 1);
		dcStructField(st, 'i', offsetof(struct A919, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lslj} */
struct A920 { l m0; s m1; l m2; j m3; };
void f_cpA920(struct A920 *x, const struct A920 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA920(const struct A920 *x, const struct A920 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA920() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A920), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A920, m0), 1);
		dcStructField(st, 's', offsetof(struct A920, m1), 1);
		dcStructField(st, 'l', offsetof(struct A920, m2), 1);
		dcStructField(st, 'j', offsetof(struct A920, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfpdjjicidcjj} */
struct A921 { d m0; f m1; p m2; d m3; j m4; j m5; i m6; c m7; i m8; d m9; c m10; j m11; j m12; };
void f_cpA921(struct A921 *x, const struct A921 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA921(const struct A921 *x, const struct A921 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA921() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A921), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A921, m0), 1);
		dcStructField(st, 'f', offsetof(struct A921, m1), 1);
		dcStructField(st, 'p', offsetof(struct A921, m2), 1);
		dcStructField(st, 'd', offsetof(struct A921, m3), 1);
		dcStructField(st, 'j', offsetof(struct A921, m4), 1);
		dcStructField(st, 'j', offsetof(struct A921, m5), 1);
		dcStructField(st, 'i', offsetof(struct A921, m6), 1);
		dcStructField(st, 'c', offsetof(struct A921, m7), 1);
		dcStructField(st, 'i', offsetof(struct A921, m8), 1);
		dcStructField(st, 'd', offsetof(struct A921, m9), 1);
		dcStructField(st, 'c', offsetof(struct A921, m10), 1);
		dcStructField(st, 'j', offsetof(struct A921, m11), 1);
		dcStructField(st, 'j', offsetof(struct A921, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cifsf> */
union  A922 { c m0; i m1; f m2; s m3; f m4; };
void f_cpA922(union  A922 *x, const union  A922 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA922(const union  A922 *x, const union  A922 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA922() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A922), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A922, m0), 1);
		dcStructField(st, 'i', offsetof(union  A922, m1), 1);
		dcStructField(st, 'f', offsetof(union  A922, m2), 1);
		dcStructField(st, 's', offsetof(union  A922, m3), 1);
		dcStructField(st, 'f', offsetof(union  A922, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdjsd{lslj}p{dfpdjjicidcjj}<cifsf>fdcc> */
union  A923 { c m0; d m1; j m2; s m3; d m4; struct A920 m5; p m6; struct A921 m7; union  A922 m8; f m9; d m10; c m11; c m12; };
void f_cpA923(union  A923 *x, const union  A923 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA920(&x->m5, &y->m5); x->m6 = y->m6; f_cpA921(&x->m7, &y->m7); f_cpA922(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA923(const union  A923 *x, const union  A923 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA920(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA921(&x->m7, &y->m7) && f_cmpA922(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA923() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A923), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A923, m0), 1);
		dcStructField(st, 'd', offsetof(union  A923, m1), 1);
		dcStructField(st, 'j', offsetof(union  A923, m2), 1);
		dcStructField(st, 's', offsetof(union  A923, m3), 1);
		dcStructField(st, 'd', offsetof(union  A923, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A923, m5), 1, f_touchdcstA920());
		dcStructField(st, 'p', offsetof(union  A923, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A923, m7), 1, f_touchdcstA921());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A923, m8), 1, f_touchdcstA922());
		dcStructField(st, 'f', offsetof(union  A923, m9), 1);
		dcStructField(st, 'd', offsetof(union  A923, m10), 1);
		dcStructField(st, 'c', offsetof(union  A923, m11), 1);
		dcStructField(st, 'c', offsetof(union  A923, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljpddpf} */
struct A924 { l m0; j m1; p m2; d m3; d m4; p m5; f m6; };
void f_cpA924(struct A924 *x, const struct A924 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA924(const struct A924 *x, const struct A924 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA924() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A924), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A924, m0), 1);
		dcStructField(st, 'j', offsetof(struct A924, m1), 1);
		dcStructField(st, 'p', offsetof(struct A924, m2), 1);
		dcStructField(st, 'd', offsetof(struct A924, m3), 1);
		dcStructField(st, 'd', offsetof(struct A924, m4), 1);
		dcStructField(st, 'p', offsetof(struct A924, m5), 1);
		dcStructField(st, 'f', offsetof(struct A924, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {siifddlf} */
struct A925 { s m0; i m1; i m2; f m3; d m4; d m5; l m6; f m7; };
void f_cpA925(struct A925 *x, const struct A925 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA925(const struct A925 *x, const struct A925 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA925() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A925), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A925, m0), 1);
		dcStructField(st, 'i', offsetof(struct A925, m1), 1);
		dcStructField(st, 'i', offsetof(struct A925, m2), 1);
		dcStructField(st, 'f', offsetof(struct A925, m3), 1);
		dcStructField(st, 'd', offsetof(struct A925, m4), 1);
		dcStructField(st, 'd', offsetof(struct A925, m5), 1);
		dcStructField(st, 'l', offsetof(struct A925, m6), 1);
		dcStructField(st, 'f', offsetof(struct A925, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ij{ljpddpf}{siifddlf}} */
struct A926 { i m0; j m1; struct A924 m2; struct A925 m3; };
void f_cpA926(struct A926 *x, const struct A926 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA924(&x->m2, &y->m2); f_cpA925(&x->m3, &y->m3); };
int f_cmpA926(const struct A926 *x, const struct A926 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA924(&x->m2, &y->m2) && f_cmpA925(&x->m3, &y->m3); };
DCstruct* f_touchdcstA926() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A926), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A926, m0), 1);
		dcStructField(st, 'j', offsetof(struct A926, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A926, m2), 1, f_touchdcstA924());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A926, m3), 1, f_touchdcstA925());
		dcCloseStruct(st);
	}
	return st;
};
/* {jsjcjlssdcsfslffiipsppdlddfi} */
struct A927 { j m0; s m1; j m2; c m3; j m4; l m5; s m6; s m7; d m8; c m9; s m10; f m11; s m12; l m13; f m14; f m15; i m16; i m17; p m18; s m19; p m20; p m21; d m22; l m23; d m24; d m25; f m26; i m27; };
void f_cpA927(struct A927 *x, const struct A927 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; };
int f_cmpA927(const struct A927 *x, const struct A927 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27; };
DCstruct* f_touchdcstA927() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(28, sizeof(struct A927), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A927, m0), 1);
		dcStructField(st, 's', offsetof(struct A927, m1), 1);
		dcStructField(st, 'j', offsetof(struct A927, m2), 1);
		dcStructField(st, 'c', offsetof(struct A927, m3), 1);
		dcStructField(st, 'j', offsetof(struct A927, m4), 1);
		dcStructField(st, 'l', offsetof(struct A927, m5), 1);
		dcStructField(st, 's', offsetof(struct A927, m6), 1);
		dcStructField(st, 's', offsetof(struct A927, m7), 1);
		dcStructField(st, 'd', offsetof(struct A927, m8), 1);
		dcStructField(st, 'c', offsetof(struct A927, m9), 1);
		dcStructField(st, 's', offsetof(struct A927, m10), 1);
		dcStructField(st, 'f', offsetof(struct A927, m11), 1);
		dcStructField(st, 's', offsetof(struct A927, m12), 1);
		dcStructField(st, 'l', offsetof(struct A927, m13), 1);
		dcStructField(st, 'f', offsetof(struct A927, m14), 1);
		dcStructField(st, 'f', offsetof(struct A927, m15), 1);
		dcStructField(st, 'i', offsetof(struct A927, m16), 1);
		dcStructField(st, 'i', offsetof(struct A927, m17), 1);
		dcStructField(st, 'p', offsetof(struct A927, m18), 1);
		dcStructField(st, 's', offsetof(struct A927, m19), 1);
		dcStructField(st, 'p', offsetof(struct A927, m20), 1);
		dcStructField(st, 'p', offsetof(struct A927, m21), 1);
		dcStructField(st, 'd', offsetof(struct A927, m22), 1);
		dcStructField(st, 'l', offsetof(struct A927, m23), 1);
		dcStructField(st, 'd', offsetof(struct A927, m24), 1);
		dcStructField(st, 'd', offsetof(struct A927, m25), 1);
		dcStructField(st, 'f', offsetof(struct A927, m26), 1);
		dcStructField(st, 'i', offsetof(struct A927, m27), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c{p}p{jsjcjlssdcsfslffiipsppdlddfi}lllpfiddfls} */
struct A928 { c m0; struct A250 m1; p m2; struct A927 m3; l m4; l m5; l m6; p m7; f m8; i m9; d m10; d m11; f m12; l m13; s m14; };
void f_cpA928(struct A928 *x, const struct A928 *y) { x->m0 = y->m0; f_cpA250(&x->m1, &y->m1); x->m2 = y->m2; f_cpA927(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA928(const struct A928 *x, const struct A928 *y) { return x->m0 == y->m0 && f_cmpA250(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA927(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA928() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A928), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A928, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A928, m1), 1, f_touchdcstA250());
		dcStructField(st, 'p', offsetof(struct A928, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A928, m3), 1, f_touchdcstA927());
		dcStructField(st, 'l', offsetof(struct A928, m4), 1);
		dcStructField(st, 'l', offsetof(struct A928, m5), 1);
		dcStructField(st, 'l', offsetof(struct A928, m6), 1);
		dcStructField(st, 'p', offsetof(struct A928, m7), 1);
		dcStructField(st, 'f', offsetof(struct A928, m8), 1);
		dcStructField(st, 'i', offsetof(struct A928, m9), 1);
		dcStructField(st, 'd', offsetof(struct A928, m10), 1);
		dcStructField(st, 'd', offsetof(struct A928, m11), 1);
		dcStructField(st, 'f', offsetof(struct A928, m12), 1);
		dcStructField(st, 'l', offsetof(struct A928, m13), 1);
		dcStructField(st, 's', offsetof(struct A928, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ccspifcpfcccisfj> */
union  A929 { c m0; c m1; s m2; p m3; i m4; f m5; c m6; p m7; f m8; c m9; c m10; c m11; i m12; s m13; f m14; j m15; };
void f_cpA929(union  A929 *x, const union  A929 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA929(const union  A929 *x, const union  A929 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA929() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A929), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A929, m0), 1);
		dcStructField(st, 'c', offsetof(union  A929, m1), 1);
		dcStructField(st, 's', offsetof(union  A929, m2), 1);
		dcStructField(st, 'p', offsetof(union  A929, m3), 1);
		dcStructField(st, 'i', offsetof(union  A929, m4), 1);
		dcStructField(st, 'f', offsetof(union  A929, m5), 1);
		dcStructField(st, 'c', offsetof(union  A929, m6), 1);
		dcStructField(st, 'p', offsetof(union  A929, m7), 1);
		dcStructField(st, 'f', offsetof(union  A929, m8), 1);
		dcStructField(st, 'c', offsetof(union  A929, m9), 1);
		dcStructField(st, 'c', offsetof(union  A929, m10), 1);
		dcStructField(st, 'c', offsetof(union  A929, m11), 1);
		dcStructField(st, 'i', offsetof(union  A929, m12), 1);
		dcStructField(st, 's', offsetof(union  A929, m13), 1);
		dcStructField(st, 'f', offsetof(union  A929, m14), 1);
		dcStructField(st, 'j', offsetof(union  A929, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjffdi} */
struct A930 { s m0; j m1; f m2; f m3; d m4; i m5; };
void f_cpA930(struct A930 *x, const struct A930 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA930(const struct A930 *x, const struct A930 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA930() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A930), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A930, m0), 1);
		dcStructField(st, 'j', offsetof(struct A930, m1), 1);
		dcStructField(st, 'f', offsetof(struct A930, m2), 1);
		dcStructField(st, 'f', offsetof(struct A930, m3), 1);
		dcStructField(st, 'd', offsetof(struct A930, m4), 1);
		dcStructField(st, 'i', offsetof(struct A930, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jsp> */
union  A931 { j m0; s m1; p m2; };
void f_cpA931(union  A931 *x, const union  A931 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA931(const union  A931 *x, const union  A931 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA931() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A931), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A931, m0), 1);
		dcStructField(st, 's', offsetof(union  A931, m1), 1);
		dcStructField(st, 'p', offsetof(union  A931, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ffddfipicicj> */
union  A932 { f m0; f m1; d m2; d m3; f m4; i m5; p m6; i m7; c m8; i m9; c m10; j m11; };
void f_cpA932(union  A932 *x, const union  A932 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA932(const union  A932 *x, const union  A932 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA932() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A932), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A932, m0), 1);
		dcStructField(st, 'f', offsetof(union  A932, m1), 1);
		dcStructField(st, 'd', offsetof(union  A932, m2), 1);
		dcStructField(st, 'd', offsetof(union  A932, m3), 1);
		dcStructField(st, 'f', offsetof(union  A932, m4), 1);
		dcStructField(st, 'i', offsetof(union  A932, m5), 1);
		dcStructField(st, 'p', offsetof(union  A932, m6), 1);
		dcStructField(st, 'i', offsetof(union  A932, m7), 1);
		dcStructField(st, 'c', offsetof(union  A932, m8), 1);
		dcStructField(st, 'i', offsetof(union  A932, m9), 1);
		dcStructField(st, 'c', offsetof(union  A932, m10), 1);
		dcStructField(st, 'j', offsetof(union  A932, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ffsdpfjjs> */
union  A933 { f m0; f m1; s m2; d m3; p m4; f m5; j m6; j m7; s m8; };
void f_cpA933(union  A933 *x, const union  A933 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA933(const union  A933 *x, const union  A933 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA933() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A933), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A933, m0), 1);
		dcStructField(st, 'f', offsetof(union  A933, m1), 1);
		dcStructField(st, 's', offsetof(union  A933, m2), 1);
		dcStructField(st, 'd', offsetof(union  A933, m3), 1);
		dcStructField(st, 'p', offsetof(union  A933, m4), 1);
		dcStructField(st, 'f', offsetof(union  A933, m5), 1);
		dcStructField(st, 'j', offsetof(union  A933, m6), 1);
		dcStructField(st, 'j', offsetof(union  A933, m7), 1);
		dcStructField(st, 's', offsetof(union  A933, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sssccsdcpsijd} */
struct A934 { s m0; s m1; s m2; c m3; c m4; s m5; d m6; c m7; p m8; s m9; i m10; j m11; d m12; };
void f_cpA934(struct A934 *x, const struct A934 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA934(const struct A934 *x, const struct A934 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA934() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A934), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A934, m0), 1);
		dcStructField(st, 's', offsetof(struct A934, m1), 1);
		dcStructField(st, 's', offsetof(struct A934, m2), 1);
		dcStructField(st, 'c', offsetof(struct A934, m3), 1);
		dcStructField(st, 'c', offsetof(struct A934, m4), 1);
		dcStructField(st, 's', offsetof(struct A934, m5), 1);
		dcStructField(st, 'd', offsetof(struct A934, m6), 1);
		dcStructField(st, 'c', offsetof(struct A934, m7), 1);
		dcStructField(st, 'p', offsetof(struct A934, m8), 1);
		dcStructField(st, 's', offsetof(struct A934, m9), 1);
		dcStructField(st, 'i', offsetof(struct A934, m10), 1);
		dcStructField(st, 'j', offsetof(struct A934, m11), 1);
		dcStructField(st, 'd', offsetof(struct A934, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccsdpi<ccspifcpfcccisfj>{sjffdi}pljd<jsp>ipljsd<ffddfipicicj>fclfi<ffsdpfjjs>psp{sssccsdcpsijd}pjji} */
struct A935 { c m0; c m1; s m2; d m3; p m4; i m5; union  A929 m6; struct A930 m7; p m8; l m9; j m10; d m11; union  A931 m12; i m13; p m14; l m15; j m16; s m17; d m18; union  A932 m19; f m20; c m21; l m22; f m23; i m24; union  A933 m25; p m26; s m27; p m28; struct A934 m29; p m30; j m31; j m32; i m33; };
void f_cpA935(struct A935 *x, const struct A935 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA929(&x->m6, &y->m6); f_cpA930(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA931(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA932(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; f_cpA933(&x->m25, &y->m25); x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; f_cpA934(&x->m29, &y->m29); x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; };
int f_cmpA935(const struct A935 *x, const struct A935 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA929(&x->m6, &y->m6) && f_cmpA930(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA931(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA932(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && f_cmpA933(&x->m25, &y->m25) && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && f_cmpA934(&x->m29, &y->m29) && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33; };
DCstruct* f_touchdcstA935() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(34, sizeof(struct A935), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A935, m0), 1);
		dcStructField(st, 'c', offsetof(struct A935, m1), 1);
		dcStructField(st, 's', offsetof(struct A935, m2), 1);
		dcStructField(st, 'd', offsetof(struct A935, m3), 1);
		dcStructField(st, 'p', offsetof(struct A935, m4), 1);
		dcStructField(st, 'i', offsetof(struct A935, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A935, m6), 1, f_touchdcstA929());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A935, m7), 1, f_touchdcstA930());
		dcStructField(st, 'p', offsetof(struct A935, m8), 1);
		dcStructField(st, 'l', offsetof(struct A935, m9), 1);
		dcStructField(st, 'j', offsetof(struct A935, m10), 1);
		dcStructField(st, 'd', offsetof(struct A935, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A935, m12), 1, f_touchdcstA931());
		dcStructField(st, 'i', offsetof(struct A935, m13), 1);
		dcStructField(st, 'p', offsetof(struct A935, m14), 1);
		dcStructField(st, 'l', offsetof(struct A935, m15), 1);
		dcStructField(st, 'j', offsetof(struct A935, m16), 1);
		dcStructField(st, 's', offsetof(struct A935, m17), 1);
		dcStructField(st, 'd', offsetof(struct A935, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A935, m19), 1, f_touchdcstA932());
		dcStructField(st, 'f', offsetof(struct A935, m20), 1);
		dcStructField(st, 'c', offsetof(struct A935, m21), 1);
		dcStructField(st, 'l', offsetof(struct A935, m22), 1);
		dcStructField(st, 'f', offsetof(struct A935, m23), 1);
		dcStructField(st, 'i', offsetof(struct A935, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A935, m25), 1, f_touchdcstA933());
		dcStructField(st, 'p', offsetof(struct A935, m26), 1);
		dcStructField(st, 's', offsetof(struct A935, m27), 1);
		dcStructField(st, 'p', offsetof(struct A935, m28), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A935, m29), 1, f_touchdcstA934());
		dcStructField(st, 'p', offsetof(struct A935, m30), 1);
		dcStructField(st, 'j', offsetof(struct A935, m31), 1);
		dcStructField(st, 'j', offsetof(struct A935, m32), 1);
		dcStructField(st, 'i', offsetof(struct A935, m33), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fjfppifdifds> */
union  A936 { f m0; j m1; f m2; p m3; p m4; i m5; f m6; d m7; i m8; f m9; d m10; s m11; };
void f_cpA936(union  A936 *x, const union  A936 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA936(const union  A936 *x, const union  A936 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA936() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A936), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A936, m0), 1);
		dcStructField(st, 'j', offsetof(union  A936, m1), 1);
		dcStructField(st, 'f', offsetof(union  A936, m2), 1);
		dcStructField(st, 'p', offsetof(union  A936, m3), 1);
		dcStructField(st, 'p', offsetof(union  A936, m4), 1);
		dcStructField(st, 'i', offsetof(union  A936, m5), 1);
		dcStructField(st, 'f', offsetof(union  A936, m6), 1);
		dcStructField(st, 'd', offsetof(union  A936, m7), 1);
		dcStructField(st, 'i', offsetof(union  A936, m8), 1);
		dcStructField(st, 'f', offsetof(union  A936, m9), 1);
		dcStructField(st, 'd', offsetof(union  A936, m10), 1);
		dcStructField(st, 's', offsetof(union  A936, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pl<fjfppifdifds>pdf> */
union  A937 { p m0; l m1; union  A936 m2; p m3; d m4; f m5; };
void f_cpA937(union  A937 *x, const union  A937 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA936(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA937(const union  A937 *x, const union  A937 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA936(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA937() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A937), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A937, m0), 1);
		dcStructField(st, 'l', offsetof(union  A937, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A937, m2), 1, f_touchdcstA936());
		dcStructField(st, 'p', offsetof(union  A937, m3), 1);
		dcStructField(st, 'd', offsetof(union  A937, m4), 1);
		dcStructField(st, 'f', offsetof(union  A937, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <slfd> */
union  A938 { s m0; l m1; f m2; d m3; };
void f_cpA938(union  A938 *x, const union  A938 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA938(const union  A938 *x, const union  A938 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA938() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A938), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A938, m0), 1);
		dcStructField(st, 'l', offsetof(union  A938, m1), 1);
		dcStructField(st, 'f', offsetof(union  A938, m2), 1);
		dcStructField(st, 'd', offsetof(union  A938, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fijpfsdf} */
struct A939 { f m0; i m1; j m2; p m3; f m4; s m5; d m6; f m7; };
void f_cpA939(struct A939 *x, const struct A939 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA939(const struct A939 *x, const struct A939 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA939() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A939), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A939, m0), 1);
		dcStructField(st, 'i', offsetof(struct A939, m1), 1);
		dcStructField(st, 'j', offsetof(struct A939, m2), 1);
		dcStructField(st, 'p', offsetof(struct A939, m3), 1);
		dcStructField(st, 'f', offsetof(struct A939, m4), 1);
		dcStructField(st, 's', offsetof(struct A939, m5), 1);
		dcStructField(st, 'd', offsetof(struct A939, m6), 1);
		dcStructField(st, 'f', offsetof(struct A939, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jjlc> */
union  A940 { j m0; j m1; l m2; c m3; };
void f_cpA940(union  A940 *x, const union  A940 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA940(const union  A940 *x, const union  A940 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA940() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A940), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A940, m0), 1);
		dcStructField(st, 'j', offsetof(union  A940, m1), 1);
		dcStructField(st, 'l', offsetof(union  A940, m2), 1);
		dcStructField(st, 'c', offsetof(union  A940, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<slfd>f{fijpfsdf}ppjscic<jjlc>l> */
union  A941 { union  A938 m0; f m1; struct A939 m2; p m3; p m4; j m5; s m6; c m7; i m8; c m9; union  A940 m10; l m11; };
void f_cpA941(union  A941 *x, const union  A941 *y) { f_cpA938(&x->m0, &y->m0); x->m1 = y->m1; f_cpA939(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA940(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA941(const union  A941 *x, const union  A941 *y) { return f_cmpA938(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA939(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA940(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA941() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A941), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A941, m0), 1, f_touchdcstA938());
		dcStructField(st, 'f', offsetof(union  A941, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A941, m2), 1, f_touchdcstA939());
		dcStructField(st, 'p', offsetof(union  A941, m3), 1);
		dcStructField(st, 'p', offsetof(union  A941, m4), 1);
		dcStructField(st, 'j', offsetof(union  A941, m5), 1);
		dcStructField(st, 's', offsetof(union  A941, m6), 1);
		dcStructField(st, 'c', offsetof(union  A941, m7), 1);
		dcStructField(st, 'i', offsetof(union  A941, m8), 1);
		dcStructField(st, 'c', offsetof(union  A941, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A941, m10), 1, f_touchdcstA940());
		dcStructField(st, 'l', offsetof(union  A941, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdd<cdjsd{lslj}p{dfpdjjicidcjj}<cifsf>fdcc>pci{ij{ljpddpf}{siifddlf}}fsciffds{c{p}p{jsjcjlssdcsfslffiipsppdlddfi}lllpfiddfls}slffj{ccsdpi<ccspifcpfcccisfj>{sjffdi}pljd<jsp>ipljsd<ffddfipicicj>fclfi<ffsdpfjjs>psp{sssccsdcpsijd}pjji}fp<pl<fjfppifdifds>pdf><<slfd>f{fijpfsdf}ppjscic<jjlc>l>jsp} */
struct A942 { c m0; d m1; d m2; union  A923 m3; p m4; c m5; i m6; struct A926 m7; f m8; s m9; c m10; i m11; f m12; f m13; d m14; s m15; struct A928 m16; s m17; l m18; f m19; f m20; j m21; struct A935 m22; f m23; p m24; union  A937 m25; union  A941 m26; j m27; s m28; p m29; };
void f_cpA942(struct A942 *x, const struct A942 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA923(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA926(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA928(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; f_cpA935(&x->m22, &y->m22); x->m23 = y->m23; x->m24 = y->m24; f_cpA937(&x->m25, &y->m25); f_cpA941(&x->m26, &y->m26); x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA942(const struct A942 *x, const struct A942 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA923(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA926(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA928(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && f_cmpA935(&x->m22, &y->m22) && x->m23 == y->m23 && x->m24 == y->m24 && f_cmpA937(&x->m25, &y->m25) && f_cmpA941(&x->m26, &y->m26) && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA942() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(struct A942), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A942, m0), 1);
		dcStructField(st, 'd', offsetof(struct A942, m1), 1);
		dcStructField(st, 'd', offsetof(struct A942, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A942, m3), 1, f_touchdcstA923());
		dcStructField(st, 'p', offsetof(struct A942, m4), 1);
		dcStructField(st, 'c', offsetof(struct A942, m5), 1);
		dcStructField(st, 'i', offsetof(struct A942, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A942, m7), 1, f_touchdcstA926());
		dcStructField(st, 'f', offsetof(struct A942, m8), 1);
		dcStructField(st, 's', offsetof(struct A942, m9), 1);
		dcStructField(st, 'c', offsetof(struct A942, m10), 1);
		dcStructField(st, 'i', offsetof(struct A942, m11), 1);
		dcStructField(st, 'f', offsetof(struct A942, m12), 1);
		dcStructField(st, 'f', offsetof(struct A942, m13), 1);
		dcStructField(st, 'd', offsetof(struct A942, m14), 1);
		dcStructField(st, 's', offsetof(struct A942, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A942, m16), 1, f_touchdcstA928());
		dcStructField(st, 's', offsetof(struct A942, m17), 1);
		dcStructField(st, 'l', offsetof(struct A942, m18), 1);
		dcStructField(st, 'f', offsetof(struct A942, m19), 1);
		dcStructField(st, 'f', offsetof(struct A942, m20), 1);
		dcStructField(st, 'j', offsetof(struct A942, m21), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A942, m22), 1, f_touchdcstA935());
		dcStructField(st, 'f', offsetof(struct A942, m23), 1);
		dcStructField(st, 'p', offsetof(struct A942, m24), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A942, m25), 1, f_touchdcstA937());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A942, m26), 1, f_touchdcstA941());
		dcStructField(st, 'j', offsetof(struct A942, m27), 1);
		dcStructField(st, 's', offsetof(struct A942, m28), 1);
		dcStructField(st, 'p', offsetof(struct A942, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flicdjc} */
struct A943 { f m0; l m1; i m2; c m3; d m4; j m5; c m6; };
void f_cpA943(struct A943 *x, const struct A943 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA943(const struct A943 *x, const struct A943 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA943() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A943), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A943, m0), 1);
		dcStructField(st, 'l', offsetof(struct A943, m1), 1);
		dcStructField(st, 'i', offsetof(struct A943, m2), 1);
		dcStructField(st, 'c', offsetof(struct A943, m3), 1);
		dcStructField(st, 'd', offsetof(struct A943, m4), 1);
		dcStructField(st, 'j', offsetof(struct A943, m5), 1);
		dcStructField(st, 'c', offsetof(struct A943, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{flicdjc}j> */
union  A944 { struct A943 m0; j m1; };
void f_cpA944(union  A944 *x, const union  A944 *y) { f_cpA943(&x->m0, &y->m0); x->m1 = y->m1; };
int f_cmpA944(const union  A944 *x, const union  A944 *y) { return f_cmpA943(&x->m0, &y->m0) && x->m1 == y->m1; };
DCstruct* f_touchdcstA944() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A944), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A944, m0), 1, f_touchdcstA943());
		dcStructField(st, 'j', offsetof(union  A944, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lld} */
struct A945 { l m0; l m1; d m2; };
void f_cpA945(struct A945 *x, const struct A945 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA945(const struct A945 *x, const struct A945 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA945() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A945), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A945, m0), 1);
		dcStructField(st, 'l', offsetof(struct A945, m1), 1);
		dcStructField(st, 'd', offsetof(struct A945, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pcclcfcjplcfcs> */
union  A946 { p m0; c m1; c m2; l m3; c m4; f m5; c m6; j m7; p m8; l m9; c m10; f m11; c m12; s m13; };
void f_cpA946(union  A946 *x, const union  A946 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA946(const union  A946 *x, const union  A946 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA946() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A946), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A946, m0), 1);
		dcStructField(st, 'c', offsetof(union  A946, m1), 1);
		dcStructField(st, 'c', offsetof(union  A946, m2), 1);
		dcStructField(st, 'l', offsetof(union  A946, m3), 1);
		dcStructField(st, 'c', offsetof(union  A946, m4), 1);
		dcStructField(st, 'f', offsetof(union  A946, m5), 1);
		dcStructField(st, 'c', offsetof(union  A946, m6), 1);
		dcStructField(st, 'j', offsetof(union  A946, m7), 1);
		dcStructField(st, 'p', offsetof(union  A946, m8), 1);
		dcStructField(st, 'l', offsetof(union  A946, m9), 1);
		dcStructField(st, 'c', offsetof(union  A946, m10), 1);
		dcStructField(st, 'f', offsetof(union  A946, m11), 1);
		dcStructField(st, 'c', offsetof(union  A946, m12), 1);
		dcStructField(st, 's', offsetof(union  A946, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sccll<pcclcfcjplcfcs>> */
union  A947 { s m0; c m1; c m2; l m3; l m4; union  A946 m5; };
void f_cpA947(union  A947 *x, const union  A947 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA946(&x->m5, &y->m5); };
int f_cmpA947(const union  A947 *x, const union  A947 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA946(&x->m5, &y->m5); };
DCstruct* f_touchdcstA947() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A947), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A947, m0), 1);
		dcStructField(st, 'c', offsetof(union  A947, m1), 1);
		dcStructField(st, 'c', offsetof(union  A947, m2), 1);
		dcStructField(st, 'l', offsetof(union  A947, m3), 1);
		dcStructField(st, 'l', offsetof(union  A947, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A947, m5), 1, f_touchdcstA946());
		dcCloseStruct(st);
	}
	return st;
};
/* <jp> */
union  A948 { j m0; p m1; };
void f_cpA948(union  A948 *x, const union  A948 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA948(const union  A948 *x, const union  A948 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA948() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A948), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A948, m0), 1);
		dcStructField(st, 'p', offsetof(union  A948, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psffddpdfjpilii} */
struct A949 { p m0; s m1; f m2; f m3; d m4; d m5; p m6; d m7; f m8; j m9; p m10; i m11; l m12; i m13; i m14; };
void f_cpA949(struct A949 *x, const struct A949 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA949(const struct A949 *x, const struct A949 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA949() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A949), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A949, m0), 1);
		dcStructField(st, 's', offsetof(struct A949, m1), 1);
		dcStructField(st, 'f', offsetof(struct A949, m2), 1);
		dcStructField(st, 'f', offsetof(struct A949, m3), 1);
		dcStructField(st, 'd', offsetof(struct A949, m4), 1);
		dcStructField(st, 'd', offsetof(struct A949, m5), 1);
		dcStructField(st, 'p', offsetof(struct A949, m6), 1);
		dcStructField(st, 'd', offsetof(struct A949, m7), 1);
		dcStructField(st, 'f', offsetof(struct A949, m8), 1);
		dcStructField(st, 'j', offsetof(struct A949, m9), 1);
		dcStructField(st, 'p', offsetof(struct A949, m10), 1);
		dcStructField(st, 'i', offsetof(struct A949, m11), 1);
		dcStructField(st, 'l', offsetof(struct A949, m12), 1);
		dcStructField(st, 'i', offsetof(struct A949, m13), 1);
		dcStructField(st, 'i', offsetof(struct A949, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsdjljpjllplslifsi} */
struct A950 { d m0; s m1; d m2; j m3; l m4; j m5; p m6; j m7; l m8; l m9; p m10; l m11; s m12; l m13; i m14; f m15; s m16; i m17; };
void f_cpA950(struct A950 *x, const struct A950 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA950(const struct A950 *x, const struct A950 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA950() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(struct A950), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A950, m0), 1);
		dcStructField(st, 's', offsetof(struct A950, m1), 1);
		dcStructField(st, 'd', offsetof(struct A950, m2), 1);
		dcStructField(st, 'j', offsetof(struct A950, m3), 1);
		dcStructField(st, 'l', offsetof(struct A950, m4), 1);
		dcStructField(st, 'j', offsetof(struct A950, m5), 1);
		dcStructField(st, 'p', offsetof(struct A950, m6), 1);
		dcStructField(st, 'j', offsetof(struct A950, m7), 1);
		dcStructField(st, 'l', offsetof(struct A950, m8), 1);
		dcStructField(st, 'l', offsetof(struct A950, m9), 1);
		dcStructField(st, 'p', offsetof(struct A950, m10), 1);
		dcStructField(st, 'l', offsetof(struct A950, m11), 1);
		dcStructField(st, 's', offsetof(struct A950, m12), 1);
		dcStructField(st, 'l', offsetof(struct A950, m13), 1);
		dcStructField(st, 'i', offsetof(struct A950, m14), 1);
		dcStructField(st, 'f', offsetof(struct A950, m15), 1);
		dcStructField(st, 's', offsetof(struct A950, m16), 1);
		dcStructField(st, 'i', offsetof(struct A950, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fiipsdfcjiii> */
union  A951 { f m0; i m1; i m2; p m3; s m4; d m5; f m6; c m7; j m8; i m9; i m10; i m11; };
void f_cpA951(union  A951 *x, const union  A951 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA951(const union  A951 *x, const union  A951 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA951() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A951), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A951, m0), 1);
		dcStructField(st, 'i', offsetof(union  A951, m1), 1);
		dcStructField(st, 'i', offsetof(union  A951, m2), 1);
		dcStructField(st, 'p', offsetof(union  A951, m3), 1);
		dcStructField(st, 's', offsetof(union  A951, m4), 1);
		dcStructField(st, 'd', offsetof(union  A951, m5), 1);
		dcStructField(st, 'f', offsetof(union  A951, m6), 1);
		dcStructField(st, 'c', offsetof(union  A951, m7), 1);
		dcStructField(st, 'j', offsetof(union  A951, m8), 1);
		dcStructField(st, 'i', offsetof(union  A951, m9), 1);
		dcStructField(st, 'i', offsetof(union  A951, m10), 1);
		dcStructField(st, 'i', offsetof(union  A951, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfcf} */
struct A952 { s m0; f m1; c m2; f m3; };
void f_cpA952(struct A952 *x, const struct A952 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA952(const struct A952 *x, const struct A952 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA952() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A952), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A952, m0), 1);
		dcStructField(st, 'f', offsetof(struct A952, m1), 1);
		dcStructField(st, 'c', offsetof(struct A952, m2), 1);
		dcStructField(st, 'f', offsetof(struct A952, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<s><f>pfj<jp>pj{psffddpdfjpilii}f{dsdjljpjllplslifsi}fll<fiipsdfcjiii>fpp{sfcf}ds> */
union  A953 { union  A75 m0; union  A189 m1; p m2; f m3; j m4; union  A948 m5; p m6; j m7; struct A949 m8; f m9; struct A950 m10; f m11; l m12; l m13; union  A951 m14; f m15; p m16; p m17; struct A952 m18; d m19; s m20; };
void f_cpA953(union  A953 *x, const union  A953 *y) { f_cpA75(&x->m0, &y->m0); f_cpA189(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA948(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; f_cpA949(&x->m8, &y->m8); x->m9 = y->m9; f_cpA950(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA951(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA952(&x->m18, &y->m18); x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA953(const union  A953 *x, const union  A953 *y) { return f_cmpA75(&x->m0, &y->m0) && f_cmpA189(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA948(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA949(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA950(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA951(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA952(&x->m18, &y->m18) && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA953() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A953), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A953, m0), 1, f_touchdcstA75());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A953, m1), 1, f_touchdcstA189());
		dcStructField(st, 'p', offsetof(union  A953, m2), 1);
		dcStructField(st, 'f', offsetof(union  A953, m3), 1);
		dcStructField(st, 'j', offsetof(union  A953, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A953, m5), 1, f_touchdcstA948());
		dcStructField(st, 'p', offsetof(union  A953, m6), 1);
		dcStructField(st, 'j', offsetof(union  A953, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A953, m8), 1, f_touchdcstA949());
		dcStructField(st, 'f', offsetof(union  A953, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A953, m10), 1, f_touchdcstA950());
		dcStructField(st, 'f', offsetof(union  A953, m11), 1);
		dcStructField(st, 'l', offsetof(union  A953, m12), 1);
		dcStructField(st, 'l', offsetof(union  A953, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A953, m14), 1, f_touchdcstA951());
		dcStructField(st, 'f', offsetof(union  A953, m15), 1);
		dcStructField(st, 'p', offsetof(union  A953, m16), 1);
		dcStructField(st, 'p', offsetof(union  A953, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A953, m18), 1, f_touchdcstA952());
		dcStructField(st, 'd', offsetof(union  A953, m19), 1);
		dcStructField(st, 's', offsetof(union  A953, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isdcc<sccll<pcclcfcjplcfcs>>spcsp<jp>d<<s><f>pfj<jp>pj{psffddpdfjpilii}f{dsdjljpjllplslifsi}fll<fiipsdfcjiii>fpp{sfcf}ds>ji} */
struct A954 { i m0; s m1; d m2; c m3; c m4; union  A947 m5; s m6; p m7; c m8; s m9; p m10; union  A948 m11; d m12; union  A953 m13; j m14; i m15; };
void f_cpA954(struct A954 *x, const struct A954 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA947(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA948(&x->m11, &y->m11); x->m12 = y->m12; f_cpA953(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA954(const struct A954 *x, const struct A954 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA947(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA948(&x->m11, &y->m11) && x->m12 == y->m12 && f_cmpA953(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA954() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A954), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A954, m0), 1);
		dcStructField(st, 's', offsetof(struct A954, m1), 1);
		dcStructField(st, 'd', offsetof(struct A954, m2), 1);
		dcStructField(st, 'c', offsetof(struct A954, m3), 1);
		dcStructField(st, 'c', offsetof(struct A954, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A954, m5), 1, f_touchdcstA947());
		dcStructField(st, 's', offsetof(struct A954, m6), 1);
		dcStructField(st, 'p', offsetof(struct A954, m7), 1);
		dcStructField(st, 'c', offsetof(struct A954, m8), 1);
		dcStructField(st, 's', offsetof(struct A954, m9), 1);
		dcStructField(st, 'p', offsetof(struct A954, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A954, m11), 1, f_touchdcstA948());
		dcStructField(st, 'd', offsetof(struct A954, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A954, m13), 1, f_touchdcstA953());
		dcStructField(st, 'j', offsetof(struct A954, m14), 1);
		dcStructField(st, 'i', offsetof(struct A954, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fllpsfdlpi} */
struct A955 { f m0; l m1; l m2; p m3; s m4; f m5; d m6; l m7; p m8; i m9; };
void f_cpA955(struct A955 *x, const struct A955 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA955(const struct A955 *x, const struct A955 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA955() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A955), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A955, m0), 1);
		dcStructField(st, 'l', offsetof(struct A955, m1), 1);
		dcStructField(st, 'l', offsetof(struct A955, m2), 1);
		dcStructField(st, 'p', offsetof(struct A955, m3), 1);
		dcStructField(st, 's', offsetof(struct A955, m4), 1);
		dcStructField(st, 'f', offsetof(struct A955, m5), 1);
		dcStructField(st, 'd', offsetof(struct A955, m6), 1);
		dcStructField(st, 'l', offsetof(struct A955, m7), 1);
		dcStructField(st, 'p', offsetof(struct A955, m8), 1);
		dcStructField(st, 'i', offsetof(struct A955, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sclc} */
struct A956 { s m0; c m1; l m2; c m3; };
void f_cpA956(struct A956 *x, const struct A956 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA956(const struct A956 *x, const struct A956 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA956() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A956), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A956, m0), 1);
		dcStructField(st, 'c', offsetof(struct A956, m1), 1);
		dcStructField(st, 'l', offsetof(struct A956, m2), 1);
		dcStructField(st, 'c', offsetof(struct A956, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icds} */
struct A957 { i m0; c m1; d m2; s m3; };
void f_cpA957(struct A957 *x, const struct A957 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA957(const struct A957 *x, const struct A957 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA957() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A957), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A957, m0), 1);
		dcStructField(st, 'c', offsetof(struct A957, m1), 1);
		dcStructField(st, 'd', offsetof(struct A957, m2), 1);
		dcStructField(st, 's', offsetof(struct A957, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfcdifpispi} */
struct A958 { p m0; f m1; c m2; d m3; i m4; f m5; p m6; i m7; s m8; p m9; i m10; };
void f_cpA958(struct A958 *x, const struct A958 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA958(const struct A958 *x, const struct A958 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA958() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A958), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A958, m0), 1);
		dcStructField(st, 'f', offsetof(struct A958, m1), 1);
		dcStructField(st, 'c', offsetof(struct A958, m2), 1);
		dcStructField(st, 'd', offsetof(struct A958, m3), 1);
		dcStructField(st, 'i', offsetof(struct A958, m4), 1);
		dcStructField(st, 'f', offsetof(struct A958, m5), 1);
		dcStructField(st, 'p', offsetof(struct A958, m6), 1);
		dcStructField(st, 'i', offsetof(struct A958, m7), 1);
		dcStructField(st, 's', offsetof(struct A958, m8), 1);
		dcStructField(st, 'p', offsetof(struct A958, m9), 1);
		dcStructField(st, 'i', offsetof(struct A958, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sspipfddflpjlfpc> */
union  A959 { s m0; s m1; p m2; i m3; p m4; f m5; d m6; d m7; f m8; l m9; p m10; j m11; l m12; f m13; p m14; c m15; };
void f_cpA959(union  A959 *x, const union  A959 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA959(const union  A959 *x, const union  A959 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA959() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A959), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A959, m0), 1);
		dcStructField(st, 's', offsetof(union  A959, m1), 1);
		dcStructField(st, 'p', offsetof(union  A959, m2), 1);
		dcStructField(st, 'i', offsetof(union  A959, m3), 1);
		dcStructField(st, 'p', offsetof(union  A959, m4), 1);
		dcStructField(st, 'f', offsetof(union  A959, m5), 1);
		dcStructField(st, 'd', offsetof(union  A959, m6), 1);
		dcStructField(st, 'd', offsetof(union  A959, m7), 1);
		dcStructField(st, 'f', offsetof(union  A959, m8), 1);
		dcStructField(st, 'l', offsetof(union  A959, m9), 1);
		dcStructField(st, 'p', offsetof(union  A959, m10), 1);
		dcStructField(st, 'j', offsetof(union  A959, m11), 1);
		dcStructField(st, 'l', offsetof(union  A959, m12), 1);
		dcStructField(st, 'f', offsetof(union  A959, m13), 1);
		dcStructField(st, 'p', offsetof(union  A959, m14), 1);
		dcStructField(st, 'c', offsetof(union  A959, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pcfssclffiii> */
union  A960 { p m0; c m1; f m2; s m3; s m4; c m5; l m6; f m7; f m8; i m9; i m10; i m11; };
void f_cpA960(union  A960 *x, const union  A960 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA960(const union  A960 *x, const union  A960 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA960() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A960), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A960, m0), 1);
		dcStructField(st, 'c', offsetof(union  A960, m1), 1);
		dcStructField(st, 'f', offsetof(union  A960, m2), 1);
		dcStructField(st, 's', offsetof(union  A960, m3), 1);
		dcStructField(st, 's', offsetof(union  A960, m4), 1);
		dcStructField(st, 'c', offsetof(union  A960, m5), 1);
		dcStructField(st, 'l', offsetof(union  A960, m6), 1);
		dcStructField(st, 'f', offsetof(union  A960, m7), 1);
		dcStructField(st, 'f', offsetof(union  A960, m8), 1);
		dcStructField(st, 'i', offsetof(union  A960, m9), 1);
		dcStructField(st, 'i', offsetof(union  A960, m10), 1);
		dcStructField(st, 'i', offsetof(union  A960, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifcjflj{sclc}dpls{icds}s{pfcdifpispi}<sspipfddflpjlfpc>f<pcfssclffiii>dflp} */
struct A961 { i m0; f m1; c m2; j m3; f m4; l m5; j m6; struct A956 m7; d m8; p m9; l m10; s m11; struct A957 m12; s m13; struct A958 m14; union  A959 m15; f m16; union  A960 m17; d m18; f m19; l m20; p m21; };
void f_cpA961(struct A961 *x, const struct A961 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA956(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA957(&x->m12, &y->m12); x->m13 = y->m13; f_cpA958(&x->m14, &y->m14); f_cpA959(&x->m15, &y->m15); x->m16 = y->m16; f_cpA960(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA961(const struct A961 *x, const struct A961 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA956(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA957(&x->m12, &y->m12) && x->m13 == y->m13 && f_cmpA958(&x->m14, &y->m14) && f_cmpA959(&x->m15, &y->m15) && x->m16 == y->m16 && f_cmpA960(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA961() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(struct A961), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A961, m0), 1);
		dcStructField(st, 'f', offsetof(struct A961, m1), 1);
		dcStructField(st, 'c', offsetof(struct A961, m2), 1);
		dcStructField(st, 'j', offsetof(struct A961, m3), 1);
		dcStructField(st, 'f', offsetof(struct A961, m4), 1);
		dcStructField(st, 'l', offsetof(struct A961, m5), 1);
		dcStructField(st, 'j', offsetof(struct A961, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A961, m7), 1, f_touchdcstA956());
		dcStructField(st, 'd', offsetof(struct A961, m8), 1);
		dcStructField(st, 'p', offsetof(struct A961, m9), 1);
		dcStructField(st, 'l', offsetof(struct A961, m10), 1);
		dcStructField(st, 's', offsetof(struct A961, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A961, m12), 1, f_touchdcstA957());
		dcStructField(st, 's', offsetof(struct A961, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A961, m14), 1, f_touchdcstA958());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A961, m15), 1, f_touchdcstA959());
		dcStructField(st, 'f', offsetof(struct A961, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A961, m17), 1, f_touchdcstA960());
		dcStructField(st, 'd', offsetof(struct A961, m18), 1);
		dcStructField(st, 'f', offsetof(struct A961, m19), 1);
		dcStructField(st, 'l', offsetof(struct A961, m20), 1);
		dcStructField(st, 'p', offsetof(struct A961, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jflfppijp} */
struct A962 { j m0; f m1; l m2; f m3; p m4; p m5; i m6; j m7; p m8; };
void f_cpA962(struct A962 *x, const struct A962 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA962(const struct A962 *x, const struct A962 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA962() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A962), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A962, m0), 1);
		dcStructField(st, 'f', offsetof(struct A962, m1), 1);
		dcStructField(st, 'l', offsetof(struct A962, m2), 1);
		dcStructField(st, 'f', offsetof(struct A962, m3), 1);
		dcStructField(st, 'p', offsetof(struct A962, m4), 1);
		dcStructField(st, 'p', offsetof(struct A962, m5), 1);
		dcStructField(st, 'i', offsetof(struct A962, m6), 1);
		dcStructField(st, 'j', offsetof(struct A962, m7), 1);
		dcStructField(st, 'p', offsetof(struct A962, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{jflfppijp}pf} */
struct A963 { struct A962 m0; p m1; f m2; };
void f_cpA963(struct A963 *x, const struct A963 *y) { f_cpA962(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA963(const struct A963 *x, const struct A963 *y) { return f_cmpA962(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA963() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A963), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A963, m0), 1, f_touchdcstA962());
		dcStructField(st, 'p', offsetof(struct A963, m1), 1);
		dcStructField(st, 'f', offsetof(struct A963, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iij> */
union  A964 { i m0; i m1; j m2; };
void f_cpA964(union  A964 *x, const union  A964 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA964(const union  A964 *x, const union  A964 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA964() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A964), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A964, m0), 1);
		dcStructField(st, 'i', offsetof(union  A964, m1), 1);
		dcStructField(st, 'j', offsetof(union  A964, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dld} */
struct A965 { d m0; l m1; d m2; };
void f_cpA965(struct A965 *x, const struct A965 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA965(const struct A965 *x, const struct A965 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA965() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A965), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A965, m0), 1);
		dcStructField(st, 'l', offsetof(struct A965, m1), 1);
		dcStructField(st, 'd', offsetof(struct A965, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cficpjjpci> */
union  A966 { c m0; f m1; i m2; c m3; p m4; j m5; j m6; p m7; c m8; i m9; };
void f_cpA966(union  A966 *x, const union  A966 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA966(const union  A966 *x, const union  A966 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA966() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A966), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A966, m0), 1);
		dcStructField(st, 'f', offsetof(union  A966, m1), 1);
		dcStructField(st, 'i', offsetof(union  A966, m2), 1);
		dcStructField(st, 'c', offsetof(union  A966, m3), 1);
		dcStructField(st, 'p', offsetof(union  A966, m4), 1);
		dcStructField(st, 'j', offsetof(union  A966, m5), 1);
		dcStructField(st, 'j', offsetof(union  A966, m6), 1);
		dcStructField(st, 'p', offsetof(union  A966, m7), 1);
		dcStructField(st, 'c', offsetof(union  A966, m8), 1);
		dcStructField(st, 'i', offsetof(union  A966, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fllcs} */
struct A967 { f m0; l m1; l m2; c m3; s m4; };
void f_cpA967(struct A967 *x, const struct A967 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA967(const struct A967 *x, const struct A967 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA967() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A967), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A967, m0), 1);
		dcStructField(st, 'l', offsetof(struct A967, m1), 1);
		dcStructField(st, 'l', offsetof(struct A967, m2), 1);
		dcStructField(st, 'c', offsetof(struct A967, m3), 1);
		dcStructField(st, 's', offsetof(struct A967, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijicj} */
struct A968 { i m0; j m1; i m2; c m3; j m4; };
void f_cpA968(struct A968 *x, const struct A968 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA968(const struct A968 *x, const struct A968 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA968() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A968), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A968, m0), 1);
		dcStructField(st, 'j', offsetof(struct A968, m1), 1);
		dcStructField(st, 'i', offsetof(struct A968, m2), 1);
		dcStructField(st, 'c', offsetof(struct A968, m3), 1);
		dcStructField(st, 'j', offsetof(struct A968, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{fllcs}csfflfcipjpi{ijicj}lis} */
struct A969 { struct A967 m0; c m1; s m2; f m3; f m4; l m5; f m6; c m7; i m8; p m9; j m10; p m11; i m12; struct A968 m13; l m14; i m15; s m16; };
void f_cpA969(struct A969 *x, const struct A969 *y) { f_cpA967(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA968(&x->m13, &y->m13); x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA969(const struct A969 *x, const struct A969 *y) { return f_cmpA967(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA968(&x->m13, &y->m13) && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA969() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A969), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A969, m0), 1, f_touchdcstA967());
		dcStructField(st, 'c', offsetof(struct A969, m1), 1);
		dcStructField(st, 's', offsetof(struct A969, m2), 1);
		dcStructField(st, 'f', offsetof(struct A969, m3), 1);
		dcStructField(st, 'f', offsetof(struct A969, m4), 1);
		dcStructField(st, 'l', offsetof(struct A969, m5), 1);
		dcStructField(st, 'f', offsetof(struct A969, m6), 1);
		dcStructField(st, 'c', offsetof(struct A969, m7), 1);
		dcStructField(st, 'i', offsetof(struct A969, m8), 1);
		dcStructField(st, 'p', offsetof(struct A969, m9), 1);
		dcStructField(st, 'j', offsetof(struct A969, m10), 1);
		dcStructField(st, 'p', offsetof(struct A969, m11), 1);
		dcStructField(st, 'i', offsetof(struct A969, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A969, m13), 1, f_touchdcstA968());
		dcStructField(st, 'l', offsetof(struct A969, m14), 1);
		dcStructField(st, 'i', offsetof(struct A969, m15), 1);
		dcStructField(st, 's', offsetof(struct A969, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{pc}} */
struct A970 { struct A384 m0; };
void f_cpA970(struct A970 *x, const struct A970 *y) { f_cpA384(&x->m0, &y->m0); };
int f_cmpA970(const struct A970 *x, const struct A970 *y) { return f_cmpA384(&x->m0, &y->m0); };
DCstruct* f_touchdcstA970() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A970), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A970, m0), 1, f_touchdcstA384());
		dcCloseStruct(st);
	}
	return st;
};
/* <csijfpc{{pc}}i> */
union  A971 { c m0; s m1; i m2; j m3; f m4; p m5; c m6; struct A970 m7; i m8; };
void f_cpA971(union  A971 *x, const union  A971 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA970(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA971(const union  A971 *x, const union  A971 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA970(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA971() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A971), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A971, m0), 1);
		dcStructField(st, 's', offsetof(union  A971, m1), 1);
		dcStructField(st, 'i', offsetof(union  A971, m2), 1);
		dcStructField(st, 'j', offsetof(union  A971, m3), 1);
		dcStructField(st, 'f', offsetof(union  A971, m4), 1);
		dcStructField(st, 'p', offsetof(union  A971, m5), 1);
		dcStructField(st, 'c', offsetof(union  A971, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A971, m7), 1, f_touchdcstA970());
		dcStructField(st, 'i', offsetof(union  A971, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dd> */
union  A972 { d m0; d m1; };
void f_cpA972(union  A972 *x, const union  A972 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA972(const union  A972 *x, const union  A972 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA972() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A972), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A972, m0), 1);
		dcStructField(st, 'd', offsetof(union  A972, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ijppsflfs> */
union  A973 { i m0; j m1; p m2; p m3; s m4; f m5; l m6; f m7; s m8; };
void f_cpA973(union  A973 *x, const union  A973 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA973(const union  A973 *x, const union  A973 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA973() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A973), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A973, m0), 1);
		dcStructField(st, 'j', offsetof(union  A973, m1), 1);
		dcStructField(st, 'p', offsetof(union  A973, m2), 1);
		dcStructField(st, 'p', offsetof(union  A973, m3), 1);
		dcStructField(st, 's', offsetof(union  A973, m4), 1);
		dcStructField(st, 'f', offsetof(union  A973, m5), 1);
		dcStructField(st, 'l', offsetof(union  A973, m6), 1);
		dcStructField(st, 'f', offsetof(union  A973, m7), 1);
		dcStructField(st, 's', offsetof(union  A973, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfi} */
struct A974 { l m0; f m1; i m2; };
void f_cpA974(struct A974 *x, const struct A974 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA974(const struct A974 *x, const struct A974 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA974() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A974), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A974, m0), 1);
		dcStructField(st, 'f', offsetof(struct A974, m1), 1);
		dcStructField(st, 'i', offsetof(struct A974, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jfsiiidpdiddsjcsj} */
struct A975 { j m0; f m1; s m2; i m3; i m4; i m5; d m6; p m7; d m8; i m9; d m10; d m11; s m12; j m13; c m14; s m15; j m16; };
void f_cpA975(struct A975 *x, const struct A975 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA975(const struct A975 *x, const struct A975 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA975() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A975), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A975, m0), 1);
		dcStructField(st, 'f', offsetof(struct A975, m1), 1);
		dcStructField(st, 's', offsetof(struct A975, m2), 1);
		dcStructField(st, 'i', offsetof(struct A975, m3), 1);
		dcStructField(st, 'i', offsetof(struct A975, m4), 1);
		dcStructField(st, 'i', offsetof(struct A975, m5), 1);
		dcStructField(st, 'd', offsetof(struct A975, m6), 1);
		dcStructField(st, 'p', offsetof(struct A975, m7), 1);
		dcStructField(st, 'd', offsetof(struct A975, m8), 1);
		dcStructField(st, 'i', offsetof(struct A975, m9), 1);
		dcStructField(st, 'd', offsetof(struct A975, m10), 1);
		dcStructField(st, 'd', offsetof(struct A975, m11), 1);
		dcStructField(st, 's', offsetof(struct A975, m12), 1);
		dcStructField(st, 'j', offsetof(struct A975, m13), 1);
		dcStructField(st, 'c', offsetof(struct A975, m14), 1);
		dcStructField(st, 's', offsetof(struct A975, m15), 1);
		dcStructField(st, 'j', offsetof(struct A975, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdil> */
union  A976 { c m0; d m1; i m2; l m3; };
void f_cpA976(union  A976 *x, const union  A976 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA976(const union  A976 *x, const union  A976 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA976() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A976), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A976, m0), 1);
		dcStructField(st, 'd', offsetof(union  A976, m1), 1);
		dcStructField(st, 'i', offsetof(union  A976, m2), 1);
		dcStructField(st, 'l', offsetof(union  A976, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fifdiidfddljdjllscs> */
union  A977 { f m0; i m1; f m2; d m3; i m4; i m5; d m6; f m7; d m8; d m9; l m10; j m11; d m12; j m13; l m14; l m15; s m16; c m17; s m18; };
void f_cpA977(union  A977 *x, const union  A977 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA977(const union  A977 *x, const union  A977 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA977() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A977), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A977, m0), 1);
		dcStructField(st, 'i', offsetof(union  A977, m1), 1);
		dcStructField(st, 'f', offsetof(union  A977, m2), 1);
		dcStructField(st, 'd', offsetof(union  A977, m3), 1);
		dcStructField(st, 'i', offsetof(union  A977, m4), 1);
		dcStructField(st, 'i', offsetof(union  A977, m5), 1);
		dcStructField(st, 'd', offsetof(union  A977, m6), 1);
		dcStructField(st, 'f', offsetof(union  A977, m7), 1);
		dcStructField(st, 'd', offsetof(union  A977, m8), 1);
		dcStructField(st, 'd', offsetof(union  A977, m9), 1);
		dcStructField(st, 'l', offsetof(union  A977, m10), 1);
		dcStructField(st, 'j', offsetof(union  A977, m11), 1);
		dcStructField(st, 'd', offsetof(union  A977, m12), 1);
		dcStructField(st, 'j', offsetof(union  A977, m13), 1);
		dcStructField(st, 'l', offsetof(union  A977, m14), 1);
		dcStructField(st, 'l', offsetof(union  A977, m15), 1);
		dcStructField(st, 's', offsetof(union  A977, m16), 1);
		dcStructField(st, 'c', offsetof(union  A977, m17), 1);
		dcStructField(st, 's', offsetof(union  A977, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c<cdil>s<fifdiidfddljdjllscs>jfidcidj} */
struct A978 { c m0; union  A976 m1; s m2; union  A977 m3; j m4; f m5; i m6; d m7; c m8; i m9; d m10; j m11; };
void f_cpA978(struct A978 *x, const struct A978 *y) { x->m0 = y->m0; f_cpA976(&x->m1, &y->m1); x->m2 = y->m2; f_cpA977(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA978(const struct A978 *x, const struct A978 *y) { return x->m0 == y->m0 && f_cmpA976(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA977(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA978() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A978), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A978, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A978, m1), 1, f_touchdcstA976());
		dcStructField(st, 's', offsetof(struct A978, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A978, m3), 1, f_touchdcstA977());
		dcStructField(st, 'j', offsetof(struct A978, m4), 1);
		dcStructField(st, 'f', offsetof(struct A978, m5), 1);
		dcStructField(st, 'i', offsetof(struct A978, m6), 1);
		dcStructField(st, 'd', offsetof(struct A978, m7), 1);
		dcStructField(st, 'c', offsetof(struct A978, m8), 1);
		dcStructField(st, 'i', offsetof(struct A978, m9), 1);
		dcStructField(st, 'd', offsetof(struct A978, m10), 1);
		dcStructField(st, 'j', offsetof(struct A978, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <f{c<cdil>s<fifdiidfddljdjllscs>jfidcidj}if> */
union  A979 { f m0; struct A978 m1; i m2; f m3; };
void f_cpA979(union  A979 *x, const union  A979 *y) { x->m0 = y->m0; f_cpA978(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA979(const union  A979 *x, const union  A979 *y) { return x->m0 == y->m0 && f_cmpA978(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA979() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A979), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A979, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A979, m1), 1, f_touchdcstA978());
		dcStructField(st, 'i', offsetof(union  A979, m2), 1);
		dcStructField(st, 'f', offsetof(union  A979, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <siilp> */
union  A980 { s m0; i m1; i m2; l m3; p m4; };
void f_cpA980(union  A980 *x, const union  A980 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA980(const union  A980 *x, const union  A980 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA980() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A980), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A980, m0), 1);
		dcStructField(st, 'i', offsetof(union  A980, m1), 1);
		dcStructField(st, 'i', offsetof(union  A980, m2), 1);
		dcStructField(st, 'l', offsetof(union  A980, m3), 1);
		dcStructField(st, 'p', offsetof(union  A980, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fd} */
struct A981 { f m0; d m1; };
void f_cpA981(struct A981 *x, const struct A981 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA981(const struct A981 *x, const struct A981 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA981() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A981), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A981, m0), 1);
		dcStructField(st, 'd', offsetof(struct A981, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ssf> */
union  A982 { s m0; s m1; f m2; };
void f_cpA982(union  A982 *x, const union  A982 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA982(const union  A982 *x, const union  A982 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA982() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A982), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A982, m0), 1);
		dcStructField(st, 's', offsetof(union  A982, m1), 1);
		dcStructField(st, 'f', offsetof(union  A982, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<ssf>} */
struct A983 { union  A982 m0; };
void f_cpA983(struct A983 *x, const struct A983 *y) { f_cpA982(&x->m0, &y->m0); };
int f_cmpA983(const struct A983 *x, const struct A983 *y) { return f_cmpA982(&x->m0, &y->m0); };
DCstruct* f_touchdcstA983() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A983), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A983, m0), 1, f_touchdcstA982());
		dcCloseStruct(st);
	}
	return st;
};
/* {fdjlfcssdcpjdfljpssfidfjfij} */
struct A984 { f m0; d m1; j m2; l m3; f m4; c m5; s m6; s m7; d m8; c m9; p m10; j m11; d m12; f m13; l m14; j m15; p m16; s m17; s m18; f m19; i m20; d m21; f m22; j m23; f m24; i m25; j m26; };
void f_cpA984(struct A984 *x, const struct A984 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA984(const struct A984 *x, const struct A984 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA984() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(struct A984), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A984, m0), 1);
		dcStructField(st, 'd', offsetof(struct A984, m1), 1);
		dcStructField(st, 'j', offsetof(struct A984, m2), 1);
		dcStructField(st, 'l', offsetof(struct A984, m3), 1);
		dcStructField(st, 'f', offsetof(struct A984, m4), 1);
		dcStructField(st, 'c', offsetof(struct A984, m5), 1);
		dcStructField(st, 's', offsetof(struct A984, m6), 1);
		dcStructField(st, 's', offsetof(struct A984, m7), 1);
		dcStructField(st, 'd', offsetof(struct A984, m8), 1);
		dcStructField(st, 'c', offsetof(struct A984, m9), 1);
		dcStructField(st, 'p', offsetof(struct A984, m10), 1);
		dcStructField(st, 'j', offsetof(struct A984, m11), 1);
		dcStructField(st, 'd', offsetof(struct A984, m12), 1);
		dcStructField(st, 'f', offsetof(struct A984, m13), 1);
		dcStructField(st, 'l', offsetof(struct A984, m14), 1);
		dcStructField(st, 'j', offsetof(struct A984, m15), 1);
		dcStructField(st, 'p', offsetof(struct A984, m16), 1);
		dcStructField(st, 's', offsetof(struct A984, m17), 1);
		dcStructField(st, 's', offsetof(struct A984, m18), 1);
		dcStructField(st, 'f', offsetof(struct A984, m19), 1);
		dcStructField(st, 'i', offsetof(struct A984, m20), 1);
		dcStructField(st, 'd', offsetof(struct A984, m21), 1);
		dcStructField(st, 'f', offsetof(struct A984, m22), 1);
		dcStructField(st, 'j', offsetof(struct A984, m23), 1);
		dcStructField(st, 'f', offsetof(struct A984, m24), 1);
		dcStructField(st, 'i', offsetof(struct A984, m25), 1);
		dcStructField(st, 'j', offsetof(struct A984, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flp} */
struct A985 { f m0; l m1; p m2; };
void f_cpA985(struct A985 *x, const struct A985 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA985(const struct A985 *x, const struct A985 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA985() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A985), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A985, m0), 1);
		dcStructField(st, 'l', offsetof(struct A985, m1), 1);
		dcStructField(st, 'p', offsetof(struct A985, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfsipfippp} */
struct A986 { p m0; f m1; s m2; i m3; p m4; f m5; i m6; p m7; p m8; p m9; };
void f_cpA986(struct A986 *x, const struct A986 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA986(const struct A986 *x, const struct A986 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA986() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A986), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A986, m0), 1);
		dcStructField(st, 'f', offsetof(struct A986, m1), 1);
		dcStructField(st, 's', offsetof(struct A986, m2), 1);
		dcStructField(st, 'i', offsetof(struct A986, m3), 1);
		dcStructField(st, 'p', offsetof(struct A986, m4), 1);
		dcStructField(st, 'f', offsetof(struct A986, m5), 1);
		dcStructField(st, 'i', offsetof(struct A986, m6), 1);
		dcStructField(st, 'p', offsetof(struct A986, m7), 1);
		dcStructField(st, 'p', offsetof(struct A986, m8), 1);
		dcStructField(st, 'p', offsetof(struct A986, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjijllisl} */
struct A987 { f m0; j m1; i m2; j m3; l m4; l m5; i m6; s m7; l m8; };
void f_cpA987(struct A987 *x, const struct A987 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA987(const struct A987 *x, const struct A987 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA987() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A987), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A987, m0), 1);
		dcStructField(st, 'j', offsetof(struct A987, m1), 1);
		dcStructField(st, 'i', offsetof(struct A987, m2), 1);
		dcStructField(st, 'j', offsetof(struct A987, m3), 1);
		dcStructField(st, 'l', offsetof(struct A987, m4), 1);
		dcStructField(st, 'l', offsetof(struct A987, m5), 1);
		dcStructField(st, 'i', offsetof(struct A987, m6), 1);
		dcStructField(st, 's', offsetof(struct A987, m7), 1);
		dcStructField(st, 'l', offsetof(struct A987, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {diidpcfdi} */
struct A988 { d m0; i m1; i m2; d m3; p m4; c m5; f m6; d m7; i m8; };
void f_cpA988(struct A988 *x, const struct A988 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA988(const struct A988 *x, const struct A988 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA988() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A988), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A988, m0), 1);
		dcStructField(st, 'i', offsetof(struct A988, m1), 1);
		dcStructField(st, 'i', offsetof(struct A988, m2), 1);
		dcStructField(st, 'd', offsetof(struct A988, m3), 1);
		dcStructField(st, 'p', offsetof(struct A988, m4), 1);
		dcStructField(st, 'c', offsetof(struct A988, m5), 1);
		dcStructField(st, 'f', offsetof(struct A988, m6), 1);
		dcStructField(st, 'd', offsetof(struct A988, m7), 1);
		dcStructField(st, 'i', offsetof(struct A988, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlppfl{diidpcfdi}> */
union  A989 { d m0; l m1; p m2; p m3; f m4; l m5; struct A988 m6; };
void f_cpA989(union  A989 *x, const union  A989 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA988(&x->m6, &y->m6); };
int f_cmpA989(const union  A989 *x, const union  A989 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA988(&x->m6, &y->m6); };
DCstruct* f_touchdcstA989() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A989), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A989, m0), 1);
		dcStructField(st, 'l', offsetof(union  A989, m1), 1);
		dcStructField(st, 'p', offsetof(union  A989, m2), 1);
		dcStructField(st, 'p', offsetof(union  A989, m3), 1);
		dcStructField(st, 'f', offsetof(union  A989, m4), 1);
		dcStructField(st, 'l', offsetof(union  A989, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A989, m6), 1, f_touchdcstA988());
		dcCloseStruct(st);
	}
	return st;
};
/* <dsjddclc> */
union  A990 { d m0; s m1; j m2; d m3; d m4; c m5; l m6; c m7; };
void f_cpA990(union  A990 *x, const union  A990 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA990(const union  A990 *x, const union  A990 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA990() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A990), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A990, m0), 1);
		dcStructField(st, 's', offsetof(union  A990, m1), 1);
		dcStructField(st, 'j', offsetof(union  A990, m2), 1);
		dcStructField(st, 'd', offsetof(union  A990, m3), 1);
		dcStructField(st, 'd', offsetof(union  A990, m4), 1);
		dcStructField(st, 'c', offsetof(union  A990, m5), 1);
		dcStructField(st, 'l', offsetof(union  A990, m6), 1);
		dcStructField(st, 'c', offsetof(union  A990, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jdij<dcd>ss<dsjddclc>jdc} */
struct A991 { j m0; d m1; i m2; j m3; union  A69 m4; s m5; s m6; union  A990 m7; j m8; d m9; c m10; };
void f_cpA991(struct A991 *x, const struct A991 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA69(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA990(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA991(const struct A991 *x, const struct A991 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA69(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA990(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA991() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A991), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A991, m0), 1);
		dcStructField(st, 'd', offsetof(struct A991, m1), 1);
		dcStructField(st, 'i', offsetof(struct A991, m2), 1);
		dcStructField(st, 'j', offsetof(struct A991, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A991, m4), 1, f_touchdcstA69());
		dcStructField(st, 's', offsetof(struct A991, m5), 1);
		dcStructField(st, 's', offsetof(struct A991, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A991, m7), 1, f_touchdcstA990());
		dcStructField(st, 'j', offsetof(struct A991, m8), 1);
		dcStructField(st, 'd', offsetof(struct A991, m9), 1);
		dcStructField(st, 'c', offsetof(struct A991, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jlcjcc> */
union  A992 { j m0; l m1; c m2; j m3; c m4; c m5; };
void f_cpA992(union  A992 *x, const union  A992 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA992(const union  A992 *x, const union  A992 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA992() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A992), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A992, m0), 1);
		dcStructField(st, 'l', offsetof(union  A992, m1), 1);
		dcStructField(st, 'c', offsetof(union  A992, m2), 1);
		dcStructField(st, 'j', offsetof(union  A992, m3), 1);
		dcStructField(st, 'c', offsetof(union  A992, m4), 1);
		dcStructField(st, 'c', offsetof(union  A992, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <c<l>> */
union  A993 { c m0; union  A127 m1; };
void f_cpA993(union  A993 *x, const union  A993 *y) { x->m0 = y->m0; f_cpA127(&x->m1, &y->m1); };
int f_cmpA993(const union  A993 *x, const union  A993 *y) { return x->m0 == y->m0 && f_cmpA127(&x->m1, &y->m1); };
DCstruct* f_touchdcstA993() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A993), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A993, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A993, m1), 1, f_touchdcstA127());
		dcCloseStruct(st);
	}
	return st;
};
/* <ljjf> */
union  A994 { l m0; j m1; j m2; f m3; };
void f_cpA994(union  A994 *x, const union  A994 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA994(const union  A994 *x, const union  A994 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA994() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A994), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A994, m0), 1);
		dcStructField(st, 'j', offsetof(union  A994, m1), 1);
		dcStructField(st, 'j', offsetof(union  A994, m2), 1);
		dcStructField(st, 'f', offsetof(union  A994, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sdcipfpipjdid} */
struct A995 { s m0; d m1; c m2; i m3; p m4; f m5; p m6; i m7; p m8; j m9; d m10; i m11; d m12; };
void f_cpA995(struct A995 *x, const struct A995 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA995(const struct A995 *x, const struct A995 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA995() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A995), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A995, m0), 1);
		dcStructField(st, 'd', offsetof(struct A995, m1), 1);
		dcStructField(st, 'c', offsetof(struct A995, m2), 1);
		dcStructField(st, 'i', offsetof(struct A995, m3), 1);
		dcStructField(st, 'p', offsetof(struct A995, m4), 1);
		dcStructField(st, 'f', offsetof(struct A995, m5), 1);
		dcStructField(st, 'p', offsetof(struct A995, m6), 1);
		dcStructField(st, 'i', offsetof(struct A995, m7), 1);
		dcStructField(st, 'p', offsetof(struct A995, m8), 1);
		dcStructField(st, 'j', offsetof(struct A995, m9), 1);
		dcStructField(st, 'd', offsetof(struct A995, m10), 1);
		dcStructField(st, 'i', offsetof(struct A995, m11), 1);
		dcStructField(st, 'd', offsetof(struct A995, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfpi<ljjf>jpljpplcjps{sdcipfpipjdid}fij> */
union  A996 { d m0; f m1; p m2; i m3; union  A994 m4; j m5; p m6; l m7; j m8; p m9; p m10; l m11; c m12; j m13; p m14; s m15; struct A995 m16; f m17; i m18; j m19; };
void f_cpA996(union  A996 *x, const union  A996 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA994(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; f_cpA995(&x->m16, &y->m16); x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA996(const union  A996 *x, const union  A996 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA994(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && f_cmpA995(&x->m16, &y->m16) && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA996() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A996), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A996, m0), 1);
		dcStructField(st, 'f', offsetof(union  A996, m1), 1);
		dcStructField(st, 'p', offsetof(union  A996, m2), 1);
		dcStructField(st, 'i', offsetof(union  A996, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A996, m4), 1, f_touchdcstA994());
		dcStructField(st, 'j', offsetof(union  A996, m5), 1);
		dcStructField(st, 'p', offsetof(union  A996, m6), 1);
		dcStructField(st, 'l', offsetof(union  A996, m7), 1);
		dcStructField(st, 'j', offsetof(union  A996, m8), 1);
		dcStructField(st, 'p', offsetof(union  A996, m9), 1);
		dcStructField(st, 'p', offsetof(union  A996, m10), 1);
		dcStructField(st, 'l', offsetof(union  A996, m11), 1);
		dcStructField(st, 'c', offsetof(union  A996, m12), 1);
		dcStructField(st, 'j', offsetof(union  A996, m13), 1);
		dcStructField(st, 'p', offsetof(union  A996, m14), 1);
		dcStructField(st, 's', offsetof(union  A996, m15), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A996, m16), 1, f_touchdcstA995());
		dcStructField(st, 'f', offsetof(union  A996, m17), 1);
		dcStructField(st, 'i', offsetof(union  A996, m18), 1);
		dcStructField(st, 'j', offsetof(union  A996, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <plpj> */
union  A997 { p m0; l m1; p m2; j m3; };
void f_cpA997(union  A997 *x, const union  A997 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA997(const union  A997 *x, const union  A997 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA997() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A997), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A997, m0), 1);
		dcStructField(st, 'l', offsetof(union  A997, m1), 1);
		dcStructField(st, 'p', offsetof(union  A997, m2), 1);
		dcStructField(st, 'j', offsetof(union  A997, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jfjiil> */
union  A998 { j m0; f m1; j m2; i m3; i m4; l m5; };
void f_cpA998(union  A998 *x, const union  A998 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA998(const union  A998 *x, const union  A998 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA998() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A998), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A998, m0), 1);
		dcStructField(st, 'f', offsetof(union  A998, m1), 1);
		dcStructField(st, 'j', offsetof(union  A998, m2), 1);
		dcStructField(st, 'i', offsetof(union  A998, m3), 1);
		dcStructField(st, 'i', offsetof(union  A998, m4), 1);
		dcStructField(st, 'l', offsetof(union  A998, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pslliiijlld} */
struct A999 { p m0; s m1; l m2; l m3; i m4; i m5; i m6; j m7; l m8; l m9; d m10; };
void f_cpA999(struct A999 *x, const struct A999 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA999(const struct A999 *x, const struct A999 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA999() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A999), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A999, m0), 1);
		dcStructField(st, 's', offsetof(struct A999, m1), 1);
		dcStructField(st, 'l', offsetof(struct A999, m2), 1);
		dcStructField(st, 'l', offsetof(struct A999, m3), 1);
		dcStructField(st, 'i', offsetof(struct A999, m4), 1);
		dcStructField(st, 'i', offsetof(struct A999, m5), 1);
		dcStructField(st, 'i', offsetof(struct A999, m6), 1);
		dcStructField(st, 'j', offsetof(struct A999, m7), 1);
		dcStructField(st, 'l', offsetof(struct A999, m8), 1);
		dcStructField(st, 'l', offsetof(struct A999, m9), 1);
		dcStructField(st, 'd', offsetof(struct A999, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jijc> */
union  A1000 { j m0; i m1; j m2; c m3; };
void f_cpA1000(union  A1000 *x, const union  A1000 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1000(const union  A1000 *x, const union  A1000 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1000() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1000), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1000, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1000, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1000, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1000, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcidplj} */
struct A1001 { j m0; c m1; i m2; d m3; p m4; l m5; j m6; };
void f_cpA1001(struct A1001 *x, const struct A1001 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1001(const struct A1001 *x, const struct A1001 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1001() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1001), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1001, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1001, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1001, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1001, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1001, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1001, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1001, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jssf> */
union  A1002 { j m0; s m1; s m2; f m3; };
void f_cpA1002(union  A1002 *x, const union  A1002 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1002(const union  A1002 *x, const union  A1002 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1002() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1002), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1002, m0), 1);
		dcStructField(st, 's', offsetof(union  A1002, m1), 1);
		dcStructField(st, 's', offsetof(union  A1002, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1002, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dsiipf> */
union  A1003 { d m0; s m1; i m2; i m3; p m4; f m5; };
void f_cpA1003(union  A1003 *x, const union  A1003 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1003(const union  A1003 *x, const union  A1003 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1003() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1003), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1003, m0), 1);
		dcStructField(st, 's', offsetof(union  A1003, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1003, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1003, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1003, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1003, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jfidi{pslliiijlld}<jijc>f{jcidplj}{f}lifj<jssf>pjcp<dsiipf>ic> */
union  A1004 { j m0; f m1; i m2; d m3; i m4; struct A999 m5; union  A1000 m6; f m7; struct A1001 m8; struct A257 m9; l m10; i m11; f m12; j m13; union  A1002 m14; p m15; j m16; c m17; p m18; union  A1003 m19; i m20; c m21; };
void f_cpA1004(union  A1004 *x, const union  A1004 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA999(&x->m5, &y->m5); f_cpA1000(&x->m6, &y->m6); x->m7 = y->m7; f_cpA1001(&x->m8, &y->m8); f_cpA257(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; f_cpA1002(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA1003(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA1004(const union  A1004 *x, const union  A1004 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA999(&x->m5, &y->m5) && f_cmpA1000(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA1001(&x->m8, &y->m8) && f_cmpA257(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && f_cmpA1002(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA1003(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA1004() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(union  A1004), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1004, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1004, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1004, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1004, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1004, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1004, m5), 1, f_touchdcstA999());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1004, m6), 1, f_touchdcstA1000());
		dcStructField(st, 'f', offsetof(union  A1004, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1004, m8), 1, f_touchdcstA1001());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1004, m9), 1, f_touchdcstA257());
		dcStructField(st, 'l', offsetof(union  A1004, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1004, m11), 1);
		dcStructField(st, 'f', offsetof(union  A1004, m12), 1);
		dcStructField(st, 'j', offsetof(union  A1004, m13), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1004, m14), 1, f_touchdcstA1002());
		dcStructField(st, 'p', offsetof(union  A1004, m15), 1);
		dcStructField(st, 'j', offsetof(union  A1004, m16), 1);
		dcStructField(st, 'c', offsetof(union  A1004, m17), 1);
		dcStructField(st, 'p', offsetof(union  A1004, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1004, m19), 1, f_touchdcstA1003());
		dcStructField(st, 'i', offsetof(union  A1004, m20), 1);
		dcStructField(st, 'c', offsetof(union  A1004, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pillfjjdipsiplcl} */
struct A1005 { p m0; i m1; l m2; l m3; f m4; j m5; j m6; d m7; i m8; p m9; s m10; i m11; p m12; l m13; c m14; l m15; };
void f_cpA1005(struct A1005 *x, const struct A1005 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA1005(const struct A1005 *x, const struct A1005 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA1005() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A1005), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1005, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1005, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1005, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1005, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1005, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1005, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1005, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1005, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1005, m8), 1);
		dcStructField(st, 'p', offsetof(struct A1005, m9), 1);
		dcStructField(st, 's', offsetof(struct A1005, m10), 1);
		dcStructField(st, 'i', offsetof(struct A1005, m11), 1);
		dcStructField(st, 'p', offsetof(struct A1005, m12), 1);
		dcStructField(st, 'l', offsetof(struct A1005, m13), 1);
		dcStructField(st, 'c', offsetof(struct A1005, m14), 1);
		dcStructField(st, 'l', offsetof(struct A1005, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjlpdcfdflpilfpjidfcfjsjfp} */
struct A1006 { f m0; j m1; l m2; p m3; d m4; c m5; f m6; d m7; f m8; l m9; p m10; i m11; l m12; f m13; p m14; j m15; i m16; d m17; f m18; c m19; f m20; j m21; s m22; j m23; f m24; p m25; };
void f_cpA1006(struct A1006 *x, const struct A1006 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA1006(const struct A1006 *x, const struct A1006 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA1006() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A1006), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1006, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1006, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1006, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1006, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1006, m4), 1);
		dcStructField(st, 'c', offsetof(struct A1006, m5), 1);
		dcStructField(st, 'f', offsetof(struct A1006, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1006, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1006, m8), 1);
		dcStructField(st, 'l', offsetof(struct A1006, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1006, m10), 1);
		dcStructField(st, 'i', offsetof(struct A1006, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1006, m12), 1);
		dcStructField(st, 'f', offsetof(struct A1006, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1006, m14), 1);
		dcStructField(st, 'j', offsetof(struct A1006, m15), 1);
		dcStructField(st, 'i', offsetof(struct A1006, m16), 1);
		dcStructField(st, 'd', offsetof(struct A1006, m17), 1);
		dcStructField(st, 'f', offsetof(struct A1006, m18), 1);
		dcStructField(st, 'c', offsetof(struct A1006, m19), 1);
		dcStructField(st, 'f', offsetof(struct A1006, m20), 1);
		dcStructField(st, 'j', offsetof(struct A1006, m21), 1);
		dcStructField(st, 's', offsetof(struct A1006, m22), 1);
		dcStructField(st, 'j', offsetof(struct A1006, m23), 1);
		dcStructField(st, 'f', offsetof(struct A1006, m24), 1);
		dcStructField(st, 'p', offsetof(struct A1006, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcdpd} */
struct A1007 { p m0; c m1; d m2; p m3; d m4; };
void f_cpA1007(struct A1007 *x, const struct A1007 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1007(const struct A1007 *x, const struct A1007 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1007() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1007), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1007, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1007, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1007, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1007, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1007, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idflpfsfp} */
struct A1008 { i m0; d m1; f m2; l m3; p m4; f m5; s m6; f m7; p m8; };
void f_cpA1008(struct A1008 *x, const struct A1008 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1008(const struct A1008 *x, const struct A1008 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1008() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1008), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1008, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1008, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1008, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1008, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1008, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1008, m5), 1);
		dcStructField(st, 's', offsetof(struct A1008, m6), 1);
		dcStructField(st, 'f', offsetof(struct A1008, m7), 1);
		dcStructField(st, 'p', offsetof(struct A1008, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djjfjpflfcis> */
union  A1009 { d m0; j m1; j m2; f m3; j m4; p m5; f m6; l m7; f m8; c m9; i m10; s m11; };
void f_cpA1009(union  A1009 *x, const union  A1009 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1009(const union  A1009 *x, const union  A1009 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1009() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1009), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1009, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1009, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1009, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1009, m3), 1);
		dcStructField(st, 'j', offsetof(union  A1009, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1009, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1009, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1009, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1009, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1009, m9), 1);
		dcStructField(st, 'i', offsetof(union  A1009, m10), 1);
		dcStructField(st, 's', offsetof(union  A1009, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fs<djjfjpflfcis>} */
struct A1010 { f m0; s m1; union  A1009 m2; };
void f_cpA1010(struct A1010 *x, const struct A1010 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1009(&x->m2, &y->m2); };
int f_cmpA1010(const struct A1010 *x, const struct A1010 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1009(&x->m2, &y->m2); };
DCstruct* f_touchdcstA1010() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1010), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1010, m0), 1);
		dcStructField(st, 's', offsetof(struct A1010, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1010, m2), 1, f_touchdcstA1009());
		dcCloseStruct(st);
	}
	return st;
};
/* {fpjld} */
struct A1011 { f m0; p m1; j m2; l m3; d m4; };
void f_cpA1011(struct A1011 *x, const struct A1011 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1011(const struct A1011 *x, const struct A1011 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1011() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1011), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1011, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1011, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1011, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1011, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1011, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ffsdfilsdffjffjfi} */
struct A1012 { f m0; f m1; s m2; d m3; f m4; i m5; l m6; s m7; d m8; f m9; f m10; j m11; f m12; f m13; j m14; f m15; i m16; };
void f_cpA1012(struct A1012 *x, const struct A1012 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA1012(const struct A1012 *x, const struct A1012 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA1012() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A1012), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1012, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1012, m1), 1);
		dcStructField(st, 's', offsetof(struct A1012, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1012, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1012, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1012, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1012, m6), 1);
		dcStructField(st, 's', offsetof(struct A1012, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1012, m8), 1);
		dcStructField(st, 'f', offsetof(struct A1012, m9), 1);
		dcStructField(st, 'f', offsetof(struct A1012, m10), 1);
		dcStructField(st, 'j', offsetof(struct A1012, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1012, m12), 1);
		dcStructField(st, 'f', offsetof(struct A1012, m13), 1);
		dcStructField(st, 'j', offsetof(struct A1012, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1012, m15), 1);
		dcStructField(st, 'i', offsetof(struct A1012, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fpcfcsplscdjjfscsj> */
union  A1013 { f m0; p m1; c m2; f m3; c m4; s m5; p m6; l m7; s m8; c m9; d m10; j m11; j m12; f m13; s m14; c m15; s m16; j m17; };
void f_cpA1013(union  A1013 *x, const union  A1013 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; };
int f_cmpA1013(const union  A1013 *x, const union  A1013 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17; };
DCstruct* f_touchdcstA1013() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(18, sizeof(union  A1013), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1013, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1013, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1013, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1013, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1013, m4), 1);
		dcStructField(st, 's', offsetof(union  A1013, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1013, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1013, m7), 1);
		dcStructField(st, 's', offsetof(union  A1013, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1013, m9), 1);
		dcStructField(st, 'd', offsetof(union  A1013, m10), 1);
		dcStructField(st, 'j', offsetof(union  A1013, m11), 1);
		dcStructField(st, 'j', offsetof(union  A1013, m12), 1);
		dcStructField(st, 'f', offsetof(union  A1013, m13), 1);
		dcStructField(st, 's', offsetof(union  A1013, m14), 1);
		dcStructField(st, 'c', offsetof(union  A1013, m15), 1);
		dcStructField(st, 's', offsetof(union  A1013, m16), 1);
		dcStructField(st, 'j', offsetof(union  A1013, m17), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j<dj>{ffsdfilsdffjffjfi}jfd<fpcfcsplscdjjfscsj>} */
struct A1014 { j m0; union  A644 m1; struct A1012 m2; j m3; f m4; d m5; union  A1013 m6; };
void f_cpA1014(struct A1014 *x, const struct A1014 *y) { x->m0 = y->m0; f_cpA644(&x->m1, &y->m1); f_cpA1012(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA1013(&x->m6, &y->m6); };
int f_cmpA1014(const struct A1014 *x, const struct A1014 *y) { return x->m0 == y->m0 && f_cmpA644(&x->m1, &y->m1) && f_cmpA1012(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1013(&x->m6, &y->m6); };
DCstruct* f_touchdcstA1014() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1014), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1014, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1014, m1), 1, f_touchdcstA644());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1014, m2), 1, f_touchdcstA1012());
		dcStructField(st, 'j', offsetof(struct A1014, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1014, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1014, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1014, m6), 1, f_touchdcstA1013());
		dcCloseStruct(st);
	}
	return st;
};
/* {p{j<dj>{ffsdfilsdffjffjfi}jfd<fpcfcsplscdjjfscsj>}p} */
struct A1015 { p m0; struct A1014 m1; p m2; };
void f_cpA1015(struct A1015 *x, const struct A1015 *y) { x->m0 = y->m0; f_cpA1014(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA1015(const struct A1015 *x, const struct A1015 *y) { return x->m0 == y->m0 && f_cmpA1014(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA1015() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1015), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1015, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1015, m1), 1, f_touchdcstA1014());
		dcStructField(st, 'p', offsetof(struct A1015, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlfsjldsd} */
struct A1016 { j m0; l m1; f m2; s m3; j m4; l m5; d m6; s m7; d m8; };
void f_cpA1016(struct A1016 *x, const struct A1016 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1016(const struct A1016 *x, const struct A1016 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1016() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1016), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1016, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1016, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1016, m2), 1);
		dcStructField(st, 's', offsetof(struct A1016, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1016, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1016, m5), 1);
		dcStructField(st, 'd', offsetof(struct A1016, m6), 1);
		dcStructField(st, 's', offsetof(struct A1016, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1016, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jpfi} */
struct A1017 { j m0; p m1; f m2; i m3; };
void f_cpA1017(struct A1017 *x, const struct A1017 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1017(const struct A1017 *x, const struct A1017 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1017() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1017), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1017, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1017, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1017, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1017, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsfpiflfidpsscj} */
struct A1018 { d m0; s m1; f m2; p m3; i m4; f m5; l m6; f m7; i m8; d m9; p m10; s m11; s m12; c m13; j m14; };
void f_cpA1018(struct A1018 *x, const struct A1018 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA1018(const struct A1018 *x, const struct A1018 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA1018() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A1018), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1018, m0), 1);
		dcStructField(st, 's', offsetof(struct A1018, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1018, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1018, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1018, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1018, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1018, m6), 1);
		dcStructField(st, 'f', offsetof(struct A1018, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1018, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1018, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1018, m10), 1);
		dcStructField(st, 's', offsetof(struct A1018, m11), 1);
		dcStructField(st, 's', offsetof(struct A1018, m12), 1);
		dcStructField(st, 'c', offsetof(struct A1018, m13), 1);
		dcStructField(st, 'j', offsetof(struct A1018, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{jpfi}jsplccicsi{dsfpiflfidpsscj}> */
union  A1019 { struct A1017 m0; j m1; s m2; p m3; l m4; c m5; c m6; i m7; c m8; s m9; i m10; struct A1018 m11; };
void f_cpA1019(union  A1019 *x, const union  A1019 *y) { f_cpA1017(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA1018(&x->m11, &y->m11); };
int f_cmpA1019(const union  A1019 *x, const union  A1019 *y) { return f_cmpA1017(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1018(&x->m11, &y->m11); };
DCstruct* f_touchdcstA1019() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1019), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1019, m0), 1, f_touchdcstA1017());
		dcStructField(st, 'j', offsetof(union  A1019, m1), 1);
		dcStructField(st, 's', offsetof(union  A1019, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1019, m3), 1);
		dcStructField(st, 'l', offsetof(union  A1019, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1019, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1019, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1019, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1019, m8), 1);
		dcStructField(st, 's', offsetof(union  A1019, m9), 1);
		dcStructField(st, 'i', offsetof(union  A1019, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1019, m11), 1, f_touchdcstA1018());
		dcCloseStruct(st);
	}
	return st;
};
/* <lffps> */
union  A1020 { l m0; f m1; f m2; p m3; s m4; };
void f_cpA1020(union  A1020 *x, const union  A1020 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1020(const union  A1020 *x, const union  A1020 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1020() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1020), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1020, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1020, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1020, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1020, m3), 1);
		dcStructField(st, 's', offsetof(union  A1020, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djdpff} */
struct A1021 { d m0; j m1; d m2; p m3; f m4; f m5; };
void f_cpA1021(struct A1021 *x, const struct A1021 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1021(const struct A1021 *x, const struct A1021 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1021() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1021), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1021, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1021, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1021, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1021, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1021, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1021, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ijcjfjpf> */
union  A1022 { i m0; j m1; c m2; j m3; f m4; j m5; p m6; f m7; };
void f_cpA1022(union  A1022 *x, const union  A1022 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1022(const union  A1022 *x, const union  A1022 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1022() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A1022), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1022, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1022, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1022, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1022, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1022, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1022, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1022, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1022, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ipllcd> */
union  A1023 { i m0; p m1; l m2; l m3; c m4; d m5; };
void f_cpA1023(union  A1023 *x, const union  A1023 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1023(const union  A1023 *x, const union  A1023 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1023() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1023), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1023, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1023, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1023, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1023, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1023, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1023, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sjidpi> */
union  A1024 { s m0; j m1; i m2; d m3; p m4; i m5; };
void f_cpA1024(union  A1024 *x, const union  A1024 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1024(const union  A1024 *x, const union  A1024 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1024() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1024), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1024, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1024, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1024, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1024, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1024, m4), 1);
		dcStructField(st, 'i', offsetof(union  A1024, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ppjs> */
union  A1025 { p m0; p m1; j m2; s m3; };
void f_cpA1025(union  A1025 *x, const union  A1025 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1025(const union  A1025 *x, const union  A1025 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1025() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1025), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1025, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1025, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1025, m2), 1);
		dcStructField(st, 's', offsetof(union  A1025, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jplilpd} */
struct A1026 { j m0; p m1; l m2; i m3; l m4; p m5; d m6; };
void f_cpA1026(struct A1026 *x, const struct A1026 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1026(const struct A1026 *x, const struct A1026 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1026() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1026), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1026, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1026, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1026, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1026, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1026, m4), 1);
		dcStructField(st, 'p', offsetof(struct A1026, m5), 1);
		dcStructField(st, 'd', offsetof(struct A1026, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldipfsdddcsic} */
struct A1027 { l m0; d m1; i m2; p m3; f m4; s m5; d m6; d m7; d m8; c m9; s m10; i m11; c m12; };
void f_cpA1027(struct A1027 *x, const struct A1027 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA1027(const struct A1027 *x, const struct A1027 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA1027() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A1027), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1027, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1027, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1027, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1027, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1027, m4), 1);
		dcStructField(st, 's', offsetof(struct A1027, m5), 1);
		dcStructField(st, 'd', offsetof(struct A1027, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1027, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1027, m8), 1);
		dcStructField(st, 'c', offsetof(struct A1027, m9), 1);
		dcStructField(st, 's', offsetof(struct A1027, m10), 1);
		dcStructField(st, 'i', offsetof(struct A1027, m11), 1);
		dcStructField(st, 'c', offsetof(struct A1027, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ddp> */
union  A1028 { d m0; d m1; p m2; };
void f_cpA1028(union  A1028 *x, const union  A1028 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1028(const union  A1028 *x, const union  A1028 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1028() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1028), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1028, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1028, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1028, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljsji} */
struct A1029 { l m0; j m1; s m2; j m3; i m4; };
void f_cpA1029(struct A1029 *x, const struct A1029 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1029(const struct A1029 *x, const struct A1029 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1029() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1029), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1029, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1029, m1), 1);
		dcStructField(st, 's', offsetof(struct A1029, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1029, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1029, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{jplilpd}{ldipfsdddcsic}pl<ddp>ds{ljsji}} */
struct A1030 { struct A1026 m0; struct A1027 m1; p m2; l m3; union  A1028 m4; d m5; s m6; struct A1029 m7; };
void f_cpA1030(struct A1030 *x, const struct A1030 *y) { f_cpA1026(&x->m0, &y->m0); f_cpA1027(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; f_cpA1028(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA1029(&x->m7, &y->m7); };
int f_cmpA1030(const struct A1030 *x, const struct A1030 *y) { return f_cmpA1026(&x->m0, &y->m0) && f_cmpA1027(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1028(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1029(&x->m7, &y->m7); };
DCstruct* f_touchdcstA1030() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A1030), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1030, m0), 1, f_touchdcstA1026());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1030, m1), 1, f_touchdcstA1027());
		dcStructField(st, 'p', offsetof(struct A1030, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1030, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1030, m4), 1, f_touchdcstA1028());
		dcStructField(st, 'd', offsetof(struct A1030, m5), 1);
		dcStructField(st, 's', offsetof(struct A1030, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1030, m7), 1, f_touchdcstA1029());
		dcCloseStruct(st);
	}
	return st;
};
/* {ppjdpjf{{jplilpd}{ldipfsdddcsic}pl<ddp>ds{ljsji}}} */
struct A1031 { p m0; p m1; j m2; d m3; p m4; j m5; f m6; struct A1030 m7; };
void f_cpA1031(struct A1031 *x, const struct A1031 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA1030(&x->m7, &y->m7); };
int f_cmpA1031(const struct A1031 *x, const struct A1031 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1030(&x->m7, &y->m7); };
DCstruct* f_touchdcstA1031() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A1031), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1031, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1031, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1031, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1031, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1031, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1031, m5), 1);
		dcStructField(st, 'f', offsetof(struct A1031, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1031, m7), 1, f_touchdcstA1030());
		dcCloseStruct(st);
	}
	return st;
};
/* {iff} */
struct A1032 { i m0; f m1; f m2; };
void f_cpA1032(struct A1032 *x, const struct A1032 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1032(const struct A1032 *x, const struct A1032 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1032() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1032), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1032, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1032, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1032, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fcjli} */
struct A1033 { f m0; c m1; j m2; l m3; i m4; };
void f_cpA1033(struct A1033 *x, const struct A1033 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1033(const struct A1033 *x, const struct A1033 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1033() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1033), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1033, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1033, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1033, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1033, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1033, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fidss> */
union  A1034 { f m0; i m1; d m2; s m3; s m4; };
void f_cpA1034(union  A1034 *x, const union  A1034 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1034(const union  A1034 *x, const union  A1034 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1034() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1034), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1034, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1034, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1034, m2), 1);
		dcStructField(st, 's', offsetof(union  A1034, m3), 1);
		dcStructField(st, 's', offsetof(union  A1034, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jipdsldiclp> */
union  A1035 { j m0; i m1; p m2; d m3; s m4; l m5; d m6; i m7; c m8; l m9; p m10; };
void f_cpA1035(union  A1035 *x, const union  A1035 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1035(const union  A1035 *x, const union  A1035 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1035() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1035), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1035, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1035, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1035, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1035, m3), 1);
		dcStructField(st, 's', offsetof(union  A1035, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1035, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1035, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1035, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1035, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1035, m9), 1);
		dcStructField(st, 'p', offsetof(union  A1035, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpd<fidss>pjcd<jipdsldiclp>is<sp>jllflcpdi<j>cdd} */
struct A1036 { d m0; p m1; d m2; union  A1034 m3; p m4; j m5; c m6; d m7; union  A1035 m8; i m9; s m10; union  A674 m11; j m12; l m13; l m14; f m15; l m16; c m17; p m18; d m19; i m20; union  A47 m21; c m22; d m23; d m24; };
void f_cpA1036(struct A1036 *x, const struct A1036 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1034(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA1035(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; f_cpA674(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; f_cpA47(&x->m21, &y->m21); x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; };
int f_cmpA1036(const struct A1036 *x, const struct A1036 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1034(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1035(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA674(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && f_cmpA47(&x->m21, &y->m21) && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24; };
DCstruct* f_touchdcstA1036() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(25, sizeof(struct A1036), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1036, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1036, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1036, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1036, m3), 1, f_touchdcstA1034());
		dcStructField(st, 'p', offsetof(struct A1036, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1036, m5), 1);
		dcStructField(st, 'c', offsetof(struct A1036, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1036, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1036, m8), 1, f_touchdcstA1035());
		dcStructField(st, 'i', offsetof(struct A1036, m9), 1);
		dcStructField(st, 's', offsetof(struct A1036, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1036, m11), 1, f_touchdcstA674());
		dcStructField(st, 'j', offsetof(struct A1036, m12), 1);
		dcStructField(st, 'l', offsetof(struct A1036, m13), 1);
		dcStructField(st, 'l', offsetof(struct A1036, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1036, m15), 1);
		dcStructField(st, 'l', offsetof(struct A1036, m16), 1);
		dcStructField(st, 'c', offsetof(struct A1036, m17), 1);
		dcStructField(st, 'p', offsetof(struct A1036, m18), 1);
		dcStructField(st, 'd', offsetof(struct A1036, m19), 1);
		dcStructField(st, 'i', offsetof(struct A1036, m20), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1036, m21), 1, f_touchdcstA47());
		dcStructField(st, 'c', offsetof(struct A1036, m22), 1);
		dcStructField(st, 'd', offsetof(struct A1036, m23), 1);
		dcStructField(st, 'd', offsetof(struct A1036, m24), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pcjlilpscipcljipcipi} */
struct A1037 { p m0; c m1; j m2; l m3; i m4; l m5; p m6; s m7; c m8; i m9; p m10; c m11; l m12; j m13; i m14; p m15; c m16; i m17; p m18; i m19; };
void f_cpA1037(struct A1037 *x, const struct A1037 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA1037(const struct A1037 *x, const struct A1037 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA1037() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A1037), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1037, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1037, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1037, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1037, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1037, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1037, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1037, m6), 1);
		dcStructField(st, 's', offsetof(struct A1037, m7), 1);
		dcStructField(st, 'c', offsetof(struct A1037, m8), 1);
		dcStructField(st, 'i', offsetof(struct A1037, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1037, m10), 1);
		dcStructField(st, 'c', offsetof(struct A1037, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1037, m12), 1);
		dcStructField(st, 'j', offsetof(struct A1037, m13), 1);
		dcStructField(st, 'i', offsetof(struct A1037, m14), 1);
		dcStructField(st, 'p', offsetof(struct A1037, m15), 1);
		dcStructField(st, 'c', offsetof(struct A1037, m16), 1);
		dcStructField(st, 'i', offsetof(struct A1037, m17), 1);
		dcStructField(st, 'p', offsetof(struct A1037, m18), 1);
		dcStructField(st, 'i', offsetof(struct A1037, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dffiljiijlspcspjfdsjj} */
struct A1038 { d m0; f m1; f m2; i m3; l m4; j m5; i m6; i m7; j m8; l m9; s m10; p m11; c m12; s m13; p m14; j m15; f m16; d m17; s m18; j m19; j m20; };
void f_cpA1038(struct A1038 *x, const struct A1038 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA1038(const struct A1038 *x, const struct A1038 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA1038() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A1038), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1038, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1038, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1038, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1038, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1038, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1038, m5), 1);
		dcStructField(st, 'i', offsetof(struct A1038, m6), 1);
		dcStructField(st, 'i', offsetof(struct A1038, m7), 1);
		dcStructField(st, 'j', offsetof(struct A1038, m8), 1);
		dcStructField(st, 'l', offsetof(struct A1038, m9), 1);
		dcStructField(st, 's', offsetof(struct A1038, m10), 1);
		dcStructField(st, 'p', offsetof(struct A1038, m11), 1);
		dcStructField(st, 'c', offsetof(struct A1038, m12), 1);
		dcStructField(st, 's', offsetof(struct A1038, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1038, m14), 1);
		dcStructField(st, 'j', offsetof(struct A1038, m15), 1);
		dcStructField(st, 'f', offsetof(struct A1038, m16), 1);
		dcStructField(st, 'd', offsetof(struct A1038, m17), 1);
		dcStructField(st, 's', offsetof(struct A1038, m18), 1);
		dcStructField(st, 'j', offsetof(struct A1038, m19), 1);
		dcStructField(st, 'j', offsetof(struct A1038, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iffccpcdd} */
struct A1039 { i m0; f m1; f m2; c m3; c m4; p m5; c m6; d m7; d m8; };
void f_cpA1039(struct A1039 *x, const struct A1039 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1039(const struct A1039 *x, const struct A1039 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1039() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1039), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1039, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1039, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1039, m2), 1);
		dcStructField(st, 'c', offsetof(struct A1039, m3), 1);
		dcStructField(st, 'c', offsetof(struct A1039, m4), 1);
		dcStructField(st, 'p', offsetof(struct A1039, m5), 1);
		dcStructField(st, 'c', offsetof(struct A1039, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1039, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1039, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <icijsdfdjfppfssdslippsdjjccld> */
union  A1040 { i m0; c m1; i m2; j m3; s m4; d m5; f m6; d m7; j m8; f m9; p m10; p m11; f m12; s m13; s m14; d m15; s m16; l m17; i m18; p m19; p m20; s m21; d m22; j m23; j m24; c m25; c m26; l m27; d m28; };
void f_cpA1040(union  A1040 *x, const union  A1040 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA1040(const union  A1040 *x, const union  A1040 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA1040() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(union  A1040), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1040, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1040, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1040, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1040, m3), 1);
		dcStructField(st, 's', offsetof(union  A1040, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1040, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1040, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1040, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1040, m8), 1);
		dcStructField(st, 'f', offsetof(union  A1040, m9), 1);
		dcStructField(st, 'p', offsetof(union  A1040, m10), 1);
		dcStructField(st, 'p', offsetof(union  A1040, m11), 1);
		dcStructField(st, 'f', offsetof(union  A1040, m12), 1);
		dcStructField(st, 's', offsetof(union  A1040, m13), 1);
		dcStructField(st, 's', offsetof(union  A1040, m14), 1);
		dcStructField(st, 'd', offsetof(union  A1040, m15), 1);
		dcStructField(st, 's', offsetof(union  A1040, m16), 1);
		dcStructField(st, 'l', offsetof(union  A1040, m17), 1);
		dcStructField(st, 'i', offsetof(union  A1040, m18), 1);
		dcStructField(st, 'p', offsetof(union  A1040, m19), 1);
		dcStructField(st, 'p', offsetof(union  A1040, m20), 1);
		dcStructField(st, 's', offsetof(union  A1040, m21), 1);
		dcStructField(st, 'd', offsetof(union  A1040, m22), 1);
		dcStructField(st, 'j', offsetof(union  A1040, m23), 1);
		dcStructField(st, 'j', offsetof(union  A1040, m24), 1);
		dcStructField(st, 'c', offsetof(union  A1040, m25), 1);
		dcStructField(st, 'c', offsetof(union  A1040, m26), 1);
		dcStructField(st, 'l', offsetof(union  A1040, m27), 1);
		dcStructField(st, 'd', offsetof(union  A1040, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <flscifl> */
union  A1041 { f m0; l m1; s m2; c m3; i m4; f m5; l m6; };
void f_cpA1041(union  A1041 *x, const union  A1041 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1041(const union  A1041 *x, const union  A1041 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1041() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1041), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1041, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1041, m1), 1);
		dcStructField(st, 's', offsetof(union  A1041, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1041, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1041, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1041, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1041, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {flcpsjpisssdd} */
struct A1042 { f m0; l m1; c m2; p m3; s m4; j m5; p m6; i m7; s m8; s m9; s m10; d m11; d m12; };
void f_cpA1042(struct A1042 *x, const struct A1042 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA1042(const struct A1042 *x, const struct A1042 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA1042() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A1042), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1042, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1042, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1042, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1042, m3), 1);
		dcStructField(st, 's', offsetof(struct A1042, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1042, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1042, m6), 1);
		dcStructField(st, 'i', offsetof(struct A1042, m7), 1);
		dcStructField(st, 's', offsetof(struct A1042, m8), 1);
		dcStructField(st, 's', offsetof(struct A1042, m9), 1);
		dcStructField(st, 's', offsetof(struct A1042, m10), 1);
		dcStructField(st, 'd', offsetof(struct A1042, m11), 1);
		dcStructField(st, 'd', offsetof(struct A1042, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {p{pcjlilpscipcljipcipi}ddj{dffiljiijlspcspjfdsjj}f{iffccpcdd}<icijsdfdjfppfssdslippsdjjccld>j<flscifl>il{flcpsjpisssdd}l} */
struct A1043 { p m0; struct A1037 m1; d m2; d m3; j m4; struct A1038 m5; f m6; struct A1039 m7; union  A1040 m8; j m9; union  A1041 m10; i m11; l m12; struct A1042 m13; l m14; };
void f_cpA1043(struct A1043 *x, const struct A1043 *y) { x->m0 = y->m0; f_cpA1037(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1038(&x->m5, &y->m5); x->m6 = y->m6; f_cpA1039(&x->m7, &y->m7); f_cpA1040(&x->m8, &y->m8); x->m9 = y->m9; f_cpA1041(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; f_cpA1042(&x->m13, &y->m13); x->m14 = y->m14; };
int f_cmpA1043(const struct A1043 *x, const struct A1043 *y) { return x->m0 == y->m0 && f_cmpA1037(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1038(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA1039(&x->m7, &y->m7) && f_cmpA1040(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA1041(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA1042(&x->m13, &y->m13) && x->m14 == y->m14; };
DCstruct* f_touchdcstA1043() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A1043), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1043, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1043, m1), 1, f_touchdcstA1037());
		dcStructField(st, 'd', offsetof(struct A1043, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1043, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1043, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1043, m5), 1, f_touchdcstA1038());
		dcStructField(st, 'f', offsetof(struct A1043, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1043, m7), 1, f_touchdcstA1039());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1043, m8), 1, f_touchdcstA1040());
		dcStructField(st, 'j', offsetof(struct A1043, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1043, m10), 1, f_touchdcstA1041());
		dcStructField(st, 'i', offsetof(struct A1043, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1043, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1043, m13), 1, f_touchdcstA1042());
		dcStructField(st, 'l', offsetof(struct A1043, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfldsj> */
union  A1044 { s m0; f m1; l m2; d m3; s m4; j m5; };
void f_cpA1044(union  A1044 *x, const union  A1044 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1044(const union  A1044 *x, const union  A1044 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1044() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1044), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1044, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1044, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1044, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1044, m3), 1);
		dcStructField(st, 's', offsetof(union  A1044, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1044, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <flsjsjc> */
union  A1045 { f m0; l m1; s m2; j m3; s m4; j m5; c m6; };
void f_cpA1045(union  A1045 *x, const union  A1045 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1045(const union  A1045 *x, const union  A1045 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1045() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1045), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1045, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1045, m1), 1);
		dcStructField(st, 's', offsetof(union  A1045, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1045, m3), 1);
		dcStructField(st, 's', offsetof(union  A1045, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1045, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1045, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idcljljdfdpffdjppcspjfspiffifjf} */
struct A1046 { i m0; d m1; c m2; l m3; j m4; l m5; j m6; d m7; f m8; d m9; p m10; f m11; f m12; d m13; j m14; p m15; p m16; c m17; s m18; p m19; j m20; f m21; s m22; p m23; i m24; f m25; f m26; i m27; f m28; j m29; f m30; };
void f_cpA1046(struct A1046 *x, const struct A1046 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; };
int f_cmpA1046(const struct A1046 *x, const struct A1046 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30; };
DCstruct* f_touchdcstA1046() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(31, sizeof(struct A1046), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1046, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1046, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1046, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1046, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1046, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1046, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1046, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1046, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1046, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1046, m10), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m12), 1);
		dcStructField(st, 'd', offsetof(struct A1046, m13), 1);
		dcStructField(st, 'j', offsetof(struct A1046, m14), 1);
		dcStructField(st, 'p', offsetof(struct A1046, m15), 1);
		dcStructField(st, 'p', offsetof(struct A1046, m16), 1);
		dcStructField(st, 'c', offsetof(struct A1046, m17), 1);
		dcStructField(st, 's', offsetof(struct A1046, m18), 1);
		dcStructField(st, 'p', offsetof(struct A1046, m19), 1);
		dcStructField(st, 'j', offsetof(struct A1046, m20), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m21), 1);
		dcStructField(st, 's', offsetof(struct A1046, m22), 1);
		dcStructField(st, 'p', offsetof(struct A1046, m23), 1);
		dcStructField(st, 'i', offsetof(struct A1046, m24), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m25), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m26), 1);
		dcStructField(st, 'i', offsetof(struct A1046, m27), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m28), 1);
		dcStructField(st, 'j', offsetof(struct A1046, m29), 1);
		dcStructField(st, 'f', offsetof(struct A1046, m30), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <clld> */
union  A1047 { c m0; l m1; l m2; d m3; };
void f_cpA1047(union  A1047 *x, const union  A1047 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1047(const union  A1047 *x, const union  A1047 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1047() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1047), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1047, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1047, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1047, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1047, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lj<sfldsj>ic<flsjsjc>slcpflsdjpjp{idcljljdfdpffdjppcspjfspiffifjf}<clld>> */
union  A1048 { l m0; j m1; union  A1044 m2; i m3; c m4; union  A1045 m5; s m6; l m7; c m8; p m9; f m10; l m11; s m12; d m13; j m14; p m15; j m16; p m17; struct A1046 m18; union  A1047 m19; };
void f_cpA1048(union  A1048 *x, const union  A1048 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1044(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA1045(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA1046(&x->m18, &y->m18); f_cpA1047(&x->m19, &y->m19); };
int f_cmpA1048(const union  A1048 *x, const union  A1048 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1044(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1045(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA1046(&x->m18, &y->m18) && f_cmpA1047(&x->m19, &y->m19); };
DCstruct* f_touchdcstA1048() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A1048), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1048, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1048, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1048, m2), 1, f_touchdcstA1044());
		dcStructField(st, 'i', offsetof(union  A1048, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1048, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1048, m5), 1, f_touchdcstA1045());
		dcStructField(st, 's', offsetof(union  A1048, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1048, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1048, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1048, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1048, m10), 1);
		dcStructField(st, 'l', offsetof(union  A1048, m11), 1);
		dcStructField(st, 's', offsetof(union  A1048, m12), 1);
		dcStructField(st, 'd', offsetof(union  A1048, m13), 1);
		dcStructField(st, 'j', offsetof(union  A1048, m14), 1);
		dcStructField(st, 'p', offsetof(union  A1048, m15), 1);
		dcStructField(st, 'j', offsetof(union  A1048, m16), 1);
		dcStructField(st, 'p', offsetof(union  A1048, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1048, m18), 1, f_touchdcstA1046());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1048, m19), 1, f_touchdcstA1047());
		dcCloseStruct(st);
	}
	return st;
};
/* <fpj{fj}plscsdlldpppdfps> */
union  A1049 { f m0; p m1; j m2; struct A825 m3; p m4; l m5; s m6; c m7; s m8; d m9; l m10; l m11; d m12; p m13; p m14; p m15; d m16; f m17; p m18; s m19; };
void f_cpA1049(union  A1049 *x, const union  A1049 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA825(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA1049(const union  A1049 *x, const union  A1049 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA825(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA1049() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A1049), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1049, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1049, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1049, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1049, m3), 1, f_touchdcstA825());
		dcStructField(st, 'p', offsetof(union  A1049, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1049, m5), 1);
		dcStructField(st, 's', offsetof(union  A1049, m6), 1);
		dcStructField(st, 'c', offsetof(union  A1049, m7), 1);
		dcStructField(st, 's', offsetof(union  A1049, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1049, m9), 1);
		dcStructField(st, 'l', offsetof(union  A1049, m10), 1);
		dcStructField(st, 'l', offsetof(union  A1049, m11), 1);
		dcStructField(st, 'd', offsetof(union  A1049, m12), 1);
		dcStructField(st, 'p', offsetof(union  A1049, m13), 1);
		dcStructField(st, 'p', offsetof(union  A1049, m14), 1);
		dcStructField(st, 'p', offsetof(union  A1049, m15), 1);
		dcStructField(st, 'd', offsetof(union  A1049, m16), 1);
		dcStructField(st, 'f', offsetof(union  A1049, m17), 1);
		dcStructField(st, 'p', offsetof(union  A1049, m18), 1);
		dcStructField(st, 's', offsetof(union  A1049, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {clc} */
struct A1050 { c m0; l m1; c m2; };
void f_cpA1050(struct A1050 *x, const struct A1050 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1050(const struct A1050 *x, const struct A1050 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1050() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1050), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1050, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1050, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1050, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ldsdspcfjs> */
union  A1051 { l m0; d m1; s m2; d m3; s m4; p m5; c m6; f m7; j m8; s m9; };
void f_cpA1051(union  A1051 *x, const union  A1051 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1051(const union  A1051 *x, const union  A1051 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1051() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1051), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1051, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1051, m1), 1);
		dcStructField(st, 's', offsetof(union  A1051, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1051, m3), 1);
		dcStructField(st, 's', offsetof(union  A1051, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1051, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1051, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1051, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1051, m8), 1);
		dcStructField(st, 's', offsetof(union  A1051, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfllddiciscdfcpsflsdsidc} */
struct A1052 { c m0; f m1; l m2; l m3; d m4; d m5; i m6; c m7; i m8; s m9; c m10; d m11; f m12; c m13; p m14; s m15; f m16; l m17; s m18; d m19; s m20; i m21; d m22; c m23; };
void f_cpA1052(struct A1052 *x, const struct A1052 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA1052(const struct A1052 *x, const struct A1052 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA1052() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A1052), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1052, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1052, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1052, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1052, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1052, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1052, m5), 1);
		dcStructField(st, 'i', offsetof(struct A1052, m6), 1);
		dcStructField(st, 'c', offsetof(struct A1052, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1052, m8), 1);
		dcStructField(st, 's', offsetof(struct A1052, m9), 1);
		dcStructField(st, 'c', offsetof(struct A1052, m10), 1);
		dcStructField(st, 'd', offsetof(struct A1052, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1052, m12), 1);
		dcStructField(st, 'c', offsetof(struct A1052, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1052, m14), 1);
		dcStructField(st, 's', offsetof(struct A1052, m15), 1);
		dcStructField(st, 'f', offsetof(struct A1052, m16), 1);
		dcStructField(st, 'l', offsetof(struct A1052, m17), 1);
		dcStructField(st, 's', offsetof(struct A1052, m18), 1);
		dcStructField(st, 'd', offsetof(struct A1052, m19), 1);
		dcStructField(st, 's', offsetof(struct A1052, m20), 1);
		dcStructField(st, 'i', offsetof(struct A1052, m21), 1);
		dcStructField(st, 'd', offsetof(struct A1052, m22), 1);
		dcStructField(st, 'c', offsetof(struct A1052, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jjddfl> */
union  A1053 { j m0; j m1; d m2; d m3; f m4; l m5; };
void f_cpA1053(union  A1053 *x, const union  A1053 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1053(const union  A1053 *x, const union  A1053 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1053() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1053), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1053, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1053, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1053, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1053, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1053, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1053, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pl<jjddfl>cpdj> */
union  A1054 { p m0; l m1; union  A1053 m2; c m3; p m4; d m5; j m6; };
void f_cpA1054(union  A1054 *x, const union  A1054 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1053(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1054(const union  A1054 *x, const union  A1054 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1053(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1054() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1054), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1054, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1054, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1054, m2), 1, f_touchdcstA1053());
		dcStructField(st, 'c', offsetof(union  A1054, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1054, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1054, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1054, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jds} */
struct A1055 { j m0; d m1; s m2; };
void f_cpA1055(struct A1055 *x, const struct A1055 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1055(const struct A1055 *x, const struct A1055 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1055() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1055), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1055, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1055, m1), 1);
		dcStructField(st, 's', offsetof(struct A1055, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sijlldllscdssppplsid} */
struct A1056 { s m0; i m1; j m2; l m3; l m4; d m5; l m6; l m7; s m8; c m9; d m10; s m11; s m12; p m13; p m14; p m15; l m16; s m17; i m18; d m19; };
void f_cpA1056(struct A1056 *x, const struct A1056 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA1056(const struct A1056 *x, const struct A1056 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA1056() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A1056), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1056, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1056, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1056, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1056, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1056, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1056, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1056, m6), 1);
		dcStructField(st, 'l', offsetof(struct A1056, m7), 1);
		dcStructField(st, 's', offsetof(struct A1056, m8), 1);
		dcStructField(st, 'c', offsetof(struct A1056, m9), 1);
		dcStructField(st, 'd', offsetof(struct A1056, m10), 1);
		dcStructField(st, 's', offsetof(struct A1056, m11), 1);
		dcStructField(st, 's', offsetof(struct A1056, m12), 1);
		dcStructField(st, 'p', offsetof(struct A1056, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1056, m14), 1);
		dcStructField(st, 'p', offsetof(struct A1056, m15), 1);
		dcStructField(st, 'l', offsetof(struct A1056, m16), 1);
		dcStructField(st, 's', offsetof(struct A1056, m17), 1);
		dcStructField(st, 'i', offsetof(struct A1056, m18), 1);
		dcStructField(st, 'd', offsetof(struct A1056, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljpffppjislipji> */
union  A1057 { l m0; j m1; p m2; f m3; f m4; p m5; p m6; j m7; i m8; s m9; l m10; i m11; p m12; j m13; i m14; };
void f_cpA1057(union  A1057 *x, const union  A1057 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA1057(const union  A1057 *x, const union  A1057 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA1057() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A1057), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1057, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1057, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1057, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1057, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1057, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1057, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1057, m6), 1);
		dcStructField(st, 'j', offsetof(union  A1057, m7), 1);
		dcStructField(st, 'i', offsetof(union  A1057, m8), 1);
		dcStructField(st, 's', offsetof(union  A1057, m9), 1);
		dcStructField(st, 'l', offsetof(union  A1057, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1057, m11), 1);
		dcStructField(st, 'p', offsetof(union  A1057, m12), 1);
		dcStructField(st, 'j', offsetof(union  A1057, m13), 1);
		dcStructField(st, 'i', offsetof(union  A1057, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{jds}p{sijlldllscdssppplsid}f<ljpffppjislipji>dc> */
union  A1058 { struct A1055 m0; p m1; struct A1056 m2; f m3; union  A1057 m4; d m5; c m6; };
void f_cpA1058(union  A1058 *x, const union  A1058 *y) { f_cpA1055(&x->m0, &y->m0); x->m1 = y->m1; f_cpA1056(&x->m2, &y->m2); x->m3 = y->m3; f_cpA1057(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1058(const union  A1058 *x, const union  A1058 *y) { return f_cmpA1055(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA1056(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA1057(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1058() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1058), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1058, m0), 1, f_touchdcstA1055());
		dcStructField(st, 'p', offsetof(union  A1058, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1058, m2), 1, f_touchdcstA1056());
		dcStructField(st, 'f', offsetof(union  A1058, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1058, m4), 1, f_touchdcstA1057());
		dcStructField(st, 'd', offsetof(union  A1058, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1058, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fsp} */
struct A1059 { f m0; s m1; p m2; };
void f_cpA1059(struct A1059 *x, const struct A1059 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1059(const struct A1059 *x, const struct A1059 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1059() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1059), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1059, m0), 1);
		dcStructField(st, 's', offsetof(struct A1059, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1059, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ic{fsp}} */
struct A1060 { i m0; c m1; struct A1059 m2; };
void f_cpA1060(struct A1060 *x, const struct A1060 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1059(&x->m2, &y->m2); };
int f_cmpA1060(const struct A1060 *x, const struct A1060 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1059(&x->m2, &y->m2); };
DCstruct* f_touchdcstA1060() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1060), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1060, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1060, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1060, m2), 1, f_touchdcstA1059());
		dcCloseStruct(st);
	}
	return st;
};
/* <cjcpsdifill> */
union  A1061 { c m0; j m1; c m2; p m3; s m4; d m5; i m6; f m7; i m8; l m9; l m10; };
void f_cpA1061(union  A1061 *x, const union  A1061 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1061(const union  A1061 *x, const union  A1061 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1061() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1061), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1061, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1061, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1061, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1061, m3), 1);
		dcStructField(st, 's', offsetof(union  A1061, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1061, m5), 1);
		dcStructField(st, 'i', offsetof(union  A1061, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1061, m7), 1);
		dcStructField(st, 'i', offsetof(union  A1061, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1061, m9), 1);
		dcStructField(st, 'l', offsetof(union  A1061, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {djff} */
struct A1062 { d m0; j m1; f m2; f m3; };
void f_cpA1062(struct A1062 *x, const struct A1062 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1062(const struct A1062 *x, const struct A1062 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1062() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1062), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1062, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1062, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1062, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1062, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jjplljlji} */
struct A1063 { j m0; j m1; p m2; l m3; l m4; j m5; l m6; j m7; i m8; };
void f_cpA1063(struct A1063 *x, const struct A1063 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1063(const struct A1063 *x, const struct A1063 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1063() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1063), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1063, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1063, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1063, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1063, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1063, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1063, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1063, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1063, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1063, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ldi{jjplljlji}{j}j{i}cpj<l>j> */
union  A1064 { l m0; d m1; i m2; struct A1063 m3; struct A303 m4; j m5; struct A71 m6; c m7; p m8; j m9; union  A127 m10; j m11; };
void f_cpA1064(union  A1064 *x, const union  A1064 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1063(&x->m3, &y->m3); f_cpA303(&x->m4, &y->m4); x->m5 = y->m5; f_cpA71(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA127(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA1064(const union  A1064 *x, const union  A1064 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1063(&x->m3, &y->m3) && f_cmpA303(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA71(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA127(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA1064() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1064), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1064, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1064, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1064, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1064, m3), 1, f_touchdcstA1063());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1064, m4), 1, f_touchdcstA303());
		dcStructField(st, 'j', offsetof(union  A1064, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1064, m6), 1, f_touchdcstA71());
		dcStructField(st, 'c', offsetof(union  A1064, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1064, m8), 1);
		dcStructField(st, 'j', offsetof(union  A1064, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1064, m10), 1, f_touchdcstA127());
		dcStructField(st, 'j', offsetof(union  A1064, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sljpf} */
struct A1065 { s m0; l m1; j m2; p m3; f m4; };
void f_cpA1065(struct A1065 *x, const struct A1065 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1065(const struct A1065 *x, const struct A1065 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1065() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1065), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1065, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1065, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1065, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1065, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1065, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {iidi<d>sjdpcp{sljpf}} */
struct A1066 { i m0; i m1; d m2; i m3; union  A94 m4; s m5; j m6; d m7; p m8; c m9; p m10; struct A1065 m11; };
void f_cpA1066(struct A1066 *x, const struct A1066 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA94(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA1065(&x->m11, &y->m11); };
int f_cmpA1066(const struct A1066 *x, const struct A1066 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA94(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1065(&x->m11, &y->m11); };
DCstruct* f_touchdcstA1066() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A1066), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1066, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1066, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1066, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1066, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1066, m4), 1, f_touchdcstA94());
		dcStructField(st, 's', offsetof(struct A1066, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1066, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1066, m7), 1);
		dcStructField(st, 'p', offsetof(struct A1066, m8), 1);
		dcStructField(st, 'c', offsetof(struct A1066, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1066, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1066, m11), 1, f_touchdcstA1065());
		dcCloseStruct(st);
	}
	return st;
};
/* {ljd} */
struct A1067 { l m0; j m1; d m2; };
void f_cpA1067(struct A1067 *x, const struct A1067 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1067(const struct A1067 *x, const struct A1067 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1067() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1067), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1067, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1067, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1067, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfps} */
struct A1068 { s m0; f m1; p m2; s m3; };
void f_cpA1068(struct A1068 *x, const struct A1068 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1068(const struct A1068 *x, const struct A1068 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1068() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1068), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1068, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1068, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1068, m2), 1);
		dcStructField(st, 's', offsetof(struct A1068, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{ljd}{sfps}pd> */
union  A1069 { struct A1067 m0; struct A1068 m1; p m2; d m3; };
void f_cpA1069(union  A1069 *x, const union  A1069 *y) { f_cpA1067(&x->m0, &y->m0); f_cpA1068(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1069(const union  A1069 *x, const union  A1069 *y) { return f_cmpA1067(&x->m0, &y->m0) && f_cmpA1068(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1069() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1069), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1069, m0), 1, f_touchdcstA1067());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1069, m1), 1, f_touchdcstA1068());
		dcStructField(st, 'p', offsetof(union  A1069, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1069, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fpdfdclcllpf> */
union  A1070 { f m0; p m1; d m2; f m3; d m4; c m5; l m6; c m7; l m8; l m9; p m10; f m11; };
void f_cpA1070(union  A1070 *x, const union  A1070 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1070(const union  A1070 *x, const union  A1070 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1070() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1070), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1070, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1070, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1070, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1070, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1070, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1070, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1070, m6), 1);
		dcStructField(st, 'c', offsetof(union  A1070, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1070, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1070, m9), 1);
		dcStructField(st, 'p', offsetof(union  A1070, m10), 1);
		dcStructField(st, 'f', offsetof(union  A1070, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <i<fpdfdclcllpf>c> */
union  A1071 { i m0; union  A1070 m1; c m2; };
void f_cpA1071(union  A1071 *x, const union  A1071 *y) { x->m0 = y->m0; f_cpA1070(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA1071(const union  A1071 *x, const union  A1071 *y) { return x->m0 == y->m0 && f_cmpA1070(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA1071() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1071), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1071, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1071, m1), 1, f_touchdcstA1070());
		dcStructField(st, 'c', offsetof(union  A1071, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppjf} */
struct A1072 { p m0; p m1; j m2; f m3; };
void f_cpA1072(struct A1072 *x, const struct A1072 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1072(const struct A1072 *x, const struct A1072 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1072() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1072), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1072, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1072, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1072, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1072, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dlli} */
struct A1073 { d m0; l m1; l m2; i m3; };
void f_cpA1073(struct A1073 *x, const struct A1073 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1073(const struct A1073 *x, const struct A1073 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1073() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1073), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1073, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1073, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1073, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1073, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dpdj> */
union  A1074 { d m0; p m1; d m2; j m3; };
void f_cpA1074(union  A1074 *x, const union  A1074 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1074(const union  A1074 *x, const union  A1074 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1074() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1074), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1074, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1074, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1074, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1074, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dff{ppjf}i{dlli}fjs<dpdj>i> */
union  A1075 { d m0; f m1; f m2; struct A1072 m3; i m4; struct A1073 m5; f m6; j m7; s m8; union  A1074 m9; i m10; };
void f_cpA1075(union  A1075 *x, const union  A1075 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1072(&x->m3, &y->m3); x->m4 = y->m4; f_cpA1073(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA1074(&x->m9, &y->m9); x->m10 = y->m10; };
int f_cmpA1075(const union  A1075 *x, const union  A1075 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1072(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1073(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1074(&x->m9, &y->m9) && x->m10 == y->m10; };
DCstruct* f_touchdcstA1075() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1075), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1075, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1075, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1075, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1075, m3), 1, f_touchdcstA1072());
		dcStructField(st, 'i', offsetof(union  A1075, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1075, m5), 1, f_touchdcstA1073());
		dcStructField(st, 'f', offsetof(union  A1075, m6), 1);
		dcStructField(st, 'j', offsetof(union  A1075, m7), 1);
		dcStructField(st, 's', offsetof(union  A1075, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1075, m9), 1, f_touchdcstA1074());
		dcStructField(st, 'i', offsetof(union  A1075, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <c<i<fpdfdclcllpf>c>d<dff{ppjf}i{dlli}fjs<dpdj>i>p> */
union  A1076 { c m0; union  A1071 m1; d m2; union  A1075 m3; p m4; };
void f_cpA1076(union  A1076 *x, const union  A1076 *y) { x->m0 = y->m0; f_cpA1071(&x->m1, &y->m1); x->m2 = y->m2; f_cpA1075(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA1076(const union  A1076 *x, const union  A1076 *y) { return x->m0 == y->m0 && f_cmpA1071(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA1075(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA1076() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1076), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1076, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1076, m1), 1, f_touchdcstA1071());
		dcStructField(st, 'd', offsetof(union  A1076, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1076, m3), 1, f_touchdcstA1075());
		dcStructField(st, 'p', offsetof(union  A1076, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjp} */
struct A1077 { s m0; j m1; p m2; };
void f_cpA1077(struct A1077 *x, const struct A1077 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1077(const struct A1077 *x, const struct A1077 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1077() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1077), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1077, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1077, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1077, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {scjcsip} */
struct A1078 { s m0; c m1; j m2; c m3; s m4; i m5; p m6; };
void f_cpA1078(struct A1078 *x, const struct A1078 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1078(const struct A1078 *x, const struct A1078 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1078() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1078), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1078, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1078, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1078, m2), 1);
		dcStructField(st, 'c', offsetof(struct A1078, m3), 1);
		dcStructField(st, 's', offsetof(struct A1078, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1078, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1078, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fislfcp> */
union  A1079 { f m0; i m1; s m2; l m3; f m4; c m5; p m6; };
void f_cpA1079(union  A1079 *x, const union  A1079 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1079(const union  A1079 *x, const union  A1079 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1079() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1079), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1079, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1079, m1), 1);
		dcStructField(st, 's', offsetof(union  A1079, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1079, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1079, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1079, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1079, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <p{sjp}{scjcsip}pl<fislfcp>j> */
union  A1080 { p m0; struct A1077 m1; struct A1078 m2; p m3; l m4; union  A1079 m5; j m6; };
void f_cpA1080(union  A1080 *x, const union  A1080 *y) { x->m0 = y->m0; f_cpA1077(&x->m1, &y->m1); f_cpA1078(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA1079(&x->m5, &y->m5); x->m6 = y->m6; };
int f_cmpA1080(const union  A1080 *x, const union  A1080 *y) { return x->m0 == y->m0 && f_cmpA1077(&x->m1, &y->m1) && f_cmpA1078(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1079(&x->m5, &y->m5) && x->m6 == y->m6; };
DCstruct* f_touchdcstA1080() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1080), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1080, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1080, m1), 1, f_touchdcstA1077());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1080, m2), 1, f_touchdcstA1078());
		dcStructField(st, 'p', offsetof(union  A1080, m3), 1);
		dcStructField(st, 'l', offsetof(union  A1080, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1080, m5), 1, f_touchdcstA1079());
		dcStructField(st, 'j', offsetof(union  A1080, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fjisid> */
union  A1081 { f m0; j m1; i m2; s m3; i m4; d m5; };
void f_cpA1081(union  A1081 *x, const union  A1081 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1081(const union  A1081 *x, const union  A1081 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1081() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1081), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1081, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1081, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1081, m2), 1);
		dcStructField(st, 's', offsetof(union  A1081, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1081, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1081, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dl> */
union  A1082 { d m0; l m1; };
void f_cpA1082(union  A1082 *x, const union  A1082 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1082(const union  A1082 *x, const union  A1082 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1082() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1082), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1082, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1082, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lifldldi> */
union  A1083 { l m0; i m1; f m2; l m3; d m4; l m5; d m6; i m7; };
void f_cpA1083(union  A1083 *x, const union  A1083 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1083(const union  A1083 *x, const union  A1083 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1083() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A1083), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1083, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1083, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1083, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1083, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1083, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1083, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1083, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1083, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fdsdi} */
struct A1084 { f m0; d m1; s m2; d m3; i m4; };
void f_cpA1084(struct A1084 *x, const struct A1084 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1084(const struct A1084 *x, const struct A1084 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1084() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1084), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1084, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1084, m1), 1);
		dcStructField(st, 's', offsetof(struct A1084, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1084, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1084, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isp} */
struct A1085 { i m0; s m1; p m2; };
void f_cpA1085(struct A1085 *x, const struct A1085 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1085(const struct A1085 *x, const struct A1085 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1085() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1085), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1085, m0), 1);
		dcStructField(st, 's', offsetof(struct A1085, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1085, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlcf{c}f<lifldldi>pjs{fdsdi}{lf}{isp}f> */
union  A1086 { d m0; l m1; c m2; f m3; struct A122 m4; f m5; union  A1083 m6; p m7; j m8; s m9; struct A1084 m10; struct A745 m11; struct A1085 m12; f m13; };
void f_cpA1086(union  A1086 *x, const union  A1086 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA122(&x->m4, &y->m4); x->m5 = y->m5; f_cpA1083(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA1084(&x->m10, &y->m10); f_cpA745(&x->m11, &y->m11); f_cpA1085(&x->m12, &y->m12); x->m13 = y->m13; };
int f_cmpA1086(const union  A1086 *x, const union  A1086 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA122(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA1083(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1084(&x->m10, &y->m10) && f_cmpA745(&x->m11, &y->m11) && f_cmpA1085(&x->m12, &y->m12) && x->m13 == y->m13; };
DCstruct* f_touchdcstA1086() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A1086), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1086, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1086, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1086, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1086, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1086, m4), 1, f_touchdcstA122());
		dcStructField(st, 'f', offsetof(union  A1086, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1086, m6), 1, f_touchdcstA1083());
		dcStructField(st, 'p', offsetof(union  A1086, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1086, m8), 1);
		dcStructField(st, 's', offsetof(union  A1086, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1086, m10), 1, f_touchdcstA1084());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1086, m11), 1, f_touchdcstA745());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1086, m12), 1, f_touchdcstA1085());
		dcStructField(st, 'f', offsetof(union  A1086, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<dlcf{c}f<lifldldi>pjs{fdsdi}{lf}{isp}f>> */
union  A1087 { union  A1086 m0; };
void f_cpA1087(union  A1087 *x, const union  A1087 *y) { f_cpA1086(&x->m0, &y->m0); };
int f_cmpA1087(const union  A1087 *x, const union  A1087 *y) { return f_cmpA1086(&x->m0, &y->m0); };
DCstruct* f_touchdcstA1087() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(union  A1087), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1087, m0), 1, f_touchdcstA1086());
		dcCloseStruct(st);
	}
	return st;
};
/* <sdjiill> */
union  A1088 { s m0; d m1; j m2; i m3; i m4; l m5; l m6; };
void f_cpA1088(union  A1088 *x, const union  A1088 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1088(const union  A1088 *x, const union  A1088 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1088() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1088), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1088, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1088, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1088, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1088, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1088, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1088, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1088, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pjjjfspspfjiijdllijs> */
union  A1089 { p m0; j m1; j m2; j m3; f m4; s m5; p m6; s m7; p m8; f m9; j m10; i m11; i m12; j m13; d m14; l m15; l m16; i m17; j m18; s m19; };
void f_cpA1089(union  A1089 *x, const union  A1089 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA1089(const union  A1089 *x, const union  A1089 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA1089() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(union  A1089), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1089, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1089, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1089, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1089, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1089, m4), 1);
		dcStructField(st, 's', offsetof(union  A1089, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1089, m6), 1);
		dcStructField(st, 's', offsetof(union  A1089, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1089, m8), 1);
		dcStructField(st, 'f', offsetof(union  A1089, m9), 1);
		dcStructField(st, 'j', offsetof(union  A1089, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1089, m11), 1);
		dcStructField(st, 'i', offsetof(union  A1089, m12), 1);
		dcStructField(st, 'j', offsetof(union  A1089, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1089, m14), 1);
		dcStructField(st, 'l', offsetof(union  A1089, m15), 1);
		dcStructField(st, 'l', offsetof(union  A1089, m16), 1);
		dcStructField(st, 'i', offsetof(union  A1089, m17), 1);
		dcStructField(st, 'j', offsetof(union  A1089, m18), 1);
		dcStructField(st, 's', offsetof(union  A1089, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdjdjc<pjjjfspspfjiijdllijs>ci} */
struct A1090 { p m0; d m1; j m2; d m3; j m4; c m5; union  A1089 m6; c m7; i m8; };
void f_cpA1090(struct A1090 *x, const struct A1090 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA1089(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1090(const struct A1090 *x, const struct A1090 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1089(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1090() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1090), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1090, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1090, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1090, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1090, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1090, m4), 1);
		dcStructField(st, 'c', offsetof(struct A1090, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1090, m6), 1, f_touchdcstA1089());
		dcStructField(st, 'c', offsetof(struct A1090, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1090, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cidp} */
struct A1091 { c m0; i m1; d m2; p m3; };
void f_cpA1091(struct A1091 *x, const struct A1091 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1091(const struct A1091 *x, const struct A1091 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1091() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1091), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1091, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1091, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1091, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1091, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ffflpdpdid{cidp}i> */
union  A1092 { f m0; f m1; f m2; l m3; p m4; d m5; p m6; d m7; i m8; d m9; struct A1091 m10; i m11; };
void f_cpA1092(union  A1092 *x, const union  A1092 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA1091(&x->m10, &y->m10); x->m11 = y->m11; };
int f_cmpA1092(const union  A1092 *x, const union  A1092 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1091(&x->m10, &y->m10) && x->m11 == y->m11; };
DCstruct* f_touchdcstA1092() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1092), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1092, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1092, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1092, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1092, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1092, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1092, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1092, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1092, m7), 1);
		dcStructField(st, 'i', offsetof(union  A1092, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1092, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1092, m10), 1, f_touchdcstA1091());
		dcStructField(st, 'i', offsetof(union  A1092, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<ffflpdpdid{cidp}i>} */
struct A1093 { union  A1092 m0; };
void f_cpA1093(struct A1093 *x, const struct A1093 *y) { f_cpA1092(&x->m0, &y->m0); };
int f_cmpA1093(const struct A1093 *x, const struct A1093 *y) { return f_cmpA1092(&x->m0, &y->m0); };
DCstruct* f_touchdcstA1093() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A1093), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1093, m0), 1, f_touchdcstA1092());
		dcCloseStruct(st);
	}
	return st;
};
/* {jjsspd} */
struct A1094 { j m0; j m1; s m2; s m3; p m4; d m5; };
void f_cpA1094(struct A1094 *x, const struct A1094 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1094(const struct A1094 *x, const struct A1094 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1094() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1094), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1094, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1094, m1), 1);
		dcStructField(st, 's', offsetof(struct A1094, m2), 1);
		dcStructField(st, 's', offsetof(struct A1094, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1094, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1094, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cfp> */
union  A1095 { c m0; f m1; p m2; };
void f_cpA1095(union  A1095 *x, const union  A1095 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1095(const union  A1095 *x, const union  A1095 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1095() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1095), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1095, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1095, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1095, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <flffj<cfp>l<l>p> */
union  A1096 { f m0; l m1; f m2; f m3; j m4; union  A1095 m5; l m6; union  A127 m7; p m8; };
void f_cpA1096(union  A1096 *x, const union  A1096 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1095(&x->m5, &y->m5); x->m6 = y->m6; f_cpA127(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA1096(const union  A1096 *x, const union  A1096 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1095(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA127(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA1096() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1096), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1096, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1096, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1096, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1096, m3), 1);
		dcStructField(st, 'j', offsetof(union  A1096, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1096, m5), 1, f_touchdcstA1095());
		dcStructField(st, 'l', offsetof(union  A1096, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1096, m7), 1, f_touchdcstA127());
		dcStructField(st, 'p', offsetof(union  A1096, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjljl} */
struct A1097 { p m0; j m1; l m2; j m3; l m4; };
void f_cpA1097(struct A1097 *x, const struct A1097 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1097(const struct A1097 *x, const struct A1097 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1097() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1097), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1097, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1097, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1097, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1097, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1097, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ipsslfp} */
struct A1098 { i m0; p m1; s m2; s m3; l m4; f m5; p m6; };
void f_cpA1098(struct A1098 *x, const struct A1098 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1098(const struct A1098 *x, const struct A1098 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1098() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1098), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1098, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1098, m1), 1);
		dcStructField(st, 's', offsetof(struct A1098, m2), 1);
		dcStructField(st, 's', offsetof(struct A1098, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1098, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1098, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1098, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdjsidpfspiipccliccjp> */
union  A1099 { j m0; d m1; j m2; s m3; i m4; d m5; p m6; f m7; s m8; p m9; i m10; i m11; p m12; c m13; c m14; l m15; i m16; c m17; c m18; j m19; p m20; };
void f_cpA1099(union  A1099 *x, const union  A1099 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA1099(const union  A1099 *x, const union  A1099 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA1099() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A1099), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1099, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1099, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1099, m2), 1);
		dcStructField(st, 's', offsetof(union  A1099, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1099, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1099, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1099, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1099, m7), 1);
		dcStructField(st, 's', offsetof(union  A1099, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1099, m9), 1);
		dcStructField(st, 'i', offsetof(union  A1099, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1099, m11), 1);
		dcStructField(st, 'p', offsetof(union  A1099, m12), 1);
		dcStructField(st, 'c', offsetof(union  A1099, m13), 1);
		dcStructField(st, 'c', offsetof(union  A1099, m14), 1);
		dcStructField(st, 'l', offsetof(union  A1099, m15), 1);
		dcStructField(st, 'i', offsetof(union  A1099, m16), 1);
		dcStructField(st, 'c', offsetof(union  A1099, m17), 1);
		dcStructField(st, 'c', offsetof(union  A1099, m18), 1);
		dcStructField(st, 'j', offsetof(union  A1099, m19), 1);
		dcStructField(st, 'p', offsetof(union  A1099, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jlip<jdjsidpfspiipccliccjp>} */
struct A1100 { j m0; l m1; i m2; p m3; union  A1099 m4; };
void f_cpA1100(struct A1100 *x, const struct A1100 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA1099(&x->m4, &y->m4); };
int f_cmpA1100(const struct A1100 *x, const struct A1100 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1099(&x->m4, &y->m4); };
DCstruct* f_touchdcstA1100() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1100), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1100, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1100, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1100, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1100, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1100, m4), 1, f_touchdcstA1099());
		dcCloseStruct(st);
	}
	return st;
};
/* {ccj} */
struct A1101 { c m0; c m1; j m2; };
void f_cpA1101(struct A1101 *x, const struct A1101 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1101(const struct A1101 *x, const struct A1101 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1101() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1101), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1101, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1101, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1101, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lccjlddpl> */
union  A1102 { l m0; c m1; c m2; j m3; l m4; d m5; d m6; p m7; l m8; };
void f_cpA1102(union  A1102 *x, const union  A1102 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1102(const union  A1102 *x, const union  A1102 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1102() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1102), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1102, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1102, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1102, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1102, m3), 1);
		dcStructField(st, 'l', offsetof(union  A1102, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1102, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1102, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1102, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1102, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pjcf<lccjlddpl>jifccil> */
union  A1103 { p m0; j m1; c m2; f m3; union  A1102 m4; j m5; i m6; f m7; c m8; c m9; i m10; l m11; };
void f_cpA1103(union  A1103 *x, const union  A1103 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA1102(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1103(const union  A1103 *x, const union  A1103 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1102(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1103() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1103), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1103, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1103, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1103, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1103, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1103, m4), 1, f_touchdcstA1102());
		dcStructField(st, 'j', offsetof(union  A1103, m5), 1);
		dcStructField(st, 'i', offsetof(union  A1103, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1103, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1103, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1103, m9), 1);
		dcStructField(st, 'i', offsetof(union  A1103, m10), 1);
		dcStructField(st, 'l', offsetof(union  A1103, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ddc> */
union  A1104 { d m0; d m1; c m2; };
void f_cpA1104(union  A1104 *x, const union  A1104 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1104(const union  A1104 *x, const union  A1104 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1104() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1104), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1104, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1104, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1104, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lfils} */
struct A1105 { l m0; f m1; i m2; l m3; s m4; };
void f_cpA1105(struct A1105 *x, const struct A1105 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1105(const struct A1105 *x, const struct A1105 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1105() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1105), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1105, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1105, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1105, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1105, m3), 1);
		dcStructField(st, 's', offsetof(struct A1105, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cif} */
struct A1106 { c m0; i m1; f m2; };
void f_cpA1106(struct A1106 *x, const struct A1106 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1106(const struct A1106 *x, const struct A1106 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1106() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1106), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1106, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1106, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1106, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcdsjdfijsfiillfcldsls> */
union  A1107 { d m0; c m1; d m2; s m3; j m4; d m5; f m6; i m7; j m8; s m9; f m10; i m11; i m12; l m13; l m14; f m15; c m16; l m17; d m18; s m19; l m20; s m21; };
void f_cpA1107(union  A1107 *x, const union  A1107 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; };
int f_cmpA1107(const union  A1107 *x, const union  A1107 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21; };
DCstruct* f_touchdcstA1107() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(union  A1107), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1107, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1107, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1107, m2), 1);
		dcStructField(st, 's', offsetof(union  A1107, m3), 1);
		dcStructField(st, 'j', offsetof(union  A1107, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1107, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1107, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1107, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1107, m8), 1);
		dcStructField(st, 's', offsetof(union  A1107, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1107, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1107, m11), 1);
		dcStructField(st, 'i', offsetof(union  A1107, m12), 1);
		dcStructField(st, 'l', offsetof(union  A1107, m13), 1);
		dcStructField(st, 'l', offsetof(union  A1107, m14), 1);
		dcStructField(st, 'f', offsetof(union  A1107, m15), 1);
		dcStructField(st, 'c', offsetof(union  A1107, m16), 1);
		dcStructField(st, 'l', offsetof(union  A1107, m17), 1);
		dcStructField(st, 'd', offsetof(union  A1107, m18), 1);
		dcStructField(st, 's', offsetof(union  A1107, m19), 1);
		dcStructField(st, 'l', offsetof(union  A1107, m20), 1);
		dcStructField(st, 's', offsetof(union  A1107, m21), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccccil} */
struct A1108 { c m0; c m1; c m2; c m3; i m4; l m5; };
void f_cpA1108(struct A1108 *x, const struct A1108 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1108(const struct A1108 *x, const struct A1108 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1108() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1108), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1108, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1108, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1108, m2), 1);
		dcStructField(st, 'c', offsetof(struct A1108, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1108, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1108, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jjflilcpliciscjscjjcspicjpdjc> */
union  A1109 { j m0; j m1; f m2; l m3; i m4; l m5; c m6; p m7; l m8; i m9; c m10; i m11; s m12; c m13; j m14; s m15; c m16; j m17; j m18; c m19; s m20; p m21; i m22; c m23; j m24; p m25; d m26; j m27; c m28; };
void f_cpA1109(union  A1109 *x, const union  A1109 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA1109(const union  A1109 *x, const union  A1109 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA1109() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(union  A1109), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1109, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1109, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1109, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1109, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1109, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1109, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1109, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1109, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1109, m8), 1);
		dcStructField(st, 'i', offsetof(union  A1109, m9), 1);
		dcStructField(st, 'c', offsetof(union  A1109, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1109, m11), 1);
		dcStructField(st, 's', offsetof(union  A1109, m12), 1);
		dcStructField(st, 'c', offsetof(union  A1109, m13), 1);
		dcStructField(st, 'j', offsetof(union  A1109, m14), 1);
		dcStructField(st, 's', offsetof(union  A1109, m15), 1);
		dcStructField(st, 'c', offsetof(union  A1109, m16), 1);
		dcStructField(st, 'j', offsetof(union  A1109, m17), 1);
		dcStructField(st, 'j', offsetof(union  A1109, m18), 1);
		dcStructField(st, 'c', offsetof(union  A1109, m19), 1);
		dcStructField(st, 's', offsetof(union  A1109, m20), 1);
		dcStructField(st, 'p', offsetof(union  A1109, m21), 1);
		dcStructField(st, 'i', offsetof(union  A1109, m22), 1);
		dcStructField(st, 'c', offsetof(union  A1109, m23), 1);
		dcStructField(st, 'j', offsetof(union  A1109, m24), 1);
		dcStructField(st, 'p', offsetof(union  A1109, m25), 1);
		dcStructField(st, 'd', offsetof(union  A1109, m26), 1);
		dcStructField(st, 'j', offsetof(union  A1109, m27), 1);
		dcStructField(st, 'c', offsetof(union  A1109, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sfljddpdfdi} */
struct A1110 { s m0; f m1; l m2; j m3; d m4; d m5; p m6; d m7; f m8; d m9; i m10; };
void f_cpA1110(struct A1110 *x, const struct A1110 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1110(const struct A1110 *x, const struct A1110 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1110() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A1110), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1110, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1110, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1110, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1110, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1110, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1110, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1110, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1110, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1110, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1110, m9), 1);
		dcStructField(st, 'i', offsetof(struct A1110, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ipllpdcpddjpjdpc> */
union  A1111 { i m0; p m1; l m2; l m3; p m4; d m5; c m6; p m7; d m8; d m9; j m10; p m11; j m12; d m13; p m14; c m15; };
void f_cpA1111(union  A1111 *x, const union  A1111 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA1111(const union  A1111 *x, const union  A1111 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA1111() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A1111), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1111, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1111, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1111, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1111, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1111, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1111, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1111, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1111, m7), 1);
		dcStructField(st, 'd', offsetof(union  A1111, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1111, m9), 1);
		dcStructField(st, 'j', offsetof(union  A1111, m10), 1);
		dcStructField(st, 'p', offsetof(union  A1111, m11), 1);
		dcStructField(st, 'j', offsetof(union  A1111, m12), 1);
		dcStructField(st, 'd', offsetof(union  A1111, m13), 1);
		dcStructField(st, 'p', offsetof(union  A1111, m14), 1);
		dcStructField(st, 'c', offsetof(union  A1111, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sjpslcfdlpjl> */
union  A1112 { s m0; j m1; p m2; s m3; l m4; c m5; f m6; d m7; l m8; p m9; j m10; l m11; };
void f_cpA1112(union  A1112 *x, const union  A1112 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1112(const union  A1112 *x, const union  A1112 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1112() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1112), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1112, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1112, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1112, m2), 1);
		dcStructField(st, 's', offsetof(union  A1112, m3), 1);
		dcStructField(st, 'l', offsetof(union  A1112, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1112, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1112, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1112, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1112, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1112, m9), 1);
		dcStructField(st, 'j', offsetof(union  A1112, m10), 1);
		dcStructField(st, 'l', offsetof(union  A1112, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdjj> */
union  A1113 { c m0; d m1; j m2; j m3; };
void f_cpA1113(union  A1113 *x, const union  A1113 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1113(const union  A1113 *x, const union  A1113 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1113() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1113), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1113, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1113, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1113, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1113, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cisl> */
union  A1114 { c m0; i m1; s m2; l m3; };
void f_cpA1114(union  A1114 *x, const union  A1114 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1114(const union  A1114 *x, const union  A1114 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1114() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1114), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1114, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1114, m1), 1);
		dcStructField(st, 's', offsetof(union  A1114, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1114, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lsddfpjjjjpclfd<ipllpdcpddjpjdpc><sjpslcfdlpjl><cdjj>ccfpcpli<cisl>> */
union  A1115 { l m0; s m1; d m2; d m3; f m4; p m5; j m6; j m7; j m8; j m9; p m10; c m11; l m12; f m13; d m14; union  A1111 m15; union  A1112 m16; union  A1113 m17; c m18; c m19; f m20; p m21; c m22; p m23; l m24; i m25; union  A1114 m26; };
void f_cpA1115(union  A1115 *x, const union  A1115 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA1111(&x->m15, &y->m15); f_cpA1112(&x->m16, &y->m16); f_cpA1113(&x->m17, &y->m17); x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; f_cpA1114(&x->m26, &y->m26); };
int f_cmpA1115(const union  A1115 *x, const union  A1115 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA1111(&x->m15, &y->m15) && f_cmpA1112(&x->m16, &y->m16) && f_cmpA1113(&x->m17, &y->m17) && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && f_cmpA1114(&x->m26, &y->m26); };
DCstruct* f_touchdcstA1115() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(union  A1115), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1115, m0), 1);
		dcStructField(st, 's', offsetof(union  A1115, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1115, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1115, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1115, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1115, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1115, m6), 1);
		dcStructField(st, 'j', offsetof(union  A1115, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1115, m8), 1);
		dcStructField(st, 'j', offsetof(union  A1115, m9), 1);
		dcStructField(st, 'p', offsetof(union  A1115, m10), 1);
		dcStructField(st, 'c', offsetof(union  A1115, m11), 1);
		dcStructField(st, 'l', offsetof(union  A1115, m12), 1);
		dcStructField(st, 'f', offsetof(union  A1115, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1115, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1115, m15), 1, f_touchdcstA1111());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1115, m16), 1, f_touchdcstA1112());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1115, m17), 1, f_touchdcstA1113());
		dcStructField(st, 'c', offsetof(union  A1115, m18), 1);
		dcStructField(st, 'c', offsetof(union  A1115, m19), 1);
		dcStructField(st, 'f', offsetof(union  A1115, m20), 1);
		dcStructField(st, 'p', offsetof(union  A1115, m21), 1);
		dcStructField(st, 'c', offsetof(union  A1115, m22), 1);
		dcStructField(st, 'p', offsetof(union  A1115, m23), 1);
		dcStructField(st, 'l', offsetof(union  A1115, m24), 1);
		dcStructField(st, 'i', offsetof(union  A1115, m25), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1115, m26), 1, f_touchdcstA1114());
		dcCloseStruct(st);
	}
	return st;
};
/* {dlpfdp} */
struct A1116 { d m0; l m1; p m2; f m3; d m4; p m5; };
void f_cpA1116(struct A1116 *x, const struct A1116 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1116(const struct A1116 *x, const struct A1116 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1116() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1116), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1116, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1116, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1116, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1116, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1116, m4), 1);
		dcStructField(st, 'p', offsetof(struct A1116, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjcfiscp} */
struct A1117 { c m0; j m1; c m2; f m3; i m4; s m5; c m6; p m7; };
void f_cpA1117(struct A1117 *x, const struct A1117 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1117(const struct A1117 *x, const struct A1117 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1117() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A1117), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1117, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1117, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1117, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1117, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1117, m4), 1);
		dcStructField(st, 's', offsetof(struct A1117, m5), 1);
		dcStructField(st, 'c', offsetof(struct A1117, m6), 1);
		dcStructField(st, 'p', offsetof(struct A1117, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {s{cjcfiscp}j} */
struct A1118 { s m0; struct A1117 m1; j m2; };
void f_cpA1118(struct A1118 *x, const struct A1118 *y) { x->m0 = y->m0; f_cpA1117(&x->m1, &y->m1); x->m2 = y->m2; };
int f_cmpA1118(const struct A1118 *x, const struct A1118 *y) { return x->m0 == y->m0 && f_cmpA1117(&x->m1, &y->m1) && x->m2 == y->m2; };
DCstruct* f_touchdcstA1118() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1118), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1118, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1118, m1), 1, f_touchdcstA1117());
		dcStructField(st, 'j', offsetof(struct A1118, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isisl} */
struct A1119 { i m0; s m1; i m2; s m3; l m4; };
void f_cpA1119(struct A1119 *x, const struct A1119 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1119(const struct A1119 *x, const struct A1119 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1119() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1119), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1119, m0), 1);
		dcStructField(st, 's', offsetof(struct A1119, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1119, m2), 1);
		dcStructField(st, 's', offsetof(struct A1119, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1119, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cdlsifjfccslijisjjjiildcjc> */
union  A1120 { c m0; d m1; l m2; s m3; i m4; f m5; j m6; f m7; c m8; c m9; s m10; l m11; i m12; j m13; i m14; s m15; j m16; j m17; j m18; i m19; i m20; l m21; d m22; c m23; j m24; c m25; };
void f_cpA1120(union  A1120 *x, const union  A1120 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA1120(const union  A1120 *x, const union  A1120 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA1120() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(union  A1120), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1120, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1120, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1120, m2), 1);
		dcStructField(st, 's', offsetof(union  A1120, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1120, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1120, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1120, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1120, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1120, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1120, m9), 1);
		dcStructField(st, 's', offsetof(union  A1120, m10), 1);
		dcStructField(st, 'l', offsetof(union  A1120, m11), 1);
		dcStructField(st, 'i', offsetof(union  A1120, m12), 1);
		dcStructField(st, 'j', offsetof(union  A1120, m13), 1);
		dcStructField(st, 'i', offsetof(union  A1120, m14), 1);
		dcStructField(st, 's', offsetof(union  A1120, m15), 1);
		dcStructField(st, 'j', offsetof(union  A1120, m16), 1);
		dcStructField(st, 'j', offsetof(union  A1120, m17), 1);
		dcStructField(st, 'j', offsetof(union  A1120, m18), 1);
		dcStructField(st, 'i', offsetof(union  A1120, m19), 1);
		dcStructField(st, 'i', offsetof(union  A1120, m20), 1);
		dcStructField(st, 'l', offsetof(union  A1120, m21), 1);
		dcStructField(st, 'd', offsetof(union  A1120, m22), 1);
		dcStructField(st, 'c', offsetof(union  A1120, m23), 1);
		dcStructField(st, 'j', offsetof(union  A1120, m24), 1);
		dcStructField(st, 'c', offsetof(union  A1120, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcpslsijdppjifs} */
struct A1121 { j m0; c m1; p m2; s m3; l m4; s m5; i m6; j m7; d m8; p m9; p m10; j m11; i m12; f m13; s m14; };
void f_cpA1121(struct A1121 *x, const struct A1121 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA1121(const struct A1121 *x, const struct A1121 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA1121() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(struct A1121), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1121, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1121, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1121, m2), 1);
		dcStructField(st, 's', offsetof(struct A1121, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1121, m4), 1);
		dcStructField(st, 's', offsetof(struct A1121, m5), 1);
		dcStructField(st, 'i', offsetof(struct A1121, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1121, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1121, m8), 1);
		dcStructField(st, 'p', offsetof(struct A1121, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1121, m10), 1);
		dcStructField(st, 'j', offsetof(struct A1121, m11), 1);
		dcStructField(st, 'i', offsetof(struct A1121, m12), 1);
		dcStructField(st, 'f', offsetof(struct A1121, m13), 1);
		dcStructField(st, 's', offsetof(struct A1121, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fisijc> */
union  A1122 { f m0; i m1; s m2; i m3; j m4; c m5; };
void f_cpA1122(union  A1122 *x, const union  A1122 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1122(const union  A1122 *x, const union  A1122 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1122() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1122), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1122, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1122, m1), 1);
		dcStructField(st, 's', offsetof(union  A1122, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1122, m3), 1);
		dcStructField(st, 'j', offsetof(union  A1122, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1122, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcd{jcpslsijdppjifs}s<fisijc>djdd} */
struct A1123 { d m0; c m1; d m2; struct A1121 m3; s m4; union  A1122 m5; d m6; j m7; d m8; d m9; };
void f_cpA1123(struct A1123 *x, const struct A1123 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1121(&x->m3, &y->m3); x->m4 = y->m4; f_cpA1122(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1123(const struct A1123 *x, const struct A1123 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1121(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1122(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1123() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A1123), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1123, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1123, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1123, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1123, m3), 1, f_touchdcstA1121());
		dcStructField(st, 's', offsetof(struct A1123, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1123, m5), 1, f_touchdcstA1122());
		dcStructField(st, 'd', offsetof(struct A1123, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1123, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1123, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1123, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jcidplpcjssifsdippdilifiiisiidjpdf} */
struct A1124 { j m0; c m1; i m2; d m3; p m4; l m5; p m6; c m7; j m8; s m9; s m10; i m11; f m12; s m13; d m14; i m15; p m16; p m17; d m18; i m19; l m20; i m21; f m22; i m23; i m24; i m25; s m26; i m27; i m28; d m29; j m30; p m31; d m32; f m33; };
void f_cpA1124(struct A1124 *x, const struct A1124 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; };
int f_cmpA1124(const struct A1124 *x, const struct A1124 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33; };
DCstruct* f_touchdcstA1124() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(34, sizeof(struct A1124), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1124, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1124, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1124, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1124, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1124, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1124, m6), 1);
		dcStructField(st, 'c', offsetof(struct A1124, m7), 1);
		dcStructField(st, 'j', offsetof(struct A1124, m8), 1);
		dcStructField(st, 's', offsetof(struct A1124, m9), 1);
		dcStructField(st, 's', offsetof(struct A1124, m10), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1124, m12), 1);
		dcStructField(st, 's', offsetof(struct A1124, m13), 1);
		dcStructField(st, 'd', offsetof(struct A1124, m14), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m15), 1);
		dcStructField(st, 'p', offsetof(struct A1124, m16), 1);
		dcStructField(st, 'p', offsetof(struct A1124, m17), 1);
		dcStructField(st, 'd', offsetof(struct A1124, m18), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m19), 1);
		dcStructField(st, 'l', offsetof(struct A1124, m20), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m21), 1);
		dcStructField(st, 'f', offsetof(struct A1124, m22), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m23), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m24), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m25), 1);
		dcStructField(st, 's', offsetof(struct A1124, m26), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m27), 1);
		dcStructField(st, 'i', offsetof(struct A1124, m28), 1);
		dcStructField(st, 'd', offsetof(struct A1124, m29), 1);
		dcStructField(st, 'j', offsetof(struct A1124, m30), 1);
		dcStructField(st, 'p', offsetof(struct A1124, m31), 1);
		dcStructField(st, 'd', offsetof(struct A1124, m32), 1);
		dcStructField(st, 'f', offsetof(struct A1124, m33), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dfllsjffpc} */
struct A1125 { d m0; f m1; l m2; l m3; s m4; j m5; f m6; f m7; p m8; c m9; };
void f_cpA1125(struct A1125 *x, const struct A1125 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1125(const struct A1125 *x, const struct A1125 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1125() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A1125), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1125, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1125, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1125, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1125, m3), 1);
		dcStructField(st, 's', offsetof(struct A1125, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1125, m5), 1);
		dcStructField(st, 'f', offsetof(struct A1125, m6), 1);
		dcStructField(st, 'f', offsetof(struct A1125, m7), 1);
		dcStructField(st, 'p', offsetof(struct A1125, m8), 1);
		dcStructField(st, 'c', offsetof(struct A1125, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dfljfpd<j>s> */
union  A1126 { d m0; f m1; l m2; j m3; f m4; p m5; d m6; union  A47 m7; s m8; };
void f_cpA1126(union  A1126 *x, const union  A1126 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA47(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA1126(const union  A1126 *x, const union  A1126 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA47(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA1126() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1126), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1126, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1126, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1126, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1126, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1126, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1126, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1126, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1126, m7), 1, f_touchdcstA47());
		dcStructField(st, 's', offsetof(union  A1126, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ifjsdlisjdfl> */
union  A1127 { i m0; f m1; j m2; s m3; d m4; l m5; i m6; s m7; j m8; d m9; f m10; l m11; };
void f_cpA1127(union  A1127 *x, const union  A1127 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1127(const union  A1127 *x, const union  A1127 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1127() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1127), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1127, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1127, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1127, m2), 1);
		dcStructField(st, 's', offsetof(union  A1127, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1127, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1127, m5), 1);
		dcStructField(st, 'i', offsetof(union  A1127, m6), 1);
		dcStructField(st, 's', offsetof(union  A1127, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1127, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1127, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1127, m10), 1);
		dcStructField(st, 'l', offsetof(union  A1127, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <idifpdspfjdscjdcjpl> */
union  A1128 { i m0; d m1; i m2; f m3; p m4; d m5; s m6; p m7; f m8; j m9; d m10; s m11; c m12; j m13; d m14; c m15; j m16; p m17; l m18; };
void f_cpA1128(union  A1128 *x, const union  A1128 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA1128(const union  A1128 *x, const union  A1128 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA1128() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A1128), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1128, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1128, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1128, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1128, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1128, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1128, m5), 1);
		dcStructField(st, 's', offsetof(union  A1128, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1128, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1128, m8), 1);
		dcStructField(st, 'j', offsetof(union  A1128, m9), 1);
		dcStructField(st, 'd', offsetof(union  A1128, m10), 1);
		dcStructField(st, 's', offsetof(union  A1128, m11), 1);
		dcStructField(st, 'c', offsetof(union  A1128, m12), 1);
		dcStructField(st, 'j', offsetof(union  A1128, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1128, m14), 1);
		dcStructField(st, 'c', offsetof(union  A1128, m15), 1);
		dcStructField(st, 'j', offsetof(union  A1128, m16), 1);
		dcStructField(st, 'p', offsetof(union  A1128, m17), 1);
		dcStructField(st, 'l', offsetof(union  A1128, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idfpjldjfjislpsdpplllfccljlsiisdisddpcspf} */
struct A1129 { i m0; d m1; f m2; p m3; j m4; l m5; d m6; j m7; f m8; j m9; i m10; s m11; l m12; p m13; s m14; d m15; p m16; p m17; l m18; l m19; l m20; f m21; c m22; c m23; l m24; j m25; l m26; s m27; i m28; i m29; s m30; d m31; i m32; s m33; d m34; d m35; p m36; c m37; s m38; p m39; f m40; };
void f_cpA1129(struct A1129 *x, const struct A1129 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; };
int f_cmpA1129(const struct A1129 *x, const struct A1129 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40; };
DCstruct* f_touchdcstA1129() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(41, sizeof(struct A1129), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1129, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1129, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1129, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1129, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1129, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1129, m5), 1);
		dcStructField(st, 'd', offsetof(struct A1129, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1129, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1129, m8), 1);
		dcStructField(st, 'j', offsetof(struct A1129, m9), 1);
		dcStructField(st, 'i', offsetof(struct A1129, m10), 1);
		dcStructField(st, 's', offsetof(struct A1129, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1129, m12), 1);
		dcStructField(st, 'p', offsetof(struct A1129, m13), 1);
		dcStructField(st, 's', offsetof(struct A1129, m14), 1);
		dcStructField(st, 'd', offsetof(struct A1129, m15), 1);
		dcStructField(st, 'p', offsetof(struct A1129, m16), 1);
		dcStructField(st, 'p', offsetof(struct A1129, m17), 1);
		dcStructField(st, 'l', offsetof(struct A1129, m18), 1);
		dcStructField(st, 'l', offsetof(struct A1129, m19), 1);
		dcStructField(st, 'l', offsetof(struct A1129, m20), 1);
		dcStructField(st, 'f', offsetof(struct A1129, m21), 1);
		dcStructField(st, 'c', offsetof(struct A1129, m22), 1);
		dcStructField(st, 'c', offsetof(struct A1129, m23), 1);
		dcStructField(st, 'l', offsetof(struct A1129, m24), 1);
		dcStructField(st, 'j', offsetof(struct A1129, m25), 1);
		dcStructField(st, 'l', offsetof(struct A1129, m26), 1);
		dcStructField(st, 's', offsetof(struct A1129, m27), 1);
		dcStructField(st, 'i', offsetof(struct A1129, m28), 1);
		dcStructField(st, 'i', offsetof(struct A1129, m29), 1);
		dcStructField(st, 's', offsetof(struct A1129, m30), 1);
		dcStructField(st, 'd', offsetof(struct A1129, m31), 1);
		dcStructField(st, 'i', offsetof(struct A1129, m32), 1);
		dcStructField(st, 's', offsetof(struct A1129, m33), 1);
		dcStructField(st, 'd', offsetof(struct A1129, m34), 1);
		dcStructField(st, 'd', offsetof(struct A1129, m35), 1);
		dcStructField(st, 'p', offsetof(struct A1129, m36), 1);
		dcStructField(st, 'c', offsetof(struct A1129, m37), 1);
		dcStructField(st, 's', offsetof(struct A1129, m38), 1);
		dcStructField(st, 'p', offsetof(struct A1129, m39), 1);
		dcStructField(st, 'f', offsetof(struct A1129, m40), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sfsj<idifpdspfjdscjdcjpl>{idfpjldjfjislpsdpplllfccljlsiisdisddpcspf}fpds> */
union  A1130 { s m0; f m1; s m2; j m3; union  A1128 m4; struct A1129 m5; f m6; p m7; d m8; s m9; };
void f_cpA1130(union  A1130 *x, const union  A1130 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA1128(&x->m4, &y->m4); f_cpA1129(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1130(const union  A1130 *x, const union  A1130 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1128(&x->m4, &y->m4) && f_cmpA1129(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1130() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1130), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1130, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1130, m1), 1);
		dcStructField(st, 's', offsetof(union  A1130, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1130, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1130, m4), 1, f_touchdcstA1128());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1130, m5), 1, f_touchdcstA1129());
		dcStructField(st, 'f', offsetof(union  A1130, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1130, m7), 1);
		dcStructField(st, 'd', offsetof(union  A1130, m8), 1);
		dcStructField(st, 's', offsetof(union  A1130, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fi<sfsj<idifpdspfjdscjdcjpl>{idfpjldjfjislpsdpplllfccljlsiisdisddpcspf}fpds>iicli> */
union  A1131 { f m0; i m1; union  A1130 m2; i m3; i m4; c m5; l m6; i m7; };
void f_cpA1131(union  A1131 *x, const union  A1131 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1130(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1131(const union  A1131 *x, const union  A1131 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1130(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1131() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A1131), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1131, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1131, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1131, m2), 1, f_touchdcstA1130());
		dcStructField(st, 'i', offsetof(union  A1131, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1131, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1131, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1131, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1131, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fjpfiili} */
struct A1132 { f m0; j m1; p m2; f m3; i m4; i m5; l m6; i m7; };
void f_cpA1132(struct A1132 *x, const struct A1132 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1132(const struct A1132 *x, const struct A1132 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1132() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A1132), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1132, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1132, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1132, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1132, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1132, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1132, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1132, m6), 1);
		dcStructField(st, 'i', offsetof(struct A1132, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <idcicsslsfipjpspf> */
union  A1133 { i m0; d m1; c m2; i m3; c m4; s m5; s m6; l m7; s m8; f m9; i m10; p m11; j m12; p m13; s m14; p m15; f m16; };
void f_cpA1133(union  A1133 *x, const union  A1133 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA1133(const union  A1133 *x, const union  A1133 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA1133() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(union  A1133), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1133, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1133, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1133, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1133, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1133, m4), 1);
		dcStructField(st, 's', offsetof(union  A1133, m5), 1);
		dcStructField(st, 's', offsetof(union  A1133, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1133, m7), 1);
		dcStructField(st, 's', offsetof(union  A1133, m8), 1);
		dcStructField(st, 'f', offsetof(union  A1133, m9), 1);
		dcStructField(st, 'i', offsetof(union  A1133, m10), 1);
		dcStructField(st, 'p', offsetof(union  A1133, m11), 1);
		dcStructField(st, 'j', offsetof(union  A1133, m12), 1);
		dcStructField(st, 'p', offsetof(union  A1133, m13), 1);
		dcStructField(st, 's', offsetof(union  A1133, m14), 1);
		dcStructField(st, 'p', offsetof(union  A1133, m15), 1);
		dcStructField(st, 'f', offsetof(union  A1133, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lpclcscsjlcjfflf} */
struct A1134 { l m0; p m1; c m2; l m3; c m4; s m5; c m6; s m7; j m8; l m9; c m10; j m11; f m12; f m13; l m14; f m15; };
void f_cpA1134(struct A1134 *x, const struct A1134 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; };
int f_cmpA1134(const struct A1134 *x, const struct A1134 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15; };
DCstruct* f_touchdcstA1134() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A1134), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1134, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1134, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1134, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1134, m3), 1);
		dcStructField(st, 'c', offsetof(struct A1134, m4), 1);
		dcStructField(st, 's', offsetof(struct A1134, m5), 1);
		dcStructField(st, 'c', offsetof(struct A1134, m6), 1);
		dcStructField(st, 's', offsetof(struct A1134, m7), 1);
		dcStructField(st, 'j', offsetof(struct A1134, m8), 1);
		dcStructField(st, 'l', offsetof(struct A1134, m9), 1);
		dcStructField(st, 'c', offsetof(struct A1134, m10), 1);
		dcStructField(st, 'j', offsetof(struct A1134, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1134, m12), 1);
		dcStructField(st, 'f', offsetof(struct A1134, m13), 1);
		dcStructField(st, 'l', offsetof(struct A1134, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1134, m15), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<idcicsslsfipjpspf>{lpclcscsjlcjfflf}> */
union  A1135 { union  A1133 m0; struct A1134 m1; };
void f_cpA1135(union  A1135 *x, const union  A1135 *y) { f_cpA1133(&x->m0, &y->m0); f_cpA1134(&x->m1, &y->m1); };
int f_cmpA1135(const union  A1135 *x, const union  A1135 *y) { return f_cmpA1133(&x->m0, &y->m0) && f_cmpA1134(&x->m1, &y->m1); };
DCstruct* f_touchdcstA1135() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1135), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1135, m0), 1, f_touchdcstA1133());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1135, m1), 1, f_touchdcstA1134());
		dcCloseStruct(st);
	}
	return st;
};
/* <fifcp> */
union  A1136 { f m0; i m1; f m2; c m3; p m4; };
void f_cpA1136(union  A1136 *x, const union  A1136 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1136(const union  A1136 *x, const union  A1136 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1136() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1136), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1136, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1136, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1136, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1136, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1136, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jsfsflciilp> */
union  A1137 { j m0; s m1; f m2; s m3; f m4; l m5; c m6; i m7; i m8; l m9; p m10; };
void f_cpA1137(union  A1137 *x, const union  A1137 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1137(const union  A1137 *x, const union  A1137 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1137() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1137), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1137, m0), 1);
		dcStructField(st, 's', offsetof(union  A1137, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1137, m2), 1);
		dcStructField(st, 's', offsetof(union  A1137, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1137, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1137, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1137, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1137, m7), 1);
		dcStructField(st, 'i', offsetof(union  A1137, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1137, m9), 1);
		dcStructField(st, 'p', offsetof(union  A1137, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sci> */
union  A1138 { s m0; c m1; i m2; };
void f_cpA1138(union  A1138 *x, const union  A1138 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1138(const union  A1138 *x, const union  A1138 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1138() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1138), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1138, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1138, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1138, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cccfsj> */
union  A1139 { c m0; c m1; c m2; f m3; s m4; j m5; };
void f_cpA1139(union  A1139 *x, const union  A1139 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1139(const union  A1139 *x, const union  A1139 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1139() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1139), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1139, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1139, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1139, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1139, m3), 1);
		dcStructField(st, 's', offsetof(union  A1139, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1139, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<cccfsj>i{fd}> */
union  A1140 { union  A1139 m0; i m1; struct A981 m2; };
void f_cpA1140(union  A1140 *x, const union  A1140 *y) { f_cpA1139(&x->m0, &y->m0); x->m1 = y->m1; f_cpA981(&x->m2, &y->m2); };
int f_cmpA1140(const union  A1140 *x, const union  A1140 *y) { return f_cmpA1139(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA981(&x->m2, &y->m2); };
DCstruct* f_touchdcstA1140() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1140), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1140, m0), 1, f_touchdcstA1139());
		dcStructField(st, 'i', offsetof(union  A1140, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1140, m2), 1, f_touchdcstA981());
		dcCloseStruct(st);
	}
	return st;
};
/* {dfcsspp} */
struct A1141 { d m0; f m1; c m2; s m3; s m4; p m5; p m6; };
void f_cpA1141(struct A1141 *x, const struct A1141 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1141(const struct A1141 *x, const struct A1141 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1141() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1141), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1141, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1141, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1141, m2), 1);
		dcStructField(st, 's', offsetof(struct A1141, m3), 1);
		dcStructField(st, 's', offsetof(struct A1141, m4), 1);
		dcStructField(st, 'p', offsetof(struct A1141, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1141, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljlcc} */
struct A1142 { l m0; j m1; l m2; c m3; c m4; };
void f_cpA1142(struct A1142 *x, const struct A1142 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1142(const struct A1142 *x, const struct A1142 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1142() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1142), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1142, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1142, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1142, m2), 1);
		dcStructField(st, 'c', offsetof(struct A1142, m3), 1);
		dcStructField(st, 'c', offsetof(struct A1142, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djic> */
union  A1143 { d m0; j m1; i m2; c m3; };
void f_cpA1143(union  A1143 *x, const union  A1143 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1143(const union  A1143 *x, const union  A1143 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1143() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1143), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1143, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1143, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1143, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1143, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ld> */
union  A1144 { l m0; d m1; };
void f_cpA1144(union  A1144 *x, const union  A1144 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1144(const union  A1144 *x, const union  A1144 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1144() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1144), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1144, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1144, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <licfp<djic>iiclpcs{i}<ld>> */
union  A1145 { l m0; i m1; c m2; f m3; p m4; union  A1143 m5; i m6; i m7; c m8; l m9; p m10; c m11; s m12; struct A71 m13; union  A1144 m14; };
void f_cpA1145(union  A1145 *x, const union  A1145 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1143(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA71(&x->m13, &y->m13); f_cpA1144(&x->m14, &y->m14); };
int f_cmpA1145(const union  A1145 *x, const union  A1145 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1143(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA71(&x->m13, &y->m13) && f_cmpA1144(&x->m14, &y->m14); };
DCstruct* f_touchdcstA1145() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A1145), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1145, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1145, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1145, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1145, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1145, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1145, m5), 1, f_touchdcstA1143());
		dcStructField(st, 'i', offsetof(union  A1145, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1145, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1145, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1145, m9), 1);
		dcStructField(st, 'p', offsetof(union  A1145, m10), 1);
		dcStructField(st, 'c', offsetof(union  A1145, m11), 1);
		dcStructField(st, 's', offsetof(union  A1145, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1145, m13), 1, f_touchdcstA71());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1145, m14), 1, f_touchdcstA1144());
		dcCloseStruct(st);
	}
	return st;
};
/* <sjcpsl{l}iil> */
union  A1146 { s m0; j m1; c m2; p m3; s m4; l m5; struct A51 m6; i m7; i m8; l m9; };
void f_cpA1146(union  A1146 *x, const union  A1146 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA51(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1146(const union  A1146 *x, const union  A1146 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA51(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1146() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1146), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1146, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1146, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1146, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1146, m3), 1);
		dcStructField(st, 's', offsetof(union  A1146, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1146, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1146, m6), 1, f_touchdcstA51());
		dcStructField(st, 'i', offsetof(union  A1146, m7), 1);
		dcStructField(st, 'i', offsetof(union  A1146, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1146, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pdipiilscjcldlpcfscidddi} */
struct A1147 { p m0; d m1; i m2; p m3; i m4; i m5; l m6; s m7; c m8; j m9; c m10; l m11; d m12; l m13; p m14; c m15; f m16; s m17; c m18; i m19; d m20; d m21; d m22; i m23; };
void f_cpA1147(struct A1147 *x, const struct A1147 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA1147(const struct A1147 *x, const struct A1147 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA1147() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A1147), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1147, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1147, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1147, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1147, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1147, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1147, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1147, m6), 1);
		dcStructField(st, 's', offsetof(struct A1147, m7), 1);
		dcStructField(st, 'c', offsetof(struct A1147, m8), 1);
		dcStructField(st, 'j', offsetof(struct A1147, m9), 1);
		dcStructField(st, 'c', offsetof(struct A1147, m10), 1);
		dcStructField(st, 'l', offsetof(struct A1147, m11), 1);
		dcStructField(st, 'd', offsetof(struct A1147, m12), 1);
		dcStructField(st, 'l', offsetof(struct A1147, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1147, m14), 1);
		dcStructField(st, 'c', offsetof(struct A1147, m15), 1);
		dcStructField(st, 'f', offsetof(struct A1147, m16), 1);
		dcStructField(st, 's', offsetof(struct A1147, m17), 1);
		dcStructField(st, 'c', offsetof(struct A1147, m18), 1);
		dcStructField(st, 'i', offsetof(struct A1147, m19), 1);
		dcStructField(st, 'd', offsetof(struct A1147, m20), 1);
		dcStructField(st, 'd', offsetof(struct A1147, m21), 1);
		dcStructField(st, 'd', offsetof(struct A1147, m22), 1);
		dcStructField(st, 'i', offsetof(struct A1147, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jplidlspdcjllc} */
struct A1148 { j m0; p m1; l m2; i m3; d m4; l m5; s m6; p m7; d m8; c m9; j m10; l m11; l m12; c m13; };
void f_cpA1148(struct A1148 *x, const struct A1148 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA1148(const struct A1148 *x, const struct A1148 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA1148() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A1148), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1148, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1148, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1148, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1148, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1148, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1148, m5), 1);
		dcStructField(st, 's', offsetof(struct A1148, m6), 1);
		dcStructField(st, 'p', offsetof(struct A1148, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1148, m8), 1);
		dcStructField(st, 'c', offsetof(struct A1148, m9), 1);
		dcStructField(st, 'j', offsetof(struct A1148, m10), 1);
		dcStructField(st, 'l', offsetof(struct A1148, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1148, m12), 1);
		dcStructField(st, 'c', offsetof(struct A1148, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dsisscdd> */
union  A1149 { d m0; s m1; i m2; s m3; s m4; c m5; d m6; d m7; };
void f_cpA1149(union  A1149 *x, const union  A1149 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1149(const union  A1149 *x, const union  A1149 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1149() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(union  A1149), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1149, m0), 1);
		dcStructField(st, 's', offsetof(union  A1149, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1149, m2), 1);
		dcStructField(st, 's', offsetof(union  A1149, m3), 1);
		dcStructField(st, 's', offsetof(union  A1149, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1149, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1149, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1149, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pjisjlsjdj} */
struct A1150 { p m0; j m1; i m2; s m3; j m4; l m5; s m6; j m7; d m8; j m9; };
void f_cpA1150(struct A1150 *x, const struct A1150 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1150(const struct A1150 *x, const struct A1150 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1150() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A1150), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1150, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1150, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1150, m2), 1);
		dcStructField(st, 's', offsetof(struct A1150, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1150, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1150, m5), 1);
		dcStructField(st, 's', offsetof(struct A1150, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1150, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1150, m8), 1);
		dcStructField(st, 'j', offsetof(struct A1150, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcpjjllcldcsifcclssllifdpllcljfdfcfdpidfcscfslicpj> */
union  A1151 { f m0; c m1; p m2; j m3; j m4; l m5; l m6; c m7; l m8; d m9; c m10; s m11; i m12; f m13; c m14; c m15; l m16; s m17; s m18; l m19; l m20; i m21; f m22; d m23; p m24; l m25; l m26; c m27; l m28; j m29; f m30; d m31; f m32; c m33; f m34; d m35; p m36; i m37; d m38; f m39; c m40; s m41; c m42; f m43; s m44; l m45; i m46; c m47; p m48; j m49; };
void f_cpA1151(union  A1151 *x, const union  A1151 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; x->m41 = y->m41; x->m42 = y->m42; x->m43 = y->m43; x->m44 = y->m44; x->m45 = y->m45; x->m46 = y->m46; x->m47 = y->m47; x->m48 = y->m48; x->m49 = y->m49; };
int f_cmpA1151(const union  A1151 *x, const union  A1151 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40 && x->m41 == y->m41 && x->m42 == y->m42 && x->m43 == y->m43 && x->m44 == y->m44 && x->m45 == y->m45 && x->m46 == y->m46 && x->m47 == y->m47 && x->m48 == y->m48 && x->m49 == y->m49; };
DCstruct* f_touchdcstA1151() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(50, sizeof(union  A1151), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1151, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1151, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1151, m3), 1);
		dcStructField(st, 'j', offsetof(union  A1151, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m6), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1151, m9), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m10), 1);
		dcStructField(st, 's', offsetof(union  A1151, m11), 1);
		dcStructField(st, 'i', offsetof(union  A1151, m12), 1);
		dcStructField(st, 'f', offsetof(union  A1151, m13), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m14), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m15), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m16), 1);
		dcStructField(st, 's', offsetof(union  A1151, m17), 1);
		dcStructField(st, 's', offsetof(union  A1151, m18), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m19), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m20), 1);
		dcStructField(st, 'i', offsetof(union  A1151, m21), 1);
		dcStructField(st, 'f', offsetof(union  A1151, m22), 1);
		dcStructField(st, 'd', offsetof(union  A1151, m23), 1);
		dcStructField(st, 'p', offsetof(union  A1151, m24), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m25), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m26), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m27), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m28), 1);
		dcStructField(st, 'j', offsetof(union  A1151, m29), 1);
		dcStructField(st, 'f', offsetof(union  A1151, m30), 1);
		dcStructField(st, 'd', offsetof(union  A1151, m31), 1);
		dcStructField(st, 'f', offsetof(union  A1151, m32), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m33), 1);
		dcStructField(st, 'f', offsetof(union  A1151, m34), 1);
		dcStructField(st, 'd', offsetof(union  A1151, m35), 1);
		dcStructField(st, 'p', offsetof(union  A1151, m36), 1);
		dcStructField(st, 'i', offsetof(union  A1151, m37), 1);
		dcStructField(st, 'd', offsetof(union  A1151, m38), 1);
		dcStructField(st, 'f', offsetof(union  A1151, m39), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m40), 1);
		dcStructField(st, 's', offsetof(union  A1151, m41), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m42), 1);
		dcStructField(st, 'f', offsetof(union  A1151, m43), 1);
		dcStructField(st, 's', offsetof(union  A1151, m44), 1);
		dcStructField(st, 'l', offsetof(union  A1151, m45), 1);
		dcStructField(st, 'i', offsetof(union  A1151, m46), 1);
		dcStructField(st, 'c', offsetof(union  A1151, m47), 1);
		dcStructField(st, 'p', offsetof(union  A1151, m48), 1);
		dcStructField(st, 'j', offsetof(union  A1151, m49), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jpcff{jplidlspdcjllc}p<dsisscdd>sss{pjisjlsjdj}silipplpscissji<fcpjjllcldcsifcclssllifdpllcljfdfcfdpidfcscfslicpj>ds> */
union  A1152 { j m0; p m1; c m2; f m3; f m4; struct A1148 m5; p m6; union  A1149 m7; s m8; s m9; s m10; struct A1150 m11; s m12; i m13; l m14; i m15; p m16; p m17; l m18; p m19; s m20; c m21; i m22; s m23; s m24; j m25; i m26; union  A1151 m27; d m28; s m29; };
void f_cpA1152(union  A1152 *x, const union  A1152 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1148(&x->m5, &y->m5); x->m6 = y->m6; f_cpA1149(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA1150(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; f_cpA1151(&x->m27, &y->m27); x->m28 = y->m28; x->m29 = y->m29; };
int f_cmpA1152(const union  A1152 *x, const union  A1152 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1148(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA1149(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1150(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && f_cmpA1151(&x->m27, &y->m27) && x->m28 == y->m28 && x->m29 == y->m29; };
DCstruct* f_touchdcstA1152() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(30, sizeof(union  A1152), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1152, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1152, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1152, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1152, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1152, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1152, m5), 1, f_touchdcstA1148());
		dcStructField(st, 'p', offsetof(union  A1152, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1152, m7), 1, f_touchdcstA1149());
		dcStructField(st, 's', offsetof(union  A1152, m8), 1);
		dcStructField(st, 's', offsetof(union  A1152, m9), 1);
		dcStructField(st, 's', offsetof(union  A1152, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1152, m11), 1, f_touchdcstA1150());
		dcStructField(st, 's', offsetof(union  A1152, m12), 1);
		dcStructField(st, 'i', offsetof(union  A1152, m13), 1);
		dcStructField(st, 'l', offsetof(union  A1152, m14), 1);
		dcStructField(st, 'i', offsetof(union  A1152, m15), 1);
		dcStructField(st, 'p', offsetof(union  A1152, m16), 1);
		dcStructField(st, 'p', offsetof(union  A1152, m17), 1);
		dcStructField(st, 'l', offsetof(union  A1152, m18), 1);
		dcStructField(st, 'p', offsetof(union  A1152, m19), 1);
		dcStructField(st, 's', offsetof(union  A1152, m20), 1);
		dcStructField(st, 'c', offsetof(union  A1152, m21), 1);
		dcStructField(st, 'i', offsetof(union  A1152, m22), 1);
		dcStructField(st, 's', offsetof(union  A1152, m23), 1);
		dcStructField(st, 's', offsetof(union  A1152, m24), 1);
		dcStructField(st, 'j', offsetof(union  A1152, m25), 1);
		dcStructField(st, 'i', offsetof(union  A1152, m26), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1152, m27), 1, f_touchdcstA1151());
		dcStructField(st, 'd', offsetof(union  A1152, m28), 1);
		dcStructField(st, 's', offsetof(union  A1152, m29), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sdifddd> */
union  A1153 { s m0; d m1; i m2; f m3; d m4; d m5; d m6; };
void f_cpA1153(union  A1153 *x, const union  A1153 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1153(const union  A1153 *x, const union  A1153 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1153() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1153), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1153, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1153, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1153, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1153, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1153, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1153, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1153, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <spdpspjifs> */
union  A1154 { s m0; p m1; d m2; p m3; s m4; p m5; j m6; i m7; f m8; s m9; };
void f_cpA1154(union  A1154 *x, const union  A1154 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1154(const union  A1154 *x, const union  A1154 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1154() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1154), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1154, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1154, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1154, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1154, m3), 1);
		dcStructField(st, 's', offsetof(union  A1154, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1154, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1154, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1154, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1154, m8), 1);
		dcStructField(st, 's', offsetof(union  A1154, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fc<spdpspjifs>fsdp> */
union  A1155 { f m0; c m1; union  A1154 m2; f m3; s m4; d m5; p m6; };
void f_cpA1155(union  A1155 *x, const union  A1155 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1154(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1155(const union  A1155 *x, const union  A1155 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1154(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1155() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1155), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1155, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1155, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1155, m2), 1, f_touchdcstA1154());
		dcStructField(st, 'f', offsetof(union  A1155, m3), 1);
		dcStructField(st, 's', offsetof(union  A1155, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1155, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1155, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jpljs> */
union  A1156 { j m0; p m1; l m2; j m3; s m4; };
void f_cpA1156(union  A1156 *x, const union  A1156 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1156(const union  A1156 *x, const union  A1156 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1156() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1156), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1156, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1156, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1156, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1156, m3), 1);
		dcStructField(st, 's', offsetof(union  A1156, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sjjpjlidlisjip} */
struct A1157 { s m0; j m1; j m2; p m3; j m4; l m5; i m6; d m7; l m8; i m9; s m10; j m11; i m12; p m13; };
void f_cpA1157(struct A1157 *x, const struct A1157 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA1157(const struct A1157 *x, const struct A1157 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA1157() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A1157), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1157, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1157, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1157, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1157, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1157, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1157, m5), 1);
		dcStructField(st, 'i', offsetof(struct A1157, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1157, m7), 1);
		dcStructField(st, 'l', offsetof(struct A1157, m8), 1);
		dcStructField(st, 'i', offsetof(struct A1157, m9), 1);
		dcStructField(st, 's', offsetof(struct A1157, m10), 1);
		dcStructField(st, 'j', offsetof(struct A1157, m11), 1);
		dcStructField(st, 'i', offsetof(struct A1157, m12), 1);
		dcStructField(st, 'p', offsetof(struct A1157, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cidil<jpljs>ddi{sjjpjlidlisjip}} */
struct A1158 { c m0; i m1; d m2; i m3; l m4; union  A1156 m5; d m6; d m7; i m8; struct A1157 m9; };
void f_cpA1158(struct A1158 *x, const struct A1158 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1156(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA1157(&x->m9, &y->m9); };
int f_cmpA1158(const struct A1158 *x, const struct A1158 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1156(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1157(&x->m9, &y->m9); };
DCstruct* f_touchdcstA1158() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A1158), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1158, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1158, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1158, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1158, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1158, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1158, m5), 1, f_touchdcstA1156());
		dcStructField(st, 'd', offsetof(struct A1158, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1158, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1158, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1158, m9), 1, f_touchdcstA1157());
		dcCloseStruct(st);
	}
	return st;
};
/* {jfiffd} */
struct A1159 { j m0; f m1; i m2; f m3; f m4; d m5; };
void f_cpA1159(struct A1159 *x, const struct A1159 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1159(const struct A1159 *x, const struct A1159 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1159() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1159), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1159, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1159, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1159, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1159, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1159, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1159, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dciffi> */
union  A1160 { d m0; c m1; i m2; f m3; f m4; i m5; };
void f_cpA1160(union  A1160 *x, const union  A1160 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1160(const union  A1160 *x, const union  A1160 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1160() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1160), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1160, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1160, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1160, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1160, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1160, m4), 1);
		dcStructField(st, 'i', offsetof(union  A1160, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dsdslillcc> */
union  A1161 { d m0; s m1; d m2; s m3; l m4; i m5; l m6; l m7; c m8; c m9; };
void f_cpA1161(union  A1161 *x, const union  A1161 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1161(const union  A1161 *x, const union  A1161 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1161() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1161), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1161, m0), 1);
		dcStructField(st, 's', offsetof(union  A1161, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1161, m2), 1);
		dcStructField(st, 's', offsetof(union  A1161, m3), 1);
		dcStructField(st, 'l', offsetof(union  A1161, m4), 1);
		dcStructField(st, 'i', offsetof(union  A1161, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1161, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1161, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1161, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1161, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pciji{jfiffd}sdpdljc<dciffi><fl>jdf<dsdslillcc>sjpdpippc> */
union  A1162 { p m0; c m1; i m2; j m3; i m4; struct A1159 m5; s m6; d m7; p m8; d m9; l m10; j m11; c m12; union  A1160 m13; union  A225 m14; j m15; d m16; f m17; union  A1161 m18; s m19; j m20; p m21; d m22; p m23; i m24; p m25; p m26; c m27; };
void f_cpA1162(union  A1162 *x, const union  A1162 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1159(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; f_cpA1160(&x->m13, &y->m13); f_cpA225(&x->m14, &y->m14); x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; f_cpA1161(&x->m18, &y->m18); x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; };
int f_cmpA1162(const union  A1162 *x, const union  A1162 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1159(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && f_cmpA1160(&x->m13, &y->m13) && f_cmpA225(&x->m14, &y->m14) && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && f_cmpA1161(&x->m18, &y->m18) && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27; };
DCstruct* f_touchdcstA1162() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(28, sizeof(union  A1162), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1162, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1162, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1162, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1162, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1162, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1162, m5), 1, f_touchdcstA1159());
		dcStructField(st, 's', offsetof(union  A1162, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1162, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1162, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1162, m9), 1);
		dcStructField(st, 'l', offsetof(union  A1162, m10), 1);
		dcStructField(st, 'j', offsetof(union  A1162, m11), 1);
		dcStructField(st, 'c', offsetof(union  A1162, m12), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1162, m13), 1, f_touchdcstA1160());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1162, m14), 1, f_touchdcstA225());
		dcStructField(st, 'j', offsetof(union  A1162, m15), 1);
		dcStructField(st, 'd', offsetof(union  A1162, m16), 1);
		dcStructField(st, 'f', offsetof(union  A1162, m17), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1162, m18), 1, f_touchdcstA1161());
		dcStructField(st, 's', offsetof(union  A1162, m19), 1);
		dcStructField(st, 'j', offsetof(union  A1162, m20), 1);
		dcStructField(st, 'p', offsetof(union  A1162, m21), 1);
		dcStructField(st, 'd', offsetof(union  A1162, m22), 1);
		dcStructField(st, 'p', offsetof(union  A1162, m23), 1);
		dcStructField(st, 'i', offsetof(union  A1162, m24), 1);
		dcStructField(st, 'p', offsetof(union  A1162, m25), 1);
		dcStructField(st, 'p', offsetof(union  A1162, m26), 1);
		dcStructField(st, 'c', offsetof(union  A1162, m27), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{cidil<jpljs>ddi{sjjpjlidlisjip}}lpldif<pciji{jfiffd}sdpdljc<dciffi><fl>jdf<dsdslillcc>sjpdpippc>s} */
struct A1163 { struct A1158 m0; l m1; p m2; l m3; d m4; i m5; f m6; union  A1162 m7; s m8; };
void f_cpA1163(struct A1163 *x, const struct A1163 *y) { f_cpA1158(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA1162(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA1163(const struct A1163 *x, const struct A1163 *y) { return f_cmpA1158(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1162(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA1163() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1163), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1163, m0), 1, f_touchdcstA1158());
		dcStructField(st, 'l', offsetof(struct A1163, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1163, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1163, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1163, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1163, m5), 1);
		dcStructField(st, 'f', offsetof(struct A1163, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1163, m7), 1, f_touchdcstA1162());
		dcStructField(st, 's', offsetof(struct A1163, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lfpsdsjddsidfl> */
union  A1164 { l m0; f m1; p m2; s m3; d m4; s m5; j m6; d m7; d m8; s m9; i m10; d m11; f m12; l m13; };
void f_cpA1164(union  A1164 *x, const union  A1164 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA1164(const union  A1164 *x, const union  A1164 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA1164() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(union  A1164), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1164, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1164, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1164, m2), 1);
		dcStructField(st, 's', offsetof(union  A1164, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1164, m4), 1);
		dcStructField(st, 's', offsetof(union  A1164, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1164, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1164, m7), 1);
		dcStructField(st, 'd', offsetof(union  A1164, m8), 1);
		dcStructField(st, 's', offsetof(union  A1164, m9), 1);
		dcStructField(st, 'i', offsetof(union  A1164, m10), 1);
		dcStructField(st, 'd', offsetof(union  A1164, m11), 1);
		dcStructField(st, 'f', offsetof(union  A1164, m12), 1);
		dcStructField(st, 'l', offsetof(union  A1164, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<lfpsdsjddsidfl>fssp> */
union  A1165 { union  A1164 m0; f m1; s m2; s m3; p m4; };
void f_cpA1165(union  A1165 *x, const union  A1165 *y) { f_cpA1164(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1165(const union  A1165 *x, const union  A1165 *y) { return f_cmpA1164(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1165() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1165), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1165, m0), 1, f_touchdcstA1164());
		dcStructField(st, 'f', offsetof(union  A1165, m1), 1);
		dcStructField(st, 's', offsetof(union  A1165, m2), 1);
		dcStructField(st, 's', offsetof(union  A1165, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1165, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ipdjsjppcfc> */
union  A1166 { i m0; p m1; d m2; j m3; s m4; j m5; p m6; p m7; c m8; f m9; c m10; };
void f_cpA1166(union  A1166 *x, const union  A1166 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1166(const union  A1166 *x, const union  A1166 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1166() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1166), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1166, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1166, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1166, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1166, m3), 1);
		dcStructField(st, 's', offsetof(union  A1166, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1166, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1166, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1166, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1166, m8), 1);
		dcStructField(st, 'f', offsetof(union  A1166, m9), 1);
		dcStructField(st, 'c', offsetof(union  A1166, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jsdpds} */
struct A1167 { j m0; s m1; d m2; p m3; d m4; s m5; };
void f_cpA1167(struct A1167 *x, const struct A1167 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1167(const struct A1167 *x, const struct A1167 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1167() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1167), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1167, m0), 1);
		dcStructField(st, 's', offsetof(struct A1167, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1167, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1167, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1167, m4), 1);
		dcStructField(st, 's', offsetof(struct A1167, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcdsfdsifccjjldslcclccddlj> */
union  A1168 { d m0; c m1; d m2; s m3; f m4; d m5; s m6; i m7; f m8; c m9; c m10; j m11; j m12; l m13; d m14; s m15; l m16; c m17; c m18; l m19; c m20; c m21; d m22; d m23; l m24; j m25; };
void f_cpA1168(union  A1168 *x, const union  A1168 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA1168(const union  A1168 *x, const union  A1168 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA1168() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(union  A1168), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1168, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1168, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1168, m2), 1);
		dcStructField(st, 's', offsetof(union  A1168, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1168, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1168, m5), 1);
		dcStructField(st, 's', offsetof(union  A1168, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1168, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1168, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1168, m9), 1);
		dcStructField(st, 'c', offsetof(union  A1168, m10), 1);
		dcStructField(st, 'j', offsetof(union  A1168, m11), 1);
		dcStructField(st, 'j', offsetof(union  A1168, m12), 1);
		dcStructField(st, 'l', offsetof(union  A1168, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1168, m14), 1);
		dcStructField(st, 's', offsetof(union  A1168, m15), 1);
		dcStructField(st, 'l', offsetof(union  A1168, m16), 1);
		dcStructField(st, 'c', offsetof(union  A1168, m17), 1);
		dcStructField(st, 'c', offsetof(union  A1168, m18), 1);
		dcStructField(st, 'l', offsetof(union  A1168, m19), 1);
		dcStructField(st, 'c', offsetof(union  A1168, m20), 1);
		dcStructField(st, 'c', offsetof(union  A1168, m21), 1);
		dcStructField(st, 'd', offsetof(union  A1168, m22), 1);
		dcStructField(st, 'd', offsetof(union  A1168, m23), 1);
		dcStructField(st, 'l', offsetof(union  A1168, m24), 1);
		dcStructField(st, 'j', offsetof(union  A1168, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fdcpdsdsp> */
union  A1169 { f m0; d m1; c m2; p m3; d m4; s m5; d m6; s m7; p m8; };
void f_cpA1169(union  A1169 *x, const union  A1169 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1169(const union  A1169 *x, const union  A1169 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1169() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1169), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1169, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1169, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1169, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1169, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1169, m4), 1);
		dcStructField(st, 's', offsetof(union  A1169, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1169, m6), 1);
		dcStructField(st, 's', offsetof(union  A1169, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1169, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<dcdsfdsifccjjldslcclccddlj>c<fdcpdsdsp>} */
struct A1170 { union  A1168 m0; c m1; union  A1169 m2; };
void f_cpA1170(struct A1170 *x, const struct A1170 *y) { f_cpA1168(&x->m0, &y->m0); x->m1 = y->m1; f_cpA1169(&x->m2, &y->m2); };
int f_cmpA1170(const struct A1170 *x, const struct A1170 *y) { return f_cmpA1168(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA1169(&x->m2, &y->m2); };
DCstruct* f_touchdcstA1170() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1170), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1170, m0), 1, f_touchdcstA1168());
		dcStructField(st, 'c', offsetof(struct A1170, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1170, m2), 1, f_touchdcstA1169());
		dcCloseStruct(st);
	}
	return st;
};
/* <jjpcdip> */
union  A1171 { j m0; j m1; p m2; c m3; d m4; i m5; p m6; };
void f_cpA1171(union  A1171 *x, const union  A1171 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1171(const union  A1171 *x, const union  A1171 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1171() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1171), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1171, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1171, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1171, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1171, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1171, m4), 1);
		dcStructField(st, 'i', offsetof(union  A1171, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1171, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sid<jjpcdip>> */
union  A1172 { s m0; i m1; d m2; union  A1171 m3; };
void f_cpA1172(union  A1172 *x, const union  A1172 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1171(&x->m3, &y->m3); };
int f_cmpA1172(const union  A1172 *x, const union  A1172 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1171(&x->m3, &y->m3); };
DCstruct* f_touchdcstA1172() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1172), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1172, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1172, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1172, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1172, m3), 1, f_touchdcstA1171());
		dcCloseStruct(st);
	}
	return st;
};
/* <jllijpdpjpsfcic> */
union  A1173 { j m0; l m1; l m2; i m3; j m4; p m5; d m6; p m7; j m8; p m9; s m10; f m11; c m12; i m13; c m14; };
void f_cpA1173(union  A1173 *x, const union  A1173 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA1173(const union  A1173 *x, const union  A1173 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA1173() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A1173), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1173, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1173, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1173, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1173, m3), 1);
		dcStructField(st, 'j', offsetof(union  A1173, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1173, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1173, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1173, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1173, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1173, m9), 1);
		dcStructField(st, 's', offsetof(union  A1173, m10), 1);
		dcStructField(st, 'f', offsetof(union  A1173, m11), 1);
		dcStructField(st, 'c', offsetof(union  A1173, m12), 1);
		dcStructField(st, 'i', offsetof(union  A1173, m13), 1);
		dcStructField(st, 'c', offsetof(union  A1173, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssfpfijflclficcic} */
struct A1174 { s m0; s m1; f m2; p m3; f m4; i m5; j m6; f m7; l m8; c m9; l m10; f m11; i m12; c m13; c m14; i m15; c m16; };
void f_cpA1174(struct A1174 *x, const struct A1174 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA1174(const struct A1174 *x, const struct A1174 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA1174() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A1174), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1174, m0), 1);
		dcStructField(st, 's', offsetof(struct A1174, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1174, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1174, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1174, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1174, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1174, m6), 1);
		dcStructField(st, 'f', offsetof(struct A1174, m7), 1);
		dcStructField(st, 'l', offsetof(struct A1174, m8), 1);
		dcStructField(st, 'c', offsetof(struct A1174, m9), 1);
		dcStructField(st, 'l', offsetof(struct A1174, m10), 1);
		dcStructField(st, 'f', offsetof(struct A1174, m11), 1);
		dcStructField(st, 'i', offsetof(struct A1174, m12), 1);
		dcStructField(st, 'c', offsetof(struct A1174, m13), 1);
		dcStructField(st, 'c', offsetof(struct A1174, m14), 1);
		dcStructField(st, 'i', offsetof(struct A1174, m15), 1);
		dcStructField(st, 'c', offsetof(struct A1174, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pfpddcispdlfpspsspslcfijpclcf} */
struct A1175 { p m0; f m1; p m2; d m3; d m4; c m5; i m6; s m7; p m8; d m9; l m10; f m11; p m12; s m13; p m14; s m15; s m16; p m17; s m18; l m19; c m20; f m21; i m22; j m23; p m24; c m25; l m26; c m27; f m28; };
void f_cpA1175(struct A1175 *x, const struct A1175 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA1175(const struct A1175 *x, const struct A1175 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA1175() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(struct A1175), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1175, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1175, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1175, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1175, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1175, m4), 1);
		dcStructField(st, 'c', offsetof(struct A1175, m5), 1);
		dcStructField(st, 'i', offsetof(struct A1175, m6), 1);
		dcStructField(st, 's', offsetof(struct A1175, m7), 1);
		dcStructField(st, 'p', offsetof(struct A1175, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1175, m9), 1);
		dcStructField(st, 'l', offsetof(struct A1175, m10), 1);
		dcStructField(st, 'f', offsetof(struct A1175, m11), 1);
		dcStructField(st, 'p', offsetof(struct A1175, m12), 1);
		dcStructField(st, 's', offsetof(struct A1175, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1175, m14), 1);
		dcStructField(st, 's', offsetof(struct A1175, m15), 1);
		dcStructField(st, 's', offsetof(struct A1175, m16), 1);
		dcStructField(st, 'p', offsetof(struct A1175, m17), 1);
		dcStructField(st, 's', offsetof(struct A1175, m18), 1);
		dcStructField(st, 'l', offsetof(struct A1175, m19), 1);
		dcStructField(st, 'c', offsetof(struct A1175, m20), 1);
		dcStructField(st, 'f', offsetof(struct A1175, m21), 1);
		dcStructField(st, 'i', offsetof(struct A1175, m22), 1);
		dcStructField(st, 'j', offsetof(struct A1175, m23), 1);
		dcStructField(st, 'p', offsetof(struct A1175, m24), 1);
		dcStructField(st, 'c', offsetof(struct A1175, m25), 1);
		dcStructField(st, 'l', offsetof(struct A1175, m26), 1);
		dcStructField(st, 'c', offsetof(struct A1175, m27), 1);
		dcStructField(st, 'f', offsetof(struct A1175, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idlljidd} */
struct A1176 { i m0; d m1; l m2; l m3; j m4; i m5; d m6; d m7; };
void f_cpA1176(struct A1176 *x, const struct A1176 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1176(const struct A1176 *x, const struct A1176 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1176() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A1176), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1176, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1176, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1176, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1176, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1176, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1176, m5), 1);
		dcStructField(st, 'd', offsetof(struct A1176, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1176, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<jllijpdpjpsfcic>lldjl{ssfpfijflclficcic}cspfs{pfpddcispdlfpspsspslcfijpclcf}cpjflicfcp{idlljidd}fp} */
struct A1177 { union  A1173 m0; l m1; l m2; d m3; j m4; l m5; struct A1174 m6; c m7; s m8; p m9; f m10; s m11; struct A1175 m12; c m13; p m14; j m15; f m16; l m17; i m18; c m19; f m20; c m21; p m22; struct A1176 m23; f m24; p m25; };
void f_cpA1177(struct A1177 *x, const struct A1177 *y) { f_cpA1173(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; f_cpA1174(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; f_cpA1175(&x->m12, &y->m12); x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; f_cpA1176(&x->m23, &y->m23); x->m24 = y->m24; x->m25 = y->m25; };
int f_cmpA1177(const struct A1177 *x, const struct A1177 *y) { return f_cmpA1173(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1174(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && f_cmpA1175(&x->m12, &y->m12) && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && f_cmpA1176(&x->m23, &y->m23) && x->m24 == y->m24 && x->m25 == y->m25; };
DCstruct* f_touchdcstA1177() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A1177), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1177, m0), 1, f_touchdcstA1173());
		dcStructField(st, 'l', offsetof(struct A1177, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1177, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1177, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1177, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1177, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1177, m6), 1, f_touchdcstA1174());
		dcStructField(st, 'c', offsetof(struct A1177, m7), 1);
		dcStructField(st, 's', offsetof(struct A1177, m8), 1);
		dcStructField(st, 'p', offsetof(struct A1177, m9), 1);
		dcStructField(st, 'f', offsetof(struct A1177, m10), 1);
		dcStructField(st, 's', offsetof(struct A1177, m11), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1177, m12), 1, f_touchdcstA1175());
		dcStructField(st, 'c', offsetof(struct A1177, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1177, m14), 1);
		dcStructField(st, 'j', offsetof(struct A1177, m15), 1);
		dcStructField(st, 'f', offsetof(struct A1177, m16), 1);
		dcStructField(st, 'l', offsetof(struct A1177, m17), 1);
		dcStructField(st, 'i', offsetof(struct A1177, m18), 1);
		dcStructField(st, 'c', offsetof(struct A1177, m19), 1);
		dcStructField(st, 'f', offsetof(struct A1177, m20), 1);
		dcStructField(st, 'c', offsetof(struct A1177, m21), 1);
		dcStructField(st, 'p', offsetof(struct A1177, m22), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1177, m23), 1, f_touchdcstA1176());
		dcStructField(st, 'f', offsetof(struct A1177, m24), 1);
		dcStructField(st, 'p', offsetof(struct A1177, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<ic>pcdpdp> */
union  A1178 { union  A95 m0; p m1; c m2; d m3; p m4; d m5; p m6; };
void f_cpA1178(union  A1178 *x, const union  A1178 *y) { f_cpA95(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1178(const union  A1178 *x, const union  A1178 *y) { return f_cmpA95(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1178() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1178), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1178, m0), 1, f_touchdcstA95());
		dcStructField(st, 'p', offsetof(union  A1178, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1178, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1178, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1178, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1178, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1178, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fj> */
union  A1179 { f m0; j m1; };
void f_cpA1179(union  A1179 *x, const union  A1179 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1179(const union  A1179 *x, const union  A1179 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1179() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1179), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1179, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1179, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lss> */
union  A1180 { l m0; s m1; s m2; };
void f_cpA1180(union  A1180 *x, const union  A1180 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1180(const union  A1180 *x, const union  A1180 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1180() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1180), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1180, m0), 1);
		dcStructField(st, 's', offsetof(union  A1180, m1), 1);
		dcStructField(st, 's', offsetof(union  A1180, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {j<fj>jpp<lss>spflcippsfjdi} */
struct A1181 { j m0; union  A1179 m1; j m2; p m3; p m4; union  A1180 m5; s m6; p m7; f m8; l m9; c m10; i m11; p m12; p m13; s m14; f m15; j m16; d m17; i m18; };
void f_cpA1181(struct A1181 *x, const struct A1181 *y) { x->m0 = y->m0; f_cpA1179(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1180(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA1181(const struct A1181 *x, const struct A1181 *y) { return x->m0 == y->m0 && f_cmpA1179(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1180(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA1181() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(struct A1181), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1181, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1181, m1), 1, f_touchdcstA1179());
		dcStructField(st, 'j', offsetof(struct A1181, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1181, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1181, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1181, m5), 1, f_touchdcstA1180());
		dcStructField(st, 's', offsetof(struct A1181, m6), 1);
		dcStructField(st, 'p', offsetof(struct A1181, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1181, m8), 1);
		dcStructField(st, 'l', offsetof(struct A1181, m9), 1);
		dcStructField(st, 'c', offsetof(struct A1181, m10), 1);
		dcStructField(st, 'i', offsetof(struct A1181, m11), 1);
		dcStructField(st, 'p', offsetof(struct A1181, m12), 1);
		dcStructField(st, 'p', offsetof(struct A1181, m13), 1);
		dcStructField(st, 's', offsetof(struct A1181, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1181, m15), 1);
		dcStructField(st, 'j', offsetof(struct A1181, m16), 1);
		dcStructField(st, 'd', offsetof(struct A1181, m17), 1);
		dcStructField(st, 'i', offsetof(struct A1181, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fssd> */
union  A1182 { f m0; s m1; s m2; d m3; };
void f_cpA1182(union  A1182 *x, const union  A1182 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1182(const union  A1182 *x, const union  A1182 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1182() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1182), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1182, m0), 1);
		dcStructField(st, 's', offsetof(union  A1182, m1), 1);
		dcStructField(st, 's', offsetof(union  A1182, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1182, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {psclfplcffccidjjldlf} */
struct A1183 { p m0; s m1; c m2; l m3; f m4; p m5; l m6; c m7; f m8; f m9; c m10; c m11; i m12; d m13; j m14; j m15; l m16; d m17; l m18; f m19; };
void f_cpA1183(struct A1183 *x, const struct A1183 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; };
int f_cmpA1183(const struct A1183 *x, const struct A1183 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19; };
DCstruct* f_touchdcstA1183() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(20, sizeof(struct A1183), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1183, m0), 1);
		dcStructField(st, 's', offsetof(struct A1183, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1183, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1183, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1183, m4), 1);
		dcStructField(st, 'p', offsetof(struct A1183, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1183, m6), 1);
		dcStructField(st, 'c', offsetof(struct A1183, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1183, m8), 1);
		dcStructField(st, 'f', offsetof(struct A1183, m9), 1);
		dcStructField(st, 'c', offsetof(struct A1183, m10), 1);
		dcStructField(st, 'c', offsetof(struct A1183, m11), 1);
		dcStructField(st, 'i', offsetof(struct A1183, m12), 1);
		dcStructField(st, 'd', offsetof(struct A1183, m13), 1);
		dcStructField(st, 'j', offsetof(struct A1183, m14), 1);
		dcStructField(st, 'j', offsetof(struct A1183, m15), 1);
		dcStructField(st, 'l', offsetof(struct A1183, m16), 1);
		dcStructField(st, 'd', offsetof(struct A1183, m17), 1);
		dcStructField(st, 'l', offsetof(struct A1183, m18), 1);
		dcStructField(st, 'f', offsetof(struct A1183, m19), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {isdjfdppci} */
struct A1184 { i m0; s m1; d m2; j m3; f m4; d m5; p m6; p m7; c m8; i m9; };
void f_cpA1184(struct A1184 *x, const struct A1184 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1184(const struct A1184 *x, const struct A1184 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1184() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A1184), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1184, m0), 1);
		dcStructField(st, 's', offsetof(struct A1184, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1184, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1184, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1184, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1184, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1184, m6), 1);
		dcStructField(st, 'p', offsetof(struct A1184, m7), 1);
		dcStructField(st, 'c', offsetof(struct A1184, m8), 1);
		dcStructField(st, 'i', offsetof(struct A1184, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jsfjjjppdpdjfldflclilcs} */
struct A1185 { j m0; s m1; f m2; j m3; j m4; j m5; p m6; p m7; d m8; p m9; d m10; j m11; f m12; l m13; d m14; f m15; l m16; c m17; l m18; i m19; l m20; c m21; s m22; };
void f_cpA1185(struct A1185 *x, const struct A1185 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA1185(const struct A1185 *x, const struct A1185 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA1185() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A1185), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1185, m0), 1);
		dcStructField(st, 's', offsetof(struct A1185, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1185, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1185, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1185, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1185, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1185, m6), 1);
		dcStructField(st, 'p', offsetof(struct A1185, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1185, m8), 1);
		dcStructField(st, 'p', offsetof(struct A1185, m9), 1);
		dcStructField(st, 'd', offsetof(struct A1185, m10), 1);
		dcStructField(st, 'j', offsetof(struct A1185, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1185, m12), 1);
		dcStructField(st, 'l', offsetof(struct A1185, m13), 1);
		dcStructField(st, 'd', offsetof(struct A1185, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1185, m15), 1);
		dcStructField(st, 'l', offsetof(struct A1185, m16), 1);
		dcStructField(st, 'c', offsetof(struct A1185, m17), 1);
		dcStructField(st, 'l', offsetof(struct A1185, m18), 1);
		dcStructField(st, 'i', offsetof(struct A1185, m19), 1);
		dcStructField(st, 'l', offsetof(struct A1185, m20), 1);
		dcStructField(st, 'c', offsetof(struct A1185, m21), 1);
		dcStructField(st, 's', offsetof(struct A1185, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <plsscpsdp> */
union  A1186 { p m0; l m1; s m2; s m3; c m4; p m5; s m6; d m7; p m8; };
void f_cpA1186(union  A1186 *x, const union  A1186 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1186(const union  A1186 *x, const union  A1186 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1186() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1186), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1186, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1186, m1), 1);
		dcStructField(st, 's', offsetof(union  A1186, m2), 1);
		dcStructField(st, 's', offsetof(union  A1186, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1186, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1186, m5), 1);
		dcStructField(st, 's', offsetof(union  A1186, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1186, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1186, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcifiicjspisl} */
struct A1187 { d m0; c m1; i m2; f m3; i m4; i m5; c m6; j m7; s m8; p m9; i m10; s m11; l m12; };
void f_cpA1187(struct A1187 *x, const struct A1187 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA1187(const struct A1187 *x, const struct A1187 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA1187() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A1187), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1187, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1187, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1187, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1187, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1187, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1187, m5), 1);
		dcStructField(st, 'c', offsetof(struct A1187, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1187, m7), 1);
		dcStructField(st, 's', offsetof(struct A1187, m8), 1);
		dcStructField(st, 'p', offsetof(struct A1187, m9), 1);
		dcStructField(st, 'i', offsetof(struct A1187, m10), 1);
		dcStructField(st, 's', offsetof(struct A1187, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1187, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ispl> */
union  A1188 { i m0; s m1; p m2; l m3; };
void f_cpA1188(union  A1188 *x, const union  A1188 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1188(const union  A1188 *x, const union  A1188 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1188() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1188), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1188, m0), 1);
		dcStructField(st, 's', offsetof(union  A1188, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1188, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1188, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jscpppscddj> */
union  A1189 { j m0; s m1; c m2; p m3; p m4; p m5; s m6; c m7; d m8; d m9; j m10; };
void f_cpA1189(union  A1189 *x, const union  A1189 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1189(const union  A1189 *x, const union  A1189 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1189() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1189), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1189, m0), 1);
		dcStructField(st, 's', offsetof(union  A1189, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1189, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1189, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1189, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1189, m5), 1);
		dcStructField(st, 's', offsetof(union  A1189, m6), 1);
		dcStructField(st, 'c', offsetof(union  A1189, m7), 1);
		dcStructField(st, 'd', offsetof(union  A1189, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1189, m9), 1);
		dcStructField(st, 'j', offsetof(union  A1189, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lsssis} */
struct A1190 { l m0; s m1; s m2; s m3; i m4; s m5; };
void f_cpA1190(struct A1190 *x, const struct A1190 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1190(const struct A1190 *x, const struct A1190 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1190() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1190), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1190, m0), 1);
		dcStructField(st, 's', offsetof(struct A1190, m1), 1);
		dcStructField(st, 's', offsetof(struct A1190, m2), 1);
		dcStructField(st, 's', offsetof(struct A1190, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1190, m4), 1);
		dcStructField(st, 's', offsetof(struct A1190, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <discipf> */
union  A1191 { d m0; i m1; s m2; c m3; i m4; p m5; f m6; };
void f_cpA1191(union  A1191 *x, const union  A1191 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1191(const union  A1191 *x, const union  A1191 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1191() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1191), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1191, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1191, m1), 1);
		dcStructField(st, 's', offsetof(union  A1191, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1191, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1191, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1191, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1191, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<jscpppscddj>{cj}i{lsssis}i<discipf>j{ds}j} */
struct A1192 { union  A1189 m0; struct A664 m1; i m2; struct A1190 m3; i m4; union  A1191 m5; j m6; struct A469 m7; j m8; };
void f_cpA1192(struct A1192 *x, const struct A1192 *y) { f_cpA1189(&x->m0, &y->m0); f_cpA664(&x->m1, &y->m1); x->m2 = y->m2; f_cpA1190(&x->m3, &y->m3); x->m4 = y->m4; f_cpA1191(&x->m5, &y->m5); x->m6 = y->m6; f_cpA469(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA1192(const struct A1192 *x, const struct A1192 *y) { return f_cmpA1189(&x->m0, &y->m0) && f_cmpA664(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA1190(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1191(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA469(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA1192() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1192), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1192, m0), 1, f_touchdcstA1189());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1192, m1), 1, f_touchdcstA664());
		dcStructField(st, 'i', offsetof(struct A1192, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1192, m3), 1, f_touchdcstA1190());
		dcStructField(st, 'i', offsetof(struct A1192, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1192, m5), 1, f_touchdcstA1191());
		dcStructField(st, 'j', offsetof(struct A1192, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1192, m7), 1, f_touchdcstA469());
		dcStructField(st, 'j', offsetof(struct A1192, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jilifsslcccs> */
union  A1193 { j m0; i m1; l m2; i m3; f m4; s m5; s m6; l m7; c m8; c m9; c m10; s m11; };
void f_cpA1193(union  A1193 *x, const union  A1193 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1193(const union  A1193 *x, const union  A1193 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1193() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1193), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1193, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1193, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1193, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1193, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1193, m4), 1);
		dcStructField(st, 's', offsetof(union  A1193, m5), 1);
		dcStructField(st, 's', offsetof(union  A1193, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1193, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1193, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1193, m9), 1);
		dcStructField(st, 'c', offsetof(union  A1193, m10), 1);
		dcStructField(st, 's', offsetof(union  A1193, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jidjcdf> */
union  A1194 { j m0; i m1; d m2; j m3; c m4; d m5; f m6; };
void f_cpA1194(union  A1194 *x, const union  A1194 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1194(const union  A1194 *x, const union  A1194 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1194() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1194), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1194, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1194, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1194, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1194, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1194, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1194, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1194, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ddl} */
struct A1195 { d m0; d m1; l m2; };
void f_cpA1195(struct A1195 *x, const struct A1195 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1195(const struct A1195 *x, const struct A1195 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1195() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1195), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1195, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1195, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1195, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ssfp{ddl}c{si}spi} */
struct A1196 { s m0; s m1; f m2; p m3; struct A1195 m4; c m5; struct A413 m6; s m7; p m8; i m9; };
void f_cpA1196(struct A1196 *x, const struct A1196 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA1195(&x->m4, &y->m4); x->m5 = y->m5; f_cpA413(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1196(const struct A1196 *x, const struct A1196 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1195(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA413(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1196() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A1196), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1196, m0), 1);
		dcStructField(st, 's', offsetof(struct A1196, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1196, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1196, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1196, m4), 1, f_touchdcstA1195());
		dcStructField(st, 'c', offsetof(struct A1196, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1196, m6), 1, f_touchdcstA413());
		dcStructField(st, 's', offsetof(struct A1196, m7), 1);
		dcStructField(st, 'p', offsetof(struct A1196, m8), 1);
		dcStructField(st, 'i', offsetof(struct A1196, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifdspifpfficdljilicppssslpscdpdffpfp} */
struct A1197 { i m0; f m1; d m2; s m3; p m4; i m5; f m6; p m7; f m8; f m9; i m10; c m11; d m12; l m13; j m14; i m15; l m16; i m17; c m18; p m19; p m20; s m21; s m22; s m23; l m24; p m25; s m26; c m27; d m28; p m29; d m30; f m31; f m32; p m33; f m34; p m35; };
void f_cpA1197(struct A1197 *x, const struct A1197 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; };
int f_cmpA1197(const struct A1197 *x, const struct A1197 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35; };
DCstruct* f_touchdcstA1197() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(36, sizeof(struct A1197), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1197, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1197, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1197, m2), 1);
		dcStructField(st, 's', offsetof(struct A1197, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1197, m5), 1);
		dcStructField(st, 'f', offsetof(struct A1197, m6), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1197, m8), 1);
		dcStructField(st, 'f', offsetof(struct A1197, m9), 1);
		dcStructField(st, 'i', offsetof(struct A1197, m10), 1);
		dcStructField(st, 'c', offsetof(struct A1197, m11), 1);
		dcStructField(st, 'd', offsetof(struct A1197, m12), 1);
		dcStructField(st, 'l', offsetof(struct A1197, m13), 1);
		dcStructField(st, 'j', offsetof(struct A1197, m14), 1);
		dcStructField(st, 'i', offsetof(struct A1197, m15), 1);
		dcStructField(st, 'l', offsetof(struct A1197, m16), 1);
		dcStructField(st, 'i', offsetof(struct A1197, m17), 1);
		dcStructField(st, 'c', offsetof(struct A1197, m18), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m19), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m20), 1);
		dcStructField(st, 's', offsetof(struct A1197, m21), 1);
		dcStructField(st, 's', offsetof(struct A1197, m22), 1);
		dcStructField(st, 's', offsetof(struct A1197, m23), 1);
		dcStructField(st, 'l', offsetof(struct A1197, m24), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m25), 1);
		dcStructField(st, 's', offsetof(struct A1197, m26), 1);
		dcStructField(st, 'c', offsetof(struct A1197, m27), 1);
		dcStructField(st, 'd', offsetof(struct A1197, m28), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m29), 1);
		dcStructField(st, 'd', offsetof(struct A1197, m30), 1);
		dcStructField(st, 'f', offsetof(struct A1197, m31), 1);
		dcStructField(st, 'f', offsetof(struct A1197, m32), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m33), 1);
		dcStructField(st, 'f', offsetof(struct A1197, m34), 1);
		dcStructField(st, 'p', offsetof(struct A1197, m35), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cfpcdij} */
struct A1198 { c m0; f m1; p m2; c m3; d m4; i m5; j m6; };
void f_cpA1198(struct A1198 *x, const struct A1198 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1198(const struct A1198 *x, const struct A1198 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1198() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1198), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1198, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1198, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1198, m2), 1);
		dcStructField(st, 'c', offsetof(struct A1198, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1198, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1198, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1198, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dsjcpjdsddsfsicps} */
struct A1199 { d m0; s m1; j m2; c m3; p m4; j m5; d m6; s m7; d m8; d m9; s m10; f m11; s m12; i m13; c m14; p m15; s m16; };
void f_cpA1199(struct A1199 *x, const struct A1199 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA1199(const struct A1199 *x, const struct A1199 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA1199() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A1199), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1199, m0), 1);
		dcStructField(st, 's', offsetof(struct A1199, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1199, m2), 1);
		dcStructField(st, 'c', offsetof(struct A1199, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1199, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1199, m5), 1);
		dcStructField(st, 'd', offsetof(struct A1199, m6), 1);
		dcStructField(st, 's', offsetof(struct A1199, m7), 1);
		dcStructField(st, 'd', offsetof(struct A1199, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1199, m9), 1);
		dcStructField(st, 's', offsetof(struct A1199, m10), 1);
		dcStructField(st, 'f', offsetof(struct A1199, m11), 1);
		dcStructField(st, 's', offsetof(struct A1199, m12), 1);
		dcStructField(st, 'i', offsetof(struct A1199, m13), 1);
		dcStructField(st, 'c', offsetof(struct A1199, m14), 1);
		dcStructField(st, 'p', offsetof(struct A1199, m15), 1);
		dcStructField(st, 's', offsetof(struct A1199, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lijf} */
struct A1200 { l m0; i m1; j m2; f m3; };
void f_cpA1200(struct A1200 *x, const struct A1200 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1200(const struct A1200 *x, const struct A1200 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1200() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1200), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1200, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1200, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1200, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1200, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{dsjcpjdsddsfsicps}dd{lijf}j> */
union  A1201 { struct A1199 m0; d m1; d m2; struct A1200 m3; j m4; };
void f_cpA1201(union  A1201 *x, const union  A1201 *y) { f_cpA1199(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA1200(&x->m3, &y->m3); x->m4 = y->m4; };
int f_cmpA1201(const union  A1201 *x, const union  A1201 *y) { return f_cmpA1199(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1200(&x->m3, &y->m3) && x->m4 == y->m4; };
DCstruct* f_touchdcstA1201() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1201), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1201, m0), 1, f_touchdcstA1199());
		dcStructField(st, 'd', offsetof(union  A1201, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1201, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1201, m3), 1, f_touchdcstA1200());
		dcStructField(st, 'j', offsetof(union  A1201, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sdisp<{dsjcpjdsddsfsicps}dd{lijf}j>s> */
union  A1202 { s m0; d m1; i m2; s m3; p m4; union  A1201 m5; s m6; };
void f_cpA1202(union  A1202 *x, const union  A1202 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1201(&x->m5, &y->m5); x->m6 = y->m6; };
int f_cmpA1202(const union  A1202 *x, const union  A1202 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1201(&x->m5, &y->m5) && x->m6 == y->m6; };
DCstruct* f_touchdcstA1202() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1202), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1202, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1202, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1202, m2), 1);
		dcStructField(st, 's', offsetof(union  A1202, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1202, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1202, m5), 1, f_touchdcstA1201());
		dcStructField(st, 's', offsetof(union  A1202, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {llcljjljippfspdfsljcsdp} */
struct A1203 { l m0; l m1; c m2; l m3; j m4; j m5; l m6; j m7; i m8; p m9; p m10; f m11; s m12; p m13; d m14; f m15; s m16; l m17; j m18; c m19; s m20; d m21; p m22; };
void f_cpA1203(struct A1203 *x, const struct A1203 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA1203(const struct A1203 *x, const struct A1203 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA1203() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A1203), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1203, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1203, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1203, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1203, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1203, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1203, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1203, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1203, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1203, m8), 1);
		dcStructField(st, 'p', offsetof(struct A1203, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1203, m10), 1);
		dcStructField(st, 'f', offsetof(struct A1203, m11), 1);
		dcStructField(st, 's', offsetof(struct A1203, m12), 1);
		dcStructField(st, 'p', offsetof(struct A1203, m13), 1);
		dcStructField(st, 'd', offsetof(struct A1203, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1203, m15), 1);
		dcStructField(st, 's', offsetof(struct A1203, m16), 1);
		dcStructField(st, 'l', offsetof(struct A1203, m17), 1);
		dcStructField(st, 'j', offsetof(struct A1203, m18), 1);
		dcStructField(st, 'c', offsetof(struct A1203, m19), 1);
		dcStructField(st, 's', offsetof(struct A1203, m20), 1);
		dcStructField(st, 'd', offsetof(struct A1203, m21), 1);
		dcStructField(st, 'p', offsetof(struct A1203, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ll{llcljjljippfspdfsljcsdp}idfdsif> */
union  A1204 { l m0; l m1; struct A1203 m2; i m3; d m4; f m5; d m6; s m7; i m8; f m9; };
void f_cpA1204(union  A1204 *x, const union  A1204 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1203(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1204(const union  A1204 *x, const union  A1204 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1203(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1204() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1204), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1204, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1204, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1204, m2), 1, f_touchdcstA1203());
		dcStructField(st, 'i', offsetof(union  A1204, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1204, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1204, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1204, m6), 1);
		dcStructField(st, 's', offsetof(union  A1204, m7), 1);
		dcStructField(st, 'i', offsetof(union  A1204, m8), 1);
		dcStructField(st, 'f', offsetof(union  A1204, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <clf> */
union  A1205 { c m0; l m1; f m2; };
void f_cpA1205(union  A1205 *x, const union  A1205 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1205(const union  A1205 *x, const union  A1205 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1205() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1205), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1205, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1205, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1205, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fidl} */
struct A1206 { f m0; i m1; d m2; l m3; };
void f_cpA1206(struct A1206 *x, const struct A1206 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1206(const struct A1206 *x, const struct A1206 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1206() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1206), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1206, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1206, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1206, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1206, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lccpjil} */
struct A1207 { l m0; c m1; c m2; p m3; j m4; i m5; l m6; };
void f_cpA1207(struct A1207 *x, const struct A1207 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1207(const struct A1207 *x, const struct A1207 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1207() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1207), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1207, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1207, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1207, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1207, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1207, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1207, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1207, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cppljp} */
struct A1208 { c m0; p m1; p m2; l m3; j m4; p m5; };
void f_cpA1208(struct A1208 *x, const struct A1208 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1208(const struct A1208 *x, const struct A1208 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1208() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1208), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1208, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1208, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1208, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1208, m3), 1);
		dcStructField(st, 'j', offsetof(struct A1208, m4), 1);
		dcStructField(st, 'p', offsetof(struct A1208, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpif} */
struct A1209 { d m0; p m1; i m2; f m3; };
void f_cpA1209(struct A1209 *x, const struct A1209 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1209(const struct A1209 *x, const struct A1209 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1209() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1209), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1209, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1209, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1209, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1209, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lil{dp}pldif{dpif}p> */
union  A1210 { l m0; i m1; l m2; struct A628 m3; p m4; l m5; d m6; i m7; f m8; struct A1209 m9; p m10; };
void f_cpA1210(union  A1210 *x, const union  A1210 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA628(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA1209(&x->m9, &y->m9); x->m10 = y->m10; };
int f_cmpA1210(const union  A1210 *x, const union  A1210 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA628(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1209(&x->m9, &y->m9) && x->m10 == y->m10; };
DCstruct* f_touchdcstA1210() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1210), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1210, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1210, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1210, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1210, m3), 1, f_touchdcstA628());
		dcStructField(st, 'p', offsetof(union  A1210, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1210, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1210, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1210, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1210, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1210, m9), 1, f_touchdcstA1209());
		dcStructField(st, 'p', offsetof(union  A1210, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pliif> */
union  A1211 { p m0; l m1; i m2; i m3; f m4; };
void f_cpA1211(union  A1211 *x, const union  A1211 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1211(const union  A1211 *x, const union  A1211 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1211() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1211), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1211, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1211, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1211, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1211, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1211, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <<d>idjpsldsl> */
union  A1212 { union  A94 m0; i m1; d m2; j m3; p m4; s m5; l m6; d m7; s m8; l m9; };
void f_cpA1212(union  A1212 *x, const union  A1212 *y) { f_cpA94(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1212(const union  A1212 *x, const union  A1212 *y) { return f_cmpA94(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1212() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1212), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1212, m0), 1, f_touchdcstA94());
		dcStructField(st, 'i', offsetof(union  A1212, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1212, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1212, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1212, m4), 1);
		dcStructField(st, 's', offsetof(union  A1212, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1212, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1212, m7), 1);
		dcStructField(st, 's', offsetof(union  A1212, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1212, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ss> */
union  A1213 { s m0; s m1; };
void f_cpA1213(union  A1213 *x, const union  A1213 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1213(const union  A1213 *x, const union  A1213 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1213() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1213), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1213, m0), 1);
		dcStructField(st, 's', offsetof(union  A1213, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dpjj<ss>} */
struct A1214 { d m0; p m1; j m2; j m3; union  A1213 m4; };
void f_cpA1214(struct A1214 *x, const struct A1214 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA1213(&x->m4, &y->m4); };
int f_cmpA1214(const struct A1214 *x, const struct A1214 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1213(&x->m4, &y->m4); };
DCstruct* f_touchdcstA1214() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1214), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1214, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1214, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1214, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1214, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1214, m4), 1, f_touchdcstA1213());
		dcCloseStruct(st);
	}
	return st;
};
/* <jdip> */
union  A1215 { j m0; d m1; i m2; p m3; };
void f_cpA1215(union  A1215 *x, const union  A1215 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1215(const union  A1215 *x, const union  A1215 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1215() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1215), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1215, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1215, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1215, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1215, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ic} */
struct A1216 { i m0; c m1; };
void f_cpA1216(struct A1216 *x, const struct A1216 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1216(const struct A1216 *x, const struct A1216 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1216() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A1216), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1216, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1216, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ccp} */
struct A1217 { c m0; c m1; p m2; };
void f_cpA1217(struct A1217 *x, const struct A1217 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1217(const struct A1217 *x, const struct A1217 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1217() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1217), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1217, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1217, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1217, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ppsi{ccp}} */
struct A1218 { p m0; p m1; s m2; i m3; struct A1217 m4; };
void f_cpA1218(struct A1218 *x, const struct A1218 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA1217(&x->m4, &y->m4); };
int f_cmpA1218(const struct A1218 *x, const struct A1218 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1217(&x->m4, &y->m4); };
DCstruct* f_touchdcstA1218() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1218), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1218, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1218, m1), 1);
		dcStructField(st, 's', offsetof(struct A1218, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1218, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1218, m4), 1, f_touchdcstA1217());
		dcCloseStruct(st);
	}
	return st;
};
/* {fl} */
struct A1219 { f m0; l m1; };
void f_cpA1219(struct A1219 *x, const struct A1219 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1219(const struct A1219 *x, const struct A1219 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1219() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A1219), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1219, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1219, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <plflfljjcdfi> */
union  A1220 { p m0; l m1; f m2; l m3; f m4; l m5; j m6; j m7; c m8; d m9; f m10; i m11; };
void f_cpA1220(union  A1220 *x, const union  A1220 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1220(const union  A1220 *x, const union  A1220 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1220() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(union  A1220), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1220, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1220, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1220, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1220, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1220, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1220, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1220, m6), 1);
		dcStructField(st, 'j', offsetof(union  A1220, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1220, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1220, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1220, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1220, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ilpi} */
struct A1221 { i m0; l m1; p m2; i m3; };
void f_cpA1221(struct A1221 *x, const struct A1221 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1221(const struct A1221 *x, const struct A1221 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1221() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1221), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1221, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1221, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1221, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1221, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{fl}fj<plflfljjcdfi>lsssl{ilpi}icsip> */
union  A1222 { struct A1219 m0; f m1; j m2; union  A1220 m3; l m4; s m5; s m6; s m7; l m8; struct A1221 m9; i m10; c m11; s m12; i m13; p m14; };
void f_cpA1222(union  A1222 *x, const union  A1222 *y) { f_cpA1219(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA1220(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA1221(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA1222(const union  A1222 *x, const union  A1222 *y) { return f_cmpA1219(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1220(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1221(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA1222() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A1222), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1222, m0), 1, f_touchdcstA1219());
		dcStructField(st, 'f', offsetof(union  A1222, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1222, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1222, m3), 1, f_touchdcstA1220());
		dcStructField(st, 'l', offsetof(union  A1222, m4), 1);
		dcStructField(st, 's', offsetof(union  A1222, m5), 1);
		dcStructField(st, 's', offsetof(union  A1222, m6), 1);
		dcStructField(st, 's', offsetof(union  A1222, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1222, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1222, m9), 1, f_touchdcstA1221());
		dcStructField(st, 'i', offsetof(union  A1222, m10), 1);
		dcStructField(st, 'c', offsetof(union  A1222, m11), 1);
		dcStructField(st, 's', offsetof(union  A1222, m12), 1);
		dcStructField(st, 'i', offsetof(union  A1222, m13), 1);
		dcStructField(st, 'p', offsetof(union  A1222, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <sjd<{fl}fj<plflfljjcdfi>lsssl{ilpi}icsip>pisjpi> */
union  A1223 { s m0; j m1; d m2; union  A1222 m3; p m4; i m5; s m6; j m7; p m8; i m9; };
void f_cpA1223(union  A1223 *x, const union  A1223 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1222(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1223(const union  A1223 *x, const union  A1223 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1222(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1223() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1223), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1223, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1223, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1223, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1223, m3), 1, f_touchdcstA1222());
		dcStructField(st, 'p', offsetof(union  A1223, m4), 1);
		dcStructField(st, 'i', offsetof(union  A1223, m5), 1);
		dcStructField(st, 's', offsetof(union  A1223, m6), 1);
		dcStructField(st, 'j', offsetof(union  A1223, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1223, m8), 1);
		dcStructField(st, 'i', offsetof(union  A1223, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fd> */
union  A1224 { f m0; d m1; };
void f_cpA1224(union  A1224 *x, const union  A1224 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1224(const union  A1224 *x, const union  A1224 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1224() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1224), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1224, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1224, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cs<j>cccijpssjfjl<fd>} */
struct A1225 { c m0; s m1; union  A47 m2; c m3; c m4; c m5; i m6; j m7; p m8; s m9; s m10; j m11; f m12; j m13; l m14; union  A1224 m15; };
void f_cpA1225(struct A1225 *x, const struct A1225 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA47(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA1224(&x->m15, &y->m15); };
int f_cmpA1225(const struct A1225 *x, const struct A1225 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA47(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA1224(&x->m15, &y->m15); };
DCstruct* f_touchdcstA1225() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(struct A1225), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1225, m0), 1);
		dcStructField(st, 's', offsetof(struct A1225, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1225, m2), 1, f_touchdcstA47());
		dcStructField(st, 'c', offsetof(struct A1225, m3), 1);
		dcStructField(st, 'c', offsetof(struct A1225, m4), 1);
		dcStructField(st, 'c', offsetof(struct A1225, m5), 1);
		dcStructField(st, 'i', offsetof(struct A1225, m6), 1);
		dcStructField(st, 'j', offsetof(struct A1225, m7), 1);
		dcStructField(st, 'p', offsetof(struct A1225, m8), 1);
		dcStructField(st, 's', offsetof(struct A1225, m9), 1);
		dcStructField(st, 's', offsetof(struct A1225, m10), 1);
		dcStructField(st, 'j', offsetof(struct A1225, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1225, m12), 1);
		dcStructField(st, 'j', offsetof(struct A1225, m13), 1);
		dcStructField(st, 'l', offsetof(struct A1225, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1225, m15), 1, f_touchdcstA1224());
		dcCloseStruct(st);
	}
	return st;
};
/* <pf> */
union  A1226 { p m0; f m1; };
void f_cpA1226(union  A1226 *x, const union  A1226 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1226(const union  A1226 *x, const union  A1226 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1226() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1226), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1226, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1226, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cjji} */
struct A1227 { c m0; j m1; j m2; i m3; };
void f_cpA1227(struct A1227 *x, const struct A1227 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1227(const struct A1227 *x, const struct A1227 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1227() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(struct A1227), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1227, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1227, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1227, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1227, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ifd} */
struct A1228 { i m0; f m1; d m2; };
void f_cpA1228(struct A1228 *x, const struct A1228 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1228(const struct A1228 *x, const struct A1228 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1228() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1228), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1228, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1228, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1228, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jjjpplfdss> */
union  A1229 { j m0; j m1; j m2; p m3; p m4; l m5; f m6; d m7; s m8; s m9; };
void f_cpA1229(union  A1229 *x, const union  A1229 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1229(const union  A1229 *x, const union  A1229 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1229() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1229), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1229, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1229, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1229, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1229, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1229, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1229, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1229, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1229, m7), 1);
		dcStructField(st, 's', offsetof(union  A1229, m8), 1);
		dcStructField(st, 's', offsetof(union  A1229, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jffl> */
union  A1230 { j m0; f m1; f m2; l m3; };
void f_cpA1230(union  A1230 *x, const union  A1230 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; };
int f_cmpA1230(const union  A1230 *x, const union  A1230 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCstruct* f_touchdcstA1230() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(4, sizeof(union  A1230), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1230, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1230, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1230, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1230, m3), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ldspffsdilli} */
struct A1231 { l m0; d m1; s m2; p m3; f m4; f m5; s m6; d m7; i m8; l m9; l m10; i m11; };
void f_cpA1231(struct A1231 *x, const struct A1231 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1231(const struct A1231 *x, const struct A1231 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1231() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A1231), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1231, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1231, m1), 1);
		dcStructField(st, 's', offsetof(struct A1231, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1231, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1231, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1231, m5), 1);
		dcStructField(st, 's', offsetof(struct A1231, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1231, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1231, m8), 1);
		dcStructField(st, 'l', offsetof(struct A1231, m9), 1);
		dcStructField(st, 'l', offsetof(struct A1231, m10), 1);
		dcStructField(st, 'i', offsetof(struct A1231, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {pic} */
struct A1232 { p m0; i m1; c m2; };
void f_cpA1232(struct A1232 *x, const struct A1232 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1232(const struct A1232 *x, const struct A1232 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1232() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1232), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1232, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1232, m1), 1);
		dcStructField(st, 'c', offsetof(struct A1232, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <c{ifd}disfllldspsll<jjjpplfdss>l<s>i<jffl>lfl{ldspffsdilli}ij{pic}p> */
union  A1233 { c m0; struct A1228 m1; d m2; i m3; s m4; f m5; l m6; l m7; l m8; d m9; s m10; p m11; s m12; l m13; l m14; union  A1229 m15; l m16; union  A75 m17; i m18; union  A1230 m19; l m20; f m21; l m22; struct A1231 m23; i m24; j m25; struct A1232 m26; p m27; };
void f_cpA1233(union  A1233 *x, const union  A1233 *y) { x->m0 = y->m0; f_cpA1228(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA1229(&x->m15, &y->m15); x->m16 = y->m16; f_cpA75(&x->m17, &y->m17); x->m18 = y->m18; f_cpA1230(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; f_cpA1231(&x->m23, &y->m23); x->m24 = y->m24; x->m25 = y->m25; f_cpA1232(&x->m26, &y->m26); x->m27 = y->m27; };
int f_cmpA1233(const union  A1233 *x, const union  A1233 *y) { return x->m0 == y->m0 && f_cmpA1228(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA1229(&x->m15, &y->m15) && x->m16 == y->m16 && f_cmpA75(&x->m17, &y->m17) && x->m18 == y->m18 && f_cmpA1230(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && f_cmpA1231(&x->m23, &y->m23) && x->m24 == y->m24 && x->m25 == y->m25 && f_cmpA1232(&x->m26, &y->m26) && x->m27 == y->m27; };
DCstruct* f_touchdcstA1233() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(28, sizeof(union  A1233), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1233, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1233, m1), 1, f_touchdcstA1228());
		dcStructField(st, 'd', offsetof(union  A1233, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1233, m3), 1);
		dcStructField(st, 's', offsetof(union  A1233, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1233, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1233, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1233, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1233, m8), 1);
		dcStructField(st, 'd', offsetof(union  A1233, m9), 1);
		dcStructField(st, 's', offsetof(union  A1233, m10), 1);
		dcStructField(st, 'p', offsetof(union  A1233, m11), 1);
		dcStructField(st, 's', offsetof(union  A1233, m12), 1);
		dcStructField(st, 'l', offsetof(union  A1233, m13), 1);
		dcStructField(st, 'l', offsetof(union  A1233, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1233, m15), 1, f_touchdcstA1229());
		dcStructField(st, 'l', offsetof(union  A1233, m16), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1233, m17), 1, f_touchdcstA75());
		dcStructField(st, 'i', offsetof(union  A1233, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1233, m19), 1, f_touchdcstA1230());
		dcStructField(st, 'l', offsetof(union  A1233, m20), 1);
		dcStructField(st, 'f', offsetof(union  A1233, m21), 1);
		dcStructField(st, 'l', offsetof(union  A1233, m22), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1233, m23), 1, f_touchdcstA1231());
		dcStructField(st, 'i', offsetof(union  A1233, m24), 1);
		dcStructField(st, 'j', offsetof(union  A1233, m25), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1233, m26), 1, f_touchdcstA1232());
		dcStructField(st, 'p', offsetof(union  A1233, m27), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {icpddjpcjjslf} */
struct A1234 { i m0; c m1; p m2; d m3; d m4; j m5; p m6; c m7; j m8; j m9; s m10; l m11; f m12; };
void f_cpA1234(struct A1234 *x, const struct A1234 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA1234(const struct A1234 *x, const struct A1234 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA1234() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(struct A1234), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1234, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1234, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1234, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1234, m3), 1);
		dcStructField(st, 'd', offsetof(struct A1234, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1234, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1234, m6), 1);
		dcStructField(st, 'c', offsetof(struct A1234, m7), 1);
		dcStructField(st, 'j', offsetof(struct A1234, m8), 1);
		dcStructField(st, 'j', offsetof(struct A1234, m9), 1);
		dcStructField(st, 's', offsetof(struct A1234, m10), 1);
		dcStructField(st, 'l', offsetof(struct A1234, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1234, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {idlildpsc{icpddjpcjjslf}c} */
struct A1235 { i m0; d m1; l m2; i m3; l m4; d m5; p m6; s m7; c m8; struct A1234 m9; c m10; };
void f_cpA1235(struct A1235 *x, const struct A1235 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA1234(&x->m9, &y->m9); x->m10 = y->m10; };
int f_cmpA1235(const struct A1235 *x, const struct A1235 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1234(&x->m9, &y->m9) && x->m10 == y->m10; };
DCstruct* f_touchdcstA1235() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(struct A1235), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1235, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1235, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1235, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1235, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1235, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1235, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1235, m6), 1);
		dcStructField(st, 's', offsetof(struct A1235, m7), 1);
		dcStructField(st, 'c', offsetof(struct A1235, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1235, m9), 1, f_touchdcstA1234());
		dcStructField(st, 'c', offsetof(struct A1235, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dlj> */
union  A1236 { d m0; l m1; j m2; };
void f_cpA1236(union  A1236 *x, const union  A1236 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1236(const union  A1236 *x, const union  A1236 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1236() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1236), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1236, m0), 1);
		dcStructField(st, 'l', offsetof(union  A1236, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1236, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <i{j}ip<dlj>> */
union  A1237 { i m0; struct A303 m1; i m2; p m3; union  A1236 m4; };
void f_cpA1237(union  A1237 *x, const union  A1237 *y) { x->m0 = y->m0; f_cpA303(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; f_cpA1236(&x->m4, &y->m4); };
int f_cmpA1237(const union  A1237 *x, const union  A1237 *y) { return x->m0 == y->m0 && f_cmpA303(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1236(&x->m4, &y->m4); };
DCstruct* f_touchdcstA1237() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1237), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1237, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1237, m1), 1, f_touchdcstA303());
		dcStructField(st, 'i', offsetof(union  A1237, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1237, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1237, m4), 1, f_touchdcstA1236());
		dcCloseStruct(st);
	}
	return st;
};
/* <jccficscl> */
union  A1238 { j m0; c m1; c m2; f m3; i m4; c m5; s m6; c m7; l m8; };
void f_cpA1238(union  A1238 *x, const union  A1238 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1238(const union  A1238 *x, const union  A1238 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1238() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1238), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1238, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1238, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1238, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1238, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1238, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1238, m5), 1);
		dcStructField(st, 's', offsetof(union  A1238, m6), 1);
		dcStructField(st, 'c', offsetof(union  A1238, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1238, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dffjljf> */
union  A1239 { d m0; f m1; f m2; j m3; l m4; j m5; f m6; };
void f_cpA1239(union  A1239 *x, const union  A1239 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1239(const union  A1239 *x, const union  A1239 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1239() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1239), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1239, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1239, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1239, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1239, m3), 1);
		dcStructField(st, 'l', offsetof(union  A1239, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1239, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1239, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ds> */
union  A1240 { d m0; s m1; };
void f_cpA1240(union  A1240 *x, const union  A1240 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1240(const union  A1240 *x, const union  A1240 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1240() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1240), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1240, m0), 1);
		dcStructField(st, 's', offsetof(union  A1240, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {cdfpppjcl} */
struct A1241 { c m0; d m1; f m2; p m3; p m4; p m5; j m6; c m7; l m8; };
void f_cpA1241(struct A1241 *x, const struct A1241 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1241(const struct A1241 *x, const struct A1241 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1241() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1241), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1241, m0), 1);
		dcStructField(st, 'd', offsetof(struct A1241, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1241, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1241, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1241, m4), 1);
		dcStructField(st, 'p', offsetof(struct A1241, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1241, m6), 1);
		dcStructField(st, 'c', offsetof(struct A1241, m7), 1);
		dcStructField(st, 'l', offsetof(struct A1241, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lpfjp> */
union  A1242 { l m0; p m1; f m2; j m3; p m4; };
void f_cpA1242(union  A1242 *x, const union  A1242 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1242(const union  A1242 *x, const union  A1242 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1242() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1242), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1242, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1242, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1242, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1242, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1242, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {i<jccficscl><dffjljf>ls<ds>f{cdfpppjcl}ddd<lpfjp>ljdfcliccfpp} */
struct A1243 { i m0; union  A1238 m1; union  A1239 m2; l m3; s m4; union  A1240 m5; f m6; struct A1241 m7; d m8; d m9; d m10; union  A1242 m11; l m12; j m13; d m14; f m15; c m16; l m17; i m18; c m19; c m20; f m21; p m22; p m23; };
void f_cpA1243(struct A1243 *x, const struct A1243 *y) { x->m0 = y->m0; f_cpA1238(&x->m1, &y->m1); f_cpA1239(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; f_cpA1240(&x->m5, &y->m5); x->m6 = y->m6; f_cpA1241(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; f_cpA1242(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; };
int f_cmpA1243(const struct A1243 *x, const struct A1243 *y) { return x->m0 == y->m0 && f_cmpA1238(&x->m1, &y->m1) && f_cmpA1239(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1240(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA1241(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1242(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23; };
DCstruct* f_touchdcstA1243() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(24, sizeof(struct A1243), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1243, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1243, m1), 1, f_touchdcstA1238());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1243, m2), 1, f_touchdcstA1239());
		dcStructField(st, 'l', offsetof(struct A1243, m3), 1);
		dcStructField(st, 's', offsetof(struct A1243, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1243, m5), 1, f_touchdcstA1240());
		dcStructField(st, 'f', offsetof(struct A1243, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1243, m7), 1, f_touchdcstA1241());
		dcStructField(st, 'd', offsetof(struct A1243, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1243, m9), 1);
		dcStructField(st, 'd', offsetof(struct A1243, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1243, m11), 1, f_touchdcstA1242());
		dcStructField(st, 'l', offsetof(struct A1243, m12), 1);
		dcStructField(st, 'j', offsetof(struct A1243, m13), 1);
		dcStructField(st, 'd', offsetof(struct A1243, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1243, m15), 1);
		dcStructField(st, 'c', offsetof(struct A1243, m16), 1);
		dcStructField(st, 'l', offsetof(struct A1243, m17), 1);
		dcStructField(st, 'i', offsetof(struct A1243, m18), 1);
		dcStructField(st, 'c', offsetof(struct A1243, m19), 1);
		dcStructField(st, 'c', offsetof(struct A1243, m20), 1);
		dcStructField(st, 'f', offsetof(struct A1243, m21), 1);
		dcStructField(st, 'p', offsetof(struct A1243, m22), 1);
		dcStructField(st, 'p', offsetof(struct A1243, m23), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <piif<c{ifd}disfllldspsll<jjjpplfdss>l<s>i<jffl>lfl{ldspffsdilli}ij{pic}p>scl<l>ssjddj{idlildpsc{icpddjpcjjslf}c}fjf<i{j}ip<dlj>>spcp{i<jccficscl><dffjljf>ls<ds>f{cdfpppjcl}ddd<lpfjp>ljdfcliccfpp}cjfd> */
union  A1244 { p m0; i m1; i m2; f m3; union  A1233 m4; s m5; c m6; l m7; union  A127 m8; s m9; s m10; j m11; d m12; d m13; j m14; struct A1235 m15; f m16; j m17; f m18; union  A1237 m19; s m20; p m21; c m22; p m23; struct A1243 m24; c m25; j m26; f m27; d m28; };
void f_cpA1244(union  A1244 *x, const union  A1244 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; f_cpA1233(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA127(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA1235(&x->m15, &y->m15); x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; f_cpA1237(&x->m19, &y->m19); x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; f_cpA1243(&x->m24, &y->m24); x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; };
int f_cmpA1244(const union  A1244 *x, const union  A1244 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1233(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA127(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA1235(&x->m15, &y->m15) && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && f_cmpA1237(&x->m19, &y->m19) && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && f_cmpA1243(&x->m24, &y->m24) && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28; };
DCstruct* f_touchdcstA1244() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(29, sizeof(union  A1244), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1244, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1244, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1244, m2), 1);
		dcStructField(st, 'f', offsetof(union  A1244, m3), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1244, m4), 1, f_touchdcstA1233());
		dcStructField(st, 's', offsetof(union  A1244, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1244, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1244, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1244, m8), 1, f_touchdcstA127());
		dcStructField(st, 's', offsetof(union  A1244, m9), 1);
		dcStructField(st, 's', offsetof(union  A1244, m10), 1);
		dcStructField(st, 'j', offsetof(union  A1244, m11), 1);
		dcStructField(st, 'd', offsetof(union  A1244, m12), 1);
		dcStructField(st, 'd', offsetof(union  A1244, m13), 1);
		dcStructField(st, 'j', offsetof(union  A1244, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1244, m15), 1, f_touchdcstA1235());
		dcStructField(st, 'f', offsetof(union  A1244, m16), 1);
		dcStructField(st, 'j', offsetof(union  A1244, m17), 1);
		dcStructField(st, 'f', offsetof(union  A1244, m18), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1244, m19), 1, f_touchdcstA1237());
		dcStructField(st, 's', offsetof(union  A1244, m20), 1);
		dcStructField(st, 'p', offsetof(union  A1244, m21), 1);
		dcStructField(st, 'c', offsetof(union  A1244, m22), 1);
		dcStructField(st, 'p', offsetof(union  A1244, m23), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1244, m24), 1, f_touchdcstA1243());
		dcStructField(st, 'c', offsetof(union  A1244, m25), 1);
		dcStructField(st, 'j', offsetof(union  A1244, m26), 1);
		dcStructField(st, 'f', offsetof(union  A1244, m27), 1);
		dcStructField(st, 'd', offsetof(union  A1244, m28), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lcjcflpsfsfpi> */
union  A1245 { l m0; c m1; j m2; c m3; f m4; l m5; p m6; s m7; f m8; s m9; f m10; p m11; i m12; };
void f_cpA1245(union  A1245 *x, const union  A1245 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA1245(const union  A1245 *x, const union  A1245 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA1245() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A1245), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1245, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1245, m1), 1);
		dcStructField(st, 'j', offsetof(union  A1245, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1245, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1245, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1245, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1245, m6), 1);
		dcStructField(st, 's', offsetof(union  A1245, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1245, m8), 1);
		dcStructField(st, 's', offsetof(union  A1245, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1245, m10), 1);
		dcStructField(st, 'p', offsetof(union  A1245, m11), 1);
		dcStructField(st, 'i', offsetof(union  A1245, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {jffjllpicpsfpdjpscljf} */
struct A1246 { j m0; f m1; f m2; j m3; l m4; l m5; p m6; i m7; c m8; p m9; s m10; f m11; p m12; d m13; j m14; p m15; s m16; c m17; l m18; j m19; f m20; };
void f_cpA1246(struct A1246 *x, const struct A1246 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA1246(const struct A1246 *x, const struct A1246 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA1246() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(struct A1246), DC_TRUE);
		dcStructField(st, 'j', offsetof(struct A1246, m0), 1);
		dcStructField(st, 'f', offsetof(struct A1246, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1246, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1246, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1246, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1246, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1246, m6), 1);
		dcStructField(st, 'i', offsetof(struct A1246, m7), 1);
		dcStructField(st, 'c', offsetof(struct A1246, m8), 1);
		dcStructField(st, 'p', offsetof(struct A1246, m9), 1);
		dcStructField(st, 's', offsetof(struct A1246, m10), 1);
		dcStructField(st, 'f', offsetof(struct A1246, m11), 1);
		dcStructField(st, 'p', offsetof(struct A1246, m12), 1);
		dcStructField(st, 'd', offsetof(struct A1246, m13), 1);
		dcStructField(st, 'j', offsetof(struct A1246, m14), 1);
		dcStructField(st, 'p', offsetof(struct A1246, m15), 1);
		dcStructField(st, 's', offsetof(struct A1246, m16), 1);
		dcStructField(st, 'c', offsetof(struct A1246, m17), 1);
		dcStructField(st, 'l', offsetof(struct A1246, m18), 1);
		dcStructField(st, 'j', offsetof(struct A1246, m19), 1);
		dcStructField(st, 'f', offsetof(struct A1246, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {sss} */
struct A1247 { s m0; s m1; s m2; };
void f_cpA1247(struct A1247 *x, const struct A1247 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1247(const struct A1247 *x, const struct A1247 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1247() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(struct A1247), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1247, m0), 1);
		dcStructField(st, 's', offsetof(struct A1247, m1), 1);
		dcStructField(st, 's', offsetof(struct A1247, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ljc<lcjcflpsfsfpi>j{jffjllpicpsfpdjpscljf}ppsi{sss}fl> */
union  A1248 { l m0; j m1; c m2; union  A1245 m3; j m4; struct A1246 m5; p m6; p m7; s m8; i m9; struct A1247 m10; f m11; l m12; };
void f_cpA1248(union  A1248 *x, const union  A1248 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1245(&x->m3, &y->m3); x->m4 = y->m4; f_cpA1246(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA1247(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; };
int f_cmpA1248(const union  A1248 *x, const union  A1248 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1245(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1246(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1247(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12; };
DCstruct* f_touchdcstA1248() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(13, sizeof(union  A1248), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1248, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1248, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1248, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1248, m3), 1, f_touchdcstA1245());
		dcStructField(st, 'j', offsetof(union  A1248, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1248, m5), 1, f_touchdcstA1246());
		dcStructField(st, 'p', offsetof(union  A1248, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1248, m7), 1);
		dcStructField(st, 's', offsetof(union  A1248, m8), 1);
		dcStructField(st, 'i', offsetof(union  A1248, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1248, m10), 1, f_touchdcstA1247());
		dcStructField(st, 'f', offsetof(union  A1248, m11), 1);
		dcStructField(st, 'l', offsetof(union  A1248, m12), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <idp> */
union  A1249 { i m0; d m1; p m2; };
void f_cpA1249(union  A1249 *x, const union  A1249 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; };
int f_cmpA1249(const union  A1249 *x, const union  A1249 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCstruct* f_touchdcstA1249() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(3, sizeof(union  A1249), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1249, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1249, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1249, m2), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iifdpppippljscddljjdcffjcsilccifpc> */
union  A1250 { i m0; i m1; f m2; d m3; p m4; p m5; p m6; i m7; p m8; p m9; l m10; j m11; s m12; c m13; d m14; d m15; l m16; j m17; j m18; d m19; c m20; f m21; f m22; j m23; c m24; s m25; i m26; l m27; c m28; c m29; i m30; f m31; p m32; c m33; };
void f_cpA1250(union  A1250 *x, const union  A1250 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; };
int f_cmpA1250(const union  A1250 *x, const union  A1250 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33; };
DCstruct* f_touchdcstA1250() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(34, sizeof(union  A1250), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1250, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1250, m1), 1);
		dcStructField(st, 'f', offsetof(union  A1250, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1250, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1250, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1250, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1250, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1250, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1250, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1250, m9), 1);
		dcStructField(st, 'l', offsetof(union  A1250, m10), 1);
		dcStructField(st, 'j', offsetof(union  A1250, m11), 1);
		dcStructField(st, 's', offsetof(union  A1250, m12), 1);
		dcStructField(st, 'c', offsetof(union  A1250, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1250, m14), 1);
		dcStructField(st, 'd', offsetof(union  A1250, m15), 1);
		dcStructField(st, 'l', offsetof(union  A1250, m16), 1);
		dcStructField(st, 'j', offsetof(union  A1250, m17), 1);
		dcStructField(st, 'j', offsetof(union  A1250, m18), 1);
		dcStructField(st, 'd', offsetof(union  A1250, m19), 1);
		dcStructField(st, 'c', offsetof(union  A1250, m20), 1);
		dcStructField(st, 'f', offsetof(union  A1250, m21), 1);
		dcStructField(st, 'f', offsetof(union  A1250, m22), 1);
		dcStructField(st, 'j', offsetof(union  A1250, m23), 1);
		dcStructField(st, 'c', offsetof(union  A1250, m24), 1);
		dcStructField(st, 's', offsetof(union  A1250, m25), 1);
		dcStructField(st, 'i', offsetof(union  A1250, m26), 1);
		dcStructField(st, 'l', offsetof(union  A1250, m27), 1);
		dcStructField(st, 'c', offsetof(union  A1250, m28), 1);
		dcStructField(st, 'c', offsetof(union  A1250, m29), 1);
		dcStructField(st, 'i', offsetof(union  A1250, m30), 1);
		dcStructField(st, 'f', offsetof(union  A1250, m31), 1);
		dcStructField(st, 'p', offsetof(union  A1250, m32), 1);
		dcStructField(st, 'c', offsetof(union  A1250, m33), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<iifdpppippljscddljjdcffjcsilccifpc>} */
struct A1251 { union  A1250 m0; };
void f_cpA1251(struct A1251 *x, const struct A1251 *y) { f_cpA1250(&x->m0, &y->m0); };
int f_cmpA1251(const struct A1251 *x, const struct A1251 *y) { return f_cmpA1250(&x->m0, &y->m0); };
DCstruct* f_touchdcstA1251() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(1, sizeof(struct A1251), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1251, m0), 1, f_touchdcstA1250());
		dcCloseStruct(st);
	}
	return st;
};
/* <ldsidsf> */
union  A1252 { l m0; d m1; s m2; i m3; d m4; s m5; f m6; };
void f_cpA1252(union  A1252 *x, const union  A1252 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1252(const union  A1252 *x, const union  A1252 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1252() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1252), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1252, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1252, m1), 1);
		dcStructField(st, 's', offsetof(union  A1252, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1252, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1252, m4), 1);
		dcStructField(st, 's', offsetof(union  A1252, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1252, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cp<ldsidsf>jscjldpffjflld> */
union  A1253 { c m0; p m1; union  A1252 m2; j m3; s m4; c m5; j m6; l m7; d m8; p m9; f m10; f m11; j m12; f m13; l m14; l m15; d m16; };
void f_cpA1253(union  A1253 *x, const union  A1253 *y) { x->m0 = y->m0; x->m1 = y->m1; f_cpA1252(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA1253(const union  A1253 *x, const union  A1253 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1252(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA1253() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(union  A1253), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1253, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1253, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1253, m2), 1, f_touchdcstA1252());
		dcStructField(st, 'j', offsetof(union  A1253, m3), 1);
		dcStructField(st, 's', offsetof(union  A1253, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1253, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1253, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1253, m7), 1);
		dcStructField(st, 'd', offsetof(union  A1253, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1253, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1253, m10), 1);
		dcStructField(st, 'f', offsetof(union  A1253, m11), 1);
		dcStructField(st, 'j', offsetof(union  A1253, m12), 1);
		dcStructField(st, 'f', offsetof(union  A1253, m13), 1);
		dcStructField(st, 'l', offsetof(union  A1253, m14), 1);
		dcStructField(st, 'l', offsetof(union  A1253, m15), 1);
		dcStructField(st, 'd', offsetof(union  A1253, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <iddiiiscfld> */
union  A1254 { i m0; d m1; d m2; i m3; i m4; i m5; s m6; c m7; f m8; l m9; d m10; };
void f_cpA1254(union  A1254 *x, const union  A1254 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1254(const union  A1254 *x, const union  A1254 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1254() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1254), DC_TRUE);
		dcStructField(st, 'i', offsetof(union  A1254, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1254, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1254, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1254, m3), 1);
		dcStructField(st, 'i', offsetof(union  A1254, m4), 1);
		dcStructField(st, 'i', offsetof(union  A1254, m5), 1);
		dcStructField(st, 's', offsetof(union  A1254, m6), 1);
		dcStructField(st, 'c', offsetof(union  A1254, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1254, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1254, m9), 1);
		dcStructField(st, 'd', offsetof(union  A1254, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijllc<iddiiiscfld>dl} */
struct A1255 { i m0; j m1; l m2; l m3; c m4; union  A1254 m5; d m6; l m7; };
void f_cpA1255(struct A1255 *x, const struct A1255 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; f_cpA1254(&x->m5, &y->m5); x->m6 = y->m6; x->m7 = y->m7; };
int f_cmpA1255(const struct A1255 *x, const struct A1255 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1254(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7; };
DCstruct* f_touchdcstA1255() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(8, sizeof(struct A1255), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1255, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1255, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1255, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1255, m3), 1);
		dcStructField(st, 'c', offsetof(struct A1255, m4), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1255, m5), 1, f_touchdcstA1254());
		dcStructField(st, 'd', offsetof(struct A1255, m6), 1);
		dcStructField(st, 'l', offsetof(struct A1255, m7), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{<iifdpppippljscddljjdcffjcsilccifpc>}<cp<ldsidsf>jscjldpffjflld>f{ijllc<iddiiiscfld>dl}iljfflfllsccl} */
struct A1256 { struct A1251 m0; union  A1253 m1; f m2; struct A1255 m3; i m4; l m5; j m6; f m7; f m8; l m9; f m10; l m11; l m12; s m13; c m14; c m15; l m16; };
void f_cpA1256(struct A1256 *x, const struct A1256 *y) { f_cpA1251(&x->m0, &y->m0); f_cpA1253(&x->m1, &y->m1); x->m2 = y->m2; f_cpA1255(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; };
int f_cmpA1256(const struct A1256 *x, const struct A1256 *y) { return f_cmpA1251(&x->m0, &y->m0) && f_cmpA1253(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA1255(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16; };
DCstruct* f_touchdcstA1256() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(17, sizeof(struct A1256), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1256, m0), 1, f_touchdcstA1251());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1256, m1), 1, f_touchdcstA1253());
		dcStructField(st, 'f', offsetof(struct A1256, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1256, m3), 1, f_touchdcstA1255());
		dcStructField(st, 'i', offsetof(struct A1256, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1256, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1256, m6), 1);
		dcStructField(st, 'f', offsetof(struct A1256, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1256, m8), 1);
		dcStructField(st, 'l', offsetof(struct A1256, m9), 1);
		dcStructField(st, 'f', offsetof(struct A1256, m10), 1);
		dcStructField(st, 'l', offsetof(struct A1256, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1256, m12), 1);
		dcStructField(st, 's', offsetof(struct A1256, m13), 1);
		dcStructField(st, 'c', offsetof(struct A1256, m14), 1);
		dcStructField(st, 'c', offsetof(struct A1256, m15), 1);
		dcStructField(st, 'l', offsetof(struct A1256, m16), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jdspfj> */
union  A1257 { j m0; d m1; s m2; p m3; f m4; j m5; };
void f_cpA1257(union  A1257 *x, const union  A1257 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1257(const union  A1257 *x, const union  A1257 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1257() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1257), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1257, m0), 1);
		dcStructField(st, 'd', offsetof(union  A1257, m1), 1);
		dcStructField(st, 's', offsetof(union  A1257, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1257, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1257, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1257, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ljiilscdpl} */
struct A1258 { l m0; j m1; i m2; i m3; l m4; s m5; c m6; d m7; p m8; l m9; };
void f_cpA1258(struct A1258 *x, const struct A1258 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1258(const struct A1258 *x, const struct A1258 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1258() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(struct A1258), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1258, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1258, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1258, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1258, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1258, m4), 1);
		dcStructField(st, 's', offsetof(struct A1258, m5), 1);
		dcStructField(st, 'c', offsetof(struct A1258, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1258, m7), 1);
		dcStructField(st, 'p', offsetof(struct A1258, m8), 1);
		dcStructField(st, 'l', offsetof(struct A1258, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spllscpffjpflsdpcsfsssdjfpdfpsicffljdijjj} */
struct A1259 { s m0; p m1; l m2; l m3; s m4; c m5; p m6; f m7; f m8; j m9; p m10; f m11; l m12; s m13; d m14; p m15; c m16; s m17; f m18; s m19; s m20; s m21; d m22; j m23; f m24; p m25; d m26; f m27; p m28; s m29; i m30; c m31; f m32; f m33; l m34; j m35; d m36; i m37; j m38; j m39; j m40; };
void f_cpA1259(struct A1259 *x, const struct A1259 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; x->m36 = y->m36; x->m37 = y->m37; x->m38 = y->m38; x->m39 = y->m39; x->m40 = y->m40; };
int f_cmpA1259(const struct A1259 *x, const struct A1259 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35 && x->m36 == y->m36 && x->m37 == y->m37 && x->m38 == y->m38 && x->m39 == y->m39 && x->m40 == y->m40; };
DCstruct* f_touchdcstA1259() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(41, sizeof(struct A1259), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1259, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1259, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1259, m2), 1);
		dcStructField(st, 'l', offsetof(struct A1259, m3), 1);
		dcStructField(st, 's', offsetof(struct A1259, m4), 1);
		dcStructField(st, 'c', offsetof(struct A1259, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1259, m6), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m7), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m8), 1);
		dcStructField(st, 'j', offsetof(struct A1259, m9), 1);
		dcStructField(st, 'p', offsetof(struct A1259, m10), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m11), 1);
		dcStructField(st, 'l', offsetof(struct A1259, m12), 1);
		dcStructField(st, 's', offsetof(struct A1259, m13), 1);
		dcStructField(st, 'd', offsetof(struct A1259, m14), 1);
		dcStructField(st, 'p', offsetof(struct A1259, m15), 1);
		dcStructField(st, 'c', offsetof(struct A1259, m16), 1);
		dcStructField(st, 's', offsetof(struct A1259, m17), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m18), 1);
		dcStructField(st, 's', offsetof(struct A1259, m19), 1);
		dcStructField(st, 's', offsetof(struct A1259, m20), 1);
		dcStructField(st, 's', offsetof(struct A1259, m21), 1);
		dcStructField(st, 'd', offsetof(struct A1259, m22), 1);
		dcStructField(st, 'j', offsetof(struct A1259, m23), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m24), 1);
		dcStructField(st, 'p', offsetof(struct A1259, m25), 1);
		dcStructField(st, 'd', offsetof(struct A1259, m26), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m27), 1);
		dcStructField(st, 'p', offsetof(struct A1259, m28), 1);
		dcStructField(st, 's', offsetof(struct A1259, m29), 1);
		dcStructField(st, 'i', offsetof(struct A1259, m30), 1);
		dcStructField(st, 'c', offsetof(struct A1259, m31), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m32), 1);
		dcStructField(st, 'f', offsetof(struct A1259, m33), 1);
		dcStructField(st, 'l', offsetof(struct A1259, m34), 1);
		dcStructField(st, 'j', offsetof(struct A1259, m35), 1);
		dcStructField(st, 'd', offsetof(struct A1259, m36), 1);
		dcStructField(st, 'i', offsetof(struct A1259, m37), 1);
		dcStructField(st, 'j', offsetof(struct A1259, m38), 1);
		dcStructField(st, 'j', offsetof(struct A1259, m39), 1);
		dcStructField(st, 'j', offsetof(struct A1259, m40), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fssicpp> */
union  A1260 { f m0; s m1; s m2; i m3; c m4; p m5; p m6; };
void f_cpA1260(union  A1260 *x, const union  A1260 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1260(const union  A1260 *x, const union  A1260 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1260() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(union  A1260), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1260, m0), 1);
		dcStructField(st, 's', offsetof(union  A1260, m1), 1);
		dcStructField(st, 's', offsetof(union  A1260, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1260, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1260, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1260, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1260, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {spfiffs} */
struct A1261 { s m0; p m1; f m2; i m3; f m4; f m5; s m6; };
void f_cpA1261(struct A1261 *x, const struct A1261 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1261(const struct A1261 *x, const struct A1261 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1261() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1261), DC_TRUE);
		dcStructField(st, 's', offsetof(struct A1261, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1261, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1261, m2), 1);
		dcStructField(st, 'i', offsetof(struct A1261, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1261, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1261, m5), 1);
		dcStructField(st, 's', offsetof(struct A1261, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <jflcpjpfs> */
union  A1262 { j m0; f m1; l m2; c m3; p m4; j m5; p m6; f m7; s m8; };
void f_cpA1262(union  A1262 *x, const union  A1262 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1262(const union  A1262 *x, const union  A1262 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1262() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1262), DC_TRUE);
		dcStructField(st, 'j', offsetof(union  A1262, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1262, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1262, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1262, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1262, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1262, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1262, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1262, m7), 1);
		dcStructField(st, 's', offsetof(union  A1262, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <psi<jdspfj>{ljiilscdpl}dc{spllscpffjpflsdpcsfsssdjfpdfpsicffljdijjj}li<fssicpp>{spfiffs}psd<jflcpjpfs>> */
union  A1263 { p m0; s m1; i m2; union  A1257 m3; struct A1258 m4; d m5; c m6; struct A1259 m7; l m8; i m9; union  A1260 m10; struct A1261 m11; p m12; s m13; d m14; union  A1262 m15; };
void f_cpA1263(union  A1263 *x, const union  A1263 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1257(&x->m3, &y->m3); f_cpA1258(&x->m4, &y->m4); x->m5 = y->m5; x->m6 = y->m6; f_cpA1259(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; f_cpA1260(&x->m10, &y->m10); f_cpA1261(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; f_cpA1262(&x->m15, &y->m15); };
int f_cmpA1263(const union  A1263 *x, const union  A1263 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1257(&x->m3, &y->m3) && f_cmpA1258(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1259(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1260(&x->m10, &y->m10) && f_cmpA1261(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && f_cmpA1262(&x->m15, &y->m15); };
DCstruct* f_touchdcstA1263() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(16, sizeof(union  A1263), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1263, m0), 1);
		dcStructField(st, 's', offsetof(union  A1263, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1263, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1263, m3), 1, f_touchdcstA1257());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1263, m4), 1, f_touchdcstA1258());
		dcStructField(st, 'd', offsetof(union  A1263, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1263, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1263, m7), 1, f_touchdcstA1259());
		dcStructField(st, 'l', offsetof(union  A1263, m8), 1);
		dcStructField(st, 'i', offsetof(union  A1263, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1263, m10), 1, f_touchdcstA1260());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1263, m11), 1, f_touchdcstA1261());
		dcStructField(st, 'p', offsetof(union  A1263, m12), 1);
		dcStructField(st, 's', offsetof(union  A1263, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1263, m14), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1263, m15), 1, f_touchdcstA1262());
		dcCloseStruct(st);
	}
	return st;
};
/* {cl} */
struct A1264 { c m0; l m1; };
void f_cpA1264(struct A1264 *x, const struct A1264 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1264(const struct A1264 *x, const struct A1264 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1264() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A1264), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1264, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1264, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <di> */
union  A1265 { d m0; i m1; };
void f_cpA1265(union  A1265 *x, const union  A1265 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1265(const union  A1265 *x, const union  A1265 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1265() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1265), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1265, m0), 1);
		dcStructField(st, 'i', offsetof(union  A1265, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <fcssdspddifidijscidld> */
union  A1266 { f m0; c m1; s m2; s m3; d m4; s m5; p m6; d m7; d m8; i m9; f m10; i m11; d m12; i m13; j m14; s m15; c m16; i m17; d m18; l m19; d m20; };
void f_cpA1266(union  A1266 *x, const union  A1266 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA1266(const union  A1266 *x, const union  A1266 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA1266() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A1266), DC_TRUE);
		dcStructField(st, 'f', offsetof(union  A1266, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1266, m1), 1);
		dcStructField(st, 's', offsetof(union  A1266, m2), 1);
		dcStructField(st, 's', offsetof(union  A1266, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1266, m4), 1);
		dcStructField(st, 's', offsetof(union  A1266, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1266, m6), 1);
		dcStructField(st, 'd', offsetof(union  A1266, m7), 1);
		dcStructField(st, 'd', offsetof(union  A1266, m8), 1);
		dcStructField(st, 'i', offsetof(union  A1266, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1266, m10), 1);
		dcStructField(st, 'i', offsetof(union  A1266, m11), 1);
		dcStructField(st, 'd', offsetof(union  A1266, m12), 1);
		dcStructField(st, 'i', offsetof(union  A1266, m13), 1);
		dcStructField(st, 'j', offsetof(union  A1266, m14), 1);
		dcStructField(st, 's', offsetof(union  A1266, m15), 1);
		dcStructField(st, 'c', offsetof(union  A1266, m16), 1);
		dcStructField(st, 'i', offsetof(union  A1266, m17), 1);
		dcStructField(st, 'd', offsetof(union  A1266, m18), 1);
		dcStructField(st, 'l', offsetof(union  A1266, m19), 1);
		dcStructField(st, 'd', offsetof(union  A1266, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{pp}ii<fcssdspddifidijscidld><cp>> */
union  A1267 { struct A583 m0; i m1; i m2; union  A1266 m3; union  A66 m4; };
void f_cpA1267(union  A1267 *x, const union  A1267 *y) { f_cpA583(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; f_cpA1266(&x->m3, &y->m3); f_cpA66(&x->m4, &y->m4); };
int f_cmpA1267(const union  A1267 *x, const union  A1267 *y) { return f_cmpA583(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1266(&x->m3, &y->m3) && f_cmpA66(&x->m4, &y->m4); };
DCstruct* f_touchdcstA1267() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1267), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1267, m0), 1, f_touchdcstA583());
		dcStructField(st, 'i', offsetof(union  A1267, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1267, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1267, m3), 1, f_touchdcstA1266());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1267, m4), 1, f_touchdcstA66());
		dcCloseStruct(st);
	}
	return st;
};
/* {pjsffcs} */
struct A1268 { p m0; j m1; s m2; f m3; f m4; c m5; s m6; };
void f_cpA1268(struct A1268 *x, const struct A1268 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; };
int f_cmpA1268(const struct A1268 *x, const struct A1268 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCstruct* f_touchdcstA1268() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(7, sizeof(struct A1268), DC_TRUE);
		dcStructField(st, 'p', offsetof(struct A1268, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1268, m1), 1);
		dcStructField(st, 's', offsetof(struct A1268, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1268, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1268, m4), 1);
		dcStructField(st, 'c', offsetof(struct A1268, m5), 1);
		dcStructField(st, 's', offsetof(struct A1268, m6), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<{pp}ii<fcssdspddifidijscidld><cp>>j{pjsffcs}dc} */
struct A1269 { union  A1267 m0; j m1; struct A1268 m2; d m3; c m4; };
void f_cpA1269(struct A1269 *x, const struct A1269 *y) { f_cpA1267(&x->m0, &y->m0); x->m1 = y->m1; f_cpA1268(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1269(const struct A1269 *x, const struct A1269 *y) { return f_cmpA1267(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA1268(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1269() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(struct A1269), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1269, m0), 1, f_touchdcstA1267());
		dcStructField(st, 'j', offsetof(struct A1269, m1), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1269, m2), 1, f_touchdcstA1268());
		dcStructField(st, 'd', offsetof(struct A1269, m3), 1);
		dcStructField(st, 'c', offsetof(struct A1269, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ppppffppiicclcd> */
union  A1270 { p m0; p m1; p m2; p m3; f m4; f m5; p m6; p m7; i m8; i m9; c m10; c m11; l m12; c m13; d m14; };
void f_cpA1270(union  A1270 *x, const union  A1270 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA1270(const union  A1270 *x, const union  A1270 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA1270() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A1270), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1270, m0), 1);
		dcStructField(st, 'p', offsetof(union  A1270, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1270, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1270, m3), 1);
		dcStructField(st, 'f', offsetof(union  A1270, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1270, m5), 1);
		dcStructField(st, 'p', offsetof(union  A1270, m6), 1);
		dcStructField(st, 'p', offsetof(union  A1270, m7), 1);
		dcStructField(st, 'i', offsetof(union  A1270, m8), 1);
		dcStructField(st, 'i', offsetof(union  A1270, m9), 1);
		dcStructField(st, 'c', offsetof(union  A1270, m10), 1);
		dcStructField(st, 'c', offsetof(union  A1270, m11), 1);
		dcStructField(st, 'l', offsetof(union  A1270, m12), 1);
		dcStructField(st, 'c', offsetof(union  A1270, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1270, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <lccidclifsd> */
union  A1271 { l m0; c m1; c m2; i m3; d m4; c m5; l m6; i m7; f m8; s m9; d m10; };
void f_cpA1271(union  A1271 *x, const union  A1271 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; };
int f_cmpA1271(const union  A1271 *x, const union  A1271 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCstruct* f_touchdcstA1271() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(11, sizeof(union  A1271), DC_TRUE);
		dcStructField(st, 'l', offsetof(union  A1271, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1271, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1271, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1271, m3), 1);
		dcStructField(st, 'd', offsetof(union  A1271, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1271, m5), 1);
		dcStructField(st, 'l', offsetof(union  A1271, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1271, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1271, m8), 1);
		dcStructField(st, 's', offsetof(union  A1271, m9), 1);
		dcStructField(st, 'd', offsetof(union  A1271, m10), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <ccplcljffcfspplsccs> */
union  A1272 { c m0; c m1; p m2; l m3; c m4; l m5; j m6; f m7; f m8; c m9; f m10; s m11; p m12; p m13; l m14; s m15; c m16; c m17; s m18; };
void f_cpA1272(union  A1272 *x, const union  A1272 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; };
int f_cmpA1272(const union  A1272 *x, const union  A1272 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18; };
DCstruct* f_touchdcstA1272() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(19, sizeof(union  A1272), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1272, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1272, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1272, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1272, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1272, m4), 1);
		dcStructField(st, 'l', offsetof(union  A1272, m5), 1);
		dcStructField(st, 'j', offsetof(union  A1272, m6), 1);
		dcStructField(st, 'f', offsetof(union  A1272, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1272, m8), 1);
		dcStructField(st, 'c', offsetof(union  A1272, m9), 1);
		dcStructField(st, 'f', offsetof(union  A1272, m10), 1);
		dcStructField(st, 's', offsetof(union  A1272, m11), 1);
		dcStructField(st, 'p', offsetof(union  A1272, m12), 1);
		dcStructField(st, 'p', offsetof(union  A1272, m13), 1);
		dcStructField(st, 'l', offsetof(union  A1272, m14), 1);
		dcStructField(st, 's', offsetof(union  A1272, m15), 1);
		dcStructField(st, 'c', offsetof(union  A1272, m16), 1);
		dcStructField(st, 'c', offsetof(union  A1272, m17), 1);
		dcStructField(st, 's', offsetof(union  A1272, m18), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {<ppppffppiicclcd><lccidclifsd>dslsld<cj>silicslifdcdisc<ccplcljffcfspplsccs>l} */
struct A1273 { union  A1270 m0; union  A1271 m1; d m2; s m3; l m4; s m5; l m6; d m7; union  A377 m8; s m9; i m10; l m11; i m12; c m13; s m14; l m15; i m16; f m17; d m18; c m19; d m20; i m21; s m22; c m23; union  A1272 m24; l m25; };
void f_cpA1273(struct A1273 *x, const struct A1273 *y) { f_cpA1270(&x->m0, &y->m0); f_cpA1271(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; f_cpA377(&x->m8, &y->m8); x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; f_cpA1272(&x->m24, &y->m24); x->m25 = y->m25; };
int f_cmpA1273(const struct A1273 *x, const struct A1273 *y) { return f_cmpA1270(&x->m0, &y->m0) && f_cmpA1271(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA377(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && f_cmpA1272(&x->m24, &y->m24) && x->m25 == y->m25; };
DCstruct* f_touchdcstA1273() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(26, sizeof(struct A1273), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1273, m0), 1, f_touchdcstA1270());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1273, m1), 1, f_touchdcstA1271());
		dcStructField(st, 'd', offsetof(struct A1273, m2), 1);
		dcStructField(st, 's', offsetof(struct A1273, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1273, m4), 1);
		dcStructField(st, 's', offsetof(struct A1273, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1273, m6), 1);
		dcStructField(st, 'd', offsetof(struct A1273, m7), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1273, m8), 1, f_touchdcstA377());
		dcStructField(st, 's', offsetof(struct A1273, m9), 1);
		dcStructField(st, 'i', offsetof(struct A1273, m10), 1);
		dcStructField(st, 'l', offsetof(struct A1273, m11), 1);
		dcStructField(st, 'i', offsetof(struct A1273, m12), 1);
		dcStructField(st, 'c', offsetof(struct A1273, m13), 1);
		dcStructField(st, 's', offsetof(struct A1273, m14), 1);
		dcStructField(st, 'l', offsetof(struct A1273, m15), 1);
		dcStructField(st, 'i', offsetof(struct A1273, m16), 1);
		dcStructField(st, 'f', offsetof(struct A1273, m17), 1);
		dcStructField(st, 'd', offsetof(struct A1273, m18), 1);
		dcStructField(st, 'c', offsetof(struct A1273, m19), 1);
		dcStructField(st, 'd', offsetof(struct A1273, m20), 1);
		dcStructField(st, 'i', offsetof(struct A1273, m21), 1);
		dcStructField(st, 's', offsetof(struct A1273, m22), 1);
		dcStructField(st, 'c', offsetof(struct A1273, m23), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1273, m24), 1, f_touchdcstA1272());
		dcStructField(st, 'l', offsetof(struct A1273, m25), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl} */
struct A1274 { i m0; j m1; f m2; d m3; l m4; i m5; c m6; f m7; i m8; c m9; c m10; p m11; f m12; c m13; f m14; s m15; j m16; f m17; c m18; d m19; j m20; s m21; f m22; d m23; l m24; d m25; j m26; j m27; s m28; f m29; i m30; s m31; p m32; j m33; d m34; l m35; };
void f_cpA1274(struct A1274 *x, const struct A1274 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; x->m28 = y->m28; x->m29 = y->m29; x->m30 = y->m30; x->m31 = y->m31; x->m32 = y->m32; x->m33 = y->m33; x->m34 = y->m34; x->m35 = y->m35; };
int f_cmpA1274(const struct A1274 *x, const struct A1274 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27 && x->m28 == y->m28 && x->m29 == y->m29 && x->m30 == y->m30 && x->m31 == y->m31 && x->m32 == y->m32 && x->m33 == y->m33 && x->m34 == y->m34 && x->m35 == y->m35; };
DCstruct* f_touchdcstA1274() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(36, sizeof(struct A1274), DC_TRUE);
		dcStructField(st, 'i', offsetof(struct A1274, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1274, m1), 1);
		dcStructField(st, 'f', offsetof(struct A1274, m2), 1);
		dcStructField(st, 'd', offsetof(struct A1274, m3), 1);
		dcStructField(st, 'l', offsetof(struct A1274, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1274, m5), 1);
		dcStructField(st, 'c', offsetof(struct A1274, m6), 1);
		dcStructField(st, 'f', offsetof(struct A1274, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1274, m8), 1);
		dcStructField(st, 'c', offsetof(struct A1274, m9), 1);
		dcStructField(st, 'c', offsetof(struct A1274, m10), 1);
		dcStructField(st, 'p', offsetof(struct A1274, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1274, m12), 1);
		dcStructField(st, 'c', offsetof(struct A1274, m13), 1);
		dcStructField(st, 'f', offsetof(struct A1274, m14), 1);
		dcStructField(st, 's', offsetof(struct A1274, m15), 1);
		dcStructField(st, 'j', offsetof(struct A1274, m16), 1);
		dcStructField(st, 'f', offsetof(struct A1274, m17), 1);
		dcStructField(st, 'c', offsetof(struct A1274, m18), 1);
		dcStructField(st, 'd', offsetof(struct A1274, m19), 1);
		dcStructField(st, 'j', offsetof(struct A1274, m20), 1);
		dcStructField(st, 's', offsetof(struct A1274, m21), 1);
		dcStructField(st, 'f', offsetof(struct A1274, m22), 1);
		dcStructField(st, 'd', offsetof(struct A1274, m23), 1);
		dcStructField(st, 'l', offsetof(struct A1274, m24), 1);
		dcStructField(st, 'd', offsetof(struct A1274, m25), 1);
		dcStructField(st, 'j', offsetof(struct A1274, m26), 1);
		dcStructField(st, 'j', offsetof(struct A1274, m27), 1);
		dcStructField(st, 's', offsetof(struct A1274, m28), 1);
		dcStructField(st, 'f', offsetof(struct A1274, m29), 1);
		dcStructField(st, 'i', offsetof(struct A1274, m30), 1);
		dcStructField(st, 's', offsetof(struct A1274, m31), 1);
		dcStructField(st, 'p', offsetof(struct A1274, m32), 1);
		dcStructField(st, 'j', offsetof(struct A1274, m33), 1);
		dcStructField(st, 'd', offsetof(struct A1274, m34), 1);
		dcStructField(st, 'l', offsetof(struct A1274, m35), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cjplcj> */
union  A1275 { c m0; j m1; p m2; l m3; c m4; j m5; };
void f_cpA1275(union  A1275 *x, const union  A1275 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1275(const union  A1275 *x, const union  A1275 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1275() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(union  A1275), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1275, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1275, m1), 1);
		dcStructField(st, 'p', offsetof(union  A1275, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1275, m3), 1);
		dcStructField(st, 'c', offsetof(union  A1275, m4), 1);
		dcStructField(st, 'j', offsetof(union  A1275, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <{ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl}fllpfdlc{i}d<cjplcj>iis> */
union  A1276 { struct A1274 m0; f m1; l m2; l m3; p m4; f m5; d m6; l m7; c m8; struct A71 m9; d m10; union  A1275 m11; i m12; i m13; s m14; };
void f_cpA1276(union  A1276 *x, const union  A1276 *y) { f_cpA1274(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; f_cpA71(&x->m9, &y->m9); x->m10 = y->m10; f_cpA1275(&x->m11, &y->m11); x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; };
int f_cmpA1276(const union  A1276 *x, const union  A1276 *y) { return f_cmpA1274(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA71(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA1275(&x->m11, &y->m11) && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14; };
DCstruct* f_touchdcstA1276() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(15, sizeof(union  A1276), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1276, m0), 1, f_touchdcstA1274());
		dcStructField(st, 'f', offsetof(union  A1276, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1276, m2), 1);
		dcStructField(st, 'l', offsetof(union  A1276, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1276, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1276, m5), 1);
		dcStructField(st, 'd', offsetof(union  A1276, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1276, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1276, m8), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1276, m9), 1, f_touchdcstA71());
		dcStructField(st, 'd', offsetof(union  A1276, m10), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1276, m11), 1, f_touchdcstA1275());
		dcStructField(st, 'i', offsetof(union  A1276, m12), 1);
		dcStructField(st, 'i', offsetof(union  A1276, m13), 1);
		dcStructField(st, 's', offsetof(union  A1276, m14), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {lplffdfsssiifd} */
struct A1277 { l m0; p m1; l m2; f m3; f m4; d m5; f m6; s m7; s m8; s m9; i m10; i m11; f m12; d m13; };
void f_cpA1277(struct A1277 *x, const struct A1277 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; };
int f_cmpA1277(const struct A1277 *x, const struct A1277 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13; };
DCstruct* f_touchdcstA1277() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(14, sizeof(struct A1277), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1277, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1277, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1277, m2), 1);
		dcStructField(st, 'f', offsetof(struct A1277, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1277, m4), 1);
		dcStructField(st, 'd', offsetof(struct A1277, m5), 1);
		dcStructField(st, 'f', offsetof(struct A1277, m6), 1);
		dcStructField(st, 's', offsetof(struct A1277, m7), 1);
		dcStructField(st, 's', offsetof(struct A1277, m8), 1);
		dcStructField(st, 's', offsetof(struct A1277, m9), 1);
		dcStructField(st, 'i', offsetof(struct A1277, m10), 1);
		dcStructField(st, 'i', offsetof(struct A1277, m11), 1);
		dcStructField(st, 'f', offsetof(struct A1277, m12), 1);
		dcStructField(st, 'd', offsetof(struct A1277, m13), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{lplffdfsssiifd}pjjfcp{d}fslj} */
struct A1278 { struct A1277 m0; p m1; j m2; j m3; f m4; c m5; p m6; struct A156 m7; f m8; s m9; l m10; j m11; };
void f_cpA1278(struct A1278 *x, const struct A1278 *y) { f_cpA1277(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA156(&x->m7, &y->m7); x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1278(const struct A1278 *x, const struct A1278 *y) { return f_cmpA1277(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA156(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1278() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A1278), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1278, m0), 1, f_touchdcstA1277());
		dcStructField(st, 'p', offsetof(struct A1278, m1), 1);
		dcStructField(st, 'j', offsetof(struct A1278, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1278, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1278, m4), 1);
		dcStructField(st, 'c', offsetof(struct A1278, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1278, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1278, m7), 1, f_touchdcstA156());
		dcStructField(st, 'f', offsetof(struct A1278, m8), 1);
		dcStructField(st, 's', offsetof(struct A1278, m9), 1);
		dcStructField(st, 'l', offsetof(struct A1278, m10), 1);
		dcStructField(st, 'j', offsetof(struct A1278, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <csd{<ppppffppiicclcd><lccidclifsd>dslsld<cj>silicslifdcdisc<ccplcljffcfspplsccs>l}ci<{ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl}fllpfdlc{i}d<cjplcj>iis>lpl<c>icdpjjfsld{{lplffdfsssiifd}pjjfcp{d}fslj}> */
union  A1279 { c m0; s m1; d m2; struct A1273 m3; c m4; i m5; union  A1276 m6; l m7; p m8; l m9; union  A3 m10; i m11; c m12; d m13; p m14; j m15; j m16; f m17; s m18; l m19; d m20; struct A1278 m21; };
void f_cpA1279(union  A1279 *x, const union  A1279 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; f_cpA1273(&x->m3, &y->m3); x->m4 = y->m4; x->m5 = y->m5; f_cpA1276(&x->m6, &y->m6); x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; f_cpA3(&x->m10, &y->m10); x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; f_cpA1278(&x->m21, &y->m21); };
int f_cmpA1279(const union  A1279 *x, const union  A1279 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1273(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1276(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA3(&x->m10, &y->m10) && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && f_cmpA1278(&x->m21, &y->m21); };
DCstruct* f_touchdcstA1279() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(22, sizeof(union  A1279), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1279, m0), 1);
		dcStructField(st, 's', offsetof(union  A1279, m1), 1);
		dcStructField(st, 'd', offsetof(union  A1279, m2), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1279, m3), 1, f_touchdcstA1273());
		dcStructField(st, 'c', offsetof(union  A1279, m4), 1);
		dcStructField(st, 'i', offsetof(union  A1279, m5), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1279, m6), 1, f_touchdcstA1276());
		dcStructField(st, 'l', offsetof(union  A1279, m7), 1);
		dcStructField(st, 'p', offsetof(union  A1279, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1279, m9), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1279, m10), 1, f_touchdcstA3());
		dcStructField(st, 'i', offsetof(union  A1279, m11), 1);
		dcStructField(st, 'c', offsetof(union  A1279, m12), 1);
		dcStructField(st, 'd', offsetof(union  A1279, m13), 1);
		dcStructField(st, 'p', offsetof(union  A1279, m14), 1);
		dcStructField(st, 'j', offsetof(union  A1279, m15), 1);
		dcStructField(st, 'j', offsetof(union  A1279, m16), 1);
		dcStructField(st, 'f', offsetof(union  A1279, m17), 1);
		dcStructField(st, 's', offsetof(union  A1279, m18), 1);
		dcStructField(st, 'l', offsetof(union  A1279, m19), 1);
		dcStructField(st, 'd', offsetof(union  A1279, m20), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1279, m21), 1, f_touchdcstA1278());
		dcCloseStruct(st);
	}
	return st;
};
/* {ljijsi} */
struct A1280 { l m0; j m1; i m2; j m3; s m4; i m5; };
void f_cpA1280(struct A1280 *x, const struct A1280 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1280(const struct A1280 *x, const struct A1280 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1280() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1280), DC_TRUE);
		dcStructField(st, 'l', offsetof(struct A1280, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1280, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1280, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1280, m3), 1);
		dcStructField(st, 's', offsetof(struct A1280, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1280, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {fldjpslcisfpdcssflfjfds} */
struct A1281 { f m0; l m1; d m2; j m3; p m4; s m5; l m6; c m7; i m8; s m9; f m10; p m11; d m12; c m13; s m14; s m15; f m16; l m17; f m18; j m19; f m20; d m21; s m22; };
void f_cpA1281(struct A1281 *x, const struct A1281 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; };
int f_cmpA1281(const struct A1281 *x, const struct A1281 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22; };
DCstruct* f_touchdcstA1281() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(23, sizeof(struct A1281), DC_TRUE);
		dcStructField(st, 'f', offsetof(struct A1281, m0), 1);
		dcStructField(st, 'l', offsetof(struct A1281, m1), 1);
		dcStructField(st, 'd', offsetof(struct A1281, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1281, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1281, m4), 1);
		dcStructField(st, 's', offsetof(struct A1281, m5), 1);
		dcStructField(st, 'l', offsetof(struct A1281, m6), 1);
		dcStructField(st, 'c', offsetof(struct A1281, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1281, m8), 1);
		dcStructField(st, 's', offsetof(struct A1281, m9), 1);
		dcStructField(st, 'f', offsetof(struct A1281, m10), 1);
		dcStructField(st, 'p', offsetof(struct A1281, m11), 1);
		dcStructField(st, 'd', offsetof(struct A1281, m12), 1);
		dcStructField(st, 'c', offsetof(struct A1281, m13), 1);
		dcStructField(st, 's', offsetof(struct A1281, m14), 1);
		dcStructField(st, 's', offsetof(struct A1281, m15), 1);
		dcStructField(st, 'f', offsetof(struct A1281, m16), 1);
		dcStructField(st, 'l', offsetof(struct A1281, m17), 1);
		dcStructField(st, 'f', offsetof(struct A1281, m18), 1);
		dcStructField(st, 'j', offsetof(struct A1281, m19), 1);
		dcStructField(st, 'f', offsetof(struct A1281, m20), 1);
		dcStructField(st, 'd', offsetof(struct A1281, m21), 1);
		dcStructField(st, 's', offsetof(struct A1281, m22), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <pfipsdcscllpisdpjpdff> */
union  A1282 { p m0; f m1; i m2; p m3; s m4; d m5; c m6; s m7; c m8; l m9; l m10; p m11; i m12; s m13; d m14; p m15; j m16; p m17; d m18; f m19; f m20; };
void f_cpA1282(union  A1282 *x, const union  A1282 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; };
int f_cmpA1282(const union  A1282 *x, const union  A1282 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20; };
DCstruct* f_touchdcstA1282() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(21, sizeof(union  A1282), DC_TRUE);
		dcStructField(st, 'p', offsetof(union  A1282, m0), 1);
		dcStructField(st, 'f', offsetof(union  A1282, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1282, m2), 1);
		dcStructField(st, 'p', offsetof(union  A1282, m3), 1);
		dcStructField(st, 's', offsetof(union  A1282, m4), 1);
		dcStructField(st, 'd', offsetof(union  A1282, m5), 1);
		dcStructField(st, 'c', offsetof(union  A1282, m6), 1);
		dcStructField(st, 's', offsetof(union  A1282, m7), 1);
		dcStructField(st, 'c', offsetof(union  A1282, m8), 1);
		dcStructField(st, 'l', offsetof(union  A1282, m9), 1);
		dcStructField(st, 'l', offsetof(union  A1282, m10), 1);
		dcStructField(st, 'p', offsetof(union  A1282, m11), 1);
		dcStructField(st, 'i', offsetof(union  A1282, m12), 1);
		dcStructField(st, 's', offsetof(union  A1282, m13), 1);
		dcStructField(st, 'd', offsetof(union  A1282, m14), 1);
		dcStructField(st, 'p', offsetof(union  A1282, m15), 1);
		dcStructField(st, 'j', offsetof(union  A1282, m16), 1);
		dcStructField(st, 'p', offsetof(union  A1282, m17), 1);
		dcStructField(st, 'd', offsetof(union  A1282, m18), 1);
		dcStructField(st, 'f', offsetof(union  A1282, m19), 1);
		dcStructField(st, 'f', offsetof(union  A1282, m20), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dcppsfdlidssidpflcfscsscflsp} */
struct A1283 { d m0; c m1; p m2; p m3; s m4; f m5; d m6; l m7; i m8; d m9; s m10; s m11; i m12; d m13; p m14; f m15; l m16; c m17; f m18; s m19; c m20; s m21; s m22; c m23; f m24; l m25; s m26; p m27; };
void f_cpA1283(struct A1283 *x, const struct A1283 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; x->m27 = y->m27; };
int f_cmpA1283(const struct A1283 *x, const struct A1283 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26 && x->m27 == y->m27; };
DCstruct* f_touchdcstA1283() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(28, sizeof(struct A1283), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1283, m0), 1);
		dcStructField(st, 'c', offsetof(struct A1283, m1), 1);
		dcStructField(st, 'p', offsetof(struct A1283, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1283, m3), 1);
		dcStructField(st, 's', offsetof(struct A1283, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1283, m5), 1);
		dcStructField(st, 'd', offsetof(struct A1283, m6), 1);
		dcStructField(st, 'l', offsetof(struct A1283, m7), 1);
		dcStructField(st, 'i', offsetof(struct A1283, m8), 1);
		dcStructField(st, 'd', offsetof(struct A1283, m9), 1);
		dcStructField(st, 's', offsetof(struct A1283, m10), 1);
		dcStructField(st, 's', offsetof(struct A1283, m11), 1);
		dcStructField(st, 'i', offsetof(struct A1283, m12), 1);
		dcStructField(st, 'd', offsetof(struct A1283, m13), 1);
		dcStructField(st, 'p', offsetof(struct A1283, m14), 1);
		dcStructField(st, 'f', offsetof(struct A1283, m15), 1);
		dcStructField(st, 'l', offsetof(struct A1283, m16), 1);
		dcStructField(st, 'c', offsetof(struct A1283, m17), 1);
		dcStructField(st, 'f', offsetof(struct A1283, m18), 1);
		dcStructField(st, 's', offsetof(struct A1283, m19), 1);
		dcStructField(st, 'c', offsetof(struct A1283, m20), 1);
		dcStructField(st, 's', offsetof(struct A1283, m21), 1);
		dcStructField(st, 's', offsetof(struct A1283, m22), 1);
		dcStructField(st, 'c', offsetof(struct A1283, m23), 1);
		dcStructField(st, 'f', offsetof(struct A1283, m24), 1);
		dcStructField(st, 'l', offsetof(struct A1283, m25), 1);
		dcStructField(st, 's', offsetof(struct A1283, m26), 1);
		dcStructField(st, 'p', offsetof(struct A1283, m27), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dj} */
struct A1284 { d m0; j m1; };
void f_cpA1284(struct A1284 *x, const struct A1284 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1284(const struct A1284 *x, const struct A1284 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1284() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A1284), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1284, m0), 1);
		dcStructField(st, 'j', offsetof(struct A1284, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <djiis> */
union  A1285 { d m0; j m1; i m2; i m3; s m4; };
void f_cpA1285(union  A1285 *x, const union  A1285 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; };
int f_cmpA1285(const union  A1285 *x, const union  A1285 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCstruct* f_touchdcstA1285() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(5, sizeof(union  A1285), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1285, m0), 1);
		dcStructField(st, 'j', offsetof(union  A1285, m1), 1);
		dcStructField(st, 'i', offsetof(union  A1285, m2), 1);
		dcStructField(st, 'i', offsetof(union  A1285, m3), 1);
		dcStructField(st, 's', offsetof(union  A1285, m4), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {{dj}fijsfj{l}<jp><djiis>fp} */
struct A1286 { struct A1284 m0; f m1; i m2; j m3; s m4; f m5; j m6; struct A51 m7; union  A948 m8; union  A1285 m9; f m10; p m11; };
void f_cpA1286(struct A1286 *x, const struct A1286 *y) { f_cpA1284(&x->m0, &y->m0); x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA51(&x->m7, &y->m7); f_cpA948(&x->m8, &y->m8); f_cpA1285(&x->m9, &y->m9); x->m10 = y->m10; x->m11 = y->m11; };
int f_cmpA1286(const struct A1286 *x, const struct A1286 *y) { return f_cmpA1284(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA51(&x->m7, &y->m7) && f_cmpA948(&x->m8, &y->m8) && f_cmpA1285(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCstruct* f_touchdcstA1286() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(12, sizeof(struct A1286), DC_TRUE);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1286, m0), 1, f_touchdcstA1284());
		dcStructField(st, 'f', offsetof(struct A1286, m1), 1);
		dcStructField(st, 'i', offsetof(struct A1286, m2), 1);
		dcStructField(st, 'j', offsetof(struct A1286, m3), 1);
		dcStructField(st, 's', offsetof(struct A1286, m4), 1);
		dcStructField(st, 'f', offsetof(struct A1286, m5), 1);
		dcStructField(st, 'j', offsetof(struct A1286, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1286, m7), 1, f_touchdcstA51());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1286, m8), 1, f_touchdcstA948());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1286, m9), 1, f_touchdcstA1285());
		dcStructField(st, 'f', offsetof(struct A1286, m10), 1);
		dcStructField(st, 'p', offsetof(struct A1286, m11), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <scldppfilp> */
union  A1287 { s m0; c m1; l m2; d m3; p m4; p m5; f m6; i m7; l m8; p m9; };
void f_cpA1287(union  A1287 *x, const union  A1287 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; };
int f_cmpA1287(const union  A1287 *x, const union  A1287 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCstruct* f_touchdcstA1287() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(10, sizeof(union  A1287), DC_TRUE);
		dcStructField(st, 's', offsetof(union  A1287, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1287, m1), 1);
		dcStructField(st, 'l', offsetof(union  A1287, m2), 1);
		dcStructField(st, 'd', offsetof(union  A1287, m3), 1);
		dcStructField(st, 'p', offsetof(union  A1287, m4), 1);
		dcStructField(st, 'p', offsetof(union  A1287, m5), 1);
		dcStructField(st, 'f', offsetof(union  A1287, m6), 1);
		dcStructField(st, 'i', offsetof(union  A1287, m7), 1);
		dcStructField(st, 'l', offsetof(union  A1287, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1287, m9), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c<scldppfilp>dpii} */
struct A1288 { c m0; union  A1287 m1; d m2; p m3; i m4; i m5; };
void f_cpA1288(struct A1288 *x, const struct A1288 *y) { x->m0 = y->m0; f_cpA1287(&x->m1, &y->m1); x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1288(const struct A1288 *x, const struct A1288 *y) { return x->m0 == y->m0 && f_cmpA1287(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1288() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1288), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1288, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1288, m1), 1, f_touchdcstA1287());
		dcStructField(st, 'd', offsetof(struct A1288, m2), 1);
		dcStructField(st, 'p', offsetof(struct A1288, m3), 1);
		dcStructField(st, 'i', offsetof(struct A1288, m4), 1);
		dcStructField(st, 'i', offsetof(struct A1288, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {dplspl} */
struct A1289 { d m0; p m1; l m2; s m3; p m4; l m5; };
void f_cpA1289(struct A1289 *x, const struct A1289 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; };
int f_cmpA1289(const struct A1289 *x, const struct A1289 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCstruct* f_touchdcstA1289() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(6, sizeof(struct A1289), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1289, m0), 1);
		dcStructField(st, 'p', offsetof(struct A1289, m1), 1);
		dcStructField(st, 'l', offsetof(struct A1289, m2), 1);
		dcStructField(st, 's', offsetof(struct A1289, m3), 1);
		dcStructField(st, 'p', offsetof(struct A1289, m4), 1);
		dcStructField(st, 'l', offsetof(struct A1289, m5), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <cccjsfslj> */
union  A1290 { c m0; c m1; c m2; j m3; s m4; f m5; s m6; l m7; j m8; };
void f_cpA1290(union  A1290 *x, const union  A1290 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; };
int f_cmpA1290(const union  A1290 *x, const union  A1290 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCstruct* f_touchdcstA1290() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(union  A1290), DC_TRUE);
		dcStructField(st, 'c', offsetof(union  A1290, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1290, m1), 1);
		dcStructField(st, 'c', offsetof(union  A1290, m2), 1);
		dcStructField(st, 'j', offsetof(union  A1290, m3), 1);
		dcStructField(st, 's', offsetof(union  A1290, m4), 1);
		dcStructField(st, 'f', offsetof(union  A1290, m5), 1);
		dcStructField(st, 's', offsetof(union  A1290, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1290, m7), 1);
		dcStructField(st, 'j', offsetof(union  A1290, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <dcscjcslfpsdfiisjsiiccdifdl> */
union  A1291 { d m0; c m1; s m2; c m3; j m4; c m5; s m6; l m7; f m8; p m9; s m10; d m11; f m12; i m13; i m14; s m15; j m16; s m17; i m18; i m19; c m20; c m21; d m22; i m23; f m24; d m25; l m26; };
void f_cpA1291(union  A1291 *x, const union  A1291 *y) { x->m0 = y->m0; x->m1 = y->m1; x->m2 = y->m2; x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; x->m7 = y->m7; x->m8 = y->m8; x->m9 = y->m9; x->m10 = y->m10; x->m11 = y->m11; x->m12 = y->m12; x->m13 = y->m13; x->m14 = y->m14; x->m15 = y->m15; x->m16 = y->m16; x->m17 = y->m17; x->m18 = y->m18; x->m19 = y->m19; x->m20 = y->m20; x->m21 = y->m21; x->m22 = y->m22; x->m23 = y->m23; x->m24 = y->m24; x->m25 = y->m25; x->m26 = y->m26; };
int f_cmpA1291(const union  A1291 *x, const union  A1291 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11 && x->m12 == y->m12 && x->m13 == y->m13 && x->m14 == y->m14 && x->m15 == y->m15 && x->m16 == y->m16 && x->m17 == y->m17 && x->m18 == y->m18 && x->m19 == y->m19 && x->m20 == y->m20 && x->m21 == y->m21 && x->m22 == y->m22 && x->m23 == y->m23 && x->m24 == y->m24 && x->m25 == y->m25 && x->m26 == y->m26; };
DCstruct* f_touchdcstA1291() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(27, sizeof(union  A1291), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1291, m0), 1);
		dcStructField(st, 'c', offsetof(union  A1291, m1), 1);
		dcStructField(st, 's', offsetof(union  A1291, m2), 1);
		dcStructField(st, 'c', offsetof(union  A1291, m3), 1);
		dcStructField(st, 'j', offsetof(union  A1291, m4), 1);
		dcStructField(st, 'c', offsetof(union  A1291, m5), 1);
		dcStructField(st, 's', offsetof(union  A1291, m6), 1);
		dcStructField(st, 'l', offsetof(union  A1291, m7), 1);
		dcStructField(st, 'f', offsetof(union  A1291, m8), 1);
		dcStructField(st, 'p', offsetof(union  A1291, m9), 1);
		dcStructField(st, 's', offsetof(union  A1291, m10), 1);
		dcStructField(st, 'd', offsetof(union  A1291, m11), 1);
		dcStructField(st, 'f', offsetof(union  A1291, m12), 1);
		dcStructField(st, 'i', offsetof(union  A1291, m13), 1);
		dcStructField(st, 'i', offsetof(union  A1291, m14), 1);
		dcStructField(st, 's', offsetof(union  A1291, m15), 1);
		dcStructField(st, 'j', offsetof(union  A1291, m16), 1);
		dcStructField(st, 's', offsetof(union  A1291, m17), 1);
		dcStructField(st, 'i', offsetof(union  A1291, m18), 1);
		dcStructField(st, 'i', offsetof(union  A1291, m19), 1);
		dcStructField(st, 'c', offsetof(union  A1291, m20), 1);
		dcStructField(st, 'c', offsetof(union  A1291, m21), 1);
		dcStructField(st, 'd', offsetof(union  A1291, m22), 1);
		dcStructField(st, 'i', offsetof(union  A1291, m23), 1);
		dcStructField(st, 'f', offsetof(union  A1291, m24), 1);
		dcStructField(st, 'd', offsetof(union  A1291, m25), 1);
		dcStructField(st, 'l', offsetof(union  A1291, m26), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {di} */
struct A1292 { d m0; i m1; };
void f_cpA1292(struct A1292 *x, const struct A1292 *y) { x->m0 = y->m0; x->m1 = y->m1; };
int f_cmpA1292(const struct A1292 *x, const struct A1292 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCstruct* f_touchdcstA1292() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(struct A1292), DC_TRUE);
		dcStructField(st, 'd', offsetof(struct A1292, m0), 1);
		dcStructField(st, 'i', offsetof(struct A1292, m1), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* {c<s><dcscjcslfpsdfiisjsiiccdifdl>pfjp{di}d} */
struct A1293 { c m0; union  A75 m1; union  A1291 m2; p m3; f m4; j m5; p m6; struct A1292 m7; d m8; };
void f_cpA1293(struct A1293 *x, const struct A1293 *y) { x->m0 = y->m0; f_cpA75(&x->m1, &y->m1); f_cpA1291(&x->m2, &y->m2); x->m3 = y->m3; x->m4 = y->m4; x->m5 = y->m5; x->m6 = y->m6; f_cpA1292(&x->m7, &y->m7); x->m8 = y->m8; };
int f_cmpA1293(const struct A1293 *x, const struct A1293 *y) { return x->m0 == y->m0 && f_cmpA75(&x->m1, &y->m1) && f_cmpA1291(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1292(&x->m7, &y->m7) && x->m8 == y->m8; };
DCstruct* f_touchdcstA1293() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(9, sizeof(struct A1293), DC_TRUE);
		dcStructField(st, 'c', offsetof(struct A1293, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1293, m1), 1, f_touchdcstA75());
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1293, m2), 1, f_touchdcstA1291());
		dcStructField(st, 'p', offsetof(struct A1293, m3), 1);
		dcStructField(st, 'f', offsetof(struct A1293, m4), 1);
		dcStructField(st, 'j', offsetof(struct A1293, m5), 1);
		dcStructField(st, 'p', offsetof(struct A1293, m6), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(struct A1293, m7), 1, f_touchdcstA1292());
		dcStructField(st, 'd', offsetof(struct A1293, m8), 1);
		dcCloseStruct(st);
	}
	return st;
};
/* <d{c<s><dcscjcslfpsdfiisjsiiccdifdl>pfjp{di}d}> */
union  A1294 { d m0; struct A1293 m1; };
void f_cpA1294(union  A1294 *x, const union  A1294 *y) { x->m0 = y->m0; f_cpA1293(&x->m1, &y->m1); };
int f_cmpA1294(const union  A1294 *x, const union  A1294 *y) { return x->m0 == y->m0 && f_cmpA1293(&x->m1, &y->m1); };
DCstruct* f_touchdcstA1294() {
	static DCstruct* st = NULL;
	if(!st) {
		st = dcNewStruct(2, sizeof(union  A1294), DC_TRUE);
		dcStructField(st, 'd', offsetof(union  A1294, m0), 1);
		dcStructField(st, DC_SIGCHAR_STRUCT, offsetof(union  A1294, m1), 1, f_touchdcstA1293());
		dcCloseStruct(st);
	}
	return st;
};
/* 0:psis<icllcsfdlp>cfi */ p f0(s a1,i a2,s a3,union  A1 a4,c a5,f a6,i a7){V_s[1]=a1;V_i[2]=a2;V_s[3]=a3;f_cpA1(V_a[4],&a4);V_c[5]=a5;V_f[6]=a6;V_i[7]=a7;ret_p(7)}
/* 1:sc{cdcfcjs}j<ijl<c>{{s}d<ldllip>j{sjpsi}dsd<lcp>pisi<csidff>fs{ls}dp{fjsfcdfp}d{dd}}jjlsj>ids */ s f1(c a1,struct A2 a2,j a3,union  A13 a4,i a5,d a6,s a7){V_c[1]=a1;f_cpA2(V_a[2],&a2);V_j[3]=a3;f_cpA13(V_a[4],&a4);V_i[5]=a5;V_d[6]=a6;V_s[7]=a7;ret_s(7)}
/* 2:<lj>pfsljp */ union  A14 f2(p a1,f a2,s a3,l a4,j a5,p a6){V_p[1]=a1;V_f[2]=a2;V_s[3]=a3;V_l[4]=a4;V_j[5]=a5;V_p[6]=a6;ret_a(6,union  A14)}
/* 3:<dlpjjcslfdilfddsicd>jii */ union  A15 f3(j a1,i a2,i a3){V_j[1]=a1;V_i[2]=a2;V_i[3]=a3;ret_a(3,union  A15)}
/* 4:{cjp}ii */ struct A16 f4(i a1,i a2){V_i[1]=a1;V_i[2]=a2;ret_a(2,struct A16)}
/* 5:{cfdcds}<pc>ii{{l<idf>}dfpdsfldjsclcjlj}ifsfp */ struct A17 f5(union  A18 a1,i a2,i a3,struct A21 a4,i a5,f a6,s a7,f a8,p a9){f_cpA18(V_a[1],&a1);V_i[2]=a2;V_i[3]=a3;f_cpA21(V_a[4],&a4);V_i[5]=a5;V_f[6]=a6;V_s[7]=a7;V_f[8]=a8;V_p[9]=a9;ret_a(9,struct A17)}
/* 6:pdl<i>c{dicpdi}cl{ipdj{jsfdjpli}cl<pcslsijpjdj>dfd{ifjlspijsjsjsjfdcjj}<pfdlfj>s}ld{s}c */ p f6(d a1,l a2,union  A22 a3,c a4,struct A23 a5,c a6,l a7,struct A28 a8,l a9,d a10,struct A4 a11,c a12){V_d[1]=a1;V_l[2]=a2;f_cpA22(V_a[3],&a3);V_c[4]=a4;f_cpA23(V_a[5],&a5);V_c[6]=a6;V_l[7]=a7;f_cpA28(V_a[8],&a8);V_l[9]=a9;V_d[10]=a10;f_cpA4(V_a[11],&a11);V_c[12]=a12;ret_p(12)}
/* 7:v{ldi<lfips>jflccd}spis */ v f7(struct A30 a1,s a2,p a3,i a4,s a5){f_cpA30(V_a[1],&a1);V_s[2]=a2;V_p[3]=a3;V_i[4]=a4;V_s[5]=a5;ret_v(5)}
/* 8:<{psflpi}lpjsc<iidpi>if<il>{jddspfldpdils}csd>j<jiccfddifjl>jlpi<dfjpfdjfdlijjdpisji> */ union  A35 f8(j a1,union  A36 a2,j a3,l a4,p a5,i a6,union  A37 a7){V_j[1]=a1;f_cpA36(V_a[2],&a2);V_j[3]=a3;V_l[4]=a4;V_p[5]=a5;V_i[6]=a6;f_cpA37(V_a[7],&a7);ret_a(7,union  A35)}
/* 9:l{djppf<csidcscjff>{jpllijlp}cldcp{jiiccfcidlcildislll}fpii} */ l f9(struct A41 a1){f_cpA41(V_a[1],&a1);ret_l(1)}
/* 10:{dsisddcjjp}{iisjcppsjj<jspplpf>iscs<pili>cpis}ji<jidd>i<j>ppii{lccfpc}sf */ struct A42 f10(struct A45 a1,j a2,i a3,union  A46 a4,i a5,union  A47 a6,p a7,p a8,i a9,i a10,struct A48 a11,s a12,f a13){f_cpA45(V_a[1],&a1);V_j[2]=a2;V_i[3]=a3;f_cpA46(V_a[4],&a4);V_i[5]=a5;f_cpA47(V_a[6],&a6);V_p[7]=a7;V_p[8]=a8;V_i[9]=a9;V_i[10]=a10;f_cpA48(V_a[11],&a11);V_s[12]=a12;V_f[13]=a13;ret_a(13,struct A42)}
/* 11:<jpfpjpij><spsc{lsj}{l}i> */ union  A49 f11(union  A52 a1){f_cpA52(V_a[1],&a1);ret_a(1,union  A49)}
/* 12:psi<lijljpjplcjidcdcslpjljfc>jlc */ p f12(s a1,i a2,union  A53 a3,j a4,l a5,c a6){V_s[1]=a1;V_i[2]=a2;f_cpA53(V_a[3],&a3);V_j[4]=a4;V_l[5]=a5;V_c[6]=a6;ret_p(6)}
/* 13:jd{cldlfl} */ j f13(d a1,struct A54 a2){V_d[1]=a1;f_cpA54(V_a[2],&a2);ret_j(2)}
/* 14:ildjs<pjjpisilcf> */ i f14(l a1,d a2,j a3,s a4,union  A55 a5){V_l[1]=a1;V_d[2]=a2;V_j[3]=a3;V_s[4]=a4;f_cpA55(V_a[5],&a5);ret_i(5)}
/* 15:v{pcjsffj{slp}s{jj}pd<cfdppfc>fjcs<jpsfidpljsijdpfi>difjd}ddc */ v f15(struct A60 a1,d a2,d a3,c a4){f_cpA60(V_a[1],&a1);V_d[2]=a2;V_d[3]=a3;V_c[4]=a4;ret_v(4)}
/* 16:jcslfl<pp> */ j f16(c a1,s a2,l a3,f a4,l a5,union  A61 a6){V_c[1]=a1;V_s[2]=a2;V_l[3]=a3;V_f[4]=a4;V_l[5]=a5;f_cpA61(V_a[6],&a6);ret_j(6)}
/* 17:cd<fifjjppjilsdisf><s{cfijccjipscf}>{djpdi} */ c f17(d a1,union  A62 a2,union  A64 a3,struct A65 a4){V_d[1]=a1;f_cpA62(V_a[2],&a2);f_cpA64(V_a[3],&a3);f_cpA65(V_a[4],&a4);ret_c(4)}
/* 18:<p<cp>{jidfdl{pcljjfc}i}is<dcd>jif>dd{i}{ppi}llpscj */ union  A70 f18(d a1,d a2,struct A71 a3,struct A72 a4,l a5,l a6,p a7,s a8,c a9,j a10){V_d[1]=a1;V_d[2]=a2;f_cpA71(V_a[3],&a3);f_cpA72(V_a[4],&a4);V_l[5]=a5;V_l[6]=a6;V_p[7]=a7;V_s[8]=a8;V_c[9]=a9;V_j[10]=a10;ret_a(10,union  A70)}
/* 19:jf<dllpjjjpsp>f{dl}dci */ j f19(f a1,union  A73 a2,f a3,struct A74 a4,d a5,c a6,i a7){V_f[1]=a1;f_cpA73(V_a[2],&a2);V_f[3]=a3;f_cpA74(V_a[4],&a4);V_d[5]=a5;V_c[6]=a6;V_i[7]=a7;ret_j(7)}
/* 20:vj<s> */ v f20(j a1,union  A75 a2){V_j[1]=a1;f_cpA75(V_a[2],&a2);ret_v(2)}
/* 21:pd{sll<llcj>}l<{plfjf{fcsddflsdpfcicscppdjsslilifdccdfi}}c<{spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl}scs>pi>fpp */ p f21(d a1,struct A77 a2,l a3,union  A82 a4,f a5,p a6,p a7){V_d[1]=a1;f_cpA77(V_a[2],&a2);V_l[3]=a3;f_cpA82(V_a[4],&a4);V_f[5]=a5;V_p[6]=a6;V_p[7]=a7;ret_p(7)}
/* 22:pijfd{cpcdjdl}{pijj}j{<ffssflcjd>lspdlij}dcjc */ p f22(i a1,j a2,f a3,d a4,struct A83 a5,struct A84 a6,j a7,struct A86 a8,d a9,c a10,j a11,c a12){V_i[1]=a1;V_j[2]=a2;V_f[3]=a3;V_d[4]=a4;f_cpA83(V_a[5],&a5);f_cpA84(V_a[6],&a6);V_j[7]=a7;f_cpA86(V_a[8],&a8);V_d[9]=a9;V_c[10]=a10;V_j[11]=a11;V_c[12]=a12;ret_p(12)}
/* 23:<pcjfddd<ifilfisd>lld<pfidipsf>{sdjciilpcpcpd}>isid<<pjfsfffldfjssccl>ssij><ijdpijpcj>isic */ union  A90 f23(i a1,s a2,i a3,d a4,union  A92 a5,union  A93 a6,i a7,s a8,i a9,c a10){V_i[1]=a1;V_s[2]=a2;V_i[3]=a3;V_d[4]=a4;f_cpA92(V_a[5],&a5);f_cpA93(V_a[6],&a6);V_i[7]=a7;V_s[8]=a8;V_i[9]=a9;V_c[10]=a10;ret_a(10,union  A90)}
/* 24:ijdsjdifdp{d<d><ic>p<c>s}dc */ i f24(j a1,d a2,s a3,j a4,d a5,i a6,f a7,d a8,p a9,struct A96 a10,d a11,c a12){V_j[1]=a1;V_d[2]=a2;V_s[3]=a3;V_j[4]=a4;V_d[5]=a5;V_i[6]=a6;V_f[7]=a7;V_d[8]=a8;V_p[9]=a9;f_cpA96(V_a[10],&a10);V_d[11]=a11;V_c[12]=a12;ret_i(12)}
/* 25:cssspj<splpd><cc>fl */ c f25(s a1,s a2,s a3,p a4,j a5,union  A97 a6,union  A98 a7,f a8,l a9){V_s[1]=a1;V_s[2]=a2;V_s[3]=a3;V_p[4]=a4;V_j[5]=a5;f_cpA97(V_a[6],&a6);f_cpA98(V_a[7],&a7);V_f[8]=a8;V_l[9]=a9;ret_c(9)}
/* 26:lpccldlfdc{ds{djiljflllcp}lcdi}j */ l f26(p a1,c a2,c a3,l a4,d a5,l a6,f a7,d a8,c a9,struct A100 a10,j a11){V_p[1]=a1;V_c[2]=a2;V_c[3]=a3;V_l[4]=a4;V_d[5]=a5;V_l[6]=a6;V_f[7]=a7;V_d[8]=a8;V_c[9]=a9;f_cpA100(V_a[10],&a10);V_j[11]=a11;ret_l(11)}
/* 27:dss<s>fdpsfl */ d f27(s a1,s a2,union  A75 a3,f a4,d a5,p a6,s a7,f a8,l a9){V_s[1]=a1;V_s[2]=a2;f_cpA75(V_a[3],&a3);V_f[4]=a4;V_d[5]=a5;V_p[6]=a6;V_s[7]=a7;V_f[8]=a8;V_l[9]=a9;ret_d(9)}
/* 28:flccjf{jiidppdjdlfclp}iddpfi */ f f28(l a1,c a2,c a3,j a4,f a5,struct A101 a6,i a7,d a8,d a9,p a10,f a11,i a12){V_l[1]=a1;V_c[2]=a2;V_c[3]=a3;V_j[4]=a4;V_f[5]=a5;f_cpA101(V_a[6],&a6);V_i[7]=a7;V_d[8]=a8;V_d[9]=a9;V_p[10]=a10;V_f[11]=a11;V_i[12]=a12;ret_f(12)}
/* 29:<jppccslcicfipicccf>ds<{spicji{sjpsipddpdlf}<pfdsdp>lfjiclc}ffdiid><fjdlsccddiljldjdjccflfjllj>dcpj<li>ip */ union  A102 f29(d a1,s a2,union  A106 a3,union  A107 a4,d a5,c a6,p a7,j a8,union  A108 a9,i a10,p a11){V_d[1]=a1;V_s[2]=a2;f_cpA106(V_a[3],&a3);f_cpA107(V_a[4],&a4);V_d[5]=a5;V_c[6]=a6;V_p[7]=a7;V_j[8]=a8;f_cpA108(V_a[9],&a9);V_i[10]=a10;V_p[11]=a11;ret_a(11,union  A102)}
/* 30:s{<ip{jcdfppp}s{lpf}f>}{fdcdlpfjs}l{isljsl{diifiijf}jsiid{f{pfi}{jidjsjjfppfd}cpcidj}j} */ s f30(struct A112 a1,struct A113 a2,l a3,struct A118 a4){f_cpA112(V_a[1],&a1);f_cpA113(V_a[2],&a2);V_l[3]=a3;f_cpA118(V_a[4],&a4);ret_s(4)}
/* 31:{lsljs}s<liljfj{ssiffisjdlc}dj<pljcfcjclccpciddcplpss>cdj{c}pssfpsf>iffd */ struct A119 f31(s a1,union  A123 a2,i a3,f a4,f a5,d a6){V_s[1]=a1;f_cpA123(V_a[2],&a2);V_i[3]=a3;V_f[4]=a4;V_f[5]=a5;V_d[6]=a6;ret_a(6,struct A119)}
/* 32:ips<iisjffldcdcll>psfdpsfdl */ i f32(p a1,s a2,union  A124 a3,p a4,s a5,f a6,d a7,p a8,s a9,f a10,d a11,l a12){V_p[1]=a1;V_s[2]=a2;f_cpA124(V_a[3],&a3);V_p[4]=a4;V_s[5]=a5;V_f[6]=a6;V_d[7]=a7;V_p[8]=a8;V_s[9]=a9;V_f[10]=a10;V_d[11]=a11;V_l[12]=a12;ret_i(12)}
/* 33:s{ldj<s>dfsls<cscslfc>jls}ci<l> */ s f33(struct A126 a1,c a2,i a3,union  A127 a4){f_cpA126(V_a[1],&a1);V_c[2]=a2;V_i[3]=a3;f_cpA127(V_a[4],&a4);ret_s(4)}
/* 34:{ilscjcjilfcfcdjcdl}spi */ struct A128 f34(s a1,p a2,i a3){V_s[1]=a1;V_p[2]=a2;V_i[3]=a3;ret_a(3,struct A128)}
/* 35:<<sjss>df>sddsfpf<s>pc<{<jfj><sl>s<fdcfdfpfildljjssspppffpd>jlcsdf{lidldisldl}cj}l>f */ union  A130 f35(s a1,d a2,d a3,s a4,f a5,p a6,f a7,union  A75 a8,p a9,c a10,union  A136 a11,f a12){V_s[1]=a1;V_d[2]=a2;V_d[3]=a3;V_s[4]=a4;V_f[5]=a5;V_p[6]=a6;V_f[7]=a7;f_cpA75(V_a[8],&a8);V_p[9]=a9;V_c[10]=a10;f_cpA136(V_a[11],&a11);V_f[12]=a12;ret_a(12,union  A130)}
/* 36:scipd{dlif}f */ s f36(c a1,i a2,p a3,d a4,struct A137 a5,f a6){V_c[1]=a1;V_i[2]=a2;V_p[3]=a3;V_d[4]=a4;f_cpA137(V_a[5],&a5);V_f[6]=a6;ret_s(6)}
/* 37:lcijj<sfpjcclpsfclcfc>flpdfcs */ l f37(c a1,i a2,j a3,j a4,union  A138 a5,f a6,l a7,p a8,d a9,f a10,c a11,s a12){V_c[1]=a1;V_i[2]=a2;V_j[3]=a3;V_j[4]=a4;f_cpA138(V_a[5],&a5);V_f[6]=a6;V_l[7]=a7;V_p[8]=a8;V_d[9]=a9;V_f[10]=a10;V_c[11]=a11;V_s[12]=a12;ret_l(12)}
/* 38:d<jlfffdcc>l */ d f38(union  A139 a1,l a2){f_cpA139(V_a[1],&a1);V_l[2]=a2;ret_d(2)}
/* 39:li<jdipcj>pild */ l f39(i a1,union  A140 a2,p a3,i a4,l a5,d a6){V_i[1]=a1;f_cpA140(V_a[2],&a2);V_p[3]=a3;V_i[4]=a4;V_l[5]=a5;V_d[6]=a6;ret_l(6)}
/* 40:fslsjpsfc<lffpjdpisijjc{jijfcsfdcpllc}jfd{fjdf}>s{ddpddcc}l */ f f40(s a1,l a2,s a3,j a4,p a5,s a6,f a7,c a8,union  A143 a9,s a10,struct A144 a11,l a12){V_s[1]=a1;V_l[2]=a2;V_s[3]=a3;V_j[4]=a4;V_p[5]=a5;V_s[6]=a6;V_f[7]=a7;V_c[8]=a8;f_cpA143(V_a[9],&a9);V_s[10]=a10;f_cpA144(V_a[11],&a11);V_l[12]=a12;ret_f(12)}
/* 41:cs{lj}{ls}cj */ c f41(s a1,struct A145 a2,struct A9 a3,c a4,j a5){V_s[1]=a1;f_cpA145(V_a[2],&a2);f_cpA9(V_a[3],&a3);V_c[4]=a4;V_j[5]=a5;ret_c(5)}
/* 42:jd<{sscsp}jsj>cps */ j f42(d a1,union  A147 a2,c a3,p a4,s a5){V_d[1]=a1;f_cpA147(V_a[2],&a2);V_c[3]=a3;V_p[4]=a4;V_s[5]=a5;ret_j(5)}
/* 43:vsf{llsiipsilp}idfsjiis */ v f43(s a1,f a2,struct A148 a3,i a4,d a5,f a6,s a7,j a8,i a9,i a10,s a11){V_s[1]=a1;V_f[2]=a2;f_cpA148(V_a[3],&a3);V_i[4]=a4;V_d[5]=a5;V_f[6]=a6;V_s[7]=a7;V_j[8]=a8;V_i[9]=a9;V_i[10]=a10;V_s[11]=a11;ret_v(11)}
/* 44:lfdlcl{dcilipdfd}{psl}{fs<lipipi><plppci>plc}s */ l f44(f a1,d a2,l a3,c a4,l a5,struct A149 a6,struct A150 a7,struct A153 a8,s a9){V_f[1]=a1;V_d[2]=a2;V_l[3]=a3;V_c[4]=a4;V_l[5]=a5;f_cpA149(V_a[6],&a6);f_cpA150(V_a[7],&a7);f_cpA153(V_a[8],&a8);V_s[9]=a9;ret_l(9)}
/* 45:v<llpiplpijc>iclljdd{jdl}jd */ v f45(union  A154 a1,i a2,c a3,l a4,l a5,j a6,d a7,d a8,struct A155 a9,j a10,d a11){f_cpA154(V_a[1],&a1);V_i[2]=a2;V_c[3]=a3;V_l[4]=a4;V_l[5]=a5;V_j[6]=a6;V_d[7]=a7;V_d[8]=a8;f_cpA155(V_a[9],&a9);V_j[10]=a10;V_d[11]=a11;ret_v(11)}
/* 46:{d}pipd */ struct A156 f46(p a1,i a2,p a3,d a4){V_p[1]=a1;V_i[2]=a2;V_p[3]=a3;V_d[4]=a4;ret_a(4,struct A156)}
/* 47:ilil<sfspjfsscilcd> */ i f47(l a1,i a2,l a3,union  A157 a4){V_l[1]=a1;V_i[2]=a2;V_l[3]=a3;f_cpA157(V_a[4],&a4);ret_i(4)}
/* 48:dp<ficlfccpd>j{fs<{lcjcd}>plfdl<p>plfpli{{fjfsic}}<iil<dijfsii>>{fi{clpfpjjffslsldfldid}cd}}sflcp */ d f48(p a1,union  A158 a2,j a3,struct A168 a4,s a5,f a6,l a7,c a8,p a9){V_p[1]=a1;f_cpA158(V_a[2],&a2);V_j[3]=a3;f_cpA168(V_a[4],&a4);V_s[5]=a5;V_f[6]=a6;V_l[7]=a7;V_c[8]=a8;V_p[9]=a9;ret_d(9)}
/* 49:d{llfiisjjcj<fsljidiif>i}{scljifjfpff}pplipddfdl */ d f49(struct A170 a1,struct A171 a2,p a3,p a4,l a5,i a6,p a7,d a8,d a9,f a10,d a11,l a12){f_cpA170(V_a[1],&a1);f_cpA171(V_a[2],&a2);V_p[3]=a3;V_p[4]=a4;V_l[5]=a5;V_i[6]=a6;V_p[7]=a7;V_d[8]=a8;V_d[9]=a9;V_f[10]=a10;V_d[11]=a11;V_l[12]=a12;ret_d(12)}
/* 50:lpl{fcscsfjffidifij} */ l f50(p a1,l a2,struct A172 a3){V_p[1]=a1;V_l[2]=a2;f_cpA172(V_a[3],&a3);ret_l(3)}
/* 51:<pjfdcdjsiljc>dfc */ union  A173 f51(d a1,f a2,c a3){V_d[1]=a1;V_f[2]=a2;V_c[3]=a3;ret_a(3,union  A173)}
/* 52:<ldjlcjpfsdf>psssjd<slfijsl> */ union  A174 f52(p a1,s a2,s a3,s a4,j a5,d a6,union  A175 a7){V_p[1]=a1;V_s[2]=a2;V_s[3]=a3;V_s[4]=a4;V_j[5]=a5;V_d[6]=a6;f_cpA175(V_a[7],&a7);ret_a(7,union  A174)}
/* 53:fidlc<sjpi<{jflds}clcpisl{pj}piddpcj{cllcff}flif>>lpjpficii */ f f53(i a1,d a2,l a3,c a4,union  A180 a5,l a6,p a7,j a8,p a9,f a10,i a11,c a12,i a13,i a14){V_i[1]=a1;V_d[2]=a2;V_l[3]=a3;V_c[4]=a4;f_cpA180(V_a[5],&a5);V_l[6]=a6;V_p[7]=a7;V_j[8]=a8;V_p[9]=a9;V_f[10]=a10;V_i[11]=a11;V_c[12]=a12;V_i[13]=a13;V_i[14]=a14;ret_f(14)}
/* 54:{cjcclfji}cp{dcpdipspcflpfdjscjfcjcfddfsifscsdjs}lpl<cdi{i}ppldjl{ijlpcfjp<ifjs>j{jdc}d}jss<pfd{csfpjpd}cfllllicipsjld<cjcpfdcfjfccjppdfsipjcpff>ji<silcp>fiic<f>i>lf><dps>dc */ struct A181 f54(c a1,p a2,struct A182 a3,l a4,p a5,l a6,union  A191 a7,union  A192 a8,d a9,c a10){V_c[1]=a1;V_p[2]=a2;f_cpA182(V_a[3],&a3);V_l[4]=a4;V_p[5]=a5;V_l[6]=a6;f_cpA191(V_a[7],&a7);f_cpA192(V_a[8],&a8);V_d[9]=a9;V_c[10]=a10;ret_a(10,struct A181)}
/* 55:li<lj{diijfpjpildsd}dd{icdssdss}><pi<dcilpldj>j> */ l f55(i a1,union  A195 a2,union  A197 a3){V_i[1]=a1;f_cpA195(V_a[2],&a2);f_cpA197(V_a[3],&a3);ret_l(3)}
/* 56:lsid<fll<scifi>sj> */ l f56(s a1,i a2,d a3,union  A199 a4){V_s[1]=a1;V_i[2]=a2;V_d[3]=a3;f_cpA199(V_a[4],&a4);ret_l(4)}
/* 57:<clifdll>jjdcdscj */ union  A200 f57(j a1,j a2,d a3,c a4,d a5,s a6,c a7,j a8){V_j[1]=a1;V_j[2]=a2;V_d[3]=a3;V_c[4]=a4;V_d[5]=a5;V_s[6]=a6;V_c[7]=a7;V_j[8]=a8;ret_a(8,union  A200)}
/* 58:sslccd{cclcfccs<cs<spcf>ji>} */ s f58(s a1,l a2,c a3,c a4,d a5,struct A203 a6){V_s[1]=a1;V_l[2]=a2;V_c[3]=a3;V_c[4]=a4;V_d[5]=a5;f_cpA203(V_a[6],&a6);ret_s(6)}
/* 59:lc<lipfp>cjcj{sp<pifcjspscfljljsssddifdppjpp><pfjjp>dj} */ l f59(c a1,union  A204 a2,c a3,j a4,c a5,j a6,struct A207 a7){V_c[1]=a1;f_cpA204(V_a[2],&a2);V_c[3]=a3;V_j[4]=a4;V_c[5]=a5;V_j[6]=a6;f_cpA207(V_a[7],&a7);ret_l(7)}
/* 60:<{fc}{slsipl}licpsicjjfcj<psljjf>{csdjfcffp}f>cp{idspdiiif}<<jli>dl>f */ union  A212 f60(c a1,p a2,struct A213 a3,union  A215 a4,f a5){V_c[1]=a1;V_p[2]=a2;f_cpA213(V_a[3],&a3);f_cpA215(V_a[4],&a4);V_f[5]=a5;ret_a(5,union  A212)}
/* 61:<f<pfp>dfs>lppcccid */ union  A217 f61(l a1,p a2,p a3,c a4,c a5,c a6,i a7,d a8){V_l[1]=a1;V_p[2]=a2;V_p[3]=a3;V_c[4]=a4;V_c[5]=a5;V_c[6]=a6;V_i[7]=a7;V_d[8]=a8;ret_a(8,union  A217)}
/* 62:v{cs}djd{ccsp} */ v f62(struct A218 a1,d a2,j a3,d a4,struct A219 a5){f_cpA218(V_a[1],&a1);V_d[2]=a2;V_j[3]=a3;V_d[4]=a4;f_cpA219(V_a[5],&a5);ret_v(5)}
/* 63:<j>ccj<isdl>sc */ union  A47 f63(c a1,c a2,j a3,union  A220 a4,s a5,c a6){V_c[1]=a1;V_c[2]=a2;V_j[3]=a3;f_cpA220(V_a[4],&a4);V_s[5]=a5;V_c[6]=a6;ret_a(6,union  A47)}
/* 64:{ifjislislilljjjcip}l<lfc> */ struct A221 f64(l a1,union  A222 a2){V_l[1]=a1;f_cpA222(V_a[2],&a2);ret_a(2,struct A221)}
/* 65:{ippjfli<d{cciil}l>ldfpi<llips<fl>c{slcjjfjcjpf}<jsipspfjpdlcssc>fdplp{plfdilllsipldsdiljljsidpdjidfj}jdjdjll>d} */ struct A230 f65(){ret_a(0,struct A230)}
/* 66:f<dlfsiipslf>ffsijfjcif{ipsfccs<f><scljsd{cisd}<lddc>sc>ifi}{scp} */ f f66(union  A231 a1,f a2,f a3,s a4,i a5,j a6,f a7,j a8,c a9,i a10,f a11,struct A235 a12,struct A236 a13){f_cpA231(V_a[1],&a1);V_f[2]=a2;V_f[3]=a3;V_s[4]=a4;V_i[5]=a5;V_j[6]=a6;V_f[7]=a7;V_j[8]=a8;V_c[9]=a9;V_i[10]=a10;V_f[11]=a11;f_cpA235(V_a[12],&a12);f_cpA236(V_a[13],&a13);ret_f(13)}
/* 67:pci<psj>pjfs */ p f67(c a1,i a2,union  A237 a3,p a4,j a5,f a6,s a7){V_c[1]=a1;V_i[2]=a2;f_cpA237(V_a[3],&a3);V_p[4]=a4;V_j[5]=a5;V_f[6]=a6;V_s[7]=a7;ret_p(7)}
/* 68:i{p{{fdcliplpfjcpfid}fjpj}iip}c */ i f68(struct A240 a1,c a2){f_cpA240(V_a[1],&a1);V_c[2]=a2;ret_i(2)}
/* 69:{<lppjsjsdflccjcpipjfpljjjddc>lsip} */ struct A242 f69(){ret_a(0,struct A242)}
/* 70:iccffpdid<ssp> */ i f70(c a1,c a2,f a3,f a4,p a5,d a6,i a7,d a8,union  A243 a9){V_c[1]=a1;V_c[2]=a2;V_f[3]=a3;V_f[4]=a4;V_p[5]=a5;V_d[6]=a6;V_i[7]=a7;V_d[8]=a8;f_cpA243(V_a[9],&a9);ret_i(9)}
/* 71:<i{jpispdspdcfflffpjpdlsccl}fdf{csls}<ljj>cllslcspsi<pplpfdpdpl>d<pjiil>flscpj>lll */ union  A249 f71(l a1,l a2,l a3){V_l[1]=a1;V_l[2]=a2;V_l[3]=a3;ret_a(3,union  A249)}
/* 72:{p}sjddjpsjjd */ struct A250 f72(s a1,j a2,d a3,d a4,j a5,p a6,s a7,j a8,j a9,d a10){V_s[1]=a1;V_j[2]=a2;V_d[3]=a3;V_d[4]=a4;V_j[5]=a5;V_p[6]=a6;V_s[7]=a7;V_j[8]=a8;V_j[9]=a9;V_d[10]=a10;ret_a(10,struct A250)}
/* 73:dsi<siif>jji */ d f73(s a1,i a2,union  A251 a3,j a4,j a5,i a6){V_s[1]=a1;V_i[2]=a2;f_cpA251(V_a[3],&a3);V_j[4]=a4;V_j[5]=a5;V_i[6]=a6;ret_d(6)}
/* 74:spjcs<<j>cpp>j */ s f74(p a1,j a2,c a3,s a4,union  A252 a5,j a6){V_p[1]=a1;V_j[2]=a2;V_c[3]=a3;V_s[4]=a4;f_cpA252(V_a[5],&a5);V_j[6]=a6;ret_s(6)}
/* 75:{idl{{clijd}c<cjicclffcdjc>pplijfij}}c */ struct A256 f75(c a1){V_c[1]=a1;ret_a(1,struct A256)}
/* 76:l<sc{f}cfi>lsl */ l f76(union  A258 a1,l a2,s a3,l a4){f_cpA258(V_a[1],&a1);V_l[2]=a2;V_s[3]=a3;V_l[4]=a4;ret_l(4)}
/* 77:vlij{jcs{jfidildijdcccdl}j<slcddj>isdplilcsj{cs}silpdlscld{pjdljspp}f}f{sclfils}lpfsiclp<lfjpiiddfsdjpslfslc> */ v f77(l a1,i a2,j a3,struct A262 a4,f a5,struct A263 a6,l a7,p a8,f a9,s a10,i a11,c a12,l a13,p a14,union  A264 a15){V_l[1]=a1;V_i[2]=a2;V_j[3]=a3;f_cpA262(V_a[4],&a4);V_f[5]=a5;f_cpA263(V_a[6],&a6);V_l[7]=a7;V_p[8]=a8;V_f[9]=a9;V_s[10]=a10;V_i[11]=a11;V_c[12]=a12;V_l[13]=a13;V_p[14]=a14;f_cpA264(V_a[15],&a15);ret_v(15)}
/* 78:{pdjdjsfdpcdpdpdf}flccj */ struct A265 f78(f a1,l a2,c a3,c a4,j a5){V_f[1]=a1;V_l[2]=a2;V_c[3]=a3;V_c[4]=a4;V_j[5]=a5;ret_a(5,struct A265)}
/* 79:ifs<sfss>j */ i f79(f a1,s a2,union  A266 a3,j a4){V_f[1]=a1;V_s[2]=a2;f_cpA266(V_a[3],&a3);V_j[4]=a4;ret_i(4)}
/* 80:<iflpjsifpic>d */ union  A267 f80(d a1){V_d[1]=a1;ret_a(1,union  A267)}
/* 81:fsij{sislssdii} */ f f81(s a1,i a2,j a3,struct A268 a4){V_s[1]=a1;V_i[2]=a2;V_j[3]=a3;f_cpA268(V_a[4],&a4);ret_f(4)}
/* 82:vfd<ci<fdppfidlcf>pi>jidpj */ v f82(f a1,d a2,union  A270 a3,j a4,i a5,d a6,p a7,j a8){V_f[1]=a1;V_d[2]=a2;f_cpA270(V_a[3],&a3);V_j[4]=a4;V_i[5]=a5;V_d[6]=a6;V_p[7]=a7;V_j[8]=a8;ret_v(8)}
/* 83:p<dc>dsijjfpj */ p f83(union  A271 a1,d a2,s a3,i a4,j a5,j a6,f a7,p a8,j a9){f_cpA271(V_a[1],&a1);V_d[2]=a2;V_s[3]=a3;V_i[4]=a4;V_j[5]=a5;V_j[6]=a6;V_f[7]=a7;V_p[8]=a8;V_j[9]=a9;ret_p(9)}
/* 84:fpfjclcsj<cdspl>d<llpllilfpicjd>cfs */ f f84(p a1,f a2,j a3,c a4,l a5,c a6,s a7,j a8,union  A272 a9,d a10,union  A273 a11,c a12,f a13,s a14){V_p[1]=a1;V_f[2]=a2;V_j[3]=a3;V_c[4]=a4;V_l[5]=a5;V_c[6]=a6;V_s[7]=a7;V_j[8]=a8;f_cpA272(V_a[9],&a9);V_d[10]=a10;f_cpA273(V_a[11],&a11);V_c[12]=a12;V_f[13]=a13;V_s[14]=a14;ret_f(14)}
/* 85:pid{fdjscl}j */ p f85(i a1,d a2,struct A274 a3,j a4){V_i[1]=a1;V_d[2]=a2;f_cpA274(V_a[3],&a3);V_j[4]=a4;ret_p(4)}
/* 86:sfdfcjdi<sdlpddslpicspsdjijsdf> */ s f86(f a1,d a2,f a3,c a4,j a5,d a6,i a7,union  A275 a8){V_f[1]=a1;V_d[2]=a2;V_f[3]=a3;V_c[4]=a4;V_j[5]=a5;V_d[6]=a6;V_i[7]=a7;f_cpA275(V_a[8],&a8);ret_s(8)}
/* 87:lll{scf}sifjp */ l f87(l a1,l a2,struct A276 a3,s a4,i a5,f a6,j a7,p a8){V_l[1]=a1;V_l[2]=a2;f_cpA276(V_a[3],&a3);V_s[4]=a4;V_i[5]=a5;V_f[6]=a6;V_j[7]=a7;V_p[8]=a8;ret_l(8)}
/* 88:f{iscdl}i<dlfcilljcpcdsjiffllciij>fj */ f f88(struct A277 a1,i a2,union  A278 a3,f a4,j a5){f_cpA277(V_a[1],&a1);V_i[2]=a2;f_cpA278(V_a[3],&a3);V_f[4]=a4;V_j[5]=a5;ret_f(5)}
/* 89:is{dlcdsf}{pspdfcsfiij}cs{ffdfcil} */ i f89(s a1,struct A279 a2,struct A280 a3,c a4,s a5,struct A281 a6){V_s[1]=a1;f_cpA279(V_a[2],&a2);f_cpA280(V_a[3],&a3);V_c[4]=a4;V_s[5]=a5;f_cpA281(V_a[6],&a6);ret_i(6)}
/* 90:{pl} */ struct A282 f90(){ret_a(0,struct A282)}
/* 91:<flc{{jfcicdsilcp}d<spj>i<ljfcsjlcpiclicdcpcc>fj{sllsc}s<iljpfisisjpd>fjlsjiiipd<jlisdl>jfdc{ljsjjlljfdfipp}fljfd<sfp>{pipppp}lpjld{sspcdlsfiji}}sfjl>{lf{ssll{cp}ffpp<d>cs<jlcdjplslii>ji}}{id}ifdf */ union  A294 f91(struct A298 a1,struct A299 a2,i a3,f a4,d a5,f a6){f_cpA298(V_a[1],&a1);f_cpA299(V_a[2],&a2);V_i[3]=a3;V_f[4]=a4;V_d[5]=a5;V_f[6]=a6;ret_a(6,union  A294)}
/* 92:fpssd{d}fiiip */ f f92(p a1,s a2,s a3,d a4,struct A156 a5,f a6,i a7,i a8,i a9,p a10){V_p[1]=a1;V_s[2]=a2;V_s[3]=a3;V_d[4]=a4;f_cpA156(V_a[5],&a5);V_f[6]=a6;V_i[7]=a7;V_i[8]=a8;V_i[9]=a9;V_p[10]=a10;ret_f(10)}
/* 93:ssl<d<sdddcijplcdilpcdipcslfidlcjsdl>fdi>fc{jpi}fscl */ s f93(s a1,l a2,union  A301 a3,f a4,c a5,struct A302 a6,f a7,s a8,c a9,l a10){V_s[1]=a1;V_l[2]=a2;f_cpA301(V_a[3],&a3);V_f[4]=a4;V_c[5]=a5;f_cpA302(V_a[6],&a6);V_f[7]=a7;V_s[8]=a8;V_c[9]=a9;V_l[10]=a10;ret_s(10)}
/* 94:jdli{llj{j}cisc<llpscs>{slll}jjifcs} */ j f94(d a1,l a2,i a3,struct A306 a4){V_d[1]=a1;V_l[2]=a2;V_i[3]=a3;f_cpA306(V_a[4],&a4);ret_j(4)}
/* 95:p<cp>dj{s}pi */ p f95(union  A66 a1,d a2,j a3,struct A4 a4,p a5,i a6){f_cpA66(V_a[1],&a1);V_d[2]=a2;V_j[3]=a3;f_cpA4(V_a[4],&a4);V_p[5]=a5;V_i[6]=a6;ret_p(6)}
/* 96:{d}{jccjll}cdicl{cp}ddppil */ struct A156 f96(struct A307 a1,c a2,d a3,i a4,c a5,l a6,struct A295 a7,d a8,d a9,p a10,p a11,i a12,l a13){f_cpA307(V_a[1],&a1);V_c[2]=a2;V_d[3]=a3;V_i[4]=a4;V_c[5]=a5;V_l[6]=a6;f_cpA295(V_a[7],&a7);V_d[8]=a8;V_d[9]=a9;V_p[10]=a10;V_p[11]=a11;V_i[12]=a12;V_l[13]=a13;ret_a(13,struct A156)}
/* 97:cdddlcpf{<sjfc<ijjjpfjdsi>sjcdld>cp}idf */ c f97(d a1,d a2,d a3,l a4,c a5,p a6,f a7,struct A310 a8,i a9,d a10,f a11){V_d[1]=a1;V_d[2]=a2;V_d[3]=a3;V_l[4]=a4;V_c[5]=a5;V_p[6]=a6;V_f[7]=a7;f_cpA310(V_a[8],&a8);V_i[9]=a9;V_d[10]=a10;V_f[11]=a11;ret_c(11)}
/* 98:{l{dpfi}ilcspjisd}cjfpldilp */ struct A312 f98(c a1,j a2,f a3,p a4,l a5,d a6,i a7,l a8,p a9){V_c[1]=a1;V_j[2]=a2;V_f[3]=a3;V_p[4]=a4;V_l[5]=a5;V_d[6]=a6;V_i[7]=a7;V_l[8]=a8;V_p[9]=a9;ret_a(9,struct A312)}
/* 99:<c{ljlcd}> */ union  A314 f99(){ret_a(0,union  A314)}
/* 100:s<sd>i<jflji>p<f{ppfiplj}>iidfdild */ s f100(union  A315 a1,i a2,union  A316 a3,p a4,union  A318 a5,i a6,i a7,d a8,f a9,d a10,i a11,l a12,d a13){f_cpA315(V_a[1],&a1);V_i[2]=a2;f_cpA316(V_a[3],&a3);V_p[4]=a4;f_cpA318(V_a[5],&a5);V_i[6]=a6;V_i[7]=a7;V_d[8]=a8;V_f[9]=a9;V_d[10]=a10;V_i[11]=a11;V_l[12]=a12;V_d[13]=a13;ret_s(13)}
/* 101:j<scjsld<ldffi>cfdslfjs>icpp */ j f101(union  A320 a1,i a2,c a3,p a4,p a5){f_cpA320(V_a[1],&a1);V_i[2]=a2;V_c[3]=a3;V_p[4]=a4;V_p[5]=a5;ret_j(5)}
/* 102:dscdf{scisccdf} */ d f102(s a1,c a2,d a3,f a4,struct A321 a5){V_s[1]=a1;V_c[2]=a2;V_d[3]=a3;V_f[4]=a4;f_cpA321(V_a[5],&a5);ret_d(5)}
/* 103:s<cjsjjl> */ s f103(union  A322 a1){f_cpA322(V_a[1],&a1);ret_s(1)}
/* 104:dccpslsi{ps{ifdiljip{idip}l}fs}iddsj */ d f104(c a1,c a2,p a3,s a4,l a5,s a6,i a7,struct A325 a8,i a9,d a10,d a11,s a12,j a13){V_c[1]=a1;V_c[2]=a2;V_p[3]=a3;V_s[4]=a4;V_l[5]=a5;V_s[6]=a6;V_i[7]=a7;f_cpA325(V_a[8],&a8);V_i[9]=a9;V_d[10]=a10;V_d[11]=a11;V_s[12]=a12;V_j[13]=a13;ret_d(13)}
/* 105:plillf<slp<dfp>fsil{cpjllflisfspdffici}cssiipsdp<scijid>fp>jpji */ p f105(l a1,i a2,l a3,l a4,f a5,union  A329 a6,j a7,p a8,j a9,i a10){V_l[1]=a1;V_i[2]=a2;V_l[3]=a3;V_l[4]=a4;V_f[5]=a5;f_cpA329(V_a[6],&a6);V_j[7]=a7;V_p[8]=a8;V_j[9]=a9;V_i[10]=a10;ret_p(10)}
/* 106:p{sisl}{c<dji<ssplffp>cp{cpjficjcfjpsjjfdsiscjd}lcd{d}l>}scf */ p f106(struct A330 a1,struct A334 a2,s a3,c a4,f a5){f_cpA330(V_a[1],&a1);f_cpA334(V_a[2],&a2);V_s[3]=a3;V_c[4]=a4;V_f[5]=a5;ret_p(5)}
/* 107:pd<d{lddslp}lcsdpdpcifdfjij>jlp{scc}l<lfflccilifjpdfp><p>p */ p f107(d a1,union  A336 a2,j a3,l a4,p a5,struct A337 a6,l a7,union  A338 a8,union  A161 a9,p a10){V_d[1]=a1;f_cpA336(V_a[2],&a2);V_j[3]=a3;V_l[4]=a4;V_p[5]=a5;f_cpA337(V_a[6],&a6);V_l[7]=a7;f_cpA338(V_a[8],&a8);f_cpA161(V_a[9],&a9);V_p[10]=a10;ret_p(10)}
/* 108:{{pf}{ciif}ci{csspsdccsjlj}}c */ struct A342 f108(c a1){V_c[1]=a1;ret_a(1,struct A342)}
/* 109:pl<fpp>icclc */ p f109(l a1,union  A343 a2,i a3,c a4,c a5,l a6,c a7){V_l[1]=a1;f_cpA343(V_a[2],&a2);V_i[3]=a3;V_c[4]=a4;V_c[5]=a5;V_l[6]=a6;V_c[7]=a7;ret_p(7)}
/* 110:vj<{sidclif<ijslslid>f<cddljfjsclcfsilipsfissjdc>sdff<jflliccssdljisdcpjcjii>i{pccpliffiddlidi}fii<jfcppjijs>{f}sji{fssflsldpsijcpc}{cc}cp}>fci{slif{pdddl}ls<p>dplllcppjs<cficfdipjfjdssddcsccspppldjlisdidiil><cccddcsiff>cfjd{sppl}li<pjdjjifcijisfiippspdf>ljii{p}clsi<ipdpidcijjj>}iisii<lfpc>j{ps}j */ v f110(j a1,union  A352 a2,f a3,c a4,i a5,struct A359 a6,i a7,i a8,s a9,i a10,i a11,union  A360 a12,j a13,struct A361 a14,j a15){V_j[1]=a1;f_cpA352(V_a[2],&a2);V_f[3]=a3;V_c[4]=a4;V_i[5]=a5;f_cpA359(V_a[6],&a6);V_i[7]=a7;V_i[8]=a8;V_s[9]=a9;V_i[10]=a10;V_i[11]=a11;f_cpA360(V_a[12],&a12);V_j[13]=a13;f_cpA361(V_a[14],&a14);V_j[15]=a15;ret_v(15)}
/* 111:cdc{ipsjlflccli}{p}isf{scsfpisjdijcpccfpjddplspssdsfs}jl */ c f111(d a1,c a2,struct A362 a3,struct A250 a4,i a5,s a6,f a7,struct A363 a8,j a9,l a10){V_d[1]=a1;V_c[2]=a2;f_cpA362(V_a[3],&a3);f_cpA250(V_a[4],&a4);V_i[5]=a5;V_s[6]=a6;V_f[7]=a7;f_cpA363(V_a[8],&a8);V_j[9]=a9;V_l[10]=a10;ret_c(10)}
/* 112:fspsdjlliipfl<jlppfc{siclpf}dsd<f>j<jpsiijf>c{clspcdlflspc}sf<cd>> */ f f112(s a1,p a2,s a3,d a4,j a5,l a6,l a7,i a8,i a9,p a10,f a11,l a12,union  A368 a13){V_s[1]=a1;V_p[2]=a2;V_s[3]=a3;V_d[4]=a4;V_j[5]=a5;V_l[6]=a6;V_l[7]=a7;V_i[8]=a8;V_i[9]=a9;V_p[10]=a10;V_f[11]=a11;V_l[12]=a12;f_cpA368(V_a[13],&a13);ret_f(13)}
/* 113:<<<j>i>iidd>{c} */ union  A370 f113(struct A122 a1){f_cpA122(V_a[1],&a1);ret_a(1,union  A370)}
/* 114:<lciipssldlldllpl>ppl */ union  A371 f114(p a1,p a2,l a3){V_p[1]=a1;V_p[2]=a2;V_l[3]=a3;ret_a(3,union  A371)}
/* 115:ps{<ijif>dpjc}cjp */ p f115(s a1,struct A373 a2,c a3,j a4,p a5){V_s[1]=a1;f_cpA373(V_a[2],&a2);V_c[3]=a3;V_j[4]=a4;V_p[5]=a5;ret_p(5)}
/* 116:dd{j{ipldssic<jdsisfdfddpjpldjlcfjlipppflsf>jjp<cfjilifscslpd>fsppl{jf}<cj>pf{df}cl}cljs}f */ d f116(d a1,struct A380 a2,f a3){V_d[1]=a1;f_cpA380(V_a[2],&a2);V_f[3]=a3;ret_d(3)}
/* 117:d<iss{ddjffl}s>pssd{fdl}jss */ d f117(union  A382 a1,p a2,s a3,s a4,d a5,struct A383 a6,j a7,s a8,s a9){f_cpA382(V_a[1],&a1);V_p[2]=a2;V_s[3]=a3;V_s[4]=a4;V_d[5]=a5;f_cpA383(V_a[6],&a6);V_j[7]=a7;V_s[8]=a8;V_s[9]=a9;ret_d(9)}
/* 118:d<p>j */ d f118(union  A161 a1,j a2){f_cpA161(V_a[1],&a1);V_j[2]=a2;ret_d(2)}
/* 119:{pc}fdls{pljjcd}{f<lddfdfcs>d}jjjf{jpljlsfcsccddlifsplclfispcfslffpcfsidijddpssliljlfdccdssislpd}j */ struct A384 f119(f a1,d a2,l a3,s a4,struct A385 a5,struct A387 a6,j a7,j a8,j a9,f a10,struct A388 a11,j a12){V_f[1]=a1;V_d[2]=a2;V_l[3]=a3;V_s[4]=a4;f_cpA385(V_a[5],&a5);f_cpA387(V_a[6],&a6);V_j[7]=a7;V_j[8]=a8;V_j[9]=a9;V_f[10]=a10;f_cpA388(V_a[11],&a11);V_j[12]=a12;ret_a(12,struct A384)}
/* 120:<l{jdslss<fcisjffdclcji>if{fiddd}}pff>jif{jdcjfplcj}fjd<cds>pf */ union  A392 f120(j a1,i a2,f a3,struct A393 a4,f a5,j a6,d a7,union  A394 a8,p a9,f a10){V_j[1]=a1;V_i[2]=a2;V_f[3]=a3;f_cpA393(V_a[4],&a4);V_f[5]=a5;V_j[6]=a6;V_d[7]=a7;f_cpA394(V_a[8],&a8);V_p[9]=a9;V_f[10]=a10;ret_a(10,union  A392)}
/* 121:lclf{<fp>pl{pcsfipfdiicis}f}pplpi */ l f121(c a1,l a2,f a3,struct A397 a4,p a5,p a6,l a7,p a8,i a9){V_c[1]=a1;V_l[2]=a2;V_f[3]=a3;f_cpA397(V_a[4],&a4);V_p[5]=a5;V_p[6]=a6;V_l[7]=a7;V_p[8]=a8;V_i[9]=a9;ret_l(9)}
/* 122:<p<p{ciddcsspsp}djcfp>>dcid */ union  A400 f122(d a1,c a2,i a3,d a4){V_d[1]=a1;V_c[2]=a2;V_i[3]=a3;V_d[4]=a4;ret_a(4,union  A400)}
/* 123:<si<ps>> */ union  A402 f123(){ret_a(0,union  A402)}
/* 124:<<jfpjdpj{ljllisjsfscidpipjd}>scdp{p}dli>ssjjc */ union  A405 f124(s a1,s a2,j a3,j a4,c a5){V_s[1]=a1;V_s[2]=a2;V_j[3]=a3;V_j[4]=a4;V_c[5]=a5;ret_a(5,union  A405)}
/* 125:pcl{pldpdsflpfldfscsjlscspdfsjsdjj}llp */ p f125(c a1,l a2,struct A406 a3,l a4,l a5,p a6){V_c[1]=a1;V_l[2]=a2;f_cpA406(V_a[3],&a3);V_l[4]=a4;V_l[5]=a5;V_p[6]=a6;ret_p(6)}
/* 126:{cliijipcp<l>}d<lcljc> */ struct A407 f126(d a1,union  A408 a2){V_d[1]=a1;f_cpA408(V_a[2],&a2);ret_a(2,struct A407)}
/* 127:vpd{sdssp{lj<idcpjjscsi>ljl<fcfjdjfsdplillds>}sccsljpj}p */ v f127(p a1,d a2,struct A412 a3,p a4){V_p[1]=a1;V_d[2]=a2;f_cpA412(V_a[3],&a3);V_p[4]=a4;ret_v(4)}
/* 128:{si} */ struct A413 f128(){ret_a(0,struct A413)}
/* 129:d<d{c}<sc{j}fsdf{j}s<jdddljip>cl><is>>lpl */ d f129(union  A417 a1,l a2,p a3,l a4){f_cpA417(V_a[1],&a1);V_l[2]=a2;V_p[3]=a3;V_l[4]=a4;ret_d(4)}
/* 130:f<jdijijl<ddf><pisfppiisippjf>{cicpcfppsfpfl<dc>pf}<jdcd>sc<ccpf>>pfd */ f f130(union  A423 a1,p a2,f a3,d a4){f_cpA423(V_a[1],&a1);V_p[2]=a2;V_f[3]=a3;V_d[4]=a4;ret_f(4)}
/* 131:islf<c{siicsdsf}dlissfsp>dl<pfliifppffc{jdpdcsisdciil}sidip{iipjlfcfcidipsfssl}iscdp> */ i f131(s a1,l a2,f a3,union  A425 a4,d a5,l a6,union  A428 a7){V_s[1]=a1;V_l[2]=a2;V_f[3]=a3;f_cpA425(V_a[4],&a4);V_d[5]=a5;V_l[6]=a6;f_cpA428(V_a[7],&a7);ret_i(7)}
/* 132:j<lplfic><cdd>fs{i} */ j f132(union  A429 a1,union  A430 a2,f a3,s a4,struct A71 a5){f_cpA429(V_a[1],&a1);f_cpA430(V_a[2],&a2);V_f[3]=a3;V_s[4]=a4;f_cpA71(V_a[5],&a5);ret_j(5)}
/* 133:<disddisisclpjsp>{sff}d */ union  A431 f133(struct A432 a1,d a2){f_cpA432(V_a[1],&a1);V_d[2]=a2;ret_a(2,union  A431)}
/* 134:csildisjcpc<jsdfcjscffpcsfjidcpjscssc>j{pldfsdipidplsf}c */ c f134(s a1,i a2,l a3,d a4,i a5,s a6,j a7,c a8,p a9,c a10,union  A433 a11,j a12,struct A434 a13,c a14){V_s[1]=a1;V_i[2]=a2;V_l[3]=a3;V_d[4]=a4;V_i[5]=a5;V_s[6]=a6;V_j[7]=a7;V_c[8]=a8;V_p[9]=a9;V_c[10]=a10;f_cpA433(V_a[11],&a11);V_j[12]=a12;f_cpA434(V_a[13],&a13);V_c[14]=a14;ret_c(14)}
/* 135:{i} */ struct A71 f135(){ret_a(0,struct A71)}
/* 136:d{iissjdcsl}d */ d f136(struct A435 a1,d a2){f_cpA435(V_a[1],&a1);V_d[2]=a2;ret_d(2)}
/* 137:fspdispdfjjlfp{sifip<j>jffdc{pcfisccdcjcfcdficljiij}} */ f f137(s a1,p a2,d a3,i a4,s a5,p a6,d a7,f a8,j a9,j a10,l a11,f a12,p a13,struct A437 a14){V_s[1]=a1;V_p[2]=a2;V_d[3]=a3;V_i[4]=a4;V_s[5]=a5;V_p[6]=a6;V_d[7]=a7;V_f[8]=a8;V_j[9]=a9;V_j[10]=a10;V_l[11]=a11;V_f[12]=a12;V_p[13]=a13;f_cpA437(V_a[14],&a14);ret_f(14)}
/* 138:{pi{pjsffjdi}{jj}{lfjlciijfji}{jpcsjlcisscsdl}clc<dcssljiccd>s}j<dff{dicpippscfisldpi}fipfli<cjfdijcjjild>cipi>p<j{fillpdp}lffsljjl>{{clicpd}c<sllicddcfljpspc>pp{fjf}<dldjsidcpsijf>ipcclppsc}p{ispidd}{lpffjlcll}ljc */ struct A442 f138(j a1,union  A445 a2,p a3,union  A447 a4,struct A452 a5,p a6,struct A453 a7,struct A454 a8,l a9,j a10,c a11){V_j[1]=a1;f_cpA445(V_a[2],&a2);V_p[3]=a3;f_cpA447(V_a[4],&a4);f_cpA452(V_a[5],&a5);V_p[6]=a6;f_cpA453(V_a[7],&a7);f_cpA454(V_a[8],&a8);V_l[9]=a9;V_j[10]=a10;V_c[11]=a11;ret_a(11,struct A442)}
/* 139:llj<i{ld}j<fs><djljlilf>{fcpcics}ldi{lp}>p<lf>l<sdscic> */ l f139(l a1,j a2,union  A460 a3,p a4,union  A461 a5,l a6,union  A462 a7){V_l[1]=a1;V_j[2]=a2;f_cpA460(V_a[3],&a3);V_p[4]=a4;f_cpA461(V_a[5],&a5);V_l[6]=a6;f_cpA462(V_a[7],&a7);ret_l(7)}
/* 140:fcljpdilssddi{i} */ f f140(c a1,l a2,j a3,p a4,d a5,i a6,l a7,s a8,s a9,d a10,d a11,i a12,struct A71 a13){V_c[1]=a1;V_l[2]=a2;V_j[3]=a3;V_p[4]=a4;V_d[5]=a5;V_i[6]=a6;V_l[7]=a7;V_s[8]=a8;V_s[9]=a9;V_d[10]=a10;V_d[11]=a11;V_i[12]=a12;f_cpA71(V_a[13],&a13);ret_f(13)}
/* 141:vd<<sllp{pi}s<llpcpifiiiij>lj<jscfppcdisfdplp>l<s>slsjsljf{i}<ipld>ljif>ii>dcj{ds}s */ v f141(d a1,union  A468 a2,d a3,c a4,j a5,struct A469 a6,s a7){V_d[1]=a1;f_cpA468(V_a[2],&a2);V_d[3]=a3;V_c[4]=a4;V_j[5]=a5;f_cpA469(V_a[6],&a6);V_s[7]=a7;ret_v(7)}
/* 142:sclsls<{jpfccls<lcpfpppflfjdlcfc>dfc{ifij}}pidj>s{cplccc{fclpi<ppilfplijlillic>iplplc<ipsfijdcdspf>}<isjlsiddfs>ficc{jccdcd{si}<sc>lpsds{sids}}ifcifs}d */ s f142(c a1,l a2,s a3,l a4,s a5,union  A473 a6,s a7,struct A481 a8,d a9){V_c[1]=a1;V_l[2]=a2;V_s[3]=a3;V_l[4]=a4;V_s[5]=a5;f_cpA473(V_a[6],&a6);V_s[7]=a7;f_cpA481(V_a[8],&a8);V_d[9]=a9;ret_s(9)}
/* 143:dflfpd<lp<jcfpcs>ljpfs{sjdfssiicffplplf}plfl{ifis}sp>iss */ d f143(f a1,l a2,f a3,p a4,d a5,union  A485 a6,i a7,s a8,s a9){V_f[1]=a1;V_l[2]=a2;V_f[3]=a3;V_p[4]=a4;V_d[5]=a5;f_cpA485(V_a[6],&a6);V_i[7]=a7;V_s[8]=a8;V_s[9]=a9;ret_d(9)}
/* 144:piic<d{cdji}sc<d>cicjl><sll<flcldplpp>{cds}jpd<lficijp>slc{pfsspiipsjip}<jslfsfdpii>>icdp */ p f144(i a1,i a2,c a3,union  A487 a4,union  A493 a5,i a6,c a7,d a8,p a9){V_i[1]=a1;V_i[2]=a2;V_c[3]=a3;f_cpA487(V_a[4],&a4);f_cpA493(V_a[5],&a5);V_i[6]=a6;V_c[7]=a7;V_d[8]=a8;V_p[9]=a9;ret_p(9)}
/* 145:dif<pl>ss */ d f145(i a1,f a2,union  A494 a3,s a4,s a5){V_i[1]=a1;V_f[2]=a2;f_cpA494(V_a[3],&a3);V_s[4]=a4;V_s[5]=a5;ret_d(5)}
/* 146:dfcs{<fssisscjflflsdppdfidsljfjpdjfp>lcfi}jjf<sfjfjfcsfffscslddd>jccpl<<jljjpcfjilsiiis>ss<fpjjlsscfp><pcfd>>{sjspcfj} */ d f146(f a1,c a2,s a3,struct A496 a4,j a5,j a6,f a7,union  A497 a8,j a9,c a10,c a11,p a12,l a13,union  A501 a14,struct A502 a15){V_f[1]=a1;V_c[2]=a2;V_s[3]=a3;f_cpA496(V_a[4],&a4);V_j[5]=a5;V_j[6]=a6;V_f[7]=a7;f_cpA497(V_a[8],&a8);V_j[9]=a9;V_c[10]=a10;V_c[11]=a11;V_p[12]=a12;V_l[13]=a13;f_cpA501(V_a[14],&a14);f_cpA502(V_a[15],&a15);ret_d(15)}
/* 147:p<fcdlll<sssffj>ljsissl>d<dcjplsjjl>f<dcspsldcpj>si{csjc}fdpd */ p f147(union  A504 a1,d a2,union  A505 a3,f a4,union  A506 a5,s a6,i a7,struct A507 a8,f a9,d a10,p a11,d a12){f_cpA504(V_a[1],&a1);V_d[2]=a2;f_cpA505(V_a[3],&a3);V_f[4]=a4;f_cpA506(V_a[5],&a5);V_s[6]=a6;V_i[7]=a7;f_cpA507(V_a[8],&a8);V_f[9]=a9;V_d[10]=a10;V_p[11]=a11;V_d[12]=a12;ret_p(12)}
/* 148:fcsj<{jlj}ic<fpjfflpl><psjlsispfpjijdclil>c<jlsij>{lif}l{jjscfpjpspcpllcpdlpl}{fsdpc}i>j{c} */ f f148(c a1,s a2,j a3,union  A515 a4,j a5,struct A122 a6){V_c[1]=a1;V_s[2]=a2;V_j[3]=a3;f_cpA515(V_a[4],&a4);V_j[5]=a5;f_cpA122(V_a[6],&a6);ret_f(6)}
/* 149:c{<i>p{d}ic} */ c f149(struct A516 a1){f_cpA516(V_a[1],&a1);ret_c(1)}
/* 150:s<f<ccc<pcpicsijs>p>{dsfffllli<is>i<cslcdijdjp>llplccpddcli<dji>df}iicdil>dcildfjic */ s f150(union  A522 a1,d a2,c a3,i a4,l a5,d a6,f a7,j a8,i a9,c a10){f_cpA522(V_a[1],&a1);V_d[2]=a2;V_c[3]=a3;V_i[4]=a4;V_l[5]=a5;V_d[6]=a6;V_f[7]=a7;V_j[8]=a8;V_i[9]=a9;V_c[10]=a10;ret_s(10)}
/* 151:c<f>{sldjcjcclppflljfssjcjfjlspspfc}didpcpc<fsppfd>j */ c f151(union  A189 a1,struct A523 a2,d a3,i a4,d a5,p a6,c a7,p a8,c a9,union  A524 a10,j a11){f_cpA189(V_a[1],&a1);f_cpA523(V_a[2],&a2);V_d[3]=a3;V_i[4]=a4;V_d[5]=a5;V_p[6]=a6;V_c[7]=a7;V_p[8]=a8;V_c[9]=a9;f_cpA524(V_a[10],&a10);V_j[11]=a11;ret_c(11)}
/* 152:s<cf>fcl */ s f152(union  A525 a1,f a2,c a3,l a4){f_cpA525(V_a[1],&a1);V_f[2]=a2;V_c[3]=a3;V_l[4]=a4;ret_s(4)}
/* 153:<id<{ficiisddjlljp}ldsp<csclifllis>il<fs>lj>>dfld */ union  A529 f153(d a1,f a2,l a3,d a4){V_d[1]=a1;V_f[2]=a2;V_l[3]=a3;V_d[4]=a4;ret_a(4,union  A529)}
/* 154:s{cll<ciiisjscillplfdjjjcdppjpijl>ldidfj<dls>}djdf */ s f154(struct A532 a1,d a2,j a3,d a4,f a5){f_cpA532(V_a[1],&a1);V_d[2]=a2;V_j[3]=a3;V_d[4]=a4;V_f[5]=a5;ret_s(5)}
/* 155:jjj{<pj><dfiffpclc><lci>ld<flsll>c<fjdccjdpj>pi<icf>lp}sjp */ j f155(j a1,j a2,struct A539 a3,s a4,j a5,p a6){V_j[1]=a1;V_j[2]=a2;f_cpA539(V_a[3],&a3);V_s[4]=a4;V_j[5]=a5;V_p[6]=a6;ret_j(6)}
/* 156:ppljp<ljpiijsfpcddsipd>flscsfjd */ p f156(p a1,l a2,j a3,p a4,union  A540 a5,f a6,l a7,s a8,c a9,s a10,f a11,j a12,d a13){V_p[1]=a1;V_l[2]=a2;V_j[3]=a3;V_p[4]=a4;f_cpA540(V_a[5],&a5);V_f[6]=a6;V_l[7]=a7;V_s[8]=a8;V_c[9]=a9;V_s[10]=a10;V_f[11]=a11;V_j[12]=a12;V_d[13]=a13;ret_p(13)}
/* 157:diddc<sls<p>{jlj}>ssfll{j}dj */ d f157(i a1,d a2,d a3,c a4,union  A541 a5,s a6,s a7,f a8,l a9,l a10,struct A303 a11,d a12,j a13){V_i[1]=a1;V_d[2]=a2;V_d[3]=a3;V_c[4]=a4;f_cpA541(V_a[5],&a5);V_s[6]=a6;V_s[7]=a7;V_f[8]=a8;V_l[9]=a9;V_l[10]=a10;f_cpA303(V_a[11],&a11);V_d[12]=a12;V_j[13]=a13;ret_d(13)}
/* 158:cc{sjdiilicd}fsl */ c f158(c a1,struct A542 a2,f a3,s a4,l a5){V_c[1]=a1;f_cpA542(V_a[2],&a2);V_f[3]=a3;V_s[4]=a4;V_l[5]=a5;ret_c(5)}
/* 159:ldjc{cpp}{pl}d{plijcffc} */ l f159(d a1,j a2,c a3,struct A543 a4,struct A282 a5,d a6,struct A544 a7){V_d[1]=a1;V_j[2]=a2;V_c[3]=a3;f_cpA543(V_a[4],&a4);f_cpA282(V_a[5],&a5);V_d[6]=a6;f_cpA544(V_a[7],&a7);ret_l(7)}
/* 160:cid{llp}pf */ c f160(i a1,d a2,struct A545 a3,p a4,f a5){V_i[1]=a1;V_d[2]=a2;f_cpA545(V_a[3],&a3);V_p[4]=a4;V_f[5]=a5;ret_c(5)}
/* 161:<lcipcjlj>lf{fddlcipjsfspfcdcldj{j{ddss}}slp}{s} */ union  A546 f161(l a1,f a2,struct A549 a3,struct A4 a4){V_l[1]=a1;V_f[2]=a2;f_cpA549(V_a[3],&a3);f_cpA4(V_a[4],&a4);ret_a(4,union  A546)}
/* 162:slflscdlcld<ccfiip>{iisllpjj}{<fssid>} */ s f162(l a1,f a2,l a3,s a4,c a5,d a6,l a7,c a8,l a9,d a10,union  A550 a11,struct A551 a12,struct A553 a13){V_l[1]=a1;V_f[2]=a2;V_l[3]=a3;V_s[4]=a4;V_c[5]=a5;V_d[6]=a6;V_l[7]=a7;V_c[8]=a8;V_l[9]=a9;V_d[10]=a10;f_cpA550(V_a[11],&a11);f_cpA551(V_a[12],&a12);f_cpA553(V_a[13],&a13);ret_s(13)}
/* 163:{sp}<cccl{pdcjl}s<ispi>sii>lflllss */ struct A554 f163(union  A557 a1,l a2,f a3,l a4,l a5,l a6,s a7,s a8){f_cpA557(V_a[1],&a1);V_l[2]=a2;V_f[3]=a3;V_l[4]=a4;V_l[5]=a5;V_l[6]=a6;V_s[7]=a7;V_s[8]=a8;ret_a(8,struct A554)}
/* 164:i<j<isc>lpd>d<si{lccspppfjl}sj>j */ i f164(union  A559 a1,d a2,union  A561 a3,j a4){f_cpA559(V_a[1],&a1);V_d[2]=a2;f_cpA561(V_a[3],&a3);V_j[4]=a4;ret_i(4)}
/* 165:j{sjc<sfcfs>flsjjlspj<pdd>jpsff{sijsccpsf}ccd<djpdjspjp>}lc<p>{l<cissill>p<jsjil>ci{pilfjc}isf<diicipidd>d<ijjlj>cl{ifjippddjssc}}<l>{llljpcdjjijlidcs}sf */ j f165(struct A566 a1,l a2,c a3,union  A161 a4,struct A573 a5,union  A127 a6,struct A574 a7,s a8,f a9){f_cpA566(V_a[1],&a1);V_l[2]=a2;V_c[3]=a3;f_cpA161(V_a[4],&a4);f_cpA573(V_a[5],&a5);f_cpA127(V_a[6],&a6);f_cpA574(V_a[7],&a7);V_s[8]=a8;V_f[9]=a9;ret_j(9)}
/* 166:f{dcs}jlpjlsp */ f f166(struct A575 a1,j a2,l a3,p a4,j a5,l a6,s a7,p a8){f_cpA575(V_a[1],&a1);V_j[2]=a2;V_l[3]=a3;V_p[4]=a4;V_j[5]=a5;V_l[6]=a6;V_s[7]=a7;V_p[8]=a8;ret_f(8)}
/* 167:vjji{psjj}slliiip */ v f167(j a1,j a2,i a3,struct A576 a4,s a5,l a6,l a7,i a8,i a9,i a10,p a11){V_j[1]=a1;V_j[2]=a2;V_i[3]=a3;f_cpA576(V_a[4],&a4);V_s[5]=a5;V_l[6]=a6;V_l[7]=a7;V_i[8]=a8;V_i[9]=a9;V_i[10]=a10;V_p[11]=a11;ret_v(11)}
/* 168:<lips>j<d>si */ union  A577 f168(j a1,union  A94 a2,s a3,i a4){V_j[1]=a1;f_cpA94(V_a[2],&a2);V_s[3]=a3;V_i[4]=a4;ret_a(4,union  A577)}
/* 169:llf{li} */ l f169(l a1,f a2,struct A578 a3){V_l[1]=a1;V_f[2]=a2;f_cpA578(V_a[3],&a3);ret_l(3)}
/* 170:{<s{ppjd}f>c}j */ struct A581 f170(j a1){V_j[1]=a1;ret_a(1,struct A581)}
/* 171:{sp{dclp}icf{pp}islldll<cll>ps<sisp>j<lipsdiic>sfscl{f}pddsl} */ struct A587 f171(){ret_a(0,struct A587)}
/* 172:lsd<<sf{ssdp}ps>f{isicdjd}> */ l f172(s a1,d a2,union  A591 a3){V_s[1]=a1;V_d[2]=a2;f_cpA591(V_a[3],&a3);ret_l(3)}
/* 173:pd{cfc}{f{jcdcp}<dsjdfdpjliji>}{pp<{fp}l<ippjsll>d<pd>sdd{spcij}dsdldld{lspl}jii>ssd}i{sfcjsl<fcipdd>}dccf */ p f173(d a1,struct A592 a2,struct A595 a3,struct A602 a4,i a5,struct A604 a6,d a7,c a8,c a9,f a10){V_d[1]=a1;f_cpA592(V_a[2],&a2);f_cpA595(V_a[3],&a3);f_cpA602(V_a[4],&a4);V_i[5]=a5;f_cpA604(V_a[6],&a6);V_d[7]=a7;V_c[8]=a8;V_c[9]=a9;V_f[10]=a10;ret_p(10)}
/* 174:jdlscsc<sfiijlfdldcicplifllppplficljpijdfi>f<sccflf><pc<<ldp>scf<jflspic>jscpf{llipis}<djlpd>c<pipp>pjp>> */ j f174(d a1,l a2,s a3,c a4,s a5,c a6,union  A605 a7,f a8,union  A606 a9,union  A613 a10){V_d[1]=a1;V_l[2]=a2;V_s[3]=a3;V_c[4]=a4;V_s[5]=a5;V_c[6]=a6;f_cpA605(V_a[7],&a7);V_f[8]=a8;f_cpA606(V_a[9],&a9);f_cpA613(V_a[10],&a10);ret_j(10)}
/* 175:j{jjjpcslsiijlcpiciscp}sdcjlpfdpd */ j f175(struct A614 a1,s a2,d a3,c a4,j a5,l a6,p a7,f a8,d a9,p a10,d a11){f_cpA614(V_a[1],&a1);V_s[2]=a2;V_d[3]=a3;V_c[4]=a4;V_j[5]=a5;V_l[6]=a6;V_p[7]=a7;V_f[8]=a8;V_d[9]=a9;V_p[10]=a10;V_d[11]=a11;ret_j(11)}
/* 176:{lijspjccis}fijjj */ struct A615 f176(f a1,i a2,j a3,j a4,j a5){V_f[1]=a1;V_i[2]=a2;V_j[3]=a3;V_j[4]=a4;V_j[5]=a5;ret_a(5,struct A615)}
/* 177:{slfpsc}j */ struct A616 f177(j a1){V_j[1]=a1;ret_a(1,struct A616)}
/* 178:iip{cfcp}{f}{jscl<l{dpcjplpsdiisidipdlpj}>}l<{l}d>issjfi */ i f178(i a1,p a2,struct A617 a3,struct A257 a4,struct A620 a5,l a6,union  A621 a7,i a8,s a9,s a10,j a11,f a12,i a13){V_i[1]=a1;V_p[2]=a2;f_cpA617(V_a[3],&a3);f_cpA257(V_a[4],&a4);f_cpA620(V_a[5],&a5);V_l[6]=a6;f_cpA621(V_a[7],&a7);V_i[8]=a8;V_s[9]=a9;V_s[10]=a10;V_j[11]=a11;V_f[12]=a12;V_i[13]=a13;ret_i(13)}
/* 179:f{{f}ils{fp}psf{pficfpflclslsdsjjidi}scdfc{s}sdpl{c}jl}dis{cdlcjp}pj{fdijjsjl}f{{slpp}}{p} */ f f179(struct A623 a1,d a2,i a3,s a4,struct A624 a5,p a6,j a7,struct A625 a8,f a9,struct A627 a10,struct A250 a11){f_cpA623(V_a[1],&a1);V_d[2]=a2;V_i[3]=a3;V_s[4]=a4;f_cpA624(V_a[5],&a5);V_p[6]=a6;V_j[7]=a7;f_cpA625(V_a[8],&a8);V_f[9]=a9;f_cpA627(V_a[10],&a10);f_cpA250(V_a[11],&a11);ret_f(11)}
/* 180:{dp}ls{cifl{cf}}<fdclf{ccflcjpipi}fllfl{jlf}sld> */ struct A628 f180(l a1,s a2,struct A630 a3,union  A633 a4){V_l[1]=a1;V_s[2]=a2;f_cpA630(V_a[3],&a3);f_cpA633(V_a[4],&a4);ret_a(4,struct A628)}
/* 181:ij{jdsssjdjsccllfsf}pcciccfijl */ i f181(j a1,struct A634 a2,p a3,c a4,c a5,i a6,c a7,c a8,f a9,i a10,j a11,l a12){V_j[1]=a1;f_cpA634(V_a[2],&a2);V_p[3]=a3;V_c[4]=a4;V_c[5]=a5;V_i[6]=a6;V_c[7]=a7;V_c[8]=a8;V_f[9]=a9;V_i[10]=a10;V_j[11]=a11;V_l[12]=a12;ret_i(12)}
/* 182:pd{lsfjj<s><icd><jcs>}dp<jcldlj{sifljcs<sdlllfijlcdppi>l<lffpcpipsf>j<llpddffpf>ldjplcs<pijddpidc>sf}>ip<dj>jlfp */ p f182(d a1,struct A637 a2,d a3,p a4,union  A643 a5,i a6,p a7,union  A644 a8,j a9,l a10,f a11,p a12){V_d[1]=a1;f_cpA637(V_a[2],&a2);V_d[3]=a3;V_p[4]=a4;f_cpA643(V_a[5],&a5);V_i[6]=a6;V_p[7]=a7;f_cpA644(V_a[8],&a8);V_j[9]=a9;V_l[10]=a10;V_f[11]=a11;V_p[12]=a12;ret_p(12)}
/* 183:lssdijfs{scpij} */ l f183(s a1,s a2,d a3,i a4,j a5,f a6,s a7,struct A645 a8){V_s[1]=a1;V_s[2]=a2;V_d[3]=a3;V_i[4]=a4;V_j[5]=a5;V_f[6]=a6;V_s[7]=a7;f_cpA645(V_a[8],&a8);ret_l(8)}
/* 184:cddll{dcjfifi{{lsfcj}lljs<sfppspfpcpf>sij<jjsddf>dd}}ii */ c f184(d a1,d a2,l a3,l a4,struct A650 a5,i a6,i a7){V_d[1]=a1;V_d[2]=a2;V_l[3]=a3;V_l[4]=a4;f_cpA650(V_a[5],&a5);V_i[6]=a6;V_i[7]=a7;ret_c(7)}
/* 185:d{cpj<ij>jjsfj{iidlsjssc}l}silid */ d f185(struct A653 a1,s a2,i a3,l a4,i a5,d a6){f_cpA653(V_a[1],&a1);V_s[2]=a2;V_i[3]=a3;V_l[4]=a4;V_i[5]=a5;V_d[6]=a6;ret_d(6)}
/* 186:j{i<fcjsl>}l */ j f186(struct A655 a1,l a2){f_cpA655(V_a[1],&a1);V_l[2]=a2;ret_j(2)}
/* 187:isp<d> */ i f187(s a1,p a2,union  A94 a3){V_s[1]=a1;V_p[2]=a2;f_cpA94(V_a[3],&a3);ret_i(3)}
/* 188:f<isidlljli<cfdcc><sifcpcj>ds<fl>lfd{<csspilsf>cplldpis}splij{jlfpcd}l{{ldc}dlii<ljdfcj>jj{p}pjd<cll>}ifil{c{cj}{dcf}c{dfilcfipfdsic}i}>cd */ f f188(union  A668 a1,c a2,d a3){f_cpA668(V_a[1],&a1);V_c[2]=a2;V_d[3]=a3;ret_f(3)}
/* 189:{jfjs}spj */ struct A669 f189(s a1,p a2,j a3){V_s[1]=a1;V_p[2]=a2;V_j[3]=a3;ret_a(3,struct A669)}
/* 190:jpif<jcjipffdcissdscs{p}dc> */ j f190(p a1,i a2,f a3,union  A670 a4){V_p[1]=a1;V_i[2]=a2;V_f[3]=a3;f_cpA670(V_a[4],&a4);ret_j(4)}
/* 191:l<<ls>j> */ l f191(union  A672 a1){f_cpA672(V_a[1],&a1);ret_l(1)}
/* 192:fpicdp{sc} */ f f192(p a1,i a2,c a3,d a4,p a5,struct A673 a6){V_p[1]=a1;V_i[2]=a2;V_c[3]=a3;V_d[4]=a4;V_p[5]=a5;f_cpA673(V_a[6],&a6);ret_f(6)}
/* 193:ccdf{cld<sp>sjccli<jl<j>pj>iic{<fcsidjljclsl>scfj<fplf>jdcc<sddfdc>dcs{clf}}l} */ c f193(c a1,d a2,f a3,struct A681 a4){V_c[1]=a1;V_d[2]=a2;V_f[3]=a3;f_cpA681(V_a[4],&a4);ret_c(4)}
/* 194:vjfc{clpsjssp} */ v f194(j a1,f a2,c a3,struct A682 a4){V_j[1]=a1;V_f[2]=a2;V_c[3]=a3;f_cpA682(V_a[4],&a4);ret_v(4)}
/* 195:jsi<fcscsljccs><pi> */ j f195(s a1,i a2,union  A683 a3,union  A684 a4){V_s[1]=a1;V_i[2]=a2;f_cpA683(V_a[3],&a3);f_cpA684(V_a[4],&a4);ret_j(4)}
/* 196:<jcjlclssiifcf>l */ union  A685 f196(l a1){V_l[1]=a1;ret_a(1,union  A685)}
/* 197:dscj<dijclssil>s */ d f197(s a1,c a2,j a3,union  A686 a4,s a5){V_s[1]=a1;V_c[2]=a2;V_j[3]=a3;f_cpA686(V_a[4],&a4);V_s[5]=a5;ret_d(5)}
/* 198:d<fp{{dcdid}f{sd}lfsldcs<p>jff{jiljffdlcjfciijipliipcsplsclcdc}jidf{liccsj}s{jiilissfcsfdilppdccjlilplliplsfls}pijfj<spjf><dcicjdpd>i<pd>sijj}pjjspjl>jdffic */ d f198(union  A695 a1,j a2,d a3,f a4,f a5,i a6,c a7){f_cpA695(V_a[1],&a1);V_j[2]=a2;V_d[3]=a3;V_f[4]=a4;V_f[5]=a5;V_i[6]=a6;V_c[7]=a7;ret_d(7)}
/* 199:fplpspifl<li> */ f f199(p a1,l a2,p a3,s a4,p a5,i a6,f a7,l a8,union  A108 a9){V_p[1]=a1;V_l[2]=a2;V_p[3]=a3;V_s[4]=a4;V_p[5]=a5;V_i[6]=a6;V_f[7]=a7;V_l[8]=a8;f_cpA108(V_a[9],&a9);ret_f(9)}
/* 200:sidfifjpc{ddfdjjpspf} */ s f200(i a1,d a2,f a3,i a4,f a5,j a6,p a7,c a8,struct A696 a9){V_i[1]=a1;V_d[2]=a2;V_f[3]=a3;V_i[4]=a4;V_f[5]=a5;V_j[6]=a6;V_p[7]=a7;V_c[8]=a8;f_cpA696(V_a[9],&a9);ret_s(9)}
/* 201:c{pjis}fjlfpip */ c f201(struct A697 a1,f a2,j a3,l a4,f a5,p a6,i a7,p a8){f_cpA697(V_a[1],&a1);V_f[2]=a2;V_j[3]=a3;V_l[4]=a4;V_f[5]=a5;V_p[6]=a6;V_i[7]=a7;V_p[8]=a8;ret_c(8)}
/* 202:f{cf}lfsp */ f f202(struct A629 a1,l a2,f a3,s a4,p a5){f_cpA629(V_a[1],&a1);V_l[2]=a2;V_f[3]=a3;V_s[4]=a4;V_p[5]=a5;ret_f(5)}
/* 203:ljps{l<cdsiflijdcdpcpisipcjsd>f}f<sj>lf */ l f203(j a1,p a2,s a3,struct A699 a4,f a5,union  A700 a6,l a7,f a8){V_j[1]=a1;V_p[2]=a2;V_s[3]=a3;f_cpA699(V_a[4],&a4);V_f[5]=a5;f_cpA700(V_a[6],&a6);V_l[7]=a7;V_f[8]=a8;ret_l(8)}
/* 204:s{djs{ff}j} */ s f204(struct A702 a1){f_cpA702(V_a[1],&a1);ret_s(1)}
/* 205:lipsf<s>fpii */ l f205(i a1,p a2,s a3,f a4,union  A75 a5,f a6,p a7,i a8,i a9){V_i[1]=a1;V_p[2]=a2;V_s[3]=a3;V_f[4]=a4;f_cpA75(V_a[5],&a5);V_f[6]=a6;V_p[7]=a7;V_i[8]=a8;V_i[9]=a9;ret_l(9)}
/* 206:fdpccs<lj>j{idipfcssf}p */ f f206(d a1,p a2,c a3,c a4,s a5,union  A14 a6,j a7,struct A703 a8,p a9){V_d[1]=a1;V_p[2]=a2;V_c[3]=a3;V_c[4]=a4;V_s[5]=a5;f_cpA14(V_a[6],&a6);V_j[7]=a7;f_cpA703(V_a[8],&a8);V_p[9]=a9;ret_f(9)}
/* 207:j<<jcpspi>pd<lcclci>{ii}cpscj{fcji}{s}p>{slccd{ip<ilslji>s}pc{<p>{ld}{lfif}d{ifl}pff<fjj>sdd<djjj><pfdci>{iijsjddldffisp}p}spdfjdssf<ljcsdsljc>{dfj<dsffslpp>dffp<f>fdl}{jfj}} */ j f207(union  A708 a1,struct A722 a2){f_cpA708(V_a[1],&a1);f_cpA722(V_a[2],&a2);ret_j(2)}
/* 208:sd<sp> */ s f208(d a1,union  A674 a2){V_d[1]=a1;f_cpA674(V_a[2],&a2);ret_s(2)}
/* 209:dlj<f>iji */ d f209(l a1,j a2,union  A189 a3,i a4,j a5,i a6){V_l[1]=a1;V_j[2]=a2;f_cpA189(V_a[3],&a3);V_i[4]=a4;V_j[5]=a5;V_i[6]=a6;ret_d(6)}
/* 210:ijsc{pcjpjilf<d>dpsjp}pcpcsd */ i f210(j a1,s a2,c a3,struct A723 a4,p a5,c a6,p a7,c a8,s a9,d a10){V_j[1]=a1;V_s[2]=a2;V_c[3]=a3;f_cpA723(V_a[4],&a4);V_p[5]=a5;V_c[6]=a6;V_p[7]=a7;V_c[8]=a8;V_s[9]=a9;V_d[10]=a10;ret_i(10)}
/* 211:<ljiildcdcsliijclfsdccjdjilpsssliffl>lsdd */ union  A724 f211(l a1,s a2,d a3,d a4){V_l[1]=a1;V_s[2]=a2;V_d[3]=a3;V_d[4]=a4;ret_a(4,union  A724)}
/* 212:f<pljic{scsf{jppscj}}lc{{iii}{cpip}lfpffdci<pd>f{lj}scpji{cfisjfdsijilidciifjlidcddf}{llfpfdcjjfisj}ds}jc<dldlic{pjdsipiisspcsidlipj}<i>>>{ilfpcdc}sjp */ f f212(union  A734 a1,struct A735 a2,s a3,j a4,p a5){f_cpA734(V_a[1],&a1);f_cpA735(V_a[2],&a2);V_s[3]=a3;V_j[4]=a4;V_p[5]=a5;ret_f(5)}
/* 213:{slpidjffspfs}id<lfcljs> */ struct A736 f213(i a1,d a2,union  A737 a3){V_i[1]=a1;V_d[2]=a2;f_cpA737(V_a[3],&a3);ret_a(3,struct A736)}
/* 214:p<jsi<j{pisccsdc}lljp{s}<silcccij>f>lp<dppdi<cfjdsdj>fl>dfjfsj><pd>spld */ p f214(union  A743 a1,union  A598 a2,s a3,p a4,l a5,d a6){f_cpA743(V_a[1],&a1);f_cpA598(V_a[2],&a2);V_s[3]=a3;V_p[4]=a4;V_l[5]=a5;V_d[6]=a6;ret_p(6)}
/* 215:jpl{<j>dcl} */ j f215(p a1,l a2,struct A744 a3){V_p[1]=a1;V_l[2]=a2;f_cpA744(V_a[3],&a3);ret_j(3)}
/* 216:idspdjssp<<ic{lf}d{l}dsfidpp>jdsljddspl>ddi<c{iijp}> */ i f216(d a1,s a2,p a3,d a4,j a5,s a6,s a7,p a8,union  A747 a9,d a10,d a11,i a12,union  A749 a13){V_d[1]=a1;V_s[2]=a2;V_p[3]=a3;V_d[4]=a4;V_j[5]=a5;V_s[6]=a6;V_s[7]=a7;V_p[8]=a8;f_cpA747(V_a[9],&a9);V_d[10]=a10;V_d[11]=a11;V_i[12]=a12;f_cpA749(V_a[13],&a13);ret_i(13)}
/* 217:v<c>c<lsiddcpdpi>cj */ v f217(union  A3 a1,c a2,union  A750 a3,c a4,j a5){f_cpA3(V_a[1],&a1);V_c[2]=a2;f_cpA750(V_a[3],&a3);V_c[4]=a4;V_j[5]=a5;ret_v(5)}
/* 218:p{idcji} */ p f218(struct A751 a1){f_cpA751(V_a[1],&a1);ret_p(1)}
/* 219:d<dssd>j<lslilljdiicdc>i */ d f219(union  A752 a1,j a2,union  A753 a3,i a4){f_cpA752(V_a[1],&a1);V_j[2]=a2;f_cpA753(V_a[3],&a3);V_i[4]=a4;ret_d(4)}
/* 220:<cs>is<fsdjddifii>i */ union  A754 f220(i a1,s a2,union  A755 a3,i a4){V_i[1]=a1;V_s[2]=a2;f_cpA755(V_a[3],&a3);V_i[4]=a4;ret_a(4,union  A754)}
/* 221:j{dslifdlf}fpipi */ j f221(struct A756 a1,f a2,p a3,i a4,p a5,i a6){f_cpA756(V_a[1],&a1);V_f[2]=a2;V_p[3]=a3;V_i[4]=a4;V_p[5]=a5;V_i[6]=a6;ret_j(6)}
/* 222:l{f}ljpilsc */ l f222(struct A257 a1,l a2,j a3,p a4,i a5,l a6,s a7,c a8){f_cpA257(V_a[1],&a1);V_l[2]=a2;V_j[3]=a3;V_p[4]=a4;V_i[5]=a5;V_l[6]=a6;V_s[7]=a7;V_c[8]=a8;ret_l(8)}
/* 223:jjlj<icss>sll */ j f223(j a1,l a2,j a3,union  A757 a4,s a5,l a6,l a7){V_j[1]=a1;V_l[2]=a2;V_j[3]=a3;f_cpA757(V_a[4],&a4);V_s[5]=a5;V_l[6]=a6;V_l[7]=a7;ret_j(7)}
/* 224:l<f>p */ l f224(union  A189 a1,p a2){f_cpA189(V_a[1],&a1);V_p[2]=a2;ret_l(2)}
/* 225:jdjjfcjp<fdpfi>jj */ j f225(d a1,j a2,j a3,f a4,c a5,j a6,p a7,union  A758 a8,j a9,j a10){V_d[1]=a1;V_j[2]=a2;V_j[3]=a3;V_f[4]=a4;V_c[5]=a5;V_j[6]=a6;V_p[7]=a7;f_cpA758(V_a[8],&a8);V_j[9]=a9;V_j[10]=a10;ret_j(10)}
/* 226:<jd{ifcsijfdpsi<dlips><cpclflciffjfdjisll>cj}lpjplsf<dijcjffjfl><fci>cjiddss> */ union  A764 f226(){ret_a(0,union  A764)}
/* 227:{df}p{ffpcpddifpji<ddd>ipj}cjcfp */ struct A378 f227(p a1,struct A766 a2,c a3,j a4,c a5,f a6,p a7){V_p[1]=a1;f_cpA766(V_a[2],&a2);V_c[3]=a3;V_j[4]=a4;V_c[5]=a5;V_f[6]=a6;V_p[7]=a7;ret_a(7,struct A378)}
/* 228:c{jfds{djisiclj}pjic<dfpfcpccsip>fdifpll}f */ c f228(struct A769 a1,f a2){f_cpA769(V_a[1],&a1);V_f[2]=a2;ret_c(2)}
/* 229:l{sf}cj */ l f229(struct A770 a1,c a2,j a3){f_cpA770(V_a[1],&a1);V_c[2]=a2;V_j[3]=a3;ret_l(3)}
/* 230:spjdfci{c}d<jppc> */ s f230(p a1,j a2,d a3,f a4,c a5,i a6,struct A122 a7,d a8,union  A771 a9){V_p[1]=a1;V_j[2]=a2;V_d[3]=a3;V_f[4]=a4;V_c[5]=a5;V_i[6]=a6;f_cpA122(V_a[7],&a7);V_d[8]=a8;f_cpA771(V_a[9],&a9);ret_s(9)}
/* 231:d<li>jc */ d f231(union  A108 a1,j a2,c a3){f_cpA108(V_a[1],&a1);V_j[2]=a2;V_c[3]=a3;ret_d(3)}
/* 232:l{sclsslpfppdlidpicsc}s */ l f232(struct A772 a1,s a2){f_cpA772(V_a[1],&a1);V_s[2]=a2;ret_l(2)}
/* 233:cdilidp<sic>pfiji */ c f233(d a1,i a2,l a3,i a4,d a5,p a6,union  A773 a7,p a8,f a9,i a10,j a11,i a12){V_d[1]=a1;V_i[2]=a2;V_l[3]=a3;V_i[4]=a4;V_d[5]=a5;V_p[6]=a6;f_cpA773(V_a[7],&a7);V_p[8]=a8;V_f[9]=a9;V_i[10]=a10;V_j[11]=a11;V_i[12]=a12;ret_c(12)}
/* 234:p<cpll>{ddppdfcicdjjilcdccsppcsf}cicpd */ p f234(union  A774 a1,struct A775 a2,c a3,i a4,c a5,p a6,d a7){f_cpA774(V_a[1],&a1);f_cpA775(V_a[2],&a2);V_c[3]=a3;V_i[4]=a4;V_c[5]=a5;V_p[6]=a6;V_d[7]=a7;ret_p(7)}
/* 235:{icsp}plfpffj<dfjdjfj{jci{liijp}jcfd<jildid><ccdpjpcdlss>icf}><lpcpcflsf>fff */ struct A776 f235(p a1,l a2,f a3,p a4,f a5,f a6,j a7,union  A781 a8,union  A782 a9,f a10,f a11,f a12){V_p[1]=a1;V_l[2]=a2;V_f[3]=a3;V_p[4]=a4;V_f[5]=a5;V_f[6]=a6;V_j[7]=a7;f_cpA781(V_a[8],&a8);f_cpA782(V_a[9],&a9);V_f[10]=a10;V_f[11]=a11;V_f[12]=a12;ret_a(12,struct A776)}
/* 236:<{j}jildcip<{dllijc}dcljp>d{djpfi}iicdcipisplppscpfj>jf */ union  A786 f236(j a1,f a2){V_j[1]=a1;V_f[2]=a2;ret_a(2,union  A786)}
/* 237:lifjpljljjd{ffd<ifjfdsdsff>jfif<pipicf>}lj */ l f237(i a1,f a2,j a3,p a4,l a5,j a6,l a7,j a8,j a9,d a10,struct A789 a11,l a12,j a13){V_i[1]=a1;V_f[2]=a2;V_j[3]=a3;V_p[4]=a4;V_l[5]=a5;V_j[6]=a6;V_l[7]=a7;V_j[8]=a8;V_j[9]=a9;V_d[10]=a10;f_cpA789(V_a[11],&a11);V_l[12]=a12;V_j[13]=a13;ret_l(13)}
/* 238:vjs{dji}ld{cds}sfjs<ic{l}> */ v f238(j a1,s a2,struct A790 a3,l a4,d a5,struct A489 a6,s a7,f a8,j a9,s a10,union  A791 a11){V_j[1]=a1;V_s[2]=a2;f_cpA790(V_a[3],&a3);V_l[4]=a4;V_d[5]=a5;f_cpA489(V_a[6],&a6);V_s[7]=a7;V_f[8]=a8;V_j[9]=a9;V_s[10]=a10;f_cpA791(V_a[11],&a11);ret_v(11)}
/* 239:<ffjidl<s>{pcfdcpijfj}{lilipjcjcij}<pl>>fp<idssjjpf>ijlpsljjcs */ union  A794 f239(f a1,p a2,union  A795 a3,i a4,j a5,l a6,p a7,s a8,l a9,j a10,j a11,c a12,s a13){V_f[1]=a1;V_p[2]=a2;f_cpA795(V_a[3],&a3);V_i[4]=a4;V_j[5]=a5;V_l[6]=a6;V_p[7]=a7;V_s[8]=a8;V_l[9]=a9;V_j[10]=a10;V_j[11]=a11;V_c[12]=a12;V_s[13]=a13;ret_a(13,union  A794)}
/* 240:v{s}j{liipfd}<{sdcsdipjfciclpjd}lj>jf */ v f240(struct A4 a1,j a2,struct A796 a3,union  A798 a4,j a5,f a6){f_cpA4(V_a[1],&a1);V_j[2]=a2;f_cpA796(V_a[3],&a3);f_cpA798(V_a[4],&a4);V_j[5]=a5;V_f[6]=a6;ret_v(6)}
/* 241:{d<d<fsssij>d{ipicfflpfcc}>{l}ljlflppd}lpd */ struct A802 f241(l a1,p a2,d a3){V_l[1]=a1;V_p[2]=a2;V_d[3]=a3;ret_a(3,struct A802)}
/* 242:lccj<djdsfjlflcsdpdssdpis>{ifc} */ l f242(c a1,c a2,j a3,union  A803 a4,struct A804 a5){V_c[1]=a1;V_c[2]=a2;V_j[3]=a3;f_cpA803(V_a[4],&a4);f_cpA804(V_a[5],&a5);ret_l(5)}
/* 243:{ilffldjjfpslliil}<cjdfc> */ struct A805 f243(union  A806 a1){f_cpA806(V_a[1],&a1);ret_a(1,struct A805)}
/* 244:vljp{cd{sjpspdd<fdfslsldplcls>fjicl{dcdsicjldpljcs}p}{fip{illsfls}lj{sj}icjc{iiflsf}s<jdplfi>{dcljcdjpfccfipdils}d<dfjfd>fjji}}s */ v f244(l a1,j a2,p a3,struct A817 a4,s a5){V_l[1]=a1;V_j[2]=a2;V_p[3]=a3;f_cpA817(V_a[4],&a4);V_s[5]=a5;ret_v(5)}
/* 245:clijdif{cc{j}fldipd} */ c f245(l a1,i a2,j a3,d a4,i a5,f a6,struct A818 a7){V_l[1]=a1;V_i[2]=a2;V_j[3]=a3;V_d[4]=a4;V_i[5]=a5;V_f[6]=a6;f_cpA818(V_a[7],&a7);ret_c(7)}
/* 246:idcld<dddlsp>fic{f{spjcfsll}{jddpfdscssc<pfc><cf>l{sisjijicji}jcd}fd{p{jlsisipdsijpsdsjpjjsc}jpc{fj}{jdjcdijps}}i{fcc}pjdicllicpdls<jddpll{silcddsdpsffdpscdcliddfi}><i>p}spfclji */ i f246(d a1,c a2,l a3,d a4,union  A819 a5,f a6,i a7,c a8,struct A831 a9,s a10,p a11,f a12,c a13,l a14,j a15,i a16){V_d[1]=a1;V_c[2]=a2;V_l[3]=a3;V_d[4]=a4;f_cpA819(V_a[5],&a5);V_f[6]=a6;V_i[7]=a7;V_c[8]=a8;f_cpA831(V_a[9],&a9);V_s[10]=a10;V_p[11]=a11;V_f[12]=a12;V_c[13]=a13;V_l[14]=a14;V_j[15]=a15;V_i[16]=a16;ret_i(16)}
/* 247:c{pfij} */ c f247(struct A832 a1){f_cpA832(V_a[1],&a1);ret_c(1)}
/* 248:{ff} */ struct A701 f248(){ret_a(0,struct A701)}
/* 249:j<d> */ j f249(union  A94 a1){f_cpA94(V_a[1],&a1);ret_j(1)}
/* 250:f{flsfdff<<dfcc>j<i>cffc{csp}cjlfi<fcifdsfcfpffsdffpldi>d>p}cdls{ilfl}s */ f f250(struct A837 a1,c a2,d a3,l a4,s a5,struct A838 a6,s a7){f_cpA837(V_a[1],&a1);V_c[2]=a2;V_d[3]=a3;V_l[4]=a4;V_s[5]=a5;f_cpA838(V_a[6],&a6);V_s[7]=a7;ret_f(7)}
/* 251:<cpif>sssjijsi{dfs} */ union  A839 f251(s a1,s a2,s a3,j a4,i a5,j a6,s a7,i a8,struct A840 a9){V_s[1]=a1;V_s[2]=a2;V_s[3]=a3;V_j[4]=a4;V_i[5]=a5;V_j[6]=a6;V_s[7]=a7;V_i[8]=a8;f_cpA840(V_a[9],&a9);ret_a(9,union  A839)}
/* 252:{llccsjsdpdfcilis}ifjiiijjsip */ struct A841 f252(i a1,f a2,j a3,i a4,i a5,i a6,j a7,j a8,s a9,i a10,p a11){V_i[1]=a1;V_f[2]=a2;V_j[3]=a3;V_i[4]=a4;V_i[5]=a5;V_i[6]=a6;V_j[7]=a7;V_j[8]=a8;V_s[9]=a9;V_i[10]=a10;V_p[11]=a11;ret_a(11,struct A841)}
/* 253:fp<ij>{jf}sif */ f f253(p a1,union  A651 a2,struct A376 a3,s a4,i a5,f a6){V_p[1]=a1;f_cpA651(V_a[2],&a2);f_cpA376(V_a[3],&a3);V_s[4]=a4;V_i[5]=a5;V_f[6]=a6;ret_f(6)}
/* 254:<p<jddfppsfsdljdfipli>i{jpl}ildcpsisfpcl>fp{{lfd}lsscsfil{pilipssdljics}<s>scfjliid{pcic}} */ union  A844 f254(f a1,p a2,struct A848 a3){V_f[1]=a1;V_p[2]=a2;f_cpA848(V_a[3],&a3);ret_a(3,union  A844)}
/* 255:csc<c>{c}fslldpd<j{fl{il}<ssdpfcfjppcsfpfpsif><pildfsdpjcjcjdfddjsiipjilsjjppsjlfip>dldp<jc>di<lpsld>dl}c> */ c f255(s a1,c a2,union  A3 a3,struct A122 a4,f a5,s a6,l a7,l a8,d a9,p a10,d a11,union  A855 a12){V_s[1]=a1;V_c[2]=a2;f_cpA3(V_a[3],&a3);f_cpA122(V_a[4],&a4);V_f[5]=a5;V_s[6]=a6;V_l[7]=a7;V_l[8]=a8;V_d[9]=a9;V_p[10]=a10;V_d[11]=a11;f_cpA855(V_a[12],&a12);ret_c(12)}
/* 256:is<cicid{dcf}pifii<ldldfsssfjlppdjdl>dsisllc{cljfjlll}scd<jiis>s{sj}p{sipjf}c<cdsspdlfd>i{jcicjscdfcpjscl}fjl>pij{ff}jfj */ i f256(s a1,union  A862 a2,p a3,i a4,j a5,struct A701 a6,j a7,f a8,j a9){V_s[1]=a1;f_cpA862(V_a[2],&a2);V_p[3]=a3;V_i[4]=a4;V_j[5]=a5;f_cpA701(V_a[6],&a6);V_j[7]=a7;V_f[8]=a8;V_j[9]=a9;ret_i(9)}
/* 257:{p}d{jdjjpldcssfd}jsf */ struct A250 f257(d a1,struct A863 a2,j a3,s a4,f a5){V_d[1]=a1;f_cpA863(V_a[2],&a2);V_j[3]=a3;V_s[4]=a4;V_f[5]=a5;ret_a(5,struct A250)}
/* 258:vpfds<c>ppl{ifldjfcsfpicciccsdpps} */ v f258(p a1,f a2,d a3,s a4,union  A3 a5,p a6,p a7,l a8,struct A864 a9){V_p[1]=a1;V_f[2]=a2;V_d[3]=a3;V_s[4]=a4;f_cpA3(V_a[5],&a5);V_p[6]=a6;V_p[7]=a7;V_l[8]=a8;f_cpA864(V_a[9],&a9);ret_v(9)}
/* 259:df<clpjldcpdiflsijcddfsclji>{cdcpjifssjlic<pi<pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji>>f<{ccdisspfjifpc}ffjjj>df<fc{jc}i{cjlicpcjdfdfpllclsjpfs}c<ppcplspsicdpjldlsdi>{fpiddc}ccl>}c */ d f259(f a1,union  A865 a2,struct A875 a3,c a4){V_f[1]=a1;f_cpA865(V_a[2],&a2);f_cpA875(V_a[3],&a3);V_c[4]=a4;ret_d(4)}
/* 260:vij{lp<{ffjci}spiddisdpjjijf>cplpjsj} */ v f260(i a1,j a2,struct A878 a3){V_i[1]=a1;V_j[2]=a2;f_cpA878(V_a[3],&a3);ret_v(3)}
/* 261:p<i<sji>iljlf> */ p f261(union  A880 a1){f_cpA880(V_a[1],&a1);ret_p(1)}
/* 262:{lpi} */ struct A881 f262(){ret_a(0,struct A881)}
/* 263:{iicsccs{dspfjids}jcc{flcdispifidd}slsjjcijc}lpcpjf */ struct A884 f263(l a1,p a2,c a3,p a4,j a5,f a6){V_l[1]=a1;V_p[2]=a2;V_c[3]=a3;V_p[4]=a4;V_j[5]=a5;V_f[6]=a6;ret_a(6,struct A884)}
/* 264:pcfj<dsfcjssls>i */ p f264(c a1,f a2,j a3,union  A885 a4,i a5){V_c[1]=a1;V_f[2]=a2;V_j[3]=a3;f_cpA885(V_a[4],&a4);V_i[5]=a5;ret_p(5)}
/* 265:{liccj}{f}{cjds}pcj */ struct A886 f265(struct A257 a1,struct A887 a2,p a3,c a4,j a5){f_cpA257(V_a[1],&a1);f_cpA887(V_a[2],&a2);V_p[3]=a3;V_c[4]=a4;V_j[5]=a5;ret_a(5,struct A886)}
/* 266:{l{ildllji}{ciji}}f<piddljl> */ struct A890 f266(f a1,union  A891 a2){V_f[1]=a1;f_cpA891(V_a[2],&a2);ret_a(2,struct A890)}
/* 267:s<lcci<lpcjpldddp>p> */ s f267(union  A893 a1){f_cpA893(V_a[1],&a1);ret_s(1)}
/* 268:ddlifcdpj{clfd<idjsj>jf{p}pcppd<pici>jjfi{fp<pscjjjld>dcdjjsjp<dlllddi>}{lfjifjpfd{sfcijlc}{ljpjcjffi}fdpp{silsisp}f}{c}cccddipfccipppfdd}df */ d f268(d a1,l a2,i a3,f a4,c a5,d a6,p a7,j a8,struct A903 a9,d a10,f a11){V_d[1]=a1;V_l[2]=a2;V_i[3]=a3;V_f[4]=a4;V_c[5]=a5;V_d[6]=a6;V_p[7]=a7;V_j[8]=a8;f_cpA903(V_a[9],&a9);V_d[10]=a10;V_f[11]=a11;ret_d(11)}
/* 269:pld{pi} */ p f269(l a1,d a2,struct A463 a3){V_l[1]=a1;V_d[2]=a2;f_cpA463(V_a[3],&a3);ret_p(3)}
/* 270:d<<dfcjfsfplilsjjcfjijsdslcl>j><p>jlicj{{dlclsfcfp}{cilji}cccf{djdidfl}j<iplpppddsfdsfispflsj>psilp} */ d f270(union  A905 a1,union  A161 a2,j a3,l a4,i a5,c a6,j a7,struct A910 a8){f_cpA905(V_a[1],&a1);f_cpA161(V_a[2],&a2);V_j[3]=a3;V_l[4]=a4;V_i[5]=a5;V_c[6]=a6;V_j[7]=a7;f_cpA910(V_a[8],&a8);ret_d(8)}
/* 271:d<lsll>fdpip */ d f271(union  A911 a1,f a2,d a3,p a4,i a5,p a6){f_cpA911(V_a[1],&a1);V_f[2]=a2;V_d[3]=a3;V_p[4]=a4;V_i[5]=a5;V_p[6]=a6;ret_d(6)}
/* 272:d<lddjjj{fjss{fp}c}s>jjl */ d f272(union  A913 a1,j a2,j a3,l a4){f_cpA913(V_a[1],&a1);V_j[2]=a2;V_j[3]=a3;V_l[4]=a4;ret_d(4)}
/* 273:<ls<ic{sdcl}s>{l}{i}p{dpd}ic>scj<ljcficps>ilflsssdf */ union  A917 f273(s a1,c a2,j a3,union  A918 a4,i a5,l a6,f a7,l a8,s a9,s a10,s a11,d a12,f a13){V_s[1]=a1;V_c[2]=a2;V_j[3]=a3;f_cpA918(V_a[4],&a4);V_i[5]=a5;V_l[6]=a6;V_f[7]=a7;V_l[8]=a8;V_s[9]=a9;V_s[10]=a10;V_s[11]=a11;V_d[12]=a12;V_f[13]=a13;ret_a(13,union  A917)}
/* 274:sps{lsi}slpd{cdd<cdjsd{lslj}p{dfpdjjicidcjj}<cifsf>fdcc>pci{ij{ljpddpf}{siifddlf}}fsciffds{c{p}p{jsjcjlssdcsfslffiipsppdlddfi}lllpfiddfls}slffj{ccsdpi<ccspifcpfcccisfj>{sjffdi}pljd<jsp>ipljsd<ffddfipicicj>fclfi<ffsdpfjjs>psp{sssccsdcpsijd}pjji}fp<pl<fjfppifdifds>pdf><<slfd>f{fijpfsdf}ppjscic<jjlc>l>jsp}c<{flicdjc}j>si */ s f274(p a1,s a2,struct A919 a3,s a4,l a5,p a6,d a7,struct A942 a8,c a9,union  A944 a10,s a11,i a12){V_p[1]=a1;V_s[2]=a2;f_cpA919(V_a[3],&a3);V_s[4]=a4;V_l[5]=a5;V_p[6]=a6;V_d[7]=a7;f_cpA942(V_a[8],&a8);V_c[9]=a9;f_cpA944(V_a[10],&a10);V_s[11]=a11;V_i[12]=a12;ret_s(12)}
/* 275:ilicjj{lld} */ i f275(l a1,i a2,c a3,j a4,j a5,struct A945 a6){V_l[1]=a1;V_i[2]=a2;V_c[3]=a3;V_j[4]=a4;V_j[5]=a5;f_cpA945(V_a[6],&a6);ret_i(6)}
/* 276:vfj{l}jdil */ v f276(f a1,j a2,struct A51 a3,j a4,d a5,i a6,l a7){V_f[1]=a1;V_j[2]=a2;f_cpA51(V_a[3],&a3);V_j[4]=a4;V_d[5]=a5;V_i[6]=a6;V_l[7]=a7;ret_v(7)}
/* 277:ijss{isdcc<sccll<pcclcfcjplcfcs>>spcsp<jp>d<<s><f>pfj<jp>pj{psffddpdfjpilii}f{dsdjljpjllplslifsi}fll<fiipsdfcjiii>fpp{sfcf}ds>ji}{fllpsfdlpi}p{ifcjflj{sclc}dpls{icds}s{pfcdifpispi}<sspipfddflpjlfpc>f<pcfssclffiii>dflp}{{jflfppijp}pf} */ i f277(j a1,s a2,s a3,struct A954 a4,struct A955 a5,p a6,struct A961 a7,struct A963 a8){V_j[1]=a1;V_s[2]=a2;V_s[3]=a3;f_cpA954(V_a[4],&a4);f_cpA955(V_a[5],&a5);V_p[6]=a6;f_cpA961(V_a[7],&a7);f_cpA963(V_a[8],&a8);ret_i(8)}
/* 278:pl<iij>dpp{dld}sj<cficpjjpci>p{{fllcs}csfflfcipjpi{ijicj}lis} */ p f278(l a1,union  A964 a2,d a3,p a4,p a5,struct A965 a6,s a7,j a8,union  A966 a9,p a10,struct A969 a11){V_l[1]=a1;f_cpA964(V_a[2],&a2);V_d[3]=a3;V_p[4]=a4;V_p[5]=a5;f_cpA965(V_a[6],&a6);V_s[7]=a7;V_j[8]=a8;f_cpA966(V_a[9],&a9);V_p[10]=a10;f_cpA969(V_a[11],&a11);ret_p(11)}
/* 279:lpi<csijfpc{{pc}}i> */ l f279(p a1,i a2,union  A971 a3){V_p[1]=a1;V_i[2]=a2;f_cpA971(V_a[3],&a3);ret_l(3)}
/* 280:<dd>idiijpificjj */ union  A972 f280(i a1,d a2,i a3,i a4,j a5,p a6,i a7,f a8,i a9,c a10,j a11,j a12){V_i[1]=a1;V_d[2]=a2;V_i[3]=a3;V_i[4]=a4;V_j[5]=a5;V_p[6]=a6;V_i[7]=a7;V_f[8]=a8;V_i[9]=a9;V_c[10]=a10;V_j[11]=a11;V_j[12]=a12;ret_a(12,union  A972)}
/* 281:<li><ijppsflfs>pidlsjif{lfi} */ union  A108 f281(union  A973 a1,p a2,i a3,d a4,l a5,s a6,j a7,i a8,f a9,struct A974 a10){f_cpA973(V_a[1],&a1);V_p[2]=a2;V_i[3]=a3;V_d[4]=a4;V_l[5]=a5;V_s[6]=a6;V_j[7]=a7;V_i[8]=a8;V_f[9]=a9;f_cpA974(V_a[10],&a10);ret_a(10,union  A108)}
/* 282:jcjf{jfsiiidpdiddsjcsj}sslccfs */ j f282(c a1,j a2,f a3,struct A975 a4,s a5,s a6,l a7,c a8,c a9,f a10,s a11){V_c[1]=a1;V_j[2]=a2;V_f[3]=a3;f_cpA975(V_a[4],&a4);V_s[5]=a5;V_s[6]=a6;V_l[7]=a7;V_c[8]=a8;V_c[9]=a9;V_f[10]=a10;V_s[11]=a11;ret_j(11)}
/* 283:jdjs<f{c<cdil>s<fifdiidfddljdjllscs>jfidcidj}if><d>pl<siilp>{fd} */ j f283(d a1,j a2,s a3,union  A979 a4,union  A94 a5,p a6,l a7,union  A980 a8,struct A981 a9){V_d[1]=a1;V_j[2]=a2;V_s[3]=a3;f_cpA979(V_a[4],&a4);f_cpA94(V_a[5],&a5);V_p[6]=a6;V_l[7]=a7;f_cpA980(V_a[8],&a8);f_cpA981(V_a[9],&a9);ret_j(9)}
/* 284:{<ssf>}{fdjlfcssdcpjdfljpssfidfjfij}d */ struct A983 f284(struct A984 a1,d a2){f_cpA984(V_a[1],&a1);V_d[2]=a2;ret_a(2,struct A983)}
/* 285:ddi{d}dc{flp}{pfsipfippp}{fjijllisl}pd */ d f285(d a1,i a2,struct A156 a3,d a4,c a5,struct A985 a6,struct A986 a7,struct A987 a8,p a9,d a10){V_d[1]=a1;V_i[2]=a2;f_cpA156(V_a[3],&a3);V_d[4]=a4;V_c[5]=a5;f_cpA985(V_a[6],&a6);f_cpA986(V_a[7],&a7);f_cpA987(V_a[8],&a8);V_p[9]=a9;V_d[10]=a10;ret_d(10)}
/* 286:jffc<dlppfl{diidpcfdi}>ijjjf */ j f286(f a1,f a2,c a3,union  A989 a4,i a5,j a6,j a7,j a8,f a9){V_f[1]=a1;V_f[2]=a2;V_c[3]=a3;f_cpA989(V_a[4],&a4);V_i[5]=a5;V_j[6]=a6;V_j[7]=a7;V_j[8]=a8;V_f[9]=a9;ret_j(9)}
/* 287:iddp{jdij<dcd>ss<dsjddclc>jdc} */ i f287(d a1,d a2,p a3,struct A991 a4){V_d[1]=a1;V_d[2]=a2;V_p[3]=a3;f_cpA991(V_a[4],&a4);ret_i(4)}
/* 288:cpjl<jlcjcc>cipi */ c f288(p a1,j a2,l a3,union  A992 a4,c a5,i a6,p a7,i a8){V_p[1]=a1;V_j[2]=a2;V_l[3]=a3;f_cpA992(V_a[4],&a4);V_c[5]=a5;V_i[6]=a6;V_p[7]=a7;V_i[8]=a8;ret_c(8)}
/* 289:isdcfl<c<l>>cdclf<dfpi<ljjf>jpljpplcjps{sdcipfpipjdid}fij>p */ i f289(s a1,d a2,c a3,f a4,l a5,union  A993 a6,c a7,d a8,c a9,l a10,f a11,union  A996 a12,p a13){V_s[1]=a1;V_d[2]=a2;V_c[3]=a3;V_f[4]=a4;V_l[5]=a5;f_cpA993(V_a[6],&a6);V_c[7]=a7;V_d[8]=a8;V_c[9]=a9;V_l[10]=a10;V_f[11]=a11;f_cpA996(V_a[12],&a12);V_p[13]=a13;ret_i(13)}
/* 290:<plpj>fdd<jfjiil>jidipld */ union  A997 f290(f a1,d a2,d a3,union  A998 a4,j a5,i a6,d a7,i a8,p a9,l a10,d a11){V_f[1]=a1;V_d[2]=a2;V_d[3]=a3;f_cpA998(V_a[4],&a4);V_j[5]=a5;V_i[6]=a6;V_d[7]=a7;V_i[8]=a8;V_p[9]=a9;V_l[10]=a10;V_d[11]=a11;ret_a(11,union  A997)}
/* 291:i<jfidi{pslliiijlld}<jijc>f{jcidplj}{f}lifj<jssf>pjcp<dsiipf>ic>cllij */ i f291(union  A1004 a1,c a2,l a3,l a4,i a5,j a6){f_cpA1004(V_a[1],&a1);V_c[2]=a2;V_l[3]=a3;V_l[4]=a4;V_i[5]=a5;V_j[6]=a6;ret_i(6)}
/* 292:{pillfjjdipsiplcl} */ struct A1005 f292(){ret_a(0,struct A1005)}
/* 293:ll{fjlpdcfdflpilfpjidfcfjsjfp}s */ l f293(l a1,struct A1006 a2,s a3){V_l[1]=a1;f_cpA1006(V_a[2],&a2);V_s[3]=a3;ret_l(3)}
/* 294:s{pcdpd}sp{idflpfsfp}{fs<djjfjpflfcis>}lippf */ s f294(struct A1007 a1,s a2,p a3,struct A1008 a4,struct A1010 a5,l a6,i a7,p a8,p a9,f a10){f_cpA1007(V_a[1],&a1);V_s[2]=a2;V_p[3]=a3;f_cpA1008(V_a[4],&a4);f_cpA1010(V_a[5],&a5);V_l[6]=a6;V_i[7]=a7;V_p[8]=a8;V_p[9]=a9;V_f[10]=a10;ret_s(10)}
/* 295:j{dl}s{fpjld}jpcsdd{p{j<dj>{ffsdfilsdffjffjfi}jfd<fpcfcsplscdjjfscsj>}p}d */ j f295(struct A74 a1,s a2,struct A1011 a3,j a4,p a5,c a6,s a7,d a8,d a9,struct A1015 a10,d a11){f_cpA74(V_a[1],&a1);V_s[2]=a2;f_cpA1011(V_a[3],&a3);V_j[4]=a4;V_p[5]=a5;V_c[6]=a6;V_s[7]=a7;V_d[8]=a8;V_d[9]=a9;f_cpA1015(V_a[10],&a10);V_d[11]=a11;ret_j(11)}
/* 296:csijcili{jlfsjldsd}c */ c f296(s a1,i a2,j a3,c a4,i a5,l a6,i a7,struct A1016 a8,c a9){V_s[1]=a1;V_i[2]=a2;V_j[3]=a3;V_c[4]=a4;V_i[5]=a5;V_l[6]=a6;V_i[7]=a7;f_cpA1016(V_a[8],&a8);V_c[9]=a9;ret_c(9)}
/* 297:cf<s><{jpfi}jsplccicsi{dsfpiflfidpsscj}>cics<lffps>{li}c{djdpff}j{sj} */ c f297(f a1,union  A75 a2,union  A1019 a3,c a4,i a5,c a6,s a7,union  A1020 a8,struct A578 a9,c a10,struct A1021 a11,j a12,struct A811 a13){V_f[1]=a1;f_cpA75(V_a[2],&a2);f_cpA1019(V_a[3],&a3);V_c[4]=a4;V_i[5]=a5;V_c[6]=a6;V_s[7]=a7;f_cpA1020(V_a[8],&a8);f_cpA578(V_a[9],&a9);V_c[10]=a10;f_cpA1021(V_a[11],&a11);V_j[12]=a12;f_cpA811(V_a[13],&a13);ret_c(13)}
/* 298:ljs<ijcjfjpf>jjcij{s}i */ l f298(j a1,s a2,union  A1022 a3,j a4,j a5,c a6,i a7,j a8,struct A4 a9,i a10){V_j[1]=a1;V_s[2]=a2;f_cpA1022(V_a[3],&a3);V_j[4]=a4;V_j[5]=a5;V_c[6]=a6;V_i[7]=a7;V_j[8]=a8;f_cpA4(V_a[9],&a9);V_i[10]=a10;ret_l(10)}
/* 299:piissj<ipllcd> */ p f299(i a1,i a2,s a3,s a4,j a5,union  A1023 a6){V_i[1]=a1;V_i[2]=a2;V_s[3]=a3;V_s[4]=a4;V_j[5]=a5;f_cpA1023(V_a[6],&a6);ret_p(6)}
/* 300:<sjidpi>spdsi */ union  A1024 f300(s a1,p a2,d a3,s a4,i a5){V_s[1]=a1;V_p[2]=a2;V_d[3]=a3;V_s[4]=a4;V_i[5]=a5;ret_a(5,union  A1024)}
/* 301:vjjss<ppjs>jfi{ppjdpjf{{jplilpd}{ldipfsdddcsic}pl<ddp>ds{ljsji}}}pfdf */ v f301(j a1,j a2,s a3,s a4,union  A1025 a5,j a6,f a7,i a8,struct A1031 a9,p a10,f a11,d a12,f a13){V_j[1]=a1;V_j[2]=a2;V_s[3]=a3;V_s[4]=a4;f_cpA1025(V_a[5],&a5);V_j[6]=a6;V_f[7]=a7;V_i[8]=a8;f_cpA1031(V_a[9],&a9);V_p[10]=a10;V_f[11]=a11;V_d[12]=a12;V_f[13]=a13;ret_v(13)}
/* 302:{f}jsddc{iff}fc{fcjli}cp */ struct A257 f302(j a1,s a2,d a3,d a4,c a5,struct A1032 a6,f a7,c a8,struct A1033 a9,c a10,p a11){V_j[1]=a1;V_s[2]=a2;V_d[3]=a3;V_d[4]=a4;V_c[5]=a5;f_cpA1032(V_a[6],&a6);V_f[7]=a7;V_c[8]=a8;f_cpA1033(V_a[9],&a9);V_c[10]=a10;V_p[11]=a11;ret_a(11,struct A257)}
/* 303:{dpd<fidss>pjcd<jipdsldiclp>is<sp>jllflcpdi<j>cdd}ds */ struct A1036 f303(d a1,s a2){V_d[1]=a1;V_s[2]=a2;ret_a(2,struct A1036)}
/* 304:pfp{p{pcjlilpscipcljipcipi}ddj{dffiljiijlspcspjfdsjj}f{iffccpcdd}<icijsdfdjfppfssdslippsdjjccld>j<flscifl>il{flcpsjpisssdd}l} */ p f304(f a1,p a2,struct A1043 a3){V_f[1]=a1;V_p[2]=a2;f_cpA1043(V_a[3],&a3);ret_p(3)}
/* 305:fpc<lj<sfldsj>ic<flsjsjc>slcpflsdjpjp{idcljljdfdpffdjppcspjfspiffifjf}<clld>>fds<s>ff<fpj{fj}plscsdlldpppdfps> */ f f305(p a1,c a2,union  A1048 a3,f a4,d a5,s a6,union  A75 a7,f a8,f a9,union  A1049 a10){V_p[1]=a1;V_c[2]=a2;f_cpA1048(V_a[3],&a3);V_f[4]=a4;V_d[5]=a5;V_s[6]=a6;f_cpA75(V_a[7],&a7);V_f[8]=a8;V_f[9]=a9;f_cpA1049(V_a[10],&a10);ret_f(10)}
/* 306:dddd<fs> */ d f306(d a1,d a2,d a3,union  A456 a4){V_d[1]=a1;V_d[2]=a2;V_d[3]=a3;f_cpA456(V_a[4],&a4);ret_d(4)}
/* 307:sfpdfjsplp{clc}dli */ s f307(f a1,p a2,d a3,f a4,j a5,s a6,p a7,l a8,p a9,struct A1050 a10,d a11,l a12,i a13){V_f[1]=a1;V_p[2]=a2;V_d[3]=a3;V_f[4]=a4;V_j[5]=a5;V_s[6]=a6;V_p[7]=a7;V_l[8]=a8;V_p[9]=a9;f_cpA1050(V_a[10],&a10);V_d[11]=a11;V_l[12]=a12;V_i[13]=a13;ret_s(13)}
/* 308:clccpdf{s}s */ c f308(l a1,c a2,c a3,p a4,d a5,f a6,struct A4 a7,s a8){V_l[1]=a1;V_c[2]=a2;V_c[3]=a3;V_p[4]=a4;V_d[5]=a5;V_f[6]=a6;f_cpA4(V_a[7],&a7);V_s[8]=a8;ret_c(8)}
/* 309:vjcijj<ldsdspcfjs>ss{cfllddiciscdfcpsflsdsidc}i */ v f309(j a1,c a2,i a3,j a4,j a5,union  A1051 a6,s a7,s a8,struct A1052 a9,i a10){V_j[1]=a1;V_c[2]=a2;V_i[3]=a3;V_j[4]=a4;V_j[5]=a5;f_cpA1051(V_a[6],&a6);V_s[7]=a7;V_s[8]=a8;f_cpA1052(V_a[9],&a9);V_i[10]=a10;ret_v(10)}
/* 310:<f>ldlippfdp */ union  A189 f310(l a1,d a2,l a3,i a4,p a5,p a6,f a7,d a8,p a9){V_l[1]=a1;V_d[2]=a2;V_l[3]=a3;V_i[4]=a4;V_p[5]=a5;V_p[6]=a6;V_f[7]=a7;V_d[8]=a8;V_p[9]=a9;ret_a(9,union  A189)}
/* 311:dffjil<pl<jjddfl>cpdj>cl<{jds}p{sijlldllscdssppplsid}f<ljpffppjislipji>dc>i{ic{fsp}}i */ d f311(f a1,f a2,j a3,i a4,l a5,union  A1054 a6,c a7,l a8,union  A1058 a9,i a10,struct A1060 a11,i a12){V_f[1]=a1;V_f[2]=a2;V_j[3]=a3;V_i[4]=a4;V_l[5]=a5;f_cpA1054(V_a[6],&a6);V_c[7]=a7;V_l[8]=a8;f_cpA1058(V_a[9],&a9);V_i[10]=a10;f_cpA1060(V_a[11],&a11);V_i[12]=a12;ret_d(12)}
/* 312:sscjp<cjcpsdifill><l>icjdl */ s f312(s a1,c a2,j a3,p a4,union  A1061 a5,union  A127 a6,i a7,c a8,j a9,d a10,l a11){V_s[1]=a1;V_c[2]=a2;V_j[3]=a3;V_p[4]=a4;f_cpA1061(V_a[5],&a5);f_cpA127(V_a[6],&a6);V_i[7]=a7;V_c[8]=a8;V_j[9]=a9;V_d[10]=a10;V_l[11]=a11;ret_s(11)}
/* 313:ps{djff}dffd */ p f313(s a1,struct A1062 a2,d a3,f a4,f a5,d a6){V_s[1]=a1;f_cpA1062(V_a[2],&a2);V_d[3]=a3;V_f[4]=a4;V_f[5]=a5;V_d[6]=a6;ret_p(6)}
/* 314:d<p>ppsplp<ldi{jjplljlji}{j}j{i}cpj<l>j>si */ d f314(union  A161 a1,p a2,p a3,s a4,p a5,l a6,p a7,union  A1064 a8,s a9,i a10){f_cpA161(V_a[1],&a1);V_p[2]=a2;V_p[3]=a3;V_s[4]=a4;V_p[5]=a5;V_l[6]=a6;V_p[7]=a7;f_cpA1064(V_a[8],&a8);V_s[9]=a9;V_i[10]=a10;ret_d(10)}
/* 315:s{i}pdp */ s f315(struct A71 a1,p a2,d a3,p a4){f_cpA71(V_a[1],&a1);V_p[2]=a2;V_d[3]=a3;V_p[4]=a4;ret_s(4)}
/* 316:psjfld{iidi<d>sjdpcp{sljpf}} */ p f316(s a1,j a2,f a3,l a4,d a5,struct A1066 a6){V_s[1]=a1;V_j[2]=a2;V_f[3]=a3;V_l[4]=a4;V_d[5]=a5;f_cpA1066(V_a[6],&a6);ret_p(6)}
/* 317:p{l}<{ljd}{sfps}pd> */ p f317(struct A51 a1,union  A1069 a2){f_cpA51(V_a[1],&a1);f_cpA1069(V_a[2],&a2);ret_p(2)}
/* 318:lfl<c<i<fpdfdclcllpf>c>d<dff{ppjf}i{dlli}fjs<dpdj>i>p>lpfcl */ l f318(f a1,l a2,union  A1076 a3,l a4,p a5,f a6,c a7,l a8){V_f[1]=a1;V_l[2]=a2;f_cpA1076(V_a[3],&a3);V_l[4]=a4;V_p[5]=a5;V_f[6]=a6;V_c[7]=a7;V_l[8]=a8;ret_l(8)}
/* 319:cj<p{sjp}{scjcsip}pl<fislfcp>j>c<fjisid>ij */ c f319(j a1,union  A1080 a2,c a3,union  A1081 a4,i a5,j a6){V_j[1]=a1;f_cpA1080(V_a[2],&a2);V_c[3]=a3;f_cpA1081(V_a[4],&a4);V_i[5]=a5;V_j[6]=a6;ret_c(6)}
/* 320:df<dl><<dlcf{c}f<lifldldi>pjs{fdsdi}{lf}{isp}f>>j */ d f320(f a1,union  A1082 a2,union  A1087 a3,j a4){V_f[1]=a1;f_cpA1082(V_a[2],&a2);f_cpA1087(V_a[3],&a3);V_j[4]=a4;ret_d(4)}
/* 321:i<sdjiill> */ i f321(union  A1088 a1){f_cpA1088(V_a[1],&a1);ret_i(1)}
/* 322:fp{pdjdjc<pjjjfspspfjiijdllijs>ci}fsf */ f f322(p a1,struct A1090 a2,f a3,s a4,f a5){V_p[1]=a1;f_cpA1090(V_a[2],&a2);V_f[3]=a3;V_s[4]=a4;V_f[5]=a5;ret_f(5)}
/* 323:vj{<ffflpdpdid{cidp}i>}c{jjsspd}slcl */ v f323(j a1,struct A1093 a2,c a3,struct A1094 a4,s a5,l a6,c a7,l a8){V_j[1]=a1;f_cpA1093(V_a[2],&a2);V_c[3]=a3;f_cpA1094(V_a[4],&a4);V_s[5]=a5;V_l[6]=a6;V_c[7]=a7;V_l[8]=a8;ret_v(8)}
/* 324:cl<flffj<cfp>l<l>p>liicld{pjljl}l{ipsslfp}p */ c f324(l a1,union  A1096 a2,l a3,i a4,i a5,c a6,l a7,d a8,struct A1097 a9,l a10,struct A1098 a11,p a12){V_l[1]=a1;f_cpA1096(V_a[2],&a2);V_l[3]=a3;V_i[4]=a4;V_i[5]=a5;V_c[6]=a6;V_l[7]=a7;V_d[8]=a8;f_cpA1097(V_a[9],&a9);V_l[10]=a10;f_cpA1098(V_a[11],&a11);V_p[12]=a12;ret_c(12)}
/* 325:pi{pf}si{jlip<jdjsidpfspiipccliccjp>}jpssl{ccj}p */ p f325(i a1,struct A339 a2,s a3,i a4,struct A1100 a5,j a6,p a7,s a8,s a9,l a10,struct A1101 a11,p a12){V_i[1]=a1;f_cpA339(V_a[2],&a2);V_s[3]=a3;V_i[4]=a4;f_cpA1100(V_a[5],&a5);V_j[6]=a6;V_p[7]=a7;V_s[8]=a8;V_s[9]=a9;V_l[10]=a10;f_cpA1101(V_a[11],&a11);V_p[12]=a12;ret_p(12)}
/* 326:jj<pjcf<lccjlddpl>jifccil>cljl<ddc> */ j f326(j a1,union  A1103 a2,c a3,l a4,j a5,l a6,union  A1104 a7){V_j[1]=a1;f_cpA1103(V_a[2],&a2);V_c[3]=a3;V_l[4]=a4;V_j[5]=a5;V_l[6]=a6;f_cpA1104(V_a[7],&a7);ret_j(7)}
/* 327:lcccl{lfils}dfdl */ l f327(c a1,c a2,c a3,l a4,struct A1105 a5,d a6,f a7,d a8,l a9){V_c[1]=a1;V_c[2]=a2;V_c[3]=a3;V_l[4]=a4;f_cpA1105(V_a[5],&a5);V_d[6]=a6;V_f[7]=a7;V_d[8]=a8;V_l[9]=a9;ret_l(9)}
/* 328:{cif} */ struct A1106 f328(){ret_a(0,struct A1106)}
/* 329:fpcifidd<dcdsjdfijsfiillfcldsls>d */ f f329(p a1,c a2,i a3,f a4,i a5,d a6,d a7,union  A1107 a8,d a9){V_p[1]=a1;V_c[2]=a2;V_i[3]=a3;V_f[4]=a4;V_i[5]=a5;V_d[6]=a6;V_d[7]=a7;f_cpA1107(V_a[8],&a8);V_d[9]=a9;ret_f(9)}
/* 330:jllssss{ccccil}ii<jjflilcpliciscjscjjcspicjpdjc> */ j f330(l a1,l a2,s a3,s a4,s a5,s a6,struct A1108 a7,i a8,i a9,union  A1109 a10){V_l[1]=a1;V_l[2]=a2;V_s[3]=a3;V_s[4]=a4;V_s[5]=a5;V_s[6]=a6;f_cpA1108(V_a[7],&a7);V_i[8]=a8;V_i[9]=a9;f_cpA1109(V_a[10],&a10);ret_j(10)}
/* 331:{sfljddpdfdi}f<lsddfpjjjjpclfd<ipllpdcpddjpjdpc><sjpslcfdlpjl><cdjj>ccfpcpli<cisl>>jl{jc}ifj */ struct A1110 f331(f a1,union  A1115 a2,j a3,l a4,struct A870 a5,i a6,f a7,j a8){V_f[1]=a1;f_cpA1115(V_a[2],&a2);V_j[3]=a3;V_l[4]=a4;f_cpA870(V_a[5],&a5);V_i[6]=a6;V_f[7]=a7;V_j[8]=a8;ret_a(8,struct A1110)}
/* 332:cdj{dlpfdp}c */ c f332(d a1,j a2,struct A1116 a3,c a4){V_d[1]=a1;V_j[2]=a2;f_cpA1116(V_a[3],&a3);V_c[4]=a4;ret_c(4)}
/* 333:discdljd{i}fdscjj */ d f333(i a1,s a2,c a3,d a4,l a5,j a6,d a7,struct A71 a8,f a9,d a10,s a11,c a12,j a13,j a14){V_i[1]=a1;V_s[2]=a2;V_c[3]=a3;V_d[4]=a4;V_l[5]=a5;V_j[6]=a6;V_d[7]=a7;f_cpA71(V_a[8],&a8);V_f[9]=a9;V_d[10]=a10;V_s[11]=a11;V_c[12]=a12;V_j[13]=a13;V_j[14]=a14;ret_d(14)}
/* 334:fd{s{cjcfiscp}j}li */ f f334(d a1,struct A1118 a2,l a3,i a4){V_d[1]=a1;f_cpA1118(V_a[2],&a2);V_l[3]=a3;V_i[4]=a4;ret_f(4)}
/* 335:{isisl}<cdlsifjfccslijisjjjiildcjc>s */ struct A1119 f335(union  A1120 a1,s a2){f_cpA1120(V_a[1],&a1);V_s[2]=a2;ret_a(2,struct A1119)}
/* 336:cfds{dcd{jcpslsijdppjifs}s<fisijc>djdd}sccljp{jcidplpcjssifsdippdilifiiisiidjpdf}{dfllsjffpc} */ c f336(f a1,d a2,s a3,struct A1123 a4,s a5,c a6,c a7,l a8,j a9,p a10,struct A1124 a11,struct A1125 a12){V_f[1]=a1;V_d[2]=a2;V_s[3]=a3;f_cpA1123(V_a[4],&a4);V_s[5]=a5;V_c[6]=a6;V_c[7]=a7;V_l[8]=a8;V_j[9]=a9;V_p[10]=a10;f_cpA1124(V_a[11],&a11);f_cpA1125(V_a[12],&a12);ret_c(12)}
/* 337:<dfljfpd<j>s> */ union  A1126 f337(){ret_a(0,union  A1126)}
/* 338:cjf<cp>lcpflf<ifjsdlisjdfl>c */ c f338(j a1,f a2,union  A66 a3,l a4,c a5,p a6,f a7,l a8,f a9,union  A1127 a10,c a11){V_j[1]=a1;V_f[2]=a2;f_cpA66(V_a[3],&a3);V_l[4]=a4;V_c[5]=a5;V_p[6]=a6;V_f[7]=a7;V_l[8]=a8;V_f[9]=a9;f_cpA1127(V_a[10],&a10);V_c[11]=a11;ret_c(11)}
/* 339:ddlips<fi<sfsj<idifpdspfjdscjdcjpl>{idfpjldjfjislpsdpplllfccljlsiisdisddpcspf}fpds>iicli>ijpsd */ d f339(d a1,l a2,i a3,p a4,s a5,union  A1131 a6,i a7,j a8,p a9,s a10,d a11){V_d[1]=a1;V_l[2]=a2;V_i[3]=a3;V_p[4]=a4;V_s[5]=a5;f_cpA1131(V_a[6],&a6);V_i[7]=a7;V_j[8]=a8;V_p[9]=a9;V_s[10]=a10;V_d[11]=a11;ret_d(11)}
/* 340:f{fjpfiili}ls */ f f340(struct A1132 a1,l a2,s a3){f_cpA1132(V_a[1],&a1);V_l[2]=a2;V_s[3]=a3;ret_f(3)}
/* 341:il<<idcicsslsfipjpspf>{lpclcscsjlcjfflf}> */ i f341(l a1,union  A1135 a2){V_l[1]=a1;f_cpA1135(V_a[2],&a2);ret_i(2)}
/* 342:sij<fifcp> */ s f342(i a1,j a2,union  A1136 a3){V_i[1]=a1;V_j[2]=a2;f_cpA1136(V_a[3],&a3);ret_s(3)}
/* 343:<jsfsflciilp>llfsdsjdj */ union  A1137 f343(l a1,l a2,f a3,s a4,d a5,s a6,j a7,d a8,j a9){V_l[1]=a1;V_l[2]=a2;V_f[3]=a3;V_s[4]=a4;V_d[5]=a5;V_s[6]=a6;V_j[7]=a7;V_d[8]=a8;V_j[9]=a9;ret_a(9,union  A1137)}
/* 344:vplfccccfdi<sci> */ v f344(p a1,l a2,f a3,c a4,c a5,c a6,c a7,f a8,d a9,i a10,union  A1138 a11){V_p[1]=a1;V_l[2]=a2;V_f[3]=a3;V_c[4]=a4;V_c[5]=a5;V_c[6]=a6;V_c[7]=a7;V_f[8]=a8;V_d[9]=a9;V_i[10]=a10;f_cpA1138(V_a[11],&a11);ret_v(11)}
/* 345:f<p>siipfsfcpidfl */ f f345(union  A161 a1,s a2,i a3,i a4,p a5,f a6,s a7,f a8,c a9,p a10,i a11,d a12,f a13,l a14){f_cpA161(V_a[1],&a1);V_s[2]=a2;V_i[3]=a3;V_i[4]=a4;V_p[5]=a5;V_f[6]=a6;V_s[7]=a7;V_f[8]=a8;V_c[9]=a9;V_p[10]=a10;V_i[11]=a11;V_d[12]=a12;V_f[13]=a13;V_l[14]=a14;ret_f(14)}
/* 346:v<<cccfsj>i{fd}>d */ v f346(union  A1140 a1,d a2){f_cpA1140(V_a[1],&a1);V_d[2]=a2;ret_v(2)}
/* 347:icsc{dfcsspp}sjp */ i f347(c a1,s a2,c a3,struct A1141 a4,s a5,j a6,p a7){V_c[1]=a1;V_s[2]=a2;V_c[3]=a3;f_cpA1141(V_a[4],&a4);V_s[5]=a5;V_j[6]=a6;V_p[7]=a7;ret_i(7)}
/* 348:{ff}jj{ljlcc}ff */ struct A701 f348(j a1,j a2,struct A1142 a3,f a4,f a5){V_j[1]=a1;V_j[2]=a2;f_cpA1142(V_a[3],&a3);V_f[4]=a4;V_f[5]=a5;ret_a(5,struct A701)}
/* 349:j{s}<licfp<djic>iiclpcs{i}<ld>> */ j f349(struct A4 a1,union  A1145 a2){f_cpA4(V_a[1],&a1);f_cpA1145(V_a[2],&a2);ret_j(2)}
/* 350:d<sjcpsl{l}iil>{pdipiilscjcldlpcfscidddi}sdf<jpcff{jplidlspdcjllc}p<dsisscdd>sss{pjisjlsjdj}silipplpscissji<fcpjjllcldcsifcclssllifdpllcljfdfcfdpidfcscfslicpj>ds>p{cs}d */ d f350(union  A1146 a1,struct A1147 a2,s a3,d a4,f a5,union  A1152 a6,p a7,struct A218 a8,d a9){f_cpA1146(V_a[1],&a1);f_cpA1147(V_a[2],&a2);V_s[3]=a3;V_d[4]=a4;V_f[5]=a5;f_cpA1152(V_a[6],&a6);V_p[7]=a7;f_cpA218(V_a[8],&a8);V_d[9]=a9;ret_d(9)}
/* 351:<sdifddd>sspicdf<fc<spdpspjifs>fsdp>j */ union  A1153 f351(s a1,s a2,p a3,i a4,c a5,d a6,f a7,union  A1155 a8,j a9){V_s[1]=a1;V_s[2]=a2;V_p[3]=a3;V_i[4]=a4;V_c[5]=a5;V_d[6]=a6;V_f[7]=a7;f_cpA1155(V_a[8],&a8);V_j[9]=a9;ret_a(9,union  A1153)}
/* 352:sdsf<pl>l */ s f352(d a1,s a2,f a3,union  A494 a4,l a5){V_d[1]=a1;V_s[2]=a2;V_f[3]=a3;f_cpA494(V_a[4],&a4);V_l[5]=a5;ret_s(5)}
/* 353:p{{cidil<jpljs>ddi{sjjpjlidlisjip}}lpldif<pciji{jfiffd}sdpdljc<dciffi><fl>jdf<dsdslillcc>sjpdpippc>s}jsdfdfds */ p f353(struct A1163 a1,j a2,s a3,d a4,f a5,d a6,f a7,d a8,s a9){f_cpA1163(V_a[1],&a1);V_j[2]=a2;V_s[3]=a3;V_d[4]=a4;V_f[5]=a5;V_d[6]=a6;V_f[7]=a7;V_d[8]=a8;V_s[9]=a9;ret_p(9)}
/* 354:l<<lfpsdsjddsidfl>fssp>fpp<ipdjsjppcfc>sf */ l f354(union  A1165 a1,f a2,p a3,p a4,union  A1166 a5,s a6,f a7){f_cpA1165(V_a[1],&a1);V_f[2]=a2;V_p[3]=a3;V_p[4]=a4;f_cpA1166(V_a[5],&a5);V_s[6]=a6;V_f[7]=a7;ret_l(7)}
/* 355:{s}jscfc{jsdpds} */ struct A4 f355(j a1,s a2,c a3,f a4,c a5,struct A1167 a6){V_j[1]=a1;V_s[2]=a2;V_c[3]=a3;V_f[4]=a4;V_c[5]=a5;f_cpA1167(V_a[6],&a6);ret_a(6,struct A4)}
/* 356:c<sp>pfjc */ c f356(union  A674 a1,p a2,f a3,j a4,c a5){f_cpA674(V_a[1],&a1);V_p[2]=a2;V_f[3]=a3;V_j[4]=a4;V_c[5]=a5;ret_c(5)}
/* 357:j{<dcdsfdsifccjjldslcclccddlj>c<fdcpdsdsp>}d<sid<jjpcdip>>jssdpls<j> */ j f357(struct A1170 a1,d a2,union  A1172 a3,j a4,s a5,s a6,d a7,p a8,l a9,s a10,union  A47 a11){f_cpA1170(V_a[1],&a1);V_d[2]=a2;f_cpA1172(V_a[3],&a3);V_j[4]=a4;V_s[5]=a5;V_s[6]=a6;V_d[7]=a7;V_p[8]=a8;V_l[9]=a9;V_s[10]=a10;f_cpA47(V_a[11],&a11);ret_j(11)}
/* 358:pildf{<jllijpdpjpsfcic>lldjl{ssfpfijflclficcic}cspfs{pfpddcispdlfpspsspslcfijpclcf}cpjflicfcp{idlljidd}fp}fsjslff<<ic>pcdpdp>s */ p f358(i a1,l a2,d a3,f a4,struct A1177 a5,f a6,s a7,j a8,s a9,l a10,f a11,f a12,union  A1178 a13,s a14){V_i[1]=a1;V_l[2]=a2;V_d[3]=a3;V_f[4]=a4;f_cpA1177(V_a[5],&a5);V_f[6]=a6;V_s[7]=a7;V_j[8]=a8;V_s[9]=a9;V_l[10]=a10;V_f[11]=a11;V_f[12]=a12;f_cpA1178(V_a[13],&a13);V_s[14]=a14;ret_p(14)}
/* 359:vddsjf{j<fj>jpp<lss>spflcippsfjdi}i */ v f359(d a1,d a2,s a3,j a4,f a5,struct A1181 a6,i a7){V_d[1]=a1;V_d[2]=a2;V_s[3]=a3;V_j[4]=a4;V_f[5]=a5;f_cpA1181(V_a[6],&a6);V_i[7]=a7;ret_v(7)}
/* 360:scccpp<s> */ s f360(c a1,c a2,c a3,p a4,p a5,union  A75 a6){V_c[1]=a1;V_c[2]=a2;V_c[3]=a3;V_p[4]=a4;V_p[5]=a5;f_cpA75(V_a[6],&a6);ret_s(6)}
/* 361:<fssd>pfdsfspdsjicd{psclfplcffccidjjldlf} */ union  A1182 f361(p a1,f a2,d a3,s a4,f a5,s a6,p a7,d a8,s a9,j a10,i a11,c a12,d a13,struct A1183 a14){V_p[1]=a1;V_f[2]=a2;V_d[3]=a3;V_s[4]=a4;V_f[5]=a5;V_s[6]=a6;V_p[7]=a7;V_d[8]=a8;V_s[9]=a9;V_j[10]=a10;V_i[11]=a11;V_c[12]=a12;V_d[13]=a13;f_cpA1183(V_a[14],&a14);ret_a(14,union  A1182)}
/* 362:{isdjfdppci}sjssjpdp */ struct A1184 f362(s a1,j a2,s a3,s a4,j a5,p a6,d a7,p a8){V_s[1]=a1;V_j[2]=a2;V_s[3]=a3;V_s[4]=a4;V_j[5]=a5;V_p[6]=a6;V_d[7]=a7;V_p[8]=a8;ret_a(8,struct A1184)}
/* 363:dcp{jsfjjjppdpdjfldflclilcs}pjc */ d f363(c a1,p a2,struct A1185 a3,p a4,j a5,c a6){V_c[1]=a1;V_p[2]=a2;f_cpA1185(V_a[3],&a3);V_p[4]=a4;V_j[5]=a5;V_c[6]=a6;ret_d(6)}
/* 364:<plsscpsdp>l */ union  A1186 f364(l a1){V_l[1]=a1;ret_a(1,union  A1186)}
/* 365:sp{dcifiicjspisl}<ispl>jddclsfp */ s f365(p a1,struct A1187 a2,union  A1188 a3,j a4,d a5,d a6,c a7,l a8,s a9,f a10,p a11){V_p[1]=a1;f_cpA1187(V_a[2],&a2);f_cpA1188(V_a[3],&a3);V_j[4]=a4;V_d[5]=a5;V_d[6]=a6;V_c[7]=a7;V_l[8]=a8;V_s[9]=a9;V_f[10]=a10;V_p[11]=a11;ret_s(11)}
/* 366:{<jscpppscddj>{cj}i{lsssis}i<discipf>j{ds}j} */ struct A1192 f366(){ret_a(0,struct A1192)}
/* 367:ldpd<jilifsslcccs> */ l f367(d a1,p a2,d a3,union  A1193 a4){V_d[1]=a1;V_p[2]=a2;V_d[3]=a3;f_cpA1193(V_a[4],&a4);ret_l(4)}
/* 368:f<jidjcdf>pl */ f f368(union  A1194 a1,p a2,l a3){f_cpA1194(V_a[1],&a1);V_p[2]=a2;V_l[3]=a3;ret_f(3)}
/* 369:vi{ssfp{ddl}c{si}spi}c */ v f369(i a1,struct A1196 a2,c a3){V_i[1]=a1;f_cpA1196(V_a[2],&a2);V_c[3]=a3;ret_v(3)}
/* 370:fccpppllcd{ifdspifpfficdljilicppssslpscdpdffpfp}sf */ f f370(c a1,c a2,p a3,p a4,p a5,l a6,l a7,c a8,d a9,struct A1197 a10,s a11,f a12){V_c[1]=a1;V_c[2]=a2;V_p[3]=a3;V_p[4]=a4;V_p[5]=a5;V_l[6]=a6;V_l[7]=a7;V_c[8]=a8;V_d[9]=a9;f_cpA1197(V_a[10],&a10);V_s[11]=a11;V_f[12]=a12;ret_f(12)}
/* 371:sildjdidcl{cfpcdij}<sdisp<{dsjcpjdsddsfsicps}dd{lijf}j>s> */ s f371(i a1,l a2,d a3,j a4,d a5,i a6,d a7,c a8,l a9,struct A1198 a10,union  A1202 a11){V_i[1]=a1;V_l[2]=a2;V_d[3]=a3;V_j[4]=a4;V_d[5]=a5;V_i[6]=a6;V_d[7]=a7;V_c[8]=a8;V_l[9]=a9;f_cpA1198(V_a[10],&a10);f_cpA1202(V_a[11],&a11);ret_s(11)}
/* 372:j<ll{llcljjljippfspdfsljcsdp}idfdsif> */ j f372(union  A1204 a1){f_cpA1204(V_a[1],&a1);ret_j(1)}
/* 373:ipscjp<clf>jcjsipjc */ i f373(p a1,s a2,c a3,j a4,p a5,union  A1205 a6,j a7,c a8,j a9,s a10,i a11,p a12,j a13,c a14){V_p[1]=a1;V_s[2]=a2;V_c[3]=a3;V_j[4]=a4;V_p[5]=a5;f_cpA1205(V_a[6],&a6);V_j[7]=a7;V_c[8]=a8;V_j[9]=a9;V_s[10]=a10;V_i[11]=a11;V_p[12]=a12;V_j[13]=a13;V_c[14]=a14;ret_i(14)}
/* 374:p{fidl}dj{lccpjil}jfccicc */ p f374(struct A1206 a1,d a2,j a3,struct A1207 a4,j a5,f a6,c a7,c a8,i a9,c a10,c a11){f_cpA1206(V_a[1],&a1);V_d[2]=a2;V_j[3]=a3;f_cpA1207(V_a[4],&a4);V_j[5]=a5;V_f[6]=a6;V_c[7]=a7;V_c[8]=a8;V_i[9]=a9;V_c[10]=a10;V_c[11]=a11;ret_p(11)}
/* 375:lpfflspsjjsil{cppljp} */ l f375(p a1,f a2,f a3,l a4,s a5,p a6,s a7,j a8,j a9,s a10,i a11,l a12,struct A1208 a13){V_p[1]=a1;V_f[2]=a2;V_f[3]=a3;V_l[4]=a4;V_s[5]=a5;V_p[6]=a6;V_s[7]=a7;V_j[8]=a8;V_j[9]=a9;V_s[10]=a10;V_i[11]=a11;V_l[12]=a12;f_cpA1208(V_a[13],&a13);ret_l(13)}
/* 376:iij<lil{dp}pldif{dpif}p>djpcdp<pliif>sd */ i f376(i a1,j a2,union  A1210 a3,d a4,j a5,p a6,c a7,d a8,p a9,union  A1211 a10,s a11,d a12){V_i[1]=a1;V_j[2]=a2;f_cpA1210(V_a[3],&a3);V_d[4]=a4;V_j[5]=a5;V_p[6]=a6;V_c[7]=a7;V_d[8]=a8;V_p[9]=a9;f_cpA1211(V_a[10],&a10);V_s[11]=a11;V_d[12]=a12;ret_i(12)}
/* 377:i<ld>sci */ i f377(union  A1144 a1,s a2,c a3,i a4){f_cpA1144(V_a[1],&a1);V_s[2]=a2;V_c[3]=a3;V_i[4]=a4;ret_i(4)}
/* 378:idl<<d>idjpsldsl>dll{dpjj<ss>}ldpifjfj */ i f378(d a1,l a2,union  A1212 a3,d a4,l a5,l a6,struct A1214 a7,l a8,d a9,p a10,i a11,f a12,j a13,f a14,j a15){V_d[1]=a1;V_l[2]=a2;f_cpA1212(V_a[3],&a3);V_d[4]=a4;V_l[5]=a5;V_l[6]=a6;f_cpA1214(V_a[7],&a7);V_l[8]=a8;V_d[9]=a9;V_p[10]=a10;V_i[11]=a11;V_f[12]=a12;V_j[13]=a13;V_f[14]=a14;V_j[15]=a15;ret_i(15)}
/* 379:spif<jdip>jpi */ s f379(p a1,i a2,f a3,union  A1215 a4,j a5,p a6,i a7){V_p[1]=a1;V_i[2]=a2;V_f[3]=a3;f_cpA1215(V_a[4],&a4);V_j[5]=a5;V_p[6]=a6;V_i[7]=a7;ret_s(7)}
/* 380:cj{ic}lip{cs}fjcsls */ c f380(j a1,struct A1216 a2,l a3,i a4,p a5,struct A218 a6,f a7,j a8,c a9,s a10,l a11,s a12){V_j[1]=a1;f_cpA1216(V_a[2],&a2);V_l[3]=a3;V_i[4]=a4;V_p[5]=a5;f_cpA218(V_a[6],&a6);V_f[7]=a7;V_j[8]=a8;V_c[9]=a9;V_s[10]=a10;V_l[11]=a11;V_s[12]=a12;ret_c(12)}
/* 381:i{ppsi{ccp}}p<d>dsc */ i f381(struct A1218 a1,p a2,union  A94 a3,d a4,s a5,c a6){f_cpA1218(V_a[1],&a1);V_p[2]=a2;f_cpA94(V_a[3],&a3);V_d[4]=a4;V_s[5]=a5;V_c[6]=a6;ret_i(6)}
/* 382:<sjd<{fl}fj<plflfljjcdfi>lsssl{ilpi}icsip>pisjpi>pp{cs<j>cccijpssjfjl<fd>} */ union  A1223 f382(p a1,p a2,struct A1225 a3){V_p[1]=a1;V_p[2]=a2;f_cpA1225(V_a[3],&a3);ret_a(3,union  A1223)}
/* 383:s<pf>spidpf */ s f383(union  A1226 a1,s a2,p a3,i a4,d a5,p a6,f a7){f_cpA1226(V_a[1],&a1);V_s[2]=a2;V_p[3]=a3;V_i[4]=a4;V_d[5]=a5;V_p[6]=a6;V_f[7]=a7;ret_s(7)}
/* 384:c<s>{cjji} */ c f384(union  A75 a1,struct A1227 a2){f_cpA75(V_a[1],&a1);f_cpA1227(V_a[2],&a2);ret_c(2)}
/* 385:ccf<piif<c{ifd}disfllldspsll<jjjpplfdss>l<s>i<jffl>lfl{ldspffsdilli}ij{pic}p>scl<l>ssjddj{idlildpsc{icpddjpcjjslf}c}fjf<i{j}ip<dlj>>spcp{i<jccficscl><dffjljf>ls<ds>f{cdfpppjcl}ddd<lpfjp>ljdfcliccfpp}cjfd>sc<ljc<lcjcflpsfsfpi>j{jffjllpicpsfpdjpscljf}ppsi{sss}fl>fl{s} */ c f385(c a1,f a2,union  A1244 a3,s a4,c a5,union  A1248 a6,f a7,l a8,struct A4 a9){V_c[1]=a1;V_f[2]=a2;f_cpA1244(V_a[3],&a3);V_s[4]=a4;V_c[5]=a5;f_cpA1248(V_a[6],&a6);V_f[7]=a7;V_l[8]=a8;f_cpA4(V_a[9],&a9);ret_c(9)}
/* 386:llss{f}jc<idp> */ l f386(l a1,s a2,s a3,struct A257 a4,j a5,c a6,union  A1249 a7){V_l[1]=a1;V_s[2]=a2;V_s[3]=a3;f_cpA257(V_a[4],&a4);V_j[5]=a5;V_c[6]=a6;f_cpA1249(V_a[7],&a7);ret_l(7)}
/* 387:{{<iifdpppippljscddljjdcffjcsilccifpc>}<cp<ldsidsf>jscjldpffjflld>f{ijllc<iddiiiscfld>dl}iljfflfllsccl}di<l>sicf */ struct A1256 f387(d a1,i a2,union  A127 a3,s a4,i a5,c a6,f a7){V_d[1]=a1;V_i[2]=a2;f_cpA127(V_a[3],&a3);V_s[4]=a4;V_i[5]=a5;V_c[6]=a6;V_f[7]=a7;ret_a(7,struct A1256)}
/* 388:ils<psi<jdspfj>{ljiilscdpl}dc{spllscpffjpflsdpcsfsssdjfpdfpsicffljdijjj}li<fssicpp>{spfiffs}psd<jflcpjpfs>>sssdijd{d}c */ i f388(l a1,s a2,union  A1263 a3,s a4,s a5,s a6,d a7,i a8,j a9,d a10,struct A156 a11,c a12){V_l[1]=a1;V_s[2]=a2;f_cpA1263(V_a[3],&a3);V_s[4]=a4;V_s[5]=a5;V_s[6]=a6;V_d[7]=a7;V_i[8]=a8;V_j[9]=a9;V_d[10]=a10;f_cpA156(V_a[11],&a11);V_c[12]=a12;ret_i(12)}
/* 389:pfd{cl}jf */ p f389(f a1,d a2,struct A1264 a3,j a4,f a5){V_f[1]=a1;V_d[2]=a2;f_cpA1264(V_a[3],&a3);V_j[4]=a4;V_f[5]=a5;ret_p(5)}
/* 390:sf<di>cj{<{pp}ii<fcssdspddifidijscidld><cp>>j{pjsffcs}dc}cfjij<csd{<ppppffppiicclcd><lccidclifsd>dslsld<cj>silicslifdcdisc<ccplcljffcfspplsccs>l}ci<{ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl}fllpfdlc{i}d<cjplcj>iis>lpl<c>icdpjjfsld{{lplffdfsssiifd}pjjfcp{d}fslj}> */ s f390(f a1,union  A1265 a2,c a3,j a4,struct A1269 a5,c a6,f a7,j a8,i a9,j a10,union  A1279 a11){V_f[1]=a1;f_cpA1265(V_a[2],&a2);V_c[3]=a3;V_j[4]=a4;f_cpA1269(V_a[5],&a5);V_c[6]=a6;V_f[7]=a7;V_j[8]=a8;V_i[9]=a9;V_j[10]=a10;f_cpA1279(V_a[11],&a11);ret_s(11)}
/* 391:l{ljijsi}scdf */ l f391(struct A1280 a1,s a2,c a3,d a4,f a5){f_cpA1280(V_a[1],&a1);V_s[2]=a2;V_c[3]=a3;V_d[4]=a4;V_f[5]=a5;ret_l(5)}
/* 392:ppipdps{fldjpslcisfpdcssflfjfds} */ p f392(p a1,i a2,p a3,d a4,p a5,s a6,struct A1281 a7){V_p[1]=a1;V_i[2]=a2;V_p[3]=a3;V_d[4]=a4;V_p[5]=a5;V_s[6]=a6;f_cpA1281(V_a[7],&a7);ret_p(7)}
/* 393:v{j}lp */ v f393(struct A303 a1,l a2,p a3){f_cpA303(V_a[1],&a1);V_l[2]=a2;V_p[3]=a3;ret_v(3)}
/* 394:cid<pfipsdcscllpisdpjpdff>{dcppsfdlidssidpflcfscsscflsp} */ c f394(i a1,d a2,union  A1282 a3,struct A1283 a4){V_i[1]=a1;V_d[2]=a2;f_cpA1282(V_a[3],&a3);f_cpA1283(V_a[4],&a4);ret_c(4)}
/* 395:f{{dj}fijsfj{l}<jp><djiis>fp}sdi */ f f395(struct A1286 a1,s a2,d a3,i a4){f_cpA1286(V_a[1],&a1);V_s[2]=a2;V_d[3]=a3;V_i[4]=a4;ret_f(4)}
/* 396:{c<scldppfilp>dpii}ldj<s>lp */ struct A1288 f396(l a1,d a2,j a3,union  A75 a4,l a5,p a6){V_l[1]=a1;V_d[2]=a2;V_j[3]=a3;f_cpA75(V_a[4],&a4);V_l[5]=a5;V_p[6]=a6;ret_a(6,struct A1288)}
/* 397:vfds{dplspl}dc<cccjsfslj>cs */ v f397(f a1,d a2,s a3,struct A1289 a4,d a5,c a6,union  A1290 a7,c a8,s a9){V_f[1]=a1;V_d[2]=a2;V_s[3]=a3;f_cpA1289(V_a[4],&a4);V_d[5]=a5;V_c[6]=a6;f_cpA1290(V_a[7],&a7);V_c[8]=a8;V_s[9]=a9;ret_v(9)}
/* 398:vlppdpcilldpi{d}j */ v f398(l a1,p a2,p a3,d a4,p a5,c a6,i a7,l a8,l a9,d a10,p a11,i a12,struct A156 a13,j a14){V_l[1]=a1;V_p[2]=a2;V_p[3]=a3;V_d[4]=a4;V_p[5]=a5;V_c[6]=a6;V_i[7]=a7;V_l[8]=a8;V_l[9]=a9;V_d[10]=a10;V_p[11]=a11;V_i[12]=a12;f_cpA156(V_a[13],&a13);V_j[14]=a14;ret_v(14)}
/* 399:jscf<d{c<s><dcscjcslfpsdfiisjsiiccdifdl>pfjp{di}d}>jc */ j f399(s a1,c a2,f a3,union  A1294 a4,j a5,c a6){V_s[1]=a1;V_c[2]=a2;V_f[3]=a3;f_cpA1294(V_a[4],&a4);V_j[5]=a5;V_c[6]=a6;ret_j(6)}
funptr G_funtab[] = {
	(funptr)&f0,
	(funptr)&f1,
	(funptr)&f2,
	(funptr)&f3,
	(funptr)&f4,
	(funptr)&f5,
	(funptr)&f6,
	(funptr)&f7,
	(funptr)&f8,
	(funptr)&f9,
	(funptr)&f10,
	(funptr)&f11,
	(funptr)&f12,
	(funptr)&f13,
	(funptr)&f14,
	(funptr)&f15,
	(funptr)&f16,
	(funptr)&f17,
	(funptr)&f18,
	(funptr)&f19,
	(funptr)&f20,
	(funptr)&f21,
	(funptr)&f22,
	(funptr)&f23,
	(funptr)&f24,
	(funptr)&f25,
	(funptr)&f26,
	(funptr)&f27,
	(funptr)&f28,
	(funptr)&f29,
	(funptr)&f30,
	(funptr)&f31,
	(funptr)&f32,
	(funptr)&f33,
	(funptr)&f34,
	(funptr)&f35,
	(funptr)&f36,
	(funptr)&f37,
	(funptr)&f38,
	(funptr)&f39,
	(funptr)&f40,
	(funptr)&f41,
	(funptr)&f42,
	(funptr)&f43,
	(funptr)&f44,
	(funptr)&f45,
	(funptr)&f46,
	(funptr)&f47,
	(funptr)&f48,
	(funptr)&f49,
	(funptr)&f50,
	(funptr)&f51,
	(funptr)&f52,
	(funptr)&f53,
	(funptr)&f54,
	(funptr)&f55,
	(funptr)&f56,
	(funptr)&f57,
	(funptr)&f58,
	(funptr)&f59,
	(funptr)&f60,
	(funptr)&f61,
	(funptr)&f62,
	(funptr)&f63,
	(funptr)&f64,
	(funptr)&f65,
	(funptr)&f66,
	(funptr)&f67,
	(funptr)&f68,
	(funptr)&f69,
	(funptr)&f70,
	(funptr)&f71,
	(funptr)&f72,
	(funptr)&f73,
	(funptr)&f74,
	(funptr)&f75,
	(funptr)&f76,
	(funptr)&f77,
	(funptr)&f78,
	(funptr)&f79,
	(funptr)&f80,
	(funptr)&f81,
	(funptr)&f82,
	(funptr)&f83,
	(funptr)&f84,
	(funptr)&f85,
	(funptr)&f86,
	(funptr)&f87,
	(funptr)&f88,
	(funptr)&f89,
	(funptr)&f90,
	(funptr)&f91,
	(funptr)&f92,
	(funptr)&f93,
	(funptr)&f94,
	(funptr)&f95,
	(funptr)&f96,
	(funptr)&f97,
	(funptr)&f98,
	(funptr)&f99,
	(funptr)&f100,
	(funptr)&f101,
	(funptr)&f102,
	(funptr)&f103,
	(funptr)&f104,
	(funptr)&f105,
	(funptr)&f106,
	(funptr)&f107,
	(funptr)&f108,
	(funptr)&f109,
	(funptr)&f110,
	(funptr)&f111,
	(funptr)&f112,
	(funptr)&f113,
	(funptr)&f114,
	(funptr)&f115,
	(funptr)&f116,
	(funptr)&f117,
	(funptr)&f118,
	(funptr)&f119,
	(funptr)&f120,
	(funptr)&f121,
	(funptr)&f122,
	(funptr)&f123,
	(funptr)&f124,
	(funptr)&f125,
	(funptr)&f126,
	(funptr)&f127,
	(funptr)&f128,
	(funptr)&f129,
	(funptr)&f130,
	(funptr)&f131,
	(funptr)&f132,
	(funptr)&f133,
	(funptr)&f134,
	(funptr)&f135,
	(funptr)&f136,
	(funptr)&f137,
	(funptr)&f138,
	(funptr)&f139,
	(funptr)&f140,
	(funptr)&f141,
	(funptr)&f142,
	(funptr)&f143,
	(funptr)&f144,
	(funptr)&f145,
	(funptr)&f146,
	(funptr)&f147,
	(funptr)&f148,
	(funptr)&f149,
	(funptr)&f150,
	(funptr)&f151,
	(funptr)&f152,
	(funptr)&f153,
	(funptr)&f154,
	(funptr)&f155,
	(funptr)&f156,
	(funptr)&f157,
	(funptr)&f158,
	(funptr)&f159,
	(funptr)&f160,
	(funptr)&f161,
	(funptr)&f162,
	(funptr)&f163,
	(funptr)&f164,
	(funptr)&f165,
	(funptr)&f166,
	(funptr)&f167,
	(funptr)&f168,
	(funptr)&f169,
	(funptr)&f170,
	(funptr)&f171,
	(funptr)&f172,
	(funptr)&f173,
	(funptr)&f174,
	(funptr)&f175,
	(funptr)&f176,
	(funptr)&f177,
	(funptr)&f178,
	(funptr)&f179,
	(funptr)&f180,
	(funptr)&f181,
	(funptr)&f182,
	(funptr)&f183,
	(funptr)&f184,
	(funptr)&f185,
	(funptr)&f186,
	(funptr)&f187,
	(funptr)&f188,
	(funptr)&f189,
	(funptr)&f190,
	(funptr)&f191,
	(funptr)&f192,
	(funptr)&f193,
	(funptr)&f194,
	(funptr)&f195,
	(funptr)&f196,
	(funptr)&f197,
	(funptr)&f198,
	(funptr)&f199,
	(funptr)&f200,
	(funptr)&f201,
	(funptr)&f202,
	(funptr)&f203,
	(funptr)&f204,
	(funptr)&f205,
	(funptr)&f206,
	(funptr)&f207,
	(funptr)&f208,
	(funptr)&f209,
	(funptr)&f210,
	(funptr)&f211,
	(funptr)&f212,
	(funptr)&f213,
	(funptr)&f214,
	(funptr)&f215,
	(funptr)&f216,
	(funptr)&f217,
	(funptr)&f218,
	(funptr)&f219,
	(funptr)&f220,
	(funptr)&f221,
	(funptr)&f222,
	(funptr)&f223,
	(funptr)&f224,
	(funptr)&f225,
	(funptr)&f226,
	(funptr)&f227,
	(funptr)&f228,
	(funptr)&f229,
	(funptr)&f230,
	(funptr)&f231,
	(funptr)&f232,
	(funptr)&f233,
	(funptr)&f234,
	(funptr)&f235,
	(funptr)&f236,
	(funptr)&f237,
	(funptr)&f238,
	(funptr)&f239,
	(funptr)&f240,
	(funptr)&f241,
	(funptr)&f242,
	(funptr)&f243,
	(funptr)&f244,
	(funptr)&f245,
	(funptr)&f246,
	(funptr)&f247,
	(funptr)&f248,
	(funptr)&f249,
	(funptr)&f250,
	(funptr)&f251,
	(funptr)&f252,
	(funptr)&f253,
	(funptr)&f254,
	(funptr)&f255,
	(funptr)&f256,
	(funptr)&f257,
	(funptr)&f258,
	(funptr)&f259,
	(funptr)&f260,
	(funptr)&f261,
	(funptr)&f262,
	(funptr)&f263,
	(funptr)&f264,
	(funptr)&f265,
	(funptr)&f266,
	(funptr)&f267,
	(funptr)&f268,
	(funptr)&f269,
	(funptr)&f270,
	(funptr)&f271,
	(funptr)&f272,
	(funptr)&f273,
	(funptr)&f274,
	(funptr)&f275,
	(funptr)&f276,
	(funptr)&f277,
	(funptr)&f278,
	(funptr)&f279,
	(funptr)&f280,
	(funptr)&f281,
	(funptr)&f282,
	(funptr)&f283,
	(funptr)&f284,
	(funptr)&f285,
	(funptr)&f286,
	(funptr)&f287,
	(funptr)&f288,
	(funptr)&f289,
	(funptr)&f290,
	(funptr)&f291,
	(funptr)&f292,
	(funptr)&f293,
	(funptr)&f294,
	(funptr)&f295,
	(funptr)&f296,
	(funptr)&f297,
	(funptr)&f298,
	(funptr)&f299,
	(funptr)&f300,
	(funptr)&f301,
	(funptr)&f302,
	(funptr)&f303,
	(funptr)&f304,
	(funptr)&f305,
	(funptr)&f306,
	(funptr)&f307,
	(funptr)&f308,
	(funptr)&f309,
	(funptr)&f310,
	(funptr)&f311,
	(funptr)&f312,
	(funptr)&f313,
	(funptr)&f314,
	(funptr)&f315,
	(funptr)&f316,
	(funptr)&f317,
	(funptr)&f318,
	(funptr)&f319,
	(funptr)&f320,
	(funptr)&f321,
	(funptr)&f322,
	(funptr)&f323,
	(funptr)&f324,
	(funptr)&f325,
	(funptr)&f326,
	(funptr)&f327,
	(funptr)&f328,
	(funptr)&f329,
	(funptr)&f330,
	(funptr)&f331,
	(funptr)&f332,
	(funptr)&f333,
	(funptr)&f334,
	(funptr)&f335,
	(funptr)&f336,
	(funptr)&f337,
	(funptr)&f338,
	(funptr)&f339,
	(funptr)&f340,
	(funptr)&f341,
	(funptr)&f342,
	(funptr)&f343,
	(funptr)&f344,
	(funptr)&f345,
	(funptr)&f346,
	(funptr)&f347,
	(funptr)&f348,
	(funptr)&f349,
	(funptr)&f350,
	(funptr)&f351,
	(funptr)&f352,
	(funptr)&f353,
	(funptr)&f354,
	(funptr)&f355,
	(funptr)&f356,
	(funptr)&f357,
	(funptr)&f358,
	(funptr)&f359,
	(funptr)&f360,
	(funptr)&f361,
	(funptr)&f362,
	(funptr)&f363,
	(funptr)&f364,
	(funptr)&f365,
	(funptr)&f366,
	(funptr)&f367,
	(funptr)&f368,
	(funptr)&f369,
	(funptr)&f370,
	(funptr)&f371,
	(funptr)&f372,
	(funptr)&f373,
	(funptr)&f374,
	(funptr)&f375,
	(funptr)&f376,
	(funptr)&f377,
	(funptr)&f378,
	(funptr)&f379,
	(funptr)&f380,
	(funptr)&f381,
	(funptr)&f382,
	(funptr)&f383,
	(funptr)&f384,
	(funptr)&f385,
	(funptr)&f386,
	(funptr)&f387,
	(funptr)&f388,
	(funptr)&f389,
	(funptr)&f390,
	(funptr)&f391,
	(funptr)&f392,
	(funptr)&f393,
	(funptr)&f394,
	(funptr)&f395,
	(funptr)&f396,
	(funptr)&f397,
	(funptr)&f398,
	(funptr)&f399,
};
char const * G_sigtab[] = {
	"psis<icllcsfdlp>cfi",
	"sc{cdcfcjs}j<ijl<c>{{s}d<ldllip>j{sjpsi}dsd<lcp>pisi<csidff>fs{ls}dp{fjsfcdfp}d{dd}}jjlsj>ids",
	"<lj>pfsljp",
	"<dlpjjcslfdilfddsicd>jii",
	"{cjp}ii",
	"{cfdcds}<pc>ii{{l<idf>}dfpdsfldjsclcjlj}ifsfp",
	"pdl<i>c{dicpdi}cl{ipdj{jsfdjpli}cl<pcslsijpjdj>dfd{ifjlspijsjsjsjfdcjj}<pfdlfj>s}ld{s}c",
	"v{ldi<lfips>jflccd}spis",
	"<{psflpi}lpjsc<iidpi>if<il>{jddspfldpdils}csd>j<jiccfddifjl>jlpi<dfjpfdjfdlijjdpisji>",
	"l{djppf<csidcscjff>{jpllijlp}cldcp{jiiccfcidlcildislll}fpii}",
	"{dsisddcjjp}{iisjcppsjj<jspplpf>iscs<pili>cpis}ji<jidd>i<j>ppii{lccfpc}sf",
	"<jpfpjpij><spsc{lsj}{l}i>",
	"psi<lijljpjplcjidcdcslpjljfc>jlc",
	"jd{cldlfl}",
	"ildjs<pjjpisilcf>",
	"v{pcjsffj{slp}s{jj}pd<cfdppfc>fjcs<jpsfidpljsijdpfi>difjd}ddc",
	"jcslfl<pp>",
	"cd<fifjjppjilsdisf><s{cfijccjipscf}>{djpdi}",
	"<p<cp>{jidfdl{pcljjfc}i}is<dcd>jif>dd{i}{ppi}llpscj",
	"jf<dllpjjjpsp>f{dl}dci",
	"vj<s>",
	"pd{sll<llcj>}l<{plfjf{fcsddflsdpfcicscppdjsslilifdccdfi}}c<{spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl}scs>pi>fpp",
	"pijfd{cpcdjdl}{pijj}j{<ffssflcjd>lspdlij}dcjc",
	"<pcjfddd<ifilfisd>lld<pfidipsf>{sdjciilpcpcpd}>isid<<pjfsfffldfjssccl>ssij><ijdpijpcj>isic",
	"ijdsjdifdp{d<d><ic>p<c>s}dc",
	"cssspj<splpd><cc>fl",
	"lpccldlfdc{ds{djiljflllcp}lcdi}j",
	"dss<s>fdpsfl",
	"flccjf{jiidppdjdlfclp}iddpfi",
	"<jppccslcicfipicccf>ds<{spicji{sjpsipddpdlf}<pfdsdp>lfjiclc}ffdiid><fjdlsccddiljldjdjccflfjllj>dcpj<li>ip",
	"s{<ip{jcdfppp}s{lpf}f>}{fdcdlpfjs}l{isljsl{diifiijf}jsiid{f{pfi}{jidjsjjfppfd}cpcidj}j}",
	"{lsljs}s<liljfj{ssiffisjdlc}dj<pljcfcjclccpciddcplpss>cdj{c}pssfpsf>iffd",
	"ips<iisjffldcdcll>psfdpsfdl",
	"s{ldj<s>dfsls<cscslfc>jls}ci<l>",
	"{ilscjcjilfcfcdjcdl}spi",
	"<<sjss>df>sddsfpf<s>pc<{<jfj><sl>s<fdcfdfpfildljjssspppffpd>jlcsdf{lidldisldl}cj}l>f",
	"scipd{dlif}f",
	"lcijj<sfpjcclpsfclcfc>flpdfcs",
	"d<jlfffdcc>l",
	"li<jdipcj>pild",
	"fslsjpsfc<lffpjdpisijjc{jijfcsfdcpllc}jfd{fjdf}>s{ddpddcc}l",
	"cs{lj}{ls}cj",
	"jd<{sscsp}jsj>cps",
	"vsf{llsiipsilp}idfsjiis",
	"lfdlcl{dcilipdfd}{psl}{fs<lipipi><plppci>plc}s",
	"v<llpiplpijc>iclljdd{jdl}jd",
	"{d}pipd",
	"ilil<sfspjfsscilcd>",
	"dp<ficlfccpd>j{fs<{lcjcd}>plfdl<p>plfpli{{fjfsic}}<iil<dijfsii>>{fi{clpfpjjffslsldfldid}cd}}sflcp",
	"d{llfiisjjcj<fsljidiif>i}{scljifjfpff}pplipddfdl",
	"lpl{fcscsfjffidifij}",
	"<pjfdcdjsiljc>dfc",
	"<ldjlcjpfsdf>psssjd<slfijsl>",
	"fidlc<sjpi<{jflds}clcpisl{pj}piddpcj{cllcff}flif>>lpjpficii",
	"{cjcclfji}cp{dcpdipspcflpfdjscjfcjcfddfsifscsdjs}lpl<cdi{i}ppldjl{ijlpcfjp<ifjs>j{jdc}d}jss<pfd{csfpjpd}cfllllicipsjld<cjcpfdcfjfccjppdfsipjcpff>ji<silcp>fiic<f>i>lf><dps>dc",
	"li<lj{diijfpjpildsd}dd{icdssdss}><pi<dcilpldj>j>",
	"lsid<fll<scifi>sj>",
	"<clifdll>jjdcdscj",
	"sslccd{cclcfccs<cs<spcf>ji>}",
	"lc<lipfp>cjcj{sp<pifcjspscfljljsssddifdppjpp><pfjjp>dj}",
	"<{fc}{slsipl}licpsicjjfcj<psljjf>{csdjfcffp}f>cp{idspdiiif}<<jli>dl>f",
	"<f<pfp>dfs>lppcccid",
	"v{cs}djd{ccsp}",
	"<j>ccj<isdl>sc",
	"{ifjislislilljjjcip}l<lfc>",
	"{ippjfli<d{cciil}l>ldfpi<llips<fl>c{slcjjfjcjpf}<jsipspfjpdlcssc>fdplp{plfdilllsipldsdiljljsidpdjidfj}jdjdjll>d}",
	"f<dlfsiipslf>ffsijfjcif{ipsfccs<f><scljsd{cisd}<lddc>sc>ifi}{scp}",
	"pci<psj>pjfs",
	"i{p{{fdcliplpfjcpfid}fjpj}iip}c",
	"{<lppjsjsdflccjcpipjfpljjjddc>lsip}",
	"iccffpdid<ssp>",
	"<i{jpispdspdcfflffpjpdlsccl}fdf{csls}<ljj>cllslcspsi<pplpfdpdpl>d<pjiil>flscpj>lll",
	"{p}sjddjpsjjd",
	"dsi<siif>jji",
	"spjcs<<j>cpp>j",
	"{idl{{clijd}c<cjicclffcdjc>pplijfij}}c",
	"l<sc{f}cfi>lsl",
	"vlij{jcs{jfidildijdcccdl}j<slcddj>isdplilcsj{cs}silpdlscld{pjdljspp}f}f{sclfils}lpfsiclp<lfjpiiddfsdjpslfslc>",
	"{pdjdjsfdpcdpdpdf}flccj",
	"ifs<sfss>j",
	"<iflpjsifpic>d",
	"fsij{sislssdii}",
	"vfd<ci<fdppfidlcf>pi>jidpj",
	"p<dc>dsijjfpj",
	"fpfjclcsj<cdspl>d<llpllilfpicjd>cfs",
	"pid{fdjscl}j",
	"sfdfcjdi<sdlpddslpicspsdjijsdf>",
	"lll{scf}sifjp",
	"f{iscdl}i<dlfcilljcpcdsjiffllciij>fj",
	"is{dlcdsf}{pspdfcsfiij}cs{ffdfcil}",
	"{pl}",
	"<flc{{jfcicdsilcp}d<spj>i<ljfcsjlcpiclicdcpcc>fj{sllsc}s<iljpfisisjpd>fjlsjiiipd<jlisdl>jfdc{ljsjjlljfdfipp}fljfd<sfp>{pipppp}lpjld{sspcdlsfiji}}sfjl>{lf{ssll{cp}ffpp<d>cs<jlcdjplslii>ji}}{id}ifdf",
	"fpssd{d}fiiip",
	"ssl<d<sdddcijplcdilpcdipcslfidlcjsdl>fdi>fc{jpi}fscl",
	"jdli{llj{j}cisc<llpscs>{slll}jjifcs}",
	"p<cp>dj{s}pi",
	"{d}{jccjll}cdicl{cp}ddppil",
	"cdddlcpf{<sjfc<ijjjpfjdsi>sjcdld>cp}idf",
	"{l{dpfi}ilcspjisd}cjfpldilp",
	"<c{ljlcd}>",
	"s<sd>i<jflji>p<f{ppfiplj}>iidfdild",
	"j<scjsld<ldffi>cfdslfjs>icpp",
	"dscdf{scisccdf}",
	"s<cjsjjl>",
	"dccpslsi{ps{ifdiljip{idip}l}fs}iddsj",
	"plillf<slp<dfp>fsil{cpjllflisfspdffici}cssiipsdp<scijid>fp>jpji",
	"p{sisl}{c<dji<ssplffp>cp{cpjficjcfjpsjjfdsiscjd}lcd{d}l>}scf",
	"pd<d{lddslp}lcsdpdpcifdfjij>jlp{scc}l<lfflccilifjpdfp><p>p",
	"{{pf}{ciif}ci{csspsdccsjlj}}c",
	"pl<fpp>icclc",
	"vj<{sidclif<ijslslid>f<cddljfjsclcfsilipsfissjdc>sdff<jflliccssdljisdcpjcjii>i{pccpliffiddlidi}fii<jfcppjijs>{f}sji{fssflsldpsijcpc}{cc}cp}>fci{slif{pdddl}ls<p>dplllcppjs<cficfdipjfjdssddcsccspppldjlisdidiil><cccddcsiff>cfjd{sppl}li<pjdjjifcijisfiippspdf>ljii{p}clsi<ipdpidcijjj>}iisii<lfpc>j{ps}j",
	"cdc{ipsjlflccli}{p}isf{scsfpisjdijcpccfpjddplspssdsfs}jl",
	"fspsdjlliipfl<jlppfc{siclpf}dsd<f>j<jpsiijf>c{clspcdlflspc}sf<cd>>",
	"<<<j>i>iidd>{c}",
	"<lciipssldlldllpl>ppl",
	"ps{<ijif>dpjc}cjp",
	"dd{j{ipldssic<jdsisfdfddpjpldjlcfjlipppflsf>jjp<cfjilifscslpd>fsppl{jf}<cj>pf{df}cl}cljs}f",
	"d<iss{ddjffl}s>pssd{fdl}jss",
	"d<p>j",
	"{pc}fdls{pljjcd}{f<lddfdfcs>d}jjjf{jpljlsfcsccddlifsplclfispcfslffpcfsidijddpssliljlfdccdssislpd}j",
	"<l{jdslss<fcisjffdclcji>if{fiddd}}pff>jif{jdcjfplcj}fjd<cds>pf",
	"lclf{<fp>pl{pcsfipfdiicis}f}pplpi",
	"<p<p{ciddcsspsp}djcfp>>dcid",
	"<si<ps>>",
	"<<jfpjdpj{ljllisjsfscidpipjd}>scdp{p}dli>ssjjc",
	"pcl{pldpdsflpfldfscsjlscspdfsjsdjj}llp",
	"{cliijipcp<l>}d<lcljc>",
	"vpd{sdssp{lj<idcpjjscsi>ljl<fcfjdjfsdplillds>}sccsljpj}p",
	"{si}",
	"d<d{c}<sc{j}fsdf{j}s<jdddljip>cl><is>>lpl",
	"f<jdijijl<ddf><pisfppiisippjf>{cicpcfppsfpfl<dc>pf}<jdcd>sc<ccpf>>pfd",
	"islf<c{siicsdsf}dlissfsp>dl<pfliifppffc{jdpdcsisdciil}sidip{iipjlfcfcidipsfssl}iscdp>",
	"j<lplfic><cdd>fs{i}",
	"<disddisisclpjsp>{sff}d",
	"csildisjcpc<jsdfcjscffpcsfjidcpjscssc>j{pldfsdipidplsf}c",
	"{i}",
	"d{iissjdcsl}d",
	"fspdispdfjjlfp{sifip<j>jffdc{pcfisccdcjcfcdficljiij}}",
	"{pi{pjsffjdi}{jj}{lfjlciijfji}{jpcsjlcisscsdl}clc<dcssljiccd>s}j<dff{dicpippscfisldpi}fipfli<cjfdijcjjild>cipi>p<j{fillpdp}lffsljjl>{{clicpd}c<sllicddcfljpspc>pp{fjf}<dldjsidcpsijf>ipcclppsc}p{ispidd}{lpffjlcll}ljc",
	"llj<i{ld}j<fs><djljlilf>{fcpcics}ldi{lp}>p<lf>l<sdscic>",
	"fcljpdilssddi{i}",
	"vd<<sllp{pi}s<llpcpifiiiij>lj<jscfppcdisfdplp>l<s>slsjsljf{i}<ipld>ljif>ii>dcj{ds}s",
	"sclsls<{jpfccls<lcpfpppflfjdlcfc>dfc{ifij}}pidj>s{cplccc{fclpi<ppilfplijlillic>iplplc<ipsfijdcdspf>}<isjlsiddfs>ficc{jccdcd{si}<sc>lpsds{sids}}ifcifs}d",
	"dflfpd<lp<jcfpcs>ljpfs{sjdfssiicffplplf}plfl{ifis}sp>iss",
	"piic<d{cdji}sc<d>cicjl><sll<flcldplpp>{cds}jpd<lficijp>slc{pfsspiipsjip}<jslfsfdpii>>icdp",
	"dif<pl>ss",
	"dfcs{<fssisscjflflsdppdfidsljfjpdjfp>lcfi}jjf<sfjfjfcsfffscslddd>jccpl<<jljjpcfjilsiiis>ss<fpjjlsscfp><pcfd>>{sjspcfj}",
	"p<fcdlll<sssffj>ljsissl>d<dcjplsjjl>f<dcspsldcpj>si{csjc}fdpd",
	"fcsj<{jlj}ic<fpjfflpl><psjlsispfpjijdclil>c<jlsij>{lif}l{jjscfpjpspcpllcpdlpl}{fsdpc}i>j{c}",
	"c{<i>p{d}ic}",
	"s<f<ccc<pcpicsijs>p>{dsfffllli<is>i<cslcdijdjp>llplccpddcli<dji>df}iicdil>dcildfjic",
	"c<f>{sldjcjcclppflljfssjcjfjlspspfc}didpcpc<fsppfd>j",
	"s<cf>fcl",
	"<id<{ficiisddjlljp}ldsp<csclifllis>il<fs>lj>>dfld",
	"s{cll<ciiisjscillplfdjjjcdppjpijl>ldidfj<dls>}djdf",
	"jjj{<pj><dfiffpclc><lci>ld<flsll>c<fjdccjdpj>pi<icf>lp}sjp",
	"ppljp<ljpiijsfpcddsipd>flscsfjd",
	"diddc<sls<p>{jlj}>ssfll{j}dj",
	"cc{sjdiilicd}fsl",
	"ldjc{cpp}{pl}d{plijcffc}",
	"cid{llp}pf",
	"<lcipcjlj>lf{fddlcipjsfspfcdcldj{j{ddss}}slp}{s}",
	"slflscdlcld<ccfiip>{iisllpjj}{<fssid>}",
	"{sp}<cccl{pdcjl}s<ispi>sii>lflllss",
	"i<j<isc>lpd>d<si{lccspppfjl}sj>j",
	"j{sjc<sfcfs>flsjjlspj<pdd>jpsff{sijsccpsf}ccd<djpdjspjp>}lc<p>{l<cissill>p<jsjil>ci{pilfjc}isf<diicipidd>d<ijjlj>cl{ifjippddjssc}}<l>{llljpcdjjijlidcs}sf",
	"f{dcs}jlpjlsp",
	"vjji{psjj}slliiip",
	"<lips>j<d>si",
	"llf{li}",
	"{<s{ppjd}f>c}j",
	"{sp{dclp}icf{pp}islldll<cll>ps<sisp>j<lipsdiic>sfscl{f}pddsl}",
	"lsd<<sf{ssdp}ps>f{isicdjd}>",
	"pd{cfc}{f{jcdcp}<dsjdfdpjliji>}{pp<{fp}l<ippjsll>d<pd>sdd{spcij}dsdldld{lspl}jii>ssd}i{sfcjsl<fcipdd>}dccf",
	"jdlscsc<sfiijlfdldcicplifllppplficljpijdfi>f<sccflf><pc<<ldp>scf<jflspic>jscpf{llipis}<djlpd>c<pipp>pjp>>",
	"j{jjjpcslsiijlcpiciscp}sdcjlpfdpd",
	"{lijspjccis}fijjj",
	"{slfpsc}j",
	"iip{cfcp}{f}{jscl<l{dpcjplpsdiisidipdlpj}>}l<{l}d>issjfi",
	"f{{f}ils{fp}psf{pficfpflclslsdsjjidi}scdfc{s}sdpl{c}jl}dis{cdlcjp}pj{fdijjsjl}f{{slpp}}{p}",
	"{dp}ls{cifl{cf}}<fdclf{ccflcjpipi}fllfl{jlf}sld>",
	"ij{jdsssjdjsccllfsf}pcciccfijl",
	"pd{lsfjj<s><icd><jcs>}dp<jcldlj{sifljcs<sdlllfijlcdppi>l<lffpcpipsf>j<llpddffpf>ldjplcs<pijddpidc>sf}>ip<dj>jlfp",
	"lssdijfs{scpij}",
	"cddll{dcjfifi{{lsfcj}lljs<sfppspfpcpf>sij<jjsddf>dd}}ii",
	"d{cpj<ij>jjsfj{iidlsjssc}l}silid",
	"j{i<fcjsl>}l",
	"isp<d>",
	"f<isidlljli<cfdcc><sifcpcj>ds<fl>lfd{<csspilsf>cplldpis}splij{jlfpcd}l{{ldc}dlii<ljdfcj>jj{p}pjd<cll>}ifil{c{cj}{dcf}c{dfilcfipfdsic}i}>cd",
	"{jfjs}spj",
	"jpif<jcjipffdcissdscs{p}dc>",
	"l<<ls>j>",
	"fpicdp{sc}",
	"ccdf{cld<sp>sjccli<jl<j>pj>iic{<fcsidjljclsl>scfj<fplf>jdcc<sddfdc>dcs{clf}}l}",
	"vjfc{clpsjssp}",
	"jsi<fcscsljccs><pi>",
	"<jcjlclssiifcf>l",
	"dscj<dijclssil>s",
	"d<fp{{dcdid}f{sd}lfsldcs<p>jff{jiljffdlcjfciijipliipcsplsclcdc}jidf{liccsj}s{jiilissfcsfdilppdccjlilplliplsfls}pijfj<spjf><dcicjdpd>i<pd>sijj}pjjspjl>jdffic",
	"fplpspifl<li>",
	"sidfifjpc{ddfdjjpspf}",
	"c{pjis}fjlfpip",
	"f{cf}lfsp",
	"ljps{l<cdsiflijdcdpcpisipcjsd>f}f<sj>lf",
	"s{djs{ff}j}",
	"lipsf<s>fpii",
	"fdpccs<lj>j{idipfcssf}p",
	"j<<jcpspi>pd<lcclci>{ii}cpscj{fcji}{s}p>{slccd{ip<ilslji>s}pc{<p>{ld}{lfif}d{ifl}pff<fjj>sdd<djjj><pfdci>{iijsjddldffisp}p}spdfjdssf<ljcsdsljc>{dfj<dsffslpp>dffp<f>fdl}{jfj}}",
	"sd<sp>",
	"dlj<f>iji",
	"ijsc{pcjpjilf<d>dpsjp}pcpcsd",
	"<ljiildcdcsliijclfsdccjdjilpsssliffl>lsdd",
	"f<pljic{scsf{jppscj}}lc{{iii}{cpip}lfpffdci<pd>f{lj}scpji{cfisjfdsijilidciifjlidcddf}{llfpfdcjjfisj}ds}jc<dldlic{pjdsipiisspcsidlipj}<i>>>{ilfpcdc}sjp",
	"{slpidjffspfs}id<lfcljs>",
	"p<jsi<j{pisccsdc}lljp{s}<silcccij>f>lp<dppdi<cfjdsdj>fl>dfjfsj><pd>spld",
	"jpl{<j>dcl}",
	"idspdjssp<<ic{lf}d{l}dsfidpp>jdsljddspl>ddi<c{iijp}>",
	"v<c>c<lsiddcpdpi>cj",
	"p{idcji}",
	"d<dssd>j<lslilljdiicdc>i",
	"<cs>is<fsdjddifii>i",
	"j{dslifdlf}fpipi",
	"l{f}ljpilsc",
	"jjlj<icss>sll",
	"l<f>p",
	"jdjjfcjp<fdpfi>jj",
	"<jd{ifcsijfdpsi<dlips><cpclflciffjfdjisll>cj}lpjplsf<dijcjffjfl><fci>cjiddss>",
	"{df}p{ffpcpddifpji<ddd>ipj}cjcfp",
	"c{jfds{djisiclj}pjic<dfpfcpccsip>fdifpll}f",
	"l{sf}cj",
	"spjdfci{c}d<jppc>",
	"d<li>jc",
	"l{sclsslpfppdlidpicsc}s",
	"cdilidp<sic>pfiji",
	"p<cpll>{ddppdfcicdjjilcdccsppcsf}cicpd",
	"{icsp}plfpffj<dfjdjfj{jci{liijp}jcfd<jildid><ccdpjpcdlss>icf}><lpcpcflsf>fff",
	"<{j}jildcip<{dllijc}dcljp>d{djpfi}iicdcipisplppscpfj>jf",
	"lifjpljljjd{ffd<ifjfdsdsff>jfif<pipicf>}lj",
	"vjs{dji}ld{cds}sfjs<ic{l}>",
	"<ffjidl<s>{pcfdcpijfj}{lilipjcjcij}<pl>>fp<idssjjpf>ijlpsljjcs",
	"v{s}j{liipfd}<{sdcsdipjfciclpjd}lj>jf",
	"{d<d<fsssij>d{ipicfflpfcc}>{l}ljlflppd}lpd",
	"lccj<djdsfjlflcsdpdssdpis>{ifc}",
	"{ilffldjjfpslliil}<cjdfc>",
	"vljp{cd{sjpspdd<fdfslsldplcls>fjicl{dcdsicjldpljcs}p}{fip{illsfls}lj{sj}icjc{iiflsf}s<jdplfi>{dcljcdjpfccfipdils}d<dfjfd>fjji}}s",
	"clijdif{cc{j}fldipd}",
	"idcld<dddlsp>fic{f{spjcfsll}{jddpfdscssc<pfc><cf>l{sisjijicji}jcd}fd{p{jlsisipdsijpsdsjpjjsc}jpc{fj}{jdjcdijps}}i{fcc}pjdicllicpdls<jddpll{silcddsdpsffdpscdcliddfi}><i>p}spfclji",
	"c{pfij}",
	"{ff}",
	"j<d>",
	"f{flsfdff<<dfcc>j<i>cffc{csp}cjlfi<fcifdsfcfpffsdffpldi>d>p}cdls{ilfl}s",
	"<cpif>sssjijsi{dfs}",
	"{llccsjsdpdfcilis}ifjiiijjsip",
	"fp<ij>{jf}sif",
	"<p<jddfppsfsdljdfipli>i{jpl}ildcpsisfpcl>fp{{lfd}lsscsfil{pilipssdljics}<s>scfjliid{pcic}}",
	"csc<c>{c}fslldpd<j{fl{il}<ssdpfcfjppcsfpfpsif><pildfsdpjcjcjdfddjsiipjilsjjppsjlfip>dldp<jc>di<lpsld>dl}c>",
	"is<cicid{dcf}pifii<ldldfsssfjlppdjdl>dsisllc{cljfjlll}scd<jiis>s{sj}p{sipjf}c<cdsspdlfd>i{jcicjscdfcpjscl}fjl>pij{ff}jfj",
	"{p}d{jdjjpldcssfd}jsf",
	"vpfds<c>ppl{ifldjfcsfpicciccsdpps}",
	"df<clpjldcpdiflsijcddfsclji>{cdcpjifssjlic<pi<pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji>>f<{ccdisspfjifpc}ffjjj>df<fc{jc}i{cjlicpcjdfdfpllclsjpfs}c<ppcplspsicdpjldlsdi>{fpiddc}ccl>}c",
	"vij{lp<{ffjci}spiddisdpjjijf>cplpjsj}",
	"p<i<sji>iljlf>",
	"{lpi}",
	"{iicsccs{dspfjids}jcc{flcdispifidd}slsjjcijc}lpcpjf",
	"pcfj<dsfcjssls>i",
	"{liccj}{f}{cjds}pcj",
	"{l{ildllji}{ciji}}f<piddljl>",
	"s<lcci<lpcjpldddp>p>",
	"ddlifcdpj{clfd<idjsj>jf{p}pcppd<pici>jjfi{fp<pscjjjld>dcdjjsjp<dlllddi>}{lfjifjpfd{sfcijlc}{ljpjcjffi}fdpp{silsisp}f}{c}cccddipfccipppfdd}df",
	"pld{pi}",
	"d<<dfcjfsfplilsjjcfjijsdslcl>j><p>jlicj{{dlclsfcfp}{cilji}cccf{djdidfl}j<iplpppddsfdsfispflsj>psilp}",
	"d<lsll>fdpip",
	"d<lddjjj{fjss{fp}c}s>jjl",
	"<ls<ic{sdcl}s>{l}{i}p{dpd}ic>scj<ljcficps>ilflsssdf",
	"sps{lsi}slpd{cdd<cdjsd{lslj}p{dfpdjjicidcjj}<cifsf>fdcc>pci{ij{ljpddpf}{siifddlf}}fsciffds{c{p}p{jsjcjlssdcsfslffiipsppdlddfi}lllpfiddfls}slffj{ccsdpi<ccspifcpfcccisfj>{sjffdi}pljd<jsp>ipljsd<ffddfipicicj>fclfi<ffsdpfjjs>psp{sssccsdcpsijd}pjji}fp<pl<fjfppifdifds>pdf><<slfd>f{fijpfsdf}ppjscic<jjlc>l>jsp}c<{flicdjc}j>si",
	"ilicjj{lld}",
	"vfj{l}jdil",
	"ijss{isdcc<sccll<pcclcfcjplcfcs>>spcsp<jp>d<<s><f>pfj<jp>pj{psffddpdfjpilii}f{dsdjljpjllplslifsi}fll<fiipsdfcjiii>fpp{sfcf}ds>ji}{fllpsfdlpi}p{ifcjflj{sclc}dpls{icds}s{pfcdifpispi}<sspipfddflpjlfpc>f<pcfssclffiii>dflp}{{jflfppijp}pf}",
	"pl<iij>dpp{dld}sj<cficpjjpci>p{{fllcs}csfflfcipjpi{ijicj}lis}",
	"lpi<csijfpc{{pc}}i>",
	"<dd>idiijpificjj",
	"<li><ijppsflfs>pidlsjif{lfi}",
	"jcjf{jfsiiidpdiddsjcsj}sslccfs",
	"jdjs<f{c<cdil>s<fifdiidfddljdjllscs>jfidcidj}if><d>pl<siilp>{fd}",
	"{<ssf>}{fdjlfcssdcpjdfljpssfidfjfij}d",
	"ddi{d}dc{flp}{pfsipfippp}{fjijllisl}pd",
	"jffc<dlppfl{diidpcfdi}>ijjjf",
	"iddp{jdij<dcd>ss<dsjddclc>jdc}",
	"cpjl<jlcjcc>cipi",
	"isdcfl<c<l>>cdclf<dfpi<ljjf>jpljpplcjps{sdcipfpipjdid}fij>p",
	"<plpj>fdd<jfjiil>jidipld",
	"i<jfidi{pslliiijlld}<jijc>f{jcidplj}{f}lifj<jssf>pjcp<dsiipf>ic>cllij",
	"{pillfjjdipsiplcl}",
	"ll{fjlpdcfdflpilfpjidfcfjsjfp}s",
	"s{pcdpd}sp{idflpfsfp}{fs<djjfjpflfcis>}lippf",
	"j{dl}s{fpjld}jpcsdd{p{j<dj>{ffsdfilsdffjffjfi}jfd<fpcfcsplscdjjfscsj>}p}d",
	"csijcili{jlfsjldsd}c",
	"cf<s><{jpfi}jsplccicsi{dsfpiflfidpsscj}>cics<lffps>{li}c{djdpff}j{sj}",
	"ljs<ijcjfjpf>jjcij{s}i",
	"piissj<ipllcd>",
	"<sjidpi>spdsi",
	"vjjss<ppjs>jfi{ppjdpjf{{jplilpd}{ldipfsdddcsic}pl<ddp>ds{ljsji}}}pfdf",
	"{f}jsddc{iff}fc{fcjli}cp",
	"{dpd<fidss>pjcd<jipdsldiclp>is<sp>jllflcpdi<j>cdd}ds",
	"pfp{p{pcjlilpscipcljipcipi}ddj{dffiljiijlspcspjfdsjj}f{iffccpcdd}<icijsdfdjfppfssdslippsdjjccld>j<flscifl>il{flcpsjpisssdd}l}",
	"fpc<lj<sfldsj>ic<flsjsjc>slcpflsdjpjp{idcljljdfdpffdjppcspjfspiffifjf}<clld>>fds<s>ff<fpj{fj}plscsdlldpppdfps>",
	"dddd<fs>",
	"sfpdfjsplp{clc}dli",
	"clccpdf{s}s",
	"vjcijj<ldsdspcfjs>ss{cfllddiciscdfcpsflsdsidc}i",
	"<f>ldlippfdp",
	"dffjil<pl<jjddfl>cpdj>cl<{jds}p{sijlldllscdssppplsid}f<ljpffppjislipji>dc>i{ic{fsp}}i",
	"sscjp<cjcpsdifill><l>icjdl",
	"ps{djff}dffd",
	"d<p>ppsplp<ldi{jjplljlji}{j}j{i}cpj<l>j>si",
	"s{i}pdp",
	"psjfld{iidi<d>sjdpcp{sljpf}}",
	"p{l}<{ljd}{sfps}pd>",
	"lfl<c<i<fpdfdclcllpf>c>d<dff{ppjf}i{dlli}fjs<dpdj>i>p>lpfcl",
	"cj<p{sjp}{scjcsip}pl<fislfcp>j>c<fjisid>ij",
	"df<dl><<dlcf{c}f<lifldldi>pjs{fdsdi}{lf}{isp}f>>j",
	"i<sdjiill>",
	"fp{pdjdjc<pjjjfspspfjiijdllijs>ci}fsf",
	"vj{<ffflpdpdid{cidp}i>}c{jjsspd}slcl",
	"cl<flffj<cfp>l<l>p>liicld{pjljl}l{ipsslfp}p",
	"pi{pf}si{jlip<jdjsidpfspiipccliccjp>}jpssl{ccj}p",
	"jj<pjcf<lccjlddpl>jifccil>cljl<ddc>",
	"lcccl{lfils}dfdl",
	"{cif}",
	"fpcifidd<dcdsjdfijsfiillfcldsls>d",
	"jllssss{ccccil}ii<jjflilcpliciscjscjjcspicjpdjc>",
	"{sfljddpdfdi}f<lsddfpjjjjpclfd<ipllpdcpddjpjdpc><sjpslcfdlpjl><cdjj>ccfpcpli<cisl>>jl{jc}ifj",
	"cdj{dlpfdp}c",
	"discdljd{i}fdscjj",
	"fd{s{cjcfiscp}j}li",
	"{isisl}<cdlsifjfccslijisjjjiildcjc>s",
	"cfds{dcd{jcpslsijdppjifs}s<fisijc>djdd}sccljp{jcidplpcjssifsdippdilifiiisiidjpdf}{dfllsjffpc}",
	"<dfljfpd<j>s>",
	"cjf<cp>lcpflf<ifjsdlisjdfl>c",
	"ddlips<fi<sfsj<idifpdspfjdscjdcjpl>{idfpjldjfjislpsdpplllfccljlsiisdisddpcspf}fpds>iicli>ijpsd",
	"f{fjpfiili}ls",
	"il<<idcicsslsfipjpspf>{lpclcscsjlcjfflf}>",
	"sij<fifcp>",
	"<jsfsflciilp>llfsdsjdj",
	"vplfccccfdi<sci>",
	"f<p>siipfsfcpidfl",
	"v<<cccfsj>i{fd}>d",
	"icsc{dfcsspp}sjp",
	"{ff}jj{ljlcc}ff",
	"j{s}<licfp<djic>iiclpcs{i}<ld>>",
	"d<sjcpsl{l}iil>{pdipiilscjcldlpcfscidddi}sdf<jpcff{jplidlspdcjllc}p<dsisscdd>sss{pjisjlsjdj}silipplpscissji<fcpjjllcldcsifcclssllifdpllcljfdfcfdpidfcscfslicpj>ds>p{cs}d",
	"<sdifddd>sspicdf<fc<spdpspjifs>fsdp>j",
	"sdsf<pl>l",
	"p{{cidil<jpljs>ddi{sjjpjlidlisjip}}lpldif<pciji{jfiffd}sdpdljc<dciffi><fl>jdf<dsdslillcc>sjpdpippc>s}jsdfdfds",
	"l<<lfpsdsjddsidfl>fssp>fpp<ipdjsjppcfc>sf",
	"{s}jscfc{jsdpds}",
	"c<sp>pfjc",
	"j{<dcdsfdsifccjjldslcclccddlj>c<fdcpdsdsp>}d<sid<jjpcdip>>jssdpls<j>",
	"pildf{<jllijpdpjpsfcic>lldjl{ssfpfijflclficcic}cspfs{pfpddcispdlfpspsspslcfijpclcf}cpjflicfcp{idlljidd}fp}fsjslff<<ic>pcdpdp>s",
	"vddsjf{j<fj>jpp<lss>spflcippsfjdi}i",
	"scccpp<s>",
	"<fssd>pfdsfspdsjicd{psclfplcffccidjjldlf}",
	"{isdjfdppci}sjssjpdp",
	"dcp{jsfjjjppdpdjfldflclilcs}pjc",
	"<plsscpsdp>l",
	"sp{dcifiicjspisl}<ispl>jddclsfp",
	"{<jscpppscddj>{cj}i{lsssis}i<discipf>j{ds}j}",
	"ldpd<jilifsslcccs>",
	"f<jidjcdf>pl",
	"vi{ssfp{ddl}c{si}spi}c",
	"fccpppllcd{ifdspifpfficdljilicppssslpscdpdffpfp}sf",
	"sildjdidcl{cfpcdij}<sdisp<{dsjcpjdsddsfsicps}dd{lijf}j>s>",
	"j<ll{llcljjljippfspdfsljcsdp}idfdsif>",
	"ipscjp<clf>jcjsipjc",
	"p{fidl}dj{lccpjil}jfccicc",
	"lpfflspsjjsil{cppljp}",
	"iij<lil{dp}pldif{dpif}p>djpcdp<pliif>sd",
	"i<ld>sci",
	"idl<<d>idjpsldsl>dll{dpjj<ss>}ldpifjfj",
	"spif<jdip>jpi",
	"cj{ic}lip{cs}fjcsls",
	"i{ppsi{ccp}}p<d>dsc",
	"<sjd<{fl}fj<plflfljjcdfi>lsssl{ilpi}icsip>pisjpi>pp{cs<j>cccijpssjfjl<fd>}",
	"s<pf>spidpf",
	"c<s>{cjji}",
	"ccf<piif<c{ifd}disfllldspsll<jjjpplfdss>l<s>i<jffl>lfl{ldspffsdilli}ij{pic}p>scl<l>ssjddj{idlildpsc{icpddjpcjjslf}c}fjf<i{j}ip<dlj>>spcp{i<jccficscl><dffjljf>ls<ds>f{cdfpppjcl}ddd<lpfjp>ljdfcliccfpp}cjfd>sc<ljc<lcjcflpsfsfpi>j{jffjllpicpsfpdjpscljf}ppsi{sss}fl>fl{s}",
	"llss{f}jc<idp>",
	"{{<iifdpppippljscddljjdcffjcsilccifpc>}<cp<ldsidsf>jscjldpffjflld>f{ijllc<iddiiiscfld>dl}iljfflfllsccl}di<l>sicf",
	"ils<psi<jdspfj>{ljiilscdpl}dc{spllscpffjpflsdpcsfsssdjfpdfpsicffljdijjj}li<fssicpp>{spfiffs}psd<jflcpjpfs>>sssdijd{d}c",
	"pfd{cl}jf",
	"sf<di>cj{<{pp}ii<fcssdspddifidijscidld><cp>>j{pjsffcs}dc}cfjij<csd{<ppppffppiicclcd><lccidclifsd>dslsld<cj>silicslifdcdisc<ccplcljffcfspplsccs>l}ci<{ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl}fllpfdlc{i}d<cjplcj>iis>lpl<c>icdpjjfsld{{lplffdfsssiifd}pjjfcp{d}fslj}>",
	"l{ljijsi}scdf",
	"ppipdps{fldjpslcisfpdcssflfjfds}",
	"v{j}lp",
	"cid<pfipsdcscllpisdpjpdff>{dcppsfdlidssidpflcfscsscflsp}",
	"f{{dj}fijsfj{l}<jp><djiis>fp}sdi",
	"{c<scldppfilp>dpii}ldj<s>lp",
	"vfds{dplspl}dc<cccjsfslj>cs",
	"vlppdpcilldpi{d}j",
	"jscf<d{c<s><dcscjcslfpsdfiisjsiiccdifdl>pfjp{di}d}>jc",
};
const char* G_agg_sigs[]  = {
	"<icllcsfdlp>",
	"{cdcfcjs}",
	"<c>",
	"{s}",
	"<ldllip>",
	"{sjpsi}",
	"<lcp>",
	"<csidff>",
	"{ls}",
	"{fjsfcdfp}",
	"{dd}",
	"{{s}d<ldllip>j{sjpsi}dsd<lcp>pisi<csidff>fs{ls}dp{fjsfcdfp}d{dd}}",
	"<ijl<c>{{s}d<ldllip>j{sjpsi}dsd<lcp>pisi<csidff>fs{ls}dp{fjsfcdfp}d{dd}}jjlsj>",
	"<lj>",
	"<dlpjjcslfdilfddsicd>",
	"{cjp}",
	"{cfdcds}",
	"<pc>",
	"<idf>",
	"{l<idf>}",
	"{{l<idf>}dfpdsfldjsclcjlj}",
	"<i>",
	"{dicpdi}",
	"{jsfdjpli}",
	"<pcslsijpjdj>",
	"{ifjlspijsjsjsjfdcjj}",
	"<pfdlfj>",
	"{ipdj{jsfdjpli}cl<pcslsijpjdj>dfd{ifjlspijsjsjsjfdcjj}<pfdlfj>s}",
	"<lfips>",
	"{ldi<lfips>jflccd}",
	"{psflpi}",
	"<iidpi>",
	"<il>",
	"{jddspfldpdils}",
	"<{psflpi}lpjsc<iidpi>if<il>{jddspfldpdils}csd>",
	"<jiccfddifjl>",
	"<dfjpfdjfdlijjdpisji>",
	"<csidcscjff>",
	"{jpllijlp}",
	"{jiiccfcidlcildislll}",
	"{djppf<csidcscjff>{jpllijlp}cldcp{jiiccfcidlcildislll}fpii}",
	"{dsisddcjjp}",
	"<jspplpf>",
	"<pili>",
	"{iisjcppsjj<jspplpf>iscs<pili>cpis}",
	"<jidd>",
	"<j>",
	"{lccfpc}",
	"<jpfpjpij>",
	"{lsj}",
	"{l}",
	"<spsc{lsj}{l}i>",
	"<lijljpjplcjidcdcslpjljfc>",
	"{cldlfl}",
	"<pjjpisilcf>",
	"{slp}",
	"{jj}",
	"<cfdppfc>",
	"<jpsfidpljsijdpfi>",
	"{pcjsffj{slp}s{jj}pd<cfdppfc>fjcs<jpsfidpljsijdpfi>difjd}",
	"<pp>",
	"<fifjjppjilsdisf>",
	"{cfijccjipscf}",
	"<s{cfijccjipscf}>",
	"{djpdi}",
	"<cp>",
	"{pcljjfc}",
	"{jidfdl{pcljjfc}i}",
	"<dcd>",
	"<p<cp>{jidfdl{pcljjfc}i}is<dcd>jif>",
	"{i}",
	"{ppi}",
	"<dllpjjjpsp>",
	"{dl}",
	"<s>",
	"<llcj>",
	"{sll<llcj>}",
	"{fcsddflsdpfcicscppdjsslilifdccdfi}",
	"{plfjf{fcsddflsdpfcicscppdjsslilifdccdfi}}",
	"{spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl}",
	"<{spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl}scs>",
	"<{plfjf{fcsddflsdpfcicscppdjsslilifdccdfi}}c<{spdjspidsdpdsiccicfdlpcjfddfcisfcdiidlidfijl}scs>pi>",
	"{cpcdjdl}",
	"{pijj}",
	"<ffssflcjd>",
	"{<ffssflcjd>lspdlij}",
	"<ifilfisd>",
	"<pfidipsf>",
	"{sdjciilpcpcpd}",
	"<pcjfddd<ifilfisd>lld<pfidipsf>{sdjciilpcpcpd}>",
	"<pjfsfffldfjssccl>",
	"<<pjfsfffldfjssccl>ssij>",
	"<ijdpijpcj>",
	"<d>",
	"<ic>",
	"{d<d><ic>p<c>s}",
	"<splpd>",
	"<cc>",
	"{djiljflllcp}",
	"{ds{djiljflllcp}lcdi}",
	"{jiidppdjdlfclp}",
	"<jppccslcicfipicccf>",
	"{sjpsipddpdlf}",
	"<pfdsdp>",
	"{spicji{sjpsipddpdlf}<pfdsdp>lfjiclc}",
	"<{spicji{sjpsipddpdlf}<pfdsdp>lfjiclc}ffdiid>",
	"<fjdlsccddiljldjdjccflfjllj>",
	"<li>",
	"{jcdfppp}",
	"{lpf}",
	"<ip{jcdfppp}s{lpf}f>",
	"{<ip{jcdfppp}s{lpf}f>}",
	"{fdcdlpfjs}",
	"{diifiijf}",
	"{pfi}",
	"{jidjsjjfppfd}",
	"{f{pfi}{jidjsjjfppfd}cpcidj}",
	"{isljsl{diifiijf}jsiid{f{pfi}{jidjsjjfppfd}cpcidj}j}",
	"{lsljs}",
	"{ssiffisjdlc}",
	"<pljcfcjclccpciddcplpss>",
	"{c}",
	"<liljfj{ssiffisjdlc}dj<pljcfcjclccpciddcplpss>cdj{c}pssfpsf>",
	"<iisjffldcdcll>",
	"<cscslfc>",
	"{ldj<s>dfsls<cscslfc>jls}",
	"<l>",
	"{ilscjcjilfcfcdjcdl}",
	"<sjss>",
	"<<sjss>df>",
	"<jfj>",
	"<sl>",
	"<fdcfdfpfildljjssspppffpd>",
	"{lidldisldl}",
	"{<jfj><sl>s<fdcfdfpfildljjssspppffpd>jlcsdf{lidldisldl}cj}",
	"<{<jfj><sl>s<fdcfdfpfildljjssspppffpd>jlcsdf{lidldisldl}cj}l>",
	"{dlif}",
	"<sfpjcclpsfclcfc>",
	"<jlfffdcc>",
	"<jdipcj>",
	"{jijfcsfdcpllc}",
	"{fjdf}",
	"<lffpjdpisijjc{jijfcsfdcpllc}jfd{fjdf}>",
	"{ddpddcc}",
	"{lj}",
	"{sscsp}",
	"<{sscsp}jsj>",
	"{llsiipsilp}",
	"{dcilipdfd}",
	"{psl}",
	"<lipipi>",
	"<plppci>",
	"{fs<lipipi><plppci>plc}",
	"<llpiplpijc>",
	"{jdl}",
	"{d}",
	"<sfspjfsscilcd>",
	"<ficlfccpd>",
	"{lcjcd}",
	"<{lcjcd}>",
	"<p>",
	"{fjfsic}",
	"{{fjfsic}}",
	"<dijfsii>",
	"<iil<dijfsii>>",
	"{clpfpjjffslsldfldid}",
	"{fi{clpfpjjffslsldfldid}cd}",
	"{fs<{lcjcd}>plfdl<p>plfpli{{fjfsic}}<iil<dijfsii>>{fi{clpfpjjffslsldfldid}cd}}",
	"<fsljidiif>",
	"{llfiisjjcj<fsljidiif>i}",
	"{scljifjfpff}",
	"{fcscsfjffidifij}",
	"<pjfdcdjsiljc>",
	"<ldjlcjpfsdf>",
	"<slfijsl>",
	"{jflds}",
	"{pj}",
	"{cllcff}",
	"<{jflds}clcpisl{pj}piddpcj{cllcff}flif>",
	"<sjpi<{jflds}clcpisl{pj}piddpcj{cllcff}flif>>",
	"{cjcclfji}",
	"{dcpdipspcflpfdjscjfcjcfddfsifscsdjs}",
	"<ifjs>",
	"{jdc}",
	"{ijlpcfjp<ifjs>j{jdc}d}",
	"{csfpjpd}",
	"<cjcpfdcfjfccjppdfsipjcpff>",
	"<silcp>",
	"<f>",
	"<pfd{csfpjpd}cfllllicipsjld<cjcpfdcfjfccjppdfsipjcpff>ji<silcp>fiic<f>i>",
	"<cdi{i}ppldjl{ijlpcfjp<ifjs>j{jdc}d}jss<pfd{csfpjpd}cfllllicipsjld<cjcpfdcfjfccjppdfsipjcpff>ji<silcp>fiic<f>i>lf>",
	"<dps>",
	"{diijfpjpildsd}",
	"{icdssdss}",
	"<lj{diijfpjpildsd}dd{icdssdss}>",
	"<dcilpldj>",
	"<pi<dcilpldj>j>",
	"<scifi>",
	"<fll<scifi>sj>",
	"<clifdll>",
	"<spcf>",
	"<cs<spcf>ji>",
	"{cclcfccs<cs<spcf>ji>}",
	"<lipfp>",
	"<pifcjspscfljljsssddifdppjpp>",
	"<pfjjp>",
	"{sp<pifcjspscfljljsssddifdppjpp><pfjjp>dj}",
	"{fc}",
	"{slsipl}",
	"<psljjf>",
	"{csdjfcffp}",
	"<{fc}{slsipl}licpsicjjfcj<psljjf>{csdjfcffp}f>",
	"{idspdiiif}",
	"<jli>",
	"<<jli>dl>",
	"<pfp>",
	"<f<pfp>dfs>",
	"{cs}",
	"{ccsp}",
	"<isdl>",
	"{ifjislislilljjjcip}",
	"<lfc>",
	"{cciil}",
	"<d{cciil}l>",
	"<fl>",
	"{slcjjfjcjpf}",
	"<jsipspfjpdlcssc>",
	"{plfdilllsipldsdiljljsidpdjidfj}",
	"<llips<fl>c{slcjjfjcjpf}<jsipspfjpdlcssc>fdplp{plfdilllsipldsdiljljsidpdjidfj}jdjdjll>",
	"{ippjfli<d{cciil}l>ldfpi<llips<fl>c{slcjjfjcjpf}<jsipspfjpdlcssc>fdplp{plfdilllsipldsdiljljsidpdjidfj}jdjdjll>d}",
	"<dlfsiipslf>",
	"{cisd}",
	"<lddc>",
	"<scljsd{cisd}<lddc>sc>",
	"{ipsfccs<f><scljsd{cisd}<lddc>sc>ifi}",
	"{scp}",
	"<psj>",
	"{fdcliplpfjcpfid}",
	"{{fdcliplpfjcpfid}fjpj}",
	"{p{{fdcliplpfjcpfid}fjpj}iip}",
	"<lppjsjsdflccjcpipjfpljjjddc>",
	"{<lppjsjsdflccjcpipjfpljjjddc>lsip}",
	"<ssp>",
	"{jpispdspdcfflffpjpdlsccl}",
	"{csls}",
	"<ljj>",
	"<pplpfdpdpl>",
	"<pjiil>",
	"<i{jpispdspdcfflffpjpdlsccl}fdf{csls}<ljj>cllslcspsi<pplpfdpdpl>d<pjiil>flscpj>",
	"{p}",
	"<siif>",
	"<<j>cpp>",
	"{clijd}",
	"<cjicclffcdjc>",
	"{{clijd}c<cjicclffcdjc>pplijfij}",
	"{idl{{clijd}c<cjicclffcdjc>pplijfij}}",
	"{f}",
	"<sc{f}cfi>",
	"{jfidildijdcccdl}",
	"<slcddj>",
	"{pjdljspp}",
	"{jcs{jfidildijdcccdl}j<slcddj>isdplilcsj{cs}silpdlscld{pjdljspp}f}",
	"{sclfils}",
	"<lfjpiiddfsdjpslfslc>",
	"{pdjdjsfdpcdpdpdf}",
	"<sfss>",
	"<iflpjsifpic>",
	"{sislssdii}",
	"<fdppfidlcf>",
	"<ci<fdppfidlcf>pi>",
	"<dc>",
	"<cdspl>",
	"<llpllilfpicjd>",
	"{fdjscl}",
	"<sdlpddslpicspsdjijsdf>",
	"{scf}",
	"{iscdl}",
	"<dlfcilljcpcdsjiffllciij>",
	"{dlcdsf}",
	"{pspdfcsfiij}",
	"{ffdfcil}",
	"{pl}",
	"{jfcicdsilcp}",
	"<spj>",
	"<ljfcsjlcpiclicdcpcc>",
	"{sllsc}",
	"<iljpfisisjpd>",
	"<jlisdl>",
	"{ljsjjlljfdfipp}",
	"<sfp>",
	"{pipppp}",
	"{sspcdlsfiji}",
	"{{jfcicdsilcp}d<spj>i<ljfcsjlcpiclicdcpcc>fj{sllsc}s<iljpfisisjpd>fjlsjiiipd<jlisdl>jfdc{ljsjjlljfdfipp}fljfd<sfp>{pipppp}lpjld{sspcdlsfiji}}",
	"<flc{{jfcicdsilcp}d<spj>i<ljfcsjlcpiclicdcpcc>fj{sllsc}s<iljpfisisjpd>fjlsjiiipd<jlisdl>jfdc{ljsjjlljfdfipp}fljfd<sfp>{pipppp}lpjld{sspcdlsfiji}}sfjl>",
	"{cp}",
	"<jlcdjplslii>",
	"{ssll{cp}ffpp<d>cs<jlcdjplslii>ji}",
	"{lf{ssll{cp}ffpp<d>cs<jlcdjplslii>ji}}",
	"{id}",
	"<sdddcijplcdilpcdipcslfidlcjsdl>",
	"<d<sdddcijplcdilpcdipcslfidlcjsdl>fdi>",
	"{jpi}",
	"{j}",
	"<llpscs>",
	"{slll}",
	"{llj{j}cisc<llpscs>{slll}jjifcs}",
	"{jccjll}",
	"<ijjjpfjdsi>",
	"<sjfc<ijjjpfjdsi>sjcdld>",
	"{<sjfc<ijjjpfjdsi>sjcdld>cp}",
	"{dpfi}",
	"{l{dpfi}ilcspjisd}",
	"{ljlcd}",
	"<c{ljlcd}>",
	"<sd>",
	"<jflji>",
	"{ppfiplj}",
	"<f{ppfiplj}>",
	"<ldffi>",
	"<scjsld<ldffi>cfdslfjs>",
	"{scisccdf}",
	"<cjsjjl>",
	"{idip}",
	"{ifdiljip{idip}l}",
	"{ps{ifdiljip{idip}l}fs}",
	"<dfp>",
	"{cpjllflisfspdffici}",
	"<scijid>",
	"<slp<dfp>fsil{cpjllflisfspdffici}cssiipsdp<scijid>fp>",
	"{sisl}",
	"<ssplffp>",
	"{cpjficjcfjpsjjfdsiscjd}",
	"<dji<ssplffp>cp{cpjficjcfjpsjjfdsiscjd}lcd{d}l>",
	"{c<dji<ssplffp>cp{cpjficjcfjpsjjfdsiscjd}lcd{d}l>}",
	"{lddslp}",
	"<d{lddslp}lcsdpdpcifdfjij>",
	"{scc}",
	"<lfflccilifjpdfp>",
	"{pf}",
	"{ciif}",
	"{csspsdccsjlj}",
	"{{pf}{ciif}ci{csspsdccsjlj}}",
	"<fpp>",
	"<ijslslid>",
	"<cddljfjsclcfsilipsfissjdc>",
	"<jflliccssdljisdcpjcjii>",
	"{pccpliffiddlidi}",
	"<jfcppjijs>",
	"{fssflsldpsijcpc}",
	"{cc}",
	"{sidclif<ijslslid>f<cddljfjsclcfsilipsfissjdc>sdff<jflliccssdljisdcpjcjii>i{pccpliffiddlidi}fii<jfcppjijs>{f}sji{fssflsldpsijcpc}{cc}cp}",
	"<{sidclif<ijslslid>f<cddljfjsclcfsilipsfissjdc>sdff<jflliccssdljisdcpjcjii>i{pccpliffiddlidi}fii<jfcppjijs>{f}sji{fssflsldpsijcpc}{cc}cp}>",
	"{pdddl}",
	"<cficfdipjfjdssddcsccspppldjlisdidiil>",
	"<cccddcsiff>",
	"{sppl}",
	"<pjdjjifcijisfiippspdf>",
	"<ipdpidcijjj>",
	"{slif{pdddl}ls<p>dplllcppjs<cficfdipjfjdssddcsccspppldjlisdidiil><cccddcsiff>cfjd{sppl}li<pjdjjifcijisfiippspdf>ljii{p}clsi<ipdpidcijjj>}",
	"<lfpc>",
	"{ps}",
	"{ipsjlflccli}",
	"{scsfpisjdijcpccfpjddplspssdsfs}",
	"{siclpf}",
	"<jpsiijf>",
	"{clspcdlflspc}",
	"<cd>",
	"<jlppfc{siclpf}dsd<f>j<jpsiijf>c{clspcdlflspc}sf<cd>>",
	"<<j>i>",
	"<<<j>i>iidd>",
	"<lciipssldlldllpl>",
	"<ijif>",
	"{<ijif>dpjc}",
	"<jdsisfdfddpjpldjlcfjlipppflsf>",
	"<cfjilifscslpd>",
	"{jf}",
	"<cj>",
	"{df}",
	"{ipldssic<jdsisfdfddpjpldjlcfjlipppflsf>jjp<cfjilifscslpd>fsppl{jf}<cj>pf{df}cl}",
	"{j{ipldssic<jdsisfdfddpjpldjlcfjlipppflsf>jjp<cfjilifscslpd>fsppl{jf}<cj>pf{df}cl}cljs}",
	"{ddjffl}",
	"<iss{ddjffl}s>",
	"{fdl}",
	"{pc}",
	"{pljjcd}",
	"<lddfdfcs>",
	"{f<lddfdfcs>d}",
	"{jpljlsfcsccddlifsplclfispcfslffpcfsidijddpssliljlfdccdssislpd}",
	"<fcisjffdclcji>",
	"{fiddd}",
	"{jdslss<fcisjffdclcji>if{fiddd}}",
	"<l{jdslss<fcisjffdclcji>if{fiddd}}pff>",
	"{jdcjfplcj}",
	"<cds>",
	"<fp>",
	"{pcsfipfdiicis}",
	"{<fp>pl{pcsfipfdiicis}f}",
	"{ciddcsspsp}",
	"<p{ciddcsspsp}djcfp>",
	"<p<p{ciddcsspsp}djcfp>>",
	"<ps>",
	"<si<ps>>",
	"{ljllisjsfscidpipjd}",
	"<jfpjdpj{ljllisjsfscidpipjd}>",
	"<<jfpjdpj{ljllisjsfscidpipjd}>scdp{p}dli>",
	"{pldpdsflpfldfscsjlscspdfsjsdjj}",
	"{cliijipcp<l>}",
	"<lcljc>",
	"<idcpjjscsi>",
	"<fcfjdjfsdplillds>",
	"{lj<idcpjjscsi>ljl<fcfjdjfsdplillds>}",
	"{sdssp{lj<idcpjjscsi>ljl<fcfjdjfsdplillds>}sccsljpj}",
	"{si}",
	"<jdddljip>",
	"<sc{j}fsdf{j}s<jdddljip>cl>",
	"<is>",
	"<d{c}<sc{j}fsdf{j}s<jdddljip>cl><is>>",
	"<ddf>",
	"<pisfppiisippjf>",
	"{cicpcfppsfpfl<dc>pf}",
	"<jdcd>",
	"<ccpf>",
	"<jdijijl<ddf><pisfppiisippjf>{cicpcfppsfpfl<dc>pf}<jdcd>sc<ccpf>>",
	"{siicsdsf}",
	"<c{siicsdsf}dlissfsp>",
	"{jdpdcsisdciil}",
	"{iipjlfcfcidipsfssl}",
	"<pfliifppffc{jdpdcsisdciil}sidip{iipjlfcfcidipsfssl}iscdp>",
	"<lplfic>",
	"<cdd>",
	"<disddisisclpjsp>",
	"{sff}",
	"<jsdfcjscffpcsfjidcpjscssc>",
	"{pldfsdipidplsf}",
	"{iissjdcsl}",
	"{pcfisccdcjcfcdficljiij}",
	"{sifip<j>jffdc{pcfisccdcjcfcdficljiij}}",
	"{pjsffjdi}",
	"{lfjlciijfji}",
	"{jpcsjlcisscsdl}",
	"<dcssljiccd>",
	"{pi{pjsffjdi}{jj}{lfjlciijfji}{jpcsjlcisscsdl}clc<dcssljiccd>s}",
	"{dicpippscfisldpi}",
	"<cjfdijcjjild>",
	"<dff{dicpippscfisldpi}fipfli<cjfdijcjjild>cipi>",
	"{fillpdp}",
	"<j{fillpdp}lffsljjl>",
	"{clicpd}",
	"<sllicddcfljpspc>",
	"{fjf}",
	"<dldjsidcpsijf>",
	"{{clicpd}c<sllicddcfljpspc>pp{fjf}<dldjsidcpsijf>ipcclppsc}",
	"{ispidd}",
	"{lpffjlcll}",
	"{ld}",
	"<fs>",
	"<djljlilf>",
	"{fcpcics}",
	"{lp}",
	"<i{ld}j<fs><djljlilf>{fcpcics}ldi{lp}>",
	"<lf>",
	"<sdscic>",
	"{pi}",
	"<llpcpifiiiij>",
	"<jscfppcdisfdplp>",
	"<ipld>",
	"<sllp{pi}s<llpcpifiiiij>lj<jscfppcdisfdplp>l<s>slsjsljf{i}<ipld>ljif>",
	"<<sllp{pi}s<llpcpifiiiij>lj<jscfppcdisfdplp>l<s>slsjsljf{i}<ipld>ljif>ii>",
	"{ds}",
	"<lcpfpppflfjdlcfc>",
	"{ifij}",
	"{jpfccls<lcpfpppflfjdlcfc>dfc{ifij}}",
	"<{jpfccls<lcpfpppflfjdlcfc>dfc{ifij}}pidj>",
	"<ppilfplijlillic>",
	"<ipsfijdcdspf>",
	"{fclpi<ppilfplijlillic>iplplc<ipsfijdcdspf>}",
	"<isjlsiddfs>",
	"<sc>",
	"{sids}",
	"{jccdcd{si}<sc>lpsds{sids}}",
	"{cplccc{fclpi<ppilfplijlillic>iplplc<ipsfijdcdspf>}<isjlsiddfs>ficc{jccdcd{si}<sc>lpsds{sids}}ifcifs}",
	"<jcfpcs>",
	"{sjdfssiicffplplf}",
	"{ifis}",
	"<lp<jcfpcs>ljpfs{sjdfssiicffplplf}plfl{ifis}sp>",
	"{cdji}",
	"<d{cdji}sc<d>cicjl>",
	"<flcldplpp>",
	"{cds}",
	"<lficijp>",
	"{pfsspiipsjip}",
	"<jslfsfdpii>",
	"<sll<flcldplpp>{cds}jpd<lficijp>slc{pfsspiipsjip}<jslfsfdpii>>",
	"<pl>",
	"<fssisscjflflsdppdfidsljfjpdjfp>",
	"{<fssisscjflflsdppdfidsljfjpdjfp>lcfi}",
	"<sfjfjfcsfffscslddd>",
	"<jljjpcfjilsiiis>",
	"<fpjjlsscfp>",
	"<pcfd>",
	"<<jljjpcfjilsiiis>ss<fpjjlsscfp><pcfd>>",
	"{sjspcfj}",
	"<sssffj>",
	"<fcdlll<sssffj>ljsissl>",
	"<dcjplsjjl>",
	"<dcspsldcpj>",
	"{csjc}",
	"{jlj}",
	"<fpjfflpl>",
	"<psjlsispfpjijdclil>",
	"<jlsij>",
	"{lif}",
	"{jjscfpjpspcpllcpdlpl}",
	"{fsdpc}",
	"<{jlj}ic<fpjfflpl><psjlsispfpjijdclil>c<jlsij>{lif}l{jjscfpjpspcpllcpdlpl}{fsdpc}i>",
	"{<i>p{d}ic}",
	"<pcpicsijs>",
	"<ccc<pcpicsijs>p>",
	"<cslcdijdjp>",
	"<dji>",
	"{dsfffllli<is>i<cslcdijdjp>llplccpddcli<dji>df}",
	"<f<ccc<pcpicsijs>p>{dsfffllli<is>i<cslcdijdjp>llplccpddcli<dji>df}iicdil>",
	"{sldjcjcclppflljfssjcjfjlspspfc}",
	"<fsppfd>",
	"<cf>",
	"{ficiisddjlljp}",
	"<csclifllis>",
	"<{ficiisddjlljp}ldsp<csclifllis>il<fs>lj>",
	"<id<{ficiisddjlljp}ldsp<csclifllis>il<fs>lj>>",
	"<ciiisjscillplfdjjjcdppjpijl>",
	"<dls>",
	"{cll<ciiisjscillplfdjjjcdppjpijl>ldidfj<dls>}",
	"<pj>",
	"<dfiffpclc>",
	"<lci>",
	"<flsll>",
	"<fjdccjdpj>",
	"<icf>",
	"{<pj><dfiffpclc><lci>ld<flsll>c<fjdccjdpj>pi<icf>lp}",
	"<ljpiijsfpcddsipd>",
	"<sls<p>{jlj}>",
	"{sjdiilicd}",
	"{cpp}",
	"{plijcffc}",
	"{llp}",
	"<lcipcjlj>",
	"{ddss}",
	"{j{ddss}}",
	"{fddlcipjsfspfcdcldj{j{ddss}}slp}",
	"<ccfiip>",
	"{iisllpjj}",
	"<fssid>",
	"{<fssid>}",
	"{sp}",
	"{pdcjl}",
	"<ispi>",
	"<cccl{pdcjl}s<ispi>sii>",
	"<isc>",
	"<j<isc>lpd>",
	"{lccspppfjl}",
	"<si{lccspppfjl}sj>",
	"<sfcfs>",
	"<pdd>",
	"{sijsccpsf}",
	"<djpdjspjp>",
	"{sjc<sfcfs>flsjjlspj<pdd>jpsff{sijsccpsf}ccd<djpdjspjp>}",
	"<cissill>",
	"<jsjil>",
	"{pilfjc}",
	"<diicipidd>",
	"<ijjlj>",
	"{ifjippddjssc}",
	"{l<cissill>p<jsjil>ci{pilfjc}isf<diicipidd>d<ijjlj>cl{ifjippddjssc}}",
	"{llljpcdjjijlidcs}",
	"{dcs}",
	"{psjj}",
	"<lips>",
	"{li}",
	"{ppjd}",
	"<s{ppjd}f>",
	"{<s{ppjd}f>c}",
	"{dclp}",
	"{pp}",
	"<cll>",
	"<sisp>",
	"<lipsdiic>",
	"{sp{dclp}icf{pp}islldll<cll>ps<sisp>j<lipsdiic>sfscl{f}pddsl}",
	"{ssdp}",
	"<sf{ssdp}ps>",
	"{isicdjd}",
	"<<sf{ssdp}ps>f{isicdjd}>",
	"{cfc}",
	"{jcdcp}",
	"<dsjdfdpjliji>",
	"{f{jcdcp}<dsjdfdpjliji>}",
	"{fp}",
	"<ippjsll>",
	"<pd>",
	"{spcij}",
	"{lspl}",
	"<{fp}l<ippjsll>d<pd>sdd{spcij}dsdldld{lspl}jii>",
	"{pp<{fp}l<ippjsll>d<pd>sdd{spcij}dsdldld{lspl}jii>ssd}",
	"<fcipdd>",
	"{sfcjsl<fcipdd>}",
	"<sfiijlfdldcicplifllppplficljpijdfi>",
	"<sccflf>",
	"<ldp>",
	"<jflspic>",
	"{llipis}",
	"<djlpd>",
	"<pipp>",
	"<<ldp>scf<jflspic>jscpf{llipis}<djlpd>c<pipp>pjp>",
	"<pc<<ldp>scf<jflspic>jscpf{llipis}<djlpd>c<pipp>pjp>>",
	"{jjjpcslsiijlcpiciscp}",
	"{lijspjccis}",
	"{slfpsc}",
	"{cfcp}",
	"{dpcjplpsdiisidipdlpj}",
	"<l{dpcjplpsdiisidipdlpj}>",
	"{jscl<l{dpcjplpsdiisidipdlpj}>}",
	"<{l}d>",
	"{pficfpflclslsdsjjidi}",
	"{{f}ils{fp}psf{pficfpflclslsdsjjidi}scdfc{s}sdpl{c}jl}",
	"{cdlcjp}",
	"{fdijjsjl}",
	"{slpp}",
	"{{slpp}}",
	"{dp}",
	"{cf}",
	"{cifl{cf}}",
	"{ccflcjpipi}",
	"{jlf}",
	"<fdclf{ccflcjpipi}fllfl{jlf}sld>",
	"{jdsssjdjsccllfsf}",
	"<icd>",
	"<jcs>",
	"{lsfjj<s><icd><jcs>}",
	"<sdlllfijlcdppi>",
	"<lffpcpipsf>",
	"<llpddffpf>",
	"<pijddpidc>",
	"{sifljcs<sdlllfijlcdppi>l<lffpcpipsf>j<llpddffpf>ldjplcs<pijddpidc>sf}",
	"<jcldlj{sifljcs<sdlllfijlcdppi>l<lffpcpipsf>j<llpddffpf>ldjplcs<pijddpidc>sf}>",
	"<dj>",
	"{scpij}",
	"{lsfcj}",
	"<sfppspfpcpf>",
	"<jjsddf>",
	"{{lsfcj}lljs<sfppspfpcpf>sij<jjsddf>dd}",
	"{dcjfifi{{lsfcj}lljs<sfppspfpcpf>sij<jjsddf>dd}}",
	"<ij>",
	"{iidlsjssc}",
	"{cpj<ij>jjsfj{iidlsjssc}l}",
	"<fcjsl>",
	"{i<fcjsl>}",
	"<cfdcc>",
	"<sifcpcj>",
	"<csspilsf>",
	"{<csspilsf>cplldpis}",
	"{jlfpcd}",
	"{ldc}",
	"<ljdfcj>",
	"{{ldc}dlii<ljdfcj>jj{p}pjd<cll>}",
	"{cj}",
	"{dcf}",
	"{dfilcfipfdsic}",
	"{c{cj}{dcf}c{dfilcfipfdsic}i}",
	"<isidlljli<cfdcc><sifcpcj>ds<fl>lfd{<csspilsf>cplldpis}splij{jlfpcd}l{{ldc}dlii<ljdfcj>jj{p}pjd<cll>}ifil{c{cj}{dcf}c{dfilcfipfdsic}i}>",
	"{jfjs}",
	"<jcjipffdcissdscs{p}dc>",
	"<ls>",
	"<<ls>j>",
	"{sc}",
	"<sp>",
	"<jl<j>pj>",
	"<fcsidjljclsl>",
	"<fplf>",
	"<sddfdc>",
	"{clf}",
	"{<fcsidjljclsl>scfj<fplf>jdcc<sddfdc>dcs{clf}}",
	"{cld<sp>sjccli<jl<j>pj>iic{<fcsidjljclsl>scfj<fplf>jdcc<sddfdc>dcs{clf}}l}",
	"{clpsjssp}",
	"<fcscsljccs>",
	"<pi>",
	"<jcjlclssiifcf>",
	"<dijclssil>",
	"{dcdid}",
	"{sd}",
	"{jiljffdlcjfciijipliipcsplsclcdc}",
	"{liccsj}",
	"{jiilissfcsfdilppdccjlilplliplsfls}",
	"<spjf>",
	"<dcicjdpd>",
	"{{dcdid}f{sd}lfsldcs<p>jff{jiljffdlcjfciijipliipcsplsclcdc}jidf{liccsj}s{jiilissfcsfdilppdccjlilplliplsfls}pijfj<spjf><dcicjdpd>i<pd>sijj}",
	"<fp{{dcdid}f{sd}lfsldcs<p>jff{jiljffdlcjfciijipliipcsplsclcdc}jidf{liccsj}s{jiilissfcsfdilppdccjlilplliplsfls}pijfj<spjf><dcicjdpd>i<pd>sijj}pjjspjl>",
	"{ddfdjjpspf}",
	"{pjis}",
	"<cdsiflijdcdpcpisipcjsd>",
	"{l<cdsiflijdcdpcpisipcjsd>f}",
	"<sj>",
	"{ff}",
	"{djs{ff}j}",
	"{idipfcssf}",
	"<jcpspi>",
	"<lcclci>",
	"{ii}",
	"{fcji}",
	"<<jcpspi>pd<lcclci>{ii}cpscj{fcji}{s}p>",
	"<ilslji>",
	"{ip<ilslji>s}",
	"{lfif}",
	"{ifl}",
	"<fjj>",
	"<djjj>",
	"<pfdci>",
	"{iijsjddldffisp}",
	"{<p>{ld}{lfif}d{ifl}pff<fjj>sdd<djjj><pfdci>{iijsjddldffisp}p}",
	"<ljcsdsljc>",
	"<dsffslpp>",
	"{dfj<dsffslpp>dffp<f>fdl}",
	"{jfj}",
	"{slccd{ip<ilslji>s}pc{<p>{ld}{lfif}d{ifl}pff<fjj>sdd<djjj><pfdci>{iijsjddldffisp}p}spdfjdssf<ljcsdsljc>{dfj<dsffslpp>dffp<f>fdl}{jfj}}",
	"{pcjpjilf<d>dpsjp}",
	"<ljiildcdcsliijclfsdccjdjilpsssliffl>",
	"{jppscj}",
	"{scsf{jppscj}}",
	"{iii}",
	"{cpip}",
	"{cfisjfdsijilidciifjlidcddf}",
	"{llfpfdcjjfisj}",
	"{{iii}{cpip}lfpffdci<pd>f{lj}scpji{cfisjfdsijilidciifjlidcddf}{llfpfdcjjfisj}ds}",
	"{pjdsipiisspcsidlipj}",
	"<dldlic{pjdsipiisspcsidlipj}<i>>",
	"<pljic{scsf{jppscj}}lc{{iii}{cpip}lfpffdci<pd>f{lj}scpji{cfisjfdsijilidciifjlidcddf}{llfpfdcjjfisj}ds}jc<dldlic{pjdsipiisspcsidlipj}<i>>>",
	"{ilfpcdc}",
	"{slpidjffspfs}",
	"<lfcljs>",
	"{pisccsdc}",
	"<silcccij>",
	"<j{pisccsdc}lljp{s}<silcccij>f>",
	"<cfjdsdj>",
	"<dppdi<cfjdsdj>fl>",
	"<jsi<j{pisccsdc}lljp{s}<silcccij>f>lp<dppdi<cfjdsdj>fl>dfjfsj>",
	"{<j>dcl}",
	"{lf}",
	"<ic{lf}d{l}dsfidpp>",
	"<<ic{lf}d{l}dsfidpp>jdsljddspl>",
	"{iijp}",
	"<c{iijp}>",
	"<lsiddcpdpi>",
	"{idcji}",
	"<dssd>",
	"<lslilljdiicdc>",
	"<cs>",
	"<fsdjddifii>",
	"{dslifdlf}",
	"<icss>",
	"<fdpfi>",
	"<dlips>",
	"<cpclflciffjfdjisll>",
	"{ifcsijfdpsi<dlips><cpclflciffjfdjisll>cj}",
	"<dijcjffjfl>",
	"<fci>",
	"<jd{ifcsijfdpsi<dlips><cpclflciffjfdjisll>cj}lpjplsf<dijcjffjfl><fci>cjiddss>",
	"<ddd>",
	"{ffpcpddifpji<ddd>ipj}",
	"{djisiclj}",
	"<dfpfcpccsip>",
	"{jfds{djisiclj}pjic<dfpfcpccsip>fdifpll}",
	"{sf}",
	"<jppc>",
	"{sclsslpfppdlidpicsc}",
	"<sic>",
	"<cpll>",
	"{ddppdfcicdjjilcdccsppcsf}",
	"{icsp}",
	"{liijp}",
	"<jildid>",
	"<ccdpjpcdlss>",
	"{jci{liijp}jcfd<jildid><ccdpjpcdlss>icf}",
	"<dfjdjfj{jci{liijp}jcfd<jildid><ccdpjpcdlss>icf}>",
	"<lpcpcflsf>",
	"{dllijc}",
	"<{dllijc}dcljp>",
	"{djpfi}",
	"<{j}jildcip<{dllijc}dcljp>d{djpfi}iicdcipisplppscpfj>",
	"<ifjfdsdsff>",
	"<pipicf>",
	"{ffd<ifjfdsdsff>jfif<pipicf>}",
	"{dji}",
	"<ic{l}>",
	"{pcfdcpijfj}",
	"{lilipjcjcij}",
	"<ffjidl<s>{pcfdcpijfj}{lilipjcjcij}<pl>>",
	"<idssjjpf>",
	"{liipfd}",
	"{sdcsdipjfciclpjd}",
	"<{sdcsdipjfciclpjd}lj>",
	"<fsssij>",
	"{ipicfflpfcc}",
	"<d<fsssij>d{ipicfflpfcc}>",
	"{d<d<fsssij>d{ipicfflpfcc}>{l}ljlflppd}",
	"<djdsfjlflcsdpdssdpis>",
	"{ifc}",
	"{ilffldjjfpslliil}",
	"<cjdfc>",
	"<fdfslsldplcls>",
	"{dcdsicjldpljcs}",
	"{sjpspdd<fdfslsldplcls>fjicl{dcdsicjldpljcs}p}",
	"{illsfls}",
	"{sj}",
	"{iiflsf}",
	"<jdplfi>",
	"{dcljcdjpfccfipdils}",
	"<dfjfd>",
	"{fip{illsfls}lj{sj}icjc{iiflsf}s<jdplfi>{dcljcdjpfccfipdils}d<dfjfd>fjji}",
	"{cd{sjpspdd<fdfslsldplcls>fjicl{dcdsicjldpljcs}p}{fip{illsfls}lj{sj}icjc{iiflsf}s<jdplfi>{dcljcdjpfccfipdils}d<dfjfd>fjji}}",
	"{cc{j}fldipd}",
	"<dddlsp>",
	"{spjcfsll}",
	"<pfc>",
	"{sisjijicji}",
	"{jddpfdscssc<pfc><cf>l{sisjijicji}jcd}",
	"{jlsisipdsijpsdsjpjjsc}",
	"{fj}",
	"{jdjcdijps}",
	"{p{jlsisipdsijpsdsjpjjsc}jpc{fj}{jdjcdijps}}",
	"{fcc}",
	"{silcddsdpsffdpscdcliddfi}",
	"<jddpll{silcddsdpsffdpscdcliddfi}>",
	"{f{spjcfsll}{jddpfdscssc<pfc><cf>l{sisjijicji}jcd}fd{p{jlsisipdsijpsdsjpjjsc}jpc{fj}{jdjcdijps}}i{fcc}pjdicllicpdls<jddpll{silcddsdpsffdpscdcliddfi}><i>p}",
	"{pfij}",
	"<dfcc>",
	"{csp}",
	"<fcifdsfcfpffsdffpldi>",
	"<<dfcc>j<i>cffc{csp}cjlfi<fcifdsfcfpffsdffpldi>d>",
	"{flsfdff<<dfcc>j<i>cffc{csp}cjlfi<fcifdsfcfpffsdffpldi>d>p}",
	"{ilfl}",
	"<cpif>",
	"{dfs}",
	"{llccsjsdpdfcilis}",
	"<jddfppsfsdljdfipli>",
	"{jpl}",
	"<p<jddfppsfsdljdfipli>i{jpl}ildcpsisfpcl>",
	"{lfd}",
	"{pilipssdljics}",
	"{pcic}",
	"{{lfd}lsscsfil{pilipssdljics}<s>scfjliid{pcic}}",
	"{il}",
	"<ssdpfcfjppcsfpfpsif>",
	"<pildfsdpjcjcjdfddjsiipjilsjjppsjlfip>",
	"<jc>",
	"<lpsld>",
	"{fl{il}<ssdpfcfjppcsfpfpsif><pildfsdpjcjcjdfddjsiipjilsjjppsjlfip>dldp<jc>di<lpsld>dl}",
	"<j{fl{il}<ssdpfcfjppcsfpfpsif><pildfsdpjcjcjdfddjsiipjilsjjppsjlfip>dldp<jc>di<lpsld>dl}c>",
	"<ldldfsssfjlppdjdl>",
	"{cljfjlll}",
	"<jiis>",
	"{sipjf}",
	"<cdsspdlfd>",
	"{jcicjscdfcpjscl}",
	"<cicid{dcf}pifii<ldldfsssfjlppdjdl>dsisllc{cljfjlll}scd<jiis>s{sj}p{sipjf}c<cdsspdlfd>i{jcicjscdfcpjscl}fjl>",
	"{jdjjpldcssfd}",
	"{ifldjfcsfpicciccsdpps}",
	"<clpjldcpdiflsijcddfsclji>",
	"<pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji>",
	"<pi<pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji>>",
	"{ccdisspfjifpc}",
	"<{ccdisspfjifpc}ffjjj>",
	"{jc}",
	"{cjlicpcjdfdfpllclsjpfs}",
	"<ppcplspsicdpjldlsdi>",
	"{fpiddc}",
	"<fc{jc}i{cjlicpcjdfdfpllclsjpfs}c<ppcplspsicdpjldlsdi>{fpiddc}ccl>",
	"{cdcpjifssjlic<pi<pdcppfssfssssdlldlpiidsifdllpcfipclfdpdji>>f<{ccdisspfjifpc}ffjjj>df<fc{jc}i{cjlicpcjdfdfpllclsjpfs}c<ppcplspsicdpjldlsdi>{fpiddc}ccl>}",
	"{ffjci}",
	"<{ffjci}spiddisdpjjijf>",
	"{lp<{ffjci}spiddisdpjjijf>cplpjsj}",
	"<sji>",
	"<i<sji>iljlf>",
	"{lpi}",
	"{dspfjids}",
	"{flcdispifidd}",
	"{iicsccs{dspfjids}jcc{flcdispifidd}slsjjcijc}",
	"<dsfcjssls>",
	"{liccj}",
	"{cjds}",
	"{ildllji}",
	"{ciji}",
	"{l{ildllji}{ciji}}",
	"<piddljl>",
	"<lpcjpldddp>",
	"<lcci<lpcjpldddp>p>",
	"<idjsj>",
	"<pici>",
	"<pscjjjld>",
	"<dlllddi>",
	"{fp<pscjjjld>dcdjjsjp<dlllddi>}",
	"{sfcijlc}",
	"{ljpjcjffi}",
	"{silsisp}",
	"{lfjifjpfd{sfcijlc}{ljpjcjffi}fdpp{silsisp}f}",
	"{clfd<idjsj>jf{p}pcppd<pici>jjfi{fp<pscjjjld>dcdjjsjp<dlllddi>}{lfjifjpfd{sfcijlc}{ljpjcjffi}fdpp{silsisp}f}{c}cccddipfccipppfdd}",
	"<dfcjfsfplilsjjcfjijsdslcl>",
	"<<dfcjfsfplilsjjcfjijsdslcl>j>",
	"{dlclsfcfp}",
	"{cilji}",
	"{djdidfl}",
	"<iplpppddsfdsfispflsj>",
	"{{dlclsfcfp}{cilji}cccf{djdidfl}j<iplpppddsfdsfispflsj>psilp}",
	"<lsll>",
	"{fjss{fp}c}",
	"<lddjjj{fjss{fp}c}s>",
	"{sdcl}",
	"<ic{sdcl}s>",
	"{dpd}",
	"<ls<ic{sdcl}s>{l}{i}p{dpd}ic>",
	"<ljcficps>",
	"{lsi}",
	"{lslj}",
	"{dfpdjjicidcjj}",
	"<cifsf>",
	"<cdjsd{lslj}p{dfpdjjicidcjj}<cifsf>fdcc>",
	"{ljpddpf}",
	"{siifddlf}",
	"{ij{ljpddpf}{siifddlf}}",
	"{jsjcjlssdcsfslffiipsppdlddfi}",
	"{c{p}p{jsjcjlssdcsfslffiipsppdlddfi}lllpfiddfls}",
	"<ccspifcpfcccisfj>",
	"{sjffdi}",
	"<jsp>",
	"<ffddfipicicj>",
	"<ffsdpfjjs>",
	"{sssccsdcpsijd}",
	"{ccsdpi<ccspifcpfcccisfj>{sjffdi}pljd<jsp>ipljsd<ffddfipicicj>fclfi<ffsdpfjjs>psp{sssccsdcpsijd}pjji}",
	"<fjfppifdifds>",
	"<pl<fjfppifdifds>pdf>",
	"<slfd>",
	"{fijpfsdf}",
	"<jjlc>",
	"<<slfd>f{fijpfsdf}ppjscic<jjlc>l>",
	"{cdd<cdjsd{lslj}p{dfpdjjicidcjj}<cifsf>fdcc>pci{ij{ljpddpf}{siifddlf}}fsciffds{c{p}p{jsjcjlssdcsfslffiipsppdlddfi}lllpfiddfls}slffj{ccsdpi<ccspifcpfcccisfj>{sjffdi}pljd<jsp>ipljsd<ffddfipicicj>fclfi<ffsdpfjjs>psp{sssccsdcpsijd}pjji}fp<pl<fjfppifdifds>pdf><<slfd>f{fijpfsdf}ppjscic<jjlc>l>jsp}",
	"{flicdjc}",
	"<{flicdjc}j>",
	"{lld}",
	"<pcclcfcjplcfcs>",
	"<sccll<pcclcfcjplcfcs>>",
	"<jp>",
	"{psffddpdfjpilii}",
	"{dsdjljpjllplslifsi}",
	"<fiipsdfcjiii>",
	"{sfcf}",
	"<<s><f>pfj<jp>pj{psffddpdfjpilii}f{dsdjljpjllplslifsi}fll<fiipsdfcjiii>fpp{sfcf}ds>",
	"{isdcc<sccll<pcclcfcjplcfcs>>spcsp<jp>d<<s><f>pfj<jp>pj{psffddpdfjpilii}f{dsdjljpjllplslifsi}fll<fiipsdfcjiii>fpp{sfcf}ds>ji}",
	"{fllpsfdlpi}",
	"{sclc}",
	"{icds}",
	"{pfcdifpispi}",
	"<sspipfddflpjlfpc>",
	"<pcfssclffiii>",
	"{ifcjflj{sclc}dpls{icds}s{pfcdifpispi}<sspipfddflpjlfpc>f<pcfssclffiii>dflp}",
	"{jflfppijp}",
	"{{jflfppijp}pf}",
	"<iij>",
	"{dld}",
	"<cficpjjpci>",
	"{fllcs}",
	"{ijicj}",
	"{{fllcs}csfflfcipjpi{ijicj}lis}",
	"{{pc}}",
	"<csijfpc{{pc}}i>",
	"<dd>",
	"<ijppsflfs>",
	"{lfi}",
	"{jfsiiidpdiddsjcsj}",
	"<cdil>",
	"<fifdiidfddljdjllscs>",
	"{c<cdil>s<fifdiidfddljdjllscs>jfidcidj}",
	"<f{c<cdil>s<fifdiidfddljdjllscs>jfidcidj}if>",
	"<siilp>",
	"{fd}",
	"<ssf>",
	"{<ssf>}",
	"{fdjlfcssdcpjdfljpssfidfjfij}",
	"{flp}",
	"{pfsipfippp}",
	"{fjijllisl}",
	"{diidpcfdi}",
	"<dlppfl{diidpcfdi}>",
	"<dsjddclc>",
	"{jdij<dcd>ss<dsjddclc>jdc}",
	"<jlcjcc>",
	"<c<l>>",
	"<ljjf>",
	"{sdcipfpipjdid}",
	"<dfpi<ljjf>jpljpplcjps{sdcipfpipjdid}fij>",
	"<plpj>",
	"<jfjiil>",
	"{pslliiijlld}",
	"<jijc>",
	"{jcidplj}",
	"<jssf>",
	"<dsiipf>",
	"<jfidi{pslliiijlld}<jijc>f{jcidplj}{f}lifj<jssf>pjcp<dsiipf>ic>",
	"{pillfjjdipsiplcl}",
	"{fjlpdcfdflpilfpjidfcfjsjfp}",
	"{pcdpd}",
	"{idflpfsfp}",
	"<djjfjpflfcis>",
	"{fs<djjfjpflfcis>}",
	"{fpjld}",
	"{ffsdfilsdffjffjfi}",
	"<fpcfcsplscdjjfscsj>",
	"{j<dj>{ffsdfilsdffjffjfi}jfd<fpcfcsplscdjjfscsj>}",
	"{p{j<dj>{ffsdfilsdffjffjfi}jfd<fpcfcsplscdjjfscsj>}p}",
	"{jlfsjldsd}",
	"{jpfi}",
	"{dsfpiflfidpsscj}",
	"<{jpfi}jsplccicsi{dsfpiflfidpsscj}>",
	"<lffps>",
	"{djdpff}",
	"<ijcjfjpf>",
	"<ipllcd>",
	"<sjidpi>",
	"<ppjs>",
	"{jplilpd}",
	"{ldipfsdddcsic}",
	"<ddp>",
	"{ljsji}",
	"{{jplilpd}{ldipfsdddcsic}pl<ddp>ds{ljsji}}",
	"{ppjdpjf{{jplilpd}{ldipfsdddcsic}pl<ddp>ds{ljsji}}}",
	"{iff}",
	"{fcjli}",
	"<fidss>",
	"<jipdsldiclp>",
	"{dpd<fidss>pjcd<jipdsldiclp>is<sp>jllflcpdi<j>cdd}",
	"{pcjlilpscipcljipcipi}",
	"{dffiljiijlspcspjfdsjj}",
	"{iffccpcdd}",
	"<icijsdfdjfppfssdslippsdjjccld>",
	"<flscifl>",
	"{flcpsjpisssdd}",
	"{p{pcjlilpscipcljipcipi}ddj{dffiljiijlspcspjfdsjj}f{iffccpcdd}<icijsdfdjfppfssdslippsdjjccld>j<flscifl>il{flcpsjpisssdd}l}",
	"<sfldsj>",
	"<flsjsjc>",
	"{idcljljdfdpffdjppcspjfspiffifjf}",
	"<clld>",
	"<lj<sfldsj>ic<flsjsjc>slcpflsdjpjp{idcljljdfdpffdjppcspjfspiffifjf}<clld>>",
	"<fpj{fj}plscsdlldpppdfps>",
	"{clc}",
	"<ldsdspcfjs>",
	"{cfllddiciscdfcpsflsdsidc}",
	"<jjddfl>",
	"<pl<jjddfl>cpdj>",
	"{jds}",
	"{sijlldllscdssppplsid}",
	"<ljpffppjislipji>",
	"<{jds}p{sijlldllscdssppplsid}f<ljpffppjislipji>dc>",
	"{fsp}",
	"{ic{fsp}}",
	"<cjcpsdifill>",
	"{djff}",
	"{jjplljlji}",
	"<ldi{jjplljlji}{j}j{i}cpj<l>j>",
	"{sljpf}",
	"{iidi<d>sjdpcp{sljpf}}",
	"{ljd}",
	"{sfps}",
	"<{ljd}{sfps}pd>",
	"<fpdfdclcllpf>",
	"<i<fpdfdclcllpf>c>",
	"{ppjf}",
	"{dlli}",
	"<dpdj>",
	"<dff{ppjf}i{dlli}fjs<dpdj>i>",
	"<c<i<fpdfdclcllpf>c>d<dff{ppjf}i{dlli}fjs<dpdj>i>p>",
	"{sjp}",
	"{scjcsip}",
	"<fislfcp>",
	"<p{sjp}{scjcsip}pl<fislfcp>j>",
	"<fjisid>",
	"<dl>",
	"<lifldldi>",
	"{fdsdi}",
	"{isp}",
	"<dlcf{c}f<lifldldi>pjs{fdsdi}{lf}{isp}f>",
	"<<dlcf{c}f<lifldldi>pjs{fdsdi}{lf}{isp}f>>",
	"<sdjiill>",
	"<pjjjfspspfjiijdllijs>",
	"{pdjdjc<pjjjfspspfjiijdllijs>ci}",
	"{cidp}",
	"<ffflpdpdid{cidp}i>",
	"{<ffflpdpdid{cidp}i>}",
	"{jjsspd}",
	"<cfp>",
	"<flffj<cfp>l<l>p>",
	"{pjljl}",
	"{ipsslfp}",
	"<jdjsidpfspiipccliccjp>",
	"{jlip<jdjsidpfspiipccliccjp>}",
	"{ccj}",
	"<lccjlddpl>",
	"<pjcf<lccjlddpl>jifccil>",
	"<ddc>",
	"{lfils}",
	"{cif}",
	"<dcdsjdfijsfiillfcldsls>",
	"{ccccil}",
	"<jjflilcpliciscjscjjcspicjpdjc>",
	"{sfljddpdfdi}",
	"<ipllpdcpddjpjdpc>",
	"<sjpslcfdlpjl>",
	"<cdjj>",
	"<cisl>",
	"<lsddfpjjjjpclfd<ipllpdcpddjpjdpc><sjpslcfdlpjl><cdjj>ccfpcpli<cisl>>",
	"{dlpfdp}",
	"{cjcfiscp}",
	"{s{cjcfiscp}j}",
	"{isisl}",
	"<cdlsifjfccslijisjjjiildcjc>",
	"{jcpslsijdppjifs}",
	"<fisijc>",
	"{dcd{jcpslsijdppjifs}s<fisijc>djdd}",
	"{jcidplpcjssifsdippdilifiiisiidjpdf}",
	"{dfllsjffpc}",
	"<dfljfpd<j>s>",
	"<ifjsdlisjdfl>",
	"<idifpdspfjdscjdcjpl>",
	"{idfpjldjfjislpsdpplllfccljlsiisdisddpcspf}",
	"<sfsj<idifpdspfjdscjdcjpl>{idfpjldjfjislpsdpplllfccljlsiisdisddpcspf}fpds>",
	"<fi<sfsj<idifpdspfjdscjdcjpl>{idfpjldjfjislpsdpplllfccljlsiisdisddpcspf}fpds>iicli>",
	"{fjpfiili}",
	"<idcicsslsfipjpspf>",
	"{lpclcscsjlcjfflf}",
	"<<idcicsslsfipjpspf>{lpclcscsjlcjfflf}>",
	"<fifcp>",
	"<jsfsflciilp>",
	"<sci>",
	"<cccfsj>",
	"<<cccfsj>i{fd}>",
	"{dfcsspp}",
	"{ljlcc}",
	"<djic>",
	"<ld>",
	"<licfp<djic>iiclpcs{i}<ld>>",
	"<sjcpsl{l}iil>",
	"{pdipiilscjcldlpcfscidddi}",
	"{jplidlspdcjllc}",
	"<dsisscdd>",
	"{pjisjlsjdj}",
	"<fcpjjllcldcsifcclssllifdpllcljfdfcfdpidfcscfslicpj>",
	"<jpcff{jplidlspdcjllc}p<dsisscdd>sss{pjisjlsjdj}silipplpscissji<fcpjjllcldcsifcclssllifdpllcljfdfcfdpidfcscfslicpj>ds>",
	"<sdifddd>",
	"<spdpspjifs>",
	"<fc<spdpspjifs>fsdp>",
	"<jpljs>",
	"{sjjpjlidlisjip}",
	"{cidil<jpljs>ddi{sjjpjlidlisjip}}",
	"{jfiffd}",
	"<dciffi>",
	"<dsdslillcc>",
	"<pciji{jfiffd}sdpdljc<dciffi><fl>jdf<dsdslillcc>sjpdpippc>",
	"{{cidil<jpljs>ddi{sjjpjlidlisjip}}lpldif<pciji{jfiffd}sdpdljc<dciffi><fl>jdf<dsdslillcc>sjpdpippc>s}",
	"<lfpsdsjddsidfl>",
	"<<lfpsdsjddsidfl>fssp>",
	"<ipdjsjppcfc>",
	"{jsdpds}",
	"<dcdsfdsifccjjldslcclccddlj>",
	"<fdcpdsdsp>",
	"{<dcdsfdsifccjjldslcclccddlj>c<fdcpdsdsp>}",
	"<jjpcdip>",
	"<sid<jjpcdip>>",
	"<jllijpdpjpsfcic>",
	"{ssfpfijflclficcic}",
	"{pfpddcispdlfpspsspslcfijpclcf}",
	"{idlljidd}",
	"{<jllijpdpjpsfcic>lldjl{ssfpfijflclficcic}cspfs{pfpddcispdlfpspsspslcfijpclcf}cpjflicfcp{idlljidd}fp}",
	"<<ic>pcdpdp>",
	"<fj>",
	"<lss>",
	"{j<fj>jpp<lss>spflcippsfjdi}",
	"<fssd>",
	"{psclfplcffccidjjldlf}",
	"{isdjfdppci}",
	"{jsfjjjppdpdjfldflclilcs}",
	"<plsscpsdp>",
	"{dcifiicjspisl}",
	"<ispl>",
	"<jscpppscddj>",
	"{lsssis}",
	"<discipf>",
	"{<jscpppscddj>{cj}i{lsssis}i<discipf>j{ds}j}",
	"<jilifsslcccs>",
	"<jidjcdf>",
	"{ddl}",
	"{ssfp{ddl}c{si}spi}",
	"{ifdspifpfficdljilicppssslpscdpdffpfp}",
	"{cfpcdij}",
	"{dsjcpjdsddsfsicps}",
	"{lijf}",
	"<{dsjcpjdsddsfsicps}dd{lijf}j>",
	"<sdisp<{dsjcpjdsddsfsicps}dd{lijf}j>s>",
	"{llcljjljippfspdfsljcsdp}",
	"<ll{llcljjljippfspdfsljcsdp}idfdsif>",
	"<clf>",
	"{fidl}",
	"{lccpjil}",
	"{cppljp}",
	"{dpif}",
	"<lil{dp}pldif{dpif}p>",
	"<pliif>",
	"<<d>idjpsldsl>",
	"<ss>",
	"{dpjj<ss>}",
	"<jdip>",
	"{ic}",
	"{ccp}",
	"{ppsi{ccp}}",
	"{fl}",
	"<plflfljjcdfi>",
	"{ilpi}",
	"<{fl}fj<plflfljjcdfi>lsssl{ilpi}icsip>",
	"<sjd<{fl}fj<plflfljjcdfi>lsssl{ilpi}icsip>pisjpi>",
	"<fd>",
	"{cs<j>cccijpssjfjl<fd>}",
	"<pf>",
	"{cjji}",
	"{ifd}",
	"<jjjpplfdss>",
	"<jffl>",
	"{ldspffsdilli}",
	"{pic}",
	"<c{ifd}disfllldspsll<jjjpplfdss>l<s>i<jffl>lfl{ldspffsdilli}ij{pic}p>",
	"{icpddjpcjjslf}",
	"{idlildpsc{icpddjpcjjslf}c}",
	"<dlj>",
	"<i{j}ip<dlj>>",
	"<jccficscl>",
	"<dffjljf>",
	"<ds>",
	"{cdfpppjcl}",
	"<lpfjp>",
	"{i<jccficscl><dffjljf>ls<ds>f{cdfpppjcl}ddd<lpfjp>ljdfcliccfpp}",
	"<piif<c{ifd}disfllldspsll<jjjpplfdss>l<s>i<jffl>lfl{ldspffsdilli}ij{pic}p>scl<l>ssjddj{idlildpsc{icpddjpcjjslf}c}fjf<i{j}ip<dlj>>spcp{i<jccficscl><dffjljf>ls<ds>f{cdfpppjcl}ddd<lpfjp>ljdfcliccfpp}cjfd>",
	"<lcjcflpsfsfpi>",
	"{jffjllpicpsfpdjpscljf}",
	"{sss}",
	"<ljc<lcjcflpsfsfpi>j{jffjllpicpsfpdjpscljf}ppsi{sss}fl>",
	"<idp>",
	"<iifdpppippljscddljjdcffjcsilccifpc>",
	"{<iifdpppippljscddljjdcffjcsilccifpc>}",
	"<ldsidsf>",
	"<cp<ldsidsf>jscjldpffjflld>",
	"<iddiiiscfld>",
	"{ijllc<iddiiiscfld>dl}",
	"{{<iifdpppippljscddljjdcffjcsilccifpc>}<cp<ldsidsf>jscjldpffjflld>f{ijllc<iddiiiscfld>dl}iljfflfllsccl}",
	"<jdspfj>",
	"{ljiilscdpl}",
	"{spllscpffjpflsdpcsfsssdjfpdfpsicffljdijjj}",
	"<fssicpp>",
	"{spfiffs}",
	"<jflcpjpfs>",
	"<psi<jdspfj>{ljiilscdpl}dc{spllscpffjpflsdpcsfsssdjfpdfpsicffljdijjj}li<fssicpp>{spfiffs}psd<jflcpjpfs>>",
	"{cl}",
	"<di>",
	"<fcssdspddifidijscidld>",
	"<{pp}ii<fcssdspddifidijscidld><cp>>",
	"{pjsffcs}",
	"{<{pp}ii<fcssdspddifidijscidld><cp>>j{pjsffcs}dc}",
	"<ppppffppiicclcd>",
	"<lccidclifsd>",
	"<ccplcljffcfspplsccs>",
	"{<ppppffppiicclcd><lccidclifsd>dslsld<cj>silicslifdcdisc<ccplcljffcfspplsccs>l}",
	"{ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl}",
	"<cjplcj>",
	"<{ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl}fllpfdlc{i}d<cjplcj>iis>",
	"{lplffdfsssiifd}",
	"{{lplffdfsssiifd}pjjfcp{d}fslj}",
	"<csd{<ppppffppiicclcd><lccidclifsd>dslsld<cj>silicslifdcdisc<ccplcljffcfspplsccs>l}ci<{ijfdlicficcpfcfsjfcdjsfdldjjsfispjdl}fllpfdlc{i}d<cjplcj>iis>lpl<c>icdpjjfsld{{lplffdfsssiifd}pjjfcp{d}fslj}>",
	"{ljijsi}",
	"{fldjpslcisfpdcssflfjfds}",
	"<pfipsdcscllpisdpjpdff>",
	"{dcppsfdlidssidpflcfscsscflsp}",
	"{dj}",
	"<djiis>",
	"{{dj}fijsfj{l}<jp><djiis>fp}",
	"<scldppfilp>",
	"{c<scldppfilp>dpii}",
	"{dplspl}",
	"<cccjsfslj>",
	"<dcscjcslfpsdfiisjsiiccdifdl>",
	"{di}",
	"{c<s><dcscjcslfpsdfiisjsiiccdifdl>pfjp{di}d}",
	"<d{c<s><dcscjcslfpsdfiisjsiiccdifdl>pfjp{di}d}>"
};
int G_agg_sizes[] = {
	sizeof(union  A1),
	sizeof(struct A2),
	sizeof(union  A3),
	sizeof(struct A4),
	sizeof(union  A5),
	sizeof(struct A6),
	sizeof(union  A7),
	sizeof(union  A8),
	sizeof(struct A9),
	sizeof(struct A10),
	sizeof(struct A11),
	sizeof(struct A12),
	sizeof(union  A13),
	sizeof(union  A14),
	sizeof(union  A15),
	sizeof(struct A16),
	sizeof(struct A17),
	sizeof(union  A18),
	sizeof(union  A19),
	sizeof(struct A20),
	sizeof(struct A21),
	sizeof(union  A22),
	sizeof(struct A23),
	sizeof(struct A24),
	sizeof(union  A25),
	sizeof(struct A26),
	sizeof(union  A27),
	sizeof(struct A28),
	sizeof(union  A29),
	sizeof(struct A30),
	sizeof(struct A31),
	sizeof(union  A32),
	sizeof(union  A33),
	sizeof(struct A34),
	sizeof(union  A35),
	sizeof(union  A36),
	sizeof(union  A37),
	sizeof(union  A38),
	sizeof(struct A39),
	sizeof(struct A40),
	sizeof(struct A41),
	sizeof(struct A42),
	sizeof(union  A43),
	sizeof(union  A44),
	sizeof(struct A45),
	sizeof(union  A46),
	sizeof(union  A47),
	sizeof(struct A48),
	sizeof(union  A49),
	sizeof(struct A50),
	sizeof(struct A51),
	sizeof(union  A52),
	sizeof(union  A53),
	sizeof(struct A54),
	sizeof(union  A55),
	sizeof(struct A56),
	sizeof(struct A57),
	sizeof(union  A58),
	sizeof(union  A59),
	sizeof(struct A60),
	sizeof(union  A61),
	sizeof(union  A62),
	sizeof(struct A63),
	sizeof(union  A64),
	sizeof(struct A65),
	sizeof(union  A66),
	sizeof(struct A67),
	sizeof(struct A68),
	sizeof(union  A69),
	sizeof(union  A70),
	sizeof(struct A71),
	sizeof(struct A72),
	sizeof(union  A73),
	sizeof(struct A74),
	sizeof(union  A75),
	sizeof(union  A76),
	sizeof(struct A77),
	sizeof(struct A78),
	sizeof(struct A79),
	sizeof(struct A80),
	sizeof(union  A81),
	sizeof(union  A82),
	sizeof(struct A83),
	sizeof(struct A84),
	sizeof(union  A85),
	sizeof(struct A86),
	sizeof(union  A87),
	sizeof(union  A88),
	sizeof(struct A89),
	sizeof(union  A90),
	sizeof(union  A91),
	sizeof(union  A92),
	sizeof(union  A93),
	sizeof(union  A94),
	sizeof(union  A95),
	sizeof(struct A96),
	sizeof(union  A97),
	sizeof(union  A98),
	sizeof(struct A99),
	sizeof(struct A100),
	sizeof(struct A101),
	sizeof(union  A102),
	sizeof(struct A103),
	sizeof(union  A104),
	sizeof(struct A105),
	sizeof(union  A106),
	sizeof(union  A107),
	sizeof(union  A108),
	sizeof(struct A109),
	sizeof(struct A110),
	sizeof(union  A111),
	sizeof(struct A112),
	sizeof(struct A113),
	sizeof(struct A114),
	sizeof(struct A115),
	sizeof(struct A116),
	sizeof(struct A117),
	sizeof(struct A118),
	sizeof(struct A119),
	sizeof(struct A120),
	sizeof(union  A121),
	sizeof(struct A122),
	sizeof(union  A123),
	sizeof(union  A124),
	sizeof(union  A125),
	sizeof(struct A126),
	sizeof(union  A127),
	sizeof(struct A128),
	sizeof(union  A129),
	sizeof(union  A130),
	sizeof(union  A131),
	sizeof(union  A132),
	sizeof(union  A133),
	sizeof(struct A134),
	sizeof(struct A135),
	sizeof(union  A136),
	sizeof(struct A137),
	sizeof(union  A138),
	sizeof(union  A139),
	sizeof(union  A140),
	sizeof(struct A141),
	sizeof(struct A142),
	sizeof(union  A143),
	sizeof(struct A144),
	sizeof(struct A145),
	sizeof(struct A146),
	sizeof(union  A147),
	sizeof(struct A148),
	sizeof(struct A149),
	sizeof(struct A150),
	sizeof(union  A151),
	sizeof(union  A152),
	sizeof(struct A153),
	sizeof(union  A154),
	sizeof(struct A155),
	sizeof(struct A156),
	sizeof(union  A157),
	sizeof(union  A158),
	sizeof(struct A159),
	sizeof(union  A160),
	sizeof(union  A161),
	sizeof(struct A162),
	sizeof(struct A163),
	sizeof(union  A164),
	sizeof(union  A165),
	sizeof(struct A166),
	sizeof(struct A167),
	sizeof(struct A168),
	sizeof(union  A169),
	sizeof(struct A170),
	sizeof(struct A171),
	sizeof(struct A172),
	sizeof(union  A173),
	sizeof(union  A174),
	sizeof(union  A175),
	sizeof(struct A176),
	sizeof(struct A177),
	sizeof(struct A178),
	sizeof(union  A179),
	sizeof(union  A180),
	sizeof(struct A181),
	sizeof(struct A182),
	sizeof(union  A183),
	sizeof(struct A184),
	sizeof(struct A185),
	sizeof(struct A186),
	sizeof(union  A187),
	sizeof(union  A188),
	sizeof(union  A189),
	sizeof(union  A190),
	sizeof(union  A191),
	sizeof(union  A192),
	sizeof(struct A193),
	sizeof(struct A194),
	sizeof(union  A195),
	sizeof(union  A196),
	sizeof(union  A197),
	sizeof(union  A198),
	sizeof(union  A199),
	sizeof(union  A200),
	sizeof(union  A201),
	sizeof(union  A202),
	sizeof(struct A203),
	sizeof(union  A204),
	sizeof(union  A205),
	sizeof(union  A206),
	sizeof(struct A207),
	sizeof(struct A208),
	sizeof(struct A209),
	sizeof(union  A210),
	sizeof(struct A211),
	sizeof(union  A212),
	sizeof(struct A213),
	sizeof(union  A214),
	sizeof(union  A215),
	sizeof(union  A216),
	sizeof(union  A217),
	sizeof(struct A218),
	sizeof(struct A219),
	sizeof(union  A220),
	sizeof(struct A221),
	sizeof(union  A222),
	sizeof(struct A223),
	sizeof(union  A224),
	sizeof(union  A225),
	sizeof(struct A226),
	sizeof(union  A227),
	sizeof(struct A228),
	sizeof(union  A229),
	sizeof(struct A230),
	sizeof(union  A231),
	sizeof(struct A232),
	sizeof(union  A233),
	sizeof(union  A234),
	sizeof(struct A235),
	sizeof(struct A236),
	sizeof(union  A237),
	sizeof(struct A238),
	sizeof(struct A239),
	sizeof(struct A240),
	sizeof(union  A241),
	sizeof(struct A242),
	sizeof(union  A243),
	sizeof(struct A244),
	sizeof(struct A245),
	sizeof(union  A246),
	sizeof(union  A247),
	sizeof(union  A248),
	sizeof(union  A249),
	sizeof(struct A250),
	sizeof(union  A251),
	sizeof(union  A252),
	sizeof(struct A253),
	sizeof(union  A254),
	sizeof(struct A255),
	sizeof(struct A256),
	sizeof(struct A257),
	sizeof(union  A258),
	sizeof(struct A259),
	sizeof(union  A260),
	sizeof(struct A261),
	sizeof(struct A262),
	sizeof(struct A263),
	sizeof(union  A264),
	sizeof(struct A265),
	sizeof(union  A266),
	sizeof(union  A267),
	sizeof(struct A268),
	sizeof(union  A269),
	sizeof(union  A270),
	sizeof(union  A271),
	sizeof(union  A272),
	sizeof(union  A273),
	sizeof(struct A274),
	sizeof(union  A275),
	sizeof(struct A276),
	sizeof(struct A277),
	sizeof(union  A278),
	sizeof(struct A279),
	sizeof(struct A280),
	sizeof(struct A281),
	sizeof(struct A282),
	sizeof(struct A283),
	sizeof(union  A284),
	sizeof(union  A285),
	sizeof(struct A286),
	sizeof(union  A287),
	sizeof(union  A288),
	sizeof(struct A289),
	sizeof(union  A290),
	sizeof(struct A291),
	sizeof(struct A292),
	sizeof(struct A293),
	sizeof(union  A294),
	sizeof(struct A295),
	sizeof(union  A296),
	sizeof(struct A297),
	sizeof(struct A298),
	sizeof(struct A299),
	sizeof(union  A300),
	sizeof(union  A301),
	sizeof(struct A302),
	sizeof(struct A303),
	sizeof(union  A304),
	sizeof(struct A305),
	sizeof(struct A306),
	sizeof(struct A307),
	sizeof(union  A308),
	sizeof(union  A309),
	sizeof(struct A310),
	sizeof(struct A311),
	sizeof(struct A312),
	sizeof(struct A313),
	sizeof(union  A314),
	sizeof(union  A315),
	sizeof(union  A316),
	sizeof(struct A317),
	sizeof(union  A318),
	sizeof(union  A319),
	sizeof(union  A320),
	sizeof(struct A321),
	sizeof(union  A322),
	sizeof(struct A323),
	sizeof(struct A324),
	sizeof(struct A325),
	sizeof(union  A326),
	sizeof(struct A327),
	sizeof(union  A328),
	sizeof(union  A329),
	sizeof(struct A330),
	sizeof(union  A331),
	sizeof(struct A332),
	sizeof(union  A333),
	sizeof(struct A334),
	sizeof(struct A335),
	sizeof(union  A336),
	sizeof(struct A337),
	sizeof(union  A338),
	sizeof(struct A339),
	sizeof(struct A340),
	sizeof(struct A341),
	sizeof(struct A342),
	sizeof(union  A343),
	sizeof(union  A344),
	sizeof(union  A345),
	sizeof(union  A346),
	sizeof(struct A347),
	sizeof(union  A348),
	sizeof(struct A349),
	sizeof(struct A350),
	sizeof(struct A351),
	sizeof(union  A352),
	sizeof(struct A353),
	sizeof(union  A354),
	sizeof(union  A355),
	sizeof(struct A356),
	sizeof(union  A357),
	sizeof(union  A358),
	sizeof(struct A359),
	sizeof(union  A360),
	sizeof(struct A361),
	sizeof(struct A362),
	sizeof(struct A363),
	sizeof(struct A364),
	sizeof(union  A365),
	sizeof(struct A366),
	sizeof(union  A367),
	sizeof(union  A368),
	sizeof(union  A369),
	sizeof(union  A370),
	sizeof(union  A371),
	sizeof(union  A372),
	sizeof(struct A373),
	sizeof(union  A374),
	sizeof(union  A375),
	sizeof(struct A376),
	sizeof(union  A377),
	sizeof(struct A378),
	sizeof(struct A379),
	sizeof(struct A380),
	sizeof(struct A381),
	sizeof(union  A382),
	sizeof(struct A383),
	sizeof(struct A384),
	sizeof(struct A385),
	sizeof(union  A386),
	sizeof(struct A387),
	sizeof(struct A388),
	sizeof(union  A389),
	sizeof(struct A390),
	sizeof(struct A391),
	sizeof(union  A392),
	sizeof(struct A393),
	sizeof(union  A394),
	sizeof(union  A395),
	sizeof(struct A396),
	sizeof(struct A397),
	sizeof(struct A398),
	sizeof(union  A399),
	sizeof(union  A400),
	sizeof(union  A401),
	sizeof(union  A402),
	sizeof(struct A403),
	sizeof(union  A404),
	sizeof(union  A405),
	sizeof(struct A406),
	sizeof(struct A407),
	sizeof(union  A408),
	sizeof(union  A409),
	sizeof(union  A410),
	sizeof(struct A411),
	sizeof(struct A412),
	sizeof(struct A413),
	sizeof(union  A414),
	sizeof(union  A415),
	sizeof(union  A416),
	sizeof(union  A417),
	sizeof(union  A418),
	sizeof(union  A419),
	sizeof(struct A420),
	sizeof(union  A421),
	sizeof(union  A422),
	sizeof(union  A423),
	sizeof(struct A424),
	sizeof(union  A425),
	sizeof(struct A426),
	sizeof(struct A427),
	sizeof(union  A428),
	sizeof(union  A429),
	sizeof(union  A430),
	sizeof(union  A431),
	sizeof(struct A432),
	sizeof(union  A433),
	sizeof(struct A434),
	sizeof(struct A435),
	sizeof(struct A436),
	sizeof(struct A437),
	sizeof(struct A438),
	sizeof(struct A439),
	sizeof(struct A440),
	sizeof(union  A441),
	sizeof(struct A442),
	sizeof(struct A443),
	sizeof(union  A444),
	sizeof(union  A445),
	sizeof(struct A446),
	sizeof(union  A447),
	sizeof(struct A448),
	sizeof(union  A449),
	sizeof(struct A450),
	sizeof(union  A451),
	sizeof(struct A452),
	sizeof(struct A453),
	sizeof(struct A454),
	sizeof(struct A455),
	sizeof(union  A456),
	sizeof(union  A457),
	sizeof(struct A458),
	sizeof(struct A459),
	sizeof(union  A460),
	sizeof(union  A461),
	sizeof(union  A462),
	sizeof(struct A463),
	sizeof(union  A464),
	sizeof(union  A465),
	sizeof(union  A466),
	sizeof(union  A467),
	sizeof(union  A468),
	sizeof(struct A469),
	sizeof(union  A470),
	sizeof(struct A471),
	sizeof(struct A472),
	sizeof(union  A473),
	sizeof(union  A474),
	sizeof(union  A475),
	sizeof(struct A476),
	sizeof(union  A477),
	sizeof(union  A478),
	sizeof(struct A479),
	sizeof(struct A480),
	sizeof(struct A481),
	sizeof(union  A482),
	sizeof(struct A483),
	sizeof(struct A484),
	sizeof(union  A485),
	sizeof(struct A486),
	sizeof(union  A487),
	sizeof(union  A488),
	sizeof(struct A489),
	sizeof(union  A490),
	sizeof(struct A491),
	sizeof(union  A492),
	sizeof(union  A493),
	sizeof(union  A494),
	sizeof(union  A495),
	sizeof(struct A496),
	sizeof(union  A497),
	sizeof(union  A498),
	sizeof(union  A499),
	sizeof(union  A500),
	sizeof(union  A501),
	sizeof(struct A502),
	sizeof(union  A503),
	sizeof(union  A504),
	sizeof(union  A505),
	sizeof(union  A506),
	sizeof(struct A507),
	sizeof(struct A508),
	sizeof(union  A509),
	sizeof(union  A510),
	sizeof(union  A511),
	sizeof(struct A512),
	sizeof(struct A513),
	sizeof(struct A514),
	sizeof(union  A515),
	sizeof(struct A516),
	sizeof(union  A517),
	sizeof(union  A518),
	sizeof(union  A519),
	sizeof(union  A520),
	sizeof(struct A521),
	sizeof(union  A522),
	sizeof(struct A523),
	sizeof(union  A524),
	sizeof(union  A525),
	sizeof(struct A526),
	sizeof(union  A527),
	sizeof(union  A528),
	sizeof(union  A529),
	sizeof(union  A530),
	sizeof(union  A531),
	sizeof(struct A532),
	sizeof(union  A533),
	sizeof(union  A534),
	sizeof(union  A535),
	sizeof(union  A536),
	sizeof(union  A537),
	sizeof(union  A538),
	sizeof(struct A539),
	sizeof(union  A540),
	sizeof(union  A541),
	sizeof(struct A542),
	sizeof(struct A543),
	sizeof(struct A544),
	sizeof(struct A545),
	sizeof(union  A546),
	sizeof(struct A547),
	sizeof(struct A548),
	sizeof(struct A549),
	sizeof(union  A550),
	sizeof(struct A551),
	sizeof(union  A552),
	sizeof(struct A553),
	sizeof(struct A554),
	sizeof(struct A555),
	sizeof(union  A556),
	sizeof(union  A557),
	sizeof(union  A558),
	sizeof(union  A559),
	sizeof(struct A560),
	sizeof(union  A561),
	sizeof(union  A562),
	sizeof(union  A563),
	sizeof(struct A564),
	sizeof(union  A565),
	sizeof(struct A566),
	sizeof(union  A567),
	sizeof(union  A568),
	sizeof(struct A569),
	sizeof(union  A570),
	sizeof(union  A571),
	sizeof(struct A572),
	sizeof(struct A573),
	sizeof(struct A574),
	sizeof(struct A575),
	sizeof(struct A576),
	sizeof(union  A577),
	sizeof(struct A578),
	sizeof(struct A579),
	sizeof(union  A580),
	sizeof(struct A581),
	sizeof(struct A582),
	sizeof(struct A583),
	sizeof(union  A584),
	sizeof(union  A585),
	sizeof(union  A586),
	sizeof(struct A587),
	sizeof(struct A588),
	sizeof(union  A589),
	sizeof(struct A590),
	sizeof(union  A591),
	sizeof(struct A592),
	sizeof(struct A593),
	sizeof(union  A594),
	sizeof(struct A595),
	sizeof(struct A596),
	sizeof(union  A597),
	sizeof(union  A598),
	sizeof(struct A599),
	sizeof(struct A600),
	sizeof(union  A601),
	sizeof(struct A602),
	sizeof(union  A603),
	sizeof(struct A604),
	sizeof(union  A605),
	sizeof(union  A606),
	sizeof(union  A607),
	sizeof(union  A608),
	sizeof(struct A609),
	sizeof(union  A610),
	sizeof(union  A611),
	sizeof(union  A612),
	sizeof(union  A613),
	sizeof(struct A614),
	sizeof(struct A615),
	sizeof(struct A616),
	sizeof(struct A617),
	sizeof(struct A618),
	sizeof(union  A619),
	sizeof(struct A620),
	sizeof(union  A621),
	sizeof(struct A622),
	sizeof(struct A623),
	sizeof(struct A624),
	sizeof(struct A625),
	sizeof(struct A626),
	sizeof(struct A627),
	sizeof(struct A628),
	sizeof(struct A629),
	sizeof(struct A630),
	sizeof(struct A631),
	sizeof(struct A632),
	sizeof(union  A633),
	sizeof(struct A634),
	sizeof(union  A635),
	sizeof(union  A636),
	sizeof(struct A637),
	sizeof(union  A638),
	sizeof(union  A639),
	sizeof(union  A640),
	sizeof(union  A641),
	sizeof(struct A642),
	sizeof(union  A643),
	sizeof(union  A644),
	sizeof(struct A645),
	sizeof(struct A646),
	sizeof(union  A647),
	sizeof(union  A648),
	sizeof(struct A649),
	sizeof(struct A650),
	sizeof(union  A651),
	sizeof(struct A652),
	sizeof(struct A653),
	sizeof(union  A654),
	sizeof(struct A655),
	sizeof(union  A656),
	sizeof(union  A657),
	sizeof(union  A658),
	sizeof(struct A659),
	sizeof(struct A660),
	sizeof(struct A661),
	sizeof(union  A662),
	sizeof(struct A663),
	sizeof(struct A664),
	sizeof(struct A665),
	sizeof(struct A666),
	sizeof(struct A667),
	sizeof(union  A668),
	sizeof(struct A669),
	sizeof(union  A670),
	sizeof(union  A671),
	sizeof(union  A672),
	sizeof(struct A673),
	sizeof(union  A674),
	sizeof(union  A675),
	sizeof(union  A676),
	sizeof(union  A677),
	sizeof(union  A678),
	sizeof(struct A679),
	sizeof(struct A680),
	sizeof(struct A681),
	sizeof(struct A682),
	sizeof(union  A683),
	sizeof(union  A684),
	sizeof(union  A685),
	sizeof(union  A686),
	sizeof(struct A687),
	sizeof(struct A688),
	sizeof(struct A689),
	sizeof(struct A690),
	sizeof(struct A691),
	sizeof(union  A692),
	sizeof(union  A693),
	sizeof(struct A694),
	sizeof(union  A695),
	sizeof(struct A696),
	sizeof(struct A697),
	sizeof(union  A698),
	sizeof(struct A699),
	sizeof(union  A700),
	sizeof(struct A701),
	sizeof(struct A702),
	sizeof(struct A703),
	sizeof(union  A704),
	sizeof(union  A705),
	sizeof(struct A706),
	sizeof(struct A707),
	sizeof(union  A708),
	sizeof(union  A709),
	sizeof(struct A710),
	sizeof(struct A711),
	sizeof(struct A712),
	sizeof(union  A713),
	sizeof(union  A714),
	sizeof(union  A715),
	sizeof(struct A716),
	sizeof(struct A717),
	sizeof(union  A718),
	sizeof(union  A719),
	sizeof(struct A720),
	sizeof(struct A721),
	sizeof(struct A722),
	sizeof(struct A723),
	sizeof(union  A724),
	sizeof(struct A725),
	sizeof(struct A726),
	sizeof(struct A727),
	sizeof(struct A728),
	sizeof(struct A729),
	sizeof(struct A730),
	sizeof(struct A731),
	sizeof(struct A732),
	sizeof(union  A733),
	sizeof(union  A734),
	sizeof(struct A735),
	sizeof(struct A736),
	sizeof(union  A737),
	sizeof(struct A738),
	sizeof(union  A739),
	sizeof(union  A740),
	sizeof(union  A741),
	sizeof(union  A742),
	sizeof(union  A743),
	sizeof(struct A744),
	sizeof(struct A745),
	sizeof(union  A746),
	sizeof(union  A747),
	sizeof(struct A748),
	sizeof(union  A749),
	sizeof(union  A750),
	sizeof(struct A751),
	sizeof(union  A752),
	sizeof(union  A753),
	sizeof(union  A754),
	sizeof(union  A755),
	sizeof(struct A756),
	sizeof(union  A757),
	sizeof(union  A758),
	sizeof(union  A759),
	sizeof(union  A760),
	sizeof(struct A761),
	sizeof(union  A762),
	sizeof(union  A763),
	sizeof(union  A764),
	sizeof(union  A765),
	sizeof(struct A766),
	sizeof(struct A767),
	sizeof(union  A768),
	sizeof(struct A769),
	sizeof(struct A770),
	sizeof(union  A771),
	sizeof(struct A772),
	sizeof(union  A773),
	sizeof(union  A774),
	sizeof(struct A775),
	sizeof(struct A776),
	sizeof(struct A777),
	sizeof(union  A778),
	sizeof(union  A779),
	sizeof(struct A780),
	sizeof(union  A781),
	sizeof(union  A782),
	sizeof(struct A783),
	sizeof(union  A784),
	sizeof(struct A785),
	sizeof(union  A786),
	sizeof(union  A787),
	sizeof(union  A788),
	sizeof(struct A789),
	sizeof(struct A790),
	sizeof(union  A791),
	sizeof(struct A792),
	sizeof(struct A793),
	sizeof(union  A794),
	sizeof(union  A795),
	sizeof(struct A796),
	sizeof(struct A797),
	sizeof(union  A798),
	sizeof(union  A799),
	sizeof(struct A800),
	sizeof(union  A801),
	sizeof(struct A802),
	sizeof(union  A803),
	sizeof(struct A804),
	sizeof(struct A805),
	sizeof(union  A806),
	sizeof(union  A807),
	sizeof(struct A808),
	sizeof(struct A809),
	sizeof(struct A810),
	sizeof(struct A811),
	sizeof(struct A812),
	sizeof(union  A813),
	sizeof(struct A814),
	sizeof(union  A815),
	sizeof(struct A816),
	sizeof(struct A817),
	sizeof(struct A818),
	sizeof(union  A819),
	sizeof(struct A820),
	sizeof(union  A821),
	sizeof(struct A822),
	sizeof(struct A823),
	sizeof(struct A824),
	sizeof(struct A825),
	sizeof(struct A826),
	sizeof(struct A827),
	sizeof(struct A828),
	sizeof(struct A829),
	sizeof(union  A830),
	sizeof(struct A831),
	sizeof(struct A832),
	sizeof(union  A833),
	sizeof(struct A834),
	sizeof(union  A835),
	sizeof(union  A836),
	sizeof(struct A837),
	sizeof(struct A838),
	sizeof(union  A839),
	sizeof(struct A840),
	sizeof(struct A841),
	sizeof(union  A842),
	sizeof(struct A843),
	sizeof(union  A844),
	sizeof(struct A845),
	sizeof(struct A846),
	sizeof(struct A847),
	sizeof(struct A848),
	sizeof(struct A849),
	sizeof(union  A850),
	sizeof(union  A851),
	sizeof(union  A852),
	sizeof(union  A853),
	sizeof(struct A854),
	sizeof(union  A855),
	sizeof(union  A856),
	sizeof(struct A857),
	sizeof(union  A858),
	sizeof(struct A859),
	sizeof(union  A860),
	sizeof(struct A861),
	sizeof(union  A862),
	sizeof(struct A863),
	sizeof(struct A864),
	sizeof(union  A865),
	sizeof(union  A866),
	sizeof(union  A867),
	sizeof(struct A868),
	sizeof(union  A869),
	sizeof(struct A870),
	sizeof(struct A871),
	sizeof(union  A872),
	sizeof(struct A873),
	sizeof(union  A874),
	sizeof(struct A875),
	sizeof(struct A876),
	sizeof(union  A877),
	sizeof(struct A878),
	sizeof(union  A879),
	sizeof(union  A880),
	sizeof(struct A881),
	sizeof(struct A882),
	sizeof(struct A883),
	sizeof(struct A884),
	sizeof(union  A885),
	sizeof(struct A886),
	sizeof(struct A887),
	sizeof(struct A888),
	sizeof(struct A889),
	sizeof(struct A890),
	sizeof(union  A891),
	sizeof(union  A892),
	sizeof(union  A893),
	sizeof(union  A894),
	sizeof(union  A895),
	sizeof(union  A896),
	sizeof(union  A897),
	sizeof(struct A898),
	sizeof(struct A899),
	sizeof(struct A900),
	sizeof(struct A901),
	sizeof(struct A902),
	sizeof(struct A903),
	sizeof(union  A904),
	sizeof(union  A905),
	sizeof(struct A906),
	sizeof(struct A907),
	sizeof(struct A908),
	sizeof(union  A909),
	sizeof(struct A910),
	sizeof(union  A911),
	sizeof(struct A912),
	sizeof(union  A913),
	sizeof(struct A914),
	sizeof(union  A915),
	sizeof(struct A916),
	sizeof(union  A917),
	sizeof(union  A918),
	sizeof(struct A919),
	sizeof(struct A920),
	sizeof(struct A921),
	sizeof(union  A922),
	sizeof(union  A923),
	sizeof(struct A924),
	sizeof(struct A925),
	sizeof(struct A926),
	sizeof(struct A927),
	sizeof(struct A928),
	sizeof(union  A929),
	sizeof(struct A930),
	sizeof(union  A931),
	sizeof(union  A932),
	sizeof(union  A933),
	sizeof(struct A934),
	sizeof(struct A935),
	sizeof(union  A936),
	sizeof(union  A937),
	sizeof(union  A938),
	sizeof(struct A939),
	sizeof(union  A940),
	sizeof(union  A941),
	sizeof(struct A942),
	sizeof(struct A943),
	sizeof(union  A944),
	sizeof(struct A945),
	sizeof(union  A946),
	sizeof(union  A947),
	sizeof(union  A948),
	sizeof(struct A949),
	sizeof(struct A950),
	sizeof(union  A951),
	sizeof(struct A952),
	sizeof(union  A953),
	sizeof(struct A954),
	sizeof(struct A955),
	sizeof(struct A956),
	sizeof(struct A957),
	sizeof(struct A958),
	sizeof(union  A959),
	sizeof(union  A960),
	sizeof(struct A961),
	sizeof(struct A962),
	sizeof(struct A963),
	sizeof(union  A964),
	sizeof(struct A965),
	sizeof(union  A966),
	sizeof(struct A967),
	sizeof(struct A968),
	sizeof(struct A969),
	sizeof(struct A970),
	sizeof(union  A971),
	sizeof(union  A972),
	sizeof(union  A973),
	sizeof(struct A974),
	sizeof(struct A975),
	sizeof(union  A976),
	sizeof(union  A977),
	sizeof(struct A978),
	sizeof(union  A979),
	sizeof(union  A980),
	sizeof(struct A981),
	sizeof(union  A982),
	sizeof(struct A983),
	sizeof(struct A984),
	sizeof(struct A985),
	sizeof(struct A986),
	sizeof(struct A987),
	sizeof(struct A988),
	sizeof(union  A989),
	sizeof(union  A990),
	sizeof(struct A991),
	sizeof(union  A992),
	sizeof(union  A993),
	sizeof(union  A994),
	sizeof(struct A995),
	sizeof(union  A996),
	sizeof(union  A997),
	sizeof(union  A998),
	sizeof(struct A999),
	sizeof(union  A1000),
	sizeof(struct A1001),
	sizeof(union  A1002),
	sizeof(union  A1003),
	sizeof(union  A1004),
	sizeof(struct A1005),
	sizeof(struct A1006),
	sizeof(struct A1007),
	sizeof(struct A1008),
	sizeof(union  A1009),
	sizeof(struct A1010),
	sizeof(struct A1011),
	sizeof(struct A1012),
	sizeof(union  A1013),
	sizeof(struct A1014),
	sizeof(struct A1015),
	sizeof(struct A1016),
	sizeof(struct A1017),
	sizeof(struct A1018),
	sizeof(union  A1019),
	sizeof(union  A1020),
	sizeof(struct A1021),
	sizeof(union  A1022),
	sizeof(union  A1023),
	sizeof(union  A1024),
	sizeof(union  A1025),
	sizeof(struct A1026),
	sizeof(struct A1027),
	sizeof(union  A1028),
	sizeof(struct A1029),
	sizeof(struct A1030),
	sizeof(struct A1031),
	sizeof(struct A1032),
	sizeof(struct A1033),
	sizeof(union  A1034),
	sizeof(union  A1035),
	sizeof(struct A1036),
	sizeof(struct A1037),
	sizeof(struct A1038),
	sizeof(struct A1039),
	sizeof(union  A1040),
	sizeof(union  A1041),
	sizeof(struct A1042),
	sizeof(struct A1043),
	sizeof(union  A1044),
	sizeof(union  A1045),
	sizeof(struct A1046),
	sizeof(union  A1047),
	sizeof(union  A1048),
	sizeof(union  A1049),
	sizeof(struct A1050),
	sizeof(union  A1051),
	sizeof(struct A1052),
	sizeof(union  A1053),
	sizeof(union  A1054),
	sizeof(struct A1055),
	sizeof(struct A1056),
	sizeof(union  A1057),
	sizeof(union  A1058),
	sizeof(struct A1059),
	sizeof(struct A1060),
	sizeof(union  A1061),
	sizeof(struct A1062),
	sizeof(struct A1063),
	sizeof(union  A1064),
	sizeof(struct A1065),
	sizeof(struct A1066),
	sizeof(struct A1067),
	sizeof(struct A1068),
	sizeof(union  A1069),
	sizeof(union  A1070),
	sizeof(union  A1071),
	sizeof(struct A1072),
	sizeof(struct A1073),
	sizeof(union  A1074),
	sizeof(union  A1075),
	sizeof(union  A1076),
	sizeof(struct A1077),
	sizeof(struct A1078),
	sizeof(union  A1079),
	sizeof(union  A1080),
	sizeof(union  A1081),
	sizeof(union  A1082),
	sizeof(union  A1083),
	sizeof(struct A1084),
	sizeof(struct A1085),
	sizeof(union  A1086),
	sizeof(union  A1087),
	sizeof(union  A1088),
	sizeof(union  A1089),
	sizeof(struct A1090),
	sizeof(struct A1091),
	sizeof(union  A1092),
	sizeof(struct A1093),
	sizeof(struct A1094),
	sizeof(union  A1095),
	sizeof(union  A1096),
	sizeof(struct A1097),
	sizeof(struct A1098),
	sizeof(union  A1099),
	sizeof(struct A1100),
	sizeof(struct A1101),
	sizeof(union  A1102),
	sizeof(union  A1103),
	sizeof(union  A1104),
	sizeof(struct A1105),
	sizeof(struct A1106),
	sizeof(union  A1107),
	sizeof(struct A1108),
	sizeof(union  A1109),
	sizeof(struct A1110),
	sizeof(union  A1111),
	sizeof(union  A1112),
	sizeof(union  A1113),
	sizeof(union  A1114),
	sizeof(union  A1115),
	sizeof(struct A1116),
	sizeof(struct A1117),
	sizeof(struct A1118),
	sizeof(struct A1119),
	sizeof(union  A1120),
	sizeof(struct A1121),
	sizeof(union  A1122),
	sizeof(struct A1123),
	sizeof(struct A1124),
	sizeof(struct A1125),
	sizeof(union  A1126),
	sizeof(union  A1127),
	sizeof(union  A1128),
	sizeof(struct A1129),
	sizeof(union  A1130),
	sizeof(union  A1131),
	sizeof(struct A1132),
	sizeof(union  A1133),
	sizeof(struct A1134),
	sizeof(union  A1135),
	sizeof(union  A1136),
	sizeof(union  A1137),
	sizeof(union  A1138),
	sizeof(union  A1139),
	sizeof(union  A1140),
	sizeof(struct A1141),
	sizeof(struct A1142),
	sizeof(union  A1143),
	sizeof(union  A1144),
	sizeof(union  A1145),
	sizeof(union  A1146),
	sizeof(struct A1147),
	sizeof(struct A1148),
	sizeof(union  A1149),
	sizeof(struct A1150),
	sizeof(union  A1151),
	sizeof(union  A1152),
	sizeof(union  A1153),
	sizeof(union  A1154),
	sizeof(union  A1155),
	sizeof(union  A1156),
	sizeof(struct A1157),
	sizeof(struct A1158),
	sizeof(struct A1159),
	sizeof(union  A1160),
	sizeof(union  A1161),
	sizeof(union  A1162),
	sizeof(struct A1163),
	sizeof(union  A1164),
	sizeof(union  A1165),
	sizeof(union  A1166),
	sizeof(struct A1167),
	sizeof(union  A1168),
	sizeof(union  A1169),
	sizeof(struct A1170),
	sizeof(union  A1171),
	sizeof(union  A1172),
	sizeof(union  A1173),
	sizeof(struct A1174),
	sizeof(struct A1175),
	sizeof(struct A1176),
	sizeof(struct A1177),
	sizeof(union  A1178),
	sizeof(union  A1179),
	sizeof(union  A1180),
	sizeof(struct A1181),
	sizeof(union  A1182),
	sizeof(struct A1183),
	sizeof(struct A1184),
	sizeof(struct A1185),
	sizeof(union  A1186),
	sizeof(struct A1187),
	sizeof(union  A1188),
	sizeof(union  A1189),
	sizeof(struct A1190),
	sizeof(union  A1191),
	sizeof(struct A1192),
	sizeof(union  A1193),
	sizeof(union  A1194),
	sizeof(struct A1195),
	sizeof(struct A1196),
	sizeof(struct A1197),
	sizeof(struct A1198),
	sizeof(struct A1199),
	sizeof(struct A1200),
	sizeof(union  A1201),
	sizeof(union  A1202),
	sizeof(struct A1203),
	sizeof(union  A1204),
	sizeof(union  A1205),
	sizeof(struct A1206),
	sizeof(struct A1207),
	sizeof(struct A1208),
	sizeof(struct A1209),
	sizeof(union  A1210),
	sizeof(union  A1211),
	sizeof(union  A1212),
	sizeof(union  A1213),
	sizeof(struct A1214),
	sizeof(union  A1215),
	sizeof(struct A1216),
	sizeof(struct A1217),
	sizeof(struct A1218),
	sizeof(struct A1219),
	sizeof(union  A1220),
	sizeof(struct A1221),
	sizeof(union  A1222),
	sizeof(union  A1223),
	sizeof(union  A1224),
	sizeof(struct A1225),
	sizeof(union  A1226),
	sizeof(struct A1227),
	sizeof(struct A1228),
	sizeof(union  A1229),
	sizeof(union  A1230),
	sizeof(struct A1231),
	sizeof(struct A1232),
	sizeof(union  A1233),
	sizeof(struct A1234),
	sizeof(struct A1235),
	sizeof(union  A1236),
	sizeof(union  A1237),
	sizeof(union  A1238),
	sizeof(union  A1239),
	sizeof(union  A1240),
	sizeof(struct A1241),
	sizeof(union  A1242),
	sizeof(struct A1243),
	sizeof(union  A1244),
	sizeof(union  A1245),
	sizeof(struct A1246),
	sizeof(struct A1247),
	sizeof(union  A1248),
	sizeof(union  A1249),
	sizeof(union  A1250),
	sizeof(struct A1251),
	sizeof(union  A1252),
	sizeof(union  A1253),
	sizeof(union  A1254),
	sizeof(struct A1255),
	sizeof(struct A1256),
	sizeof(union  A1257),
	sizeof(struct A1258),
	sizeof(struct A1259),
	sizeof(union  A1260),
	sizeof(struct A1261),
	sizeof(union  A1262),
	sizeof(union  A1263),
	sizeof(struct A1264),
	sizeof(union  A1265),
	sizeof(union  A1266),
	sizeof(union  A1267),
	sizeof(struct A1268),
	sizeof(struct A1269),
	sizeof(union  A1270),
	sizeof(union  A1271),
	sizeof(union  A1272),
	sizeof(struct A1273),
	sizeof(struct A1274),
	sizeof(union  A1275),
	sizeof(union  A1276),
	sizeof(struct A1277),
	sizeof(struct A1278),
	sizeof(union  A1279),
	sizeof(struct A1280),
	sizeof(struct A1281),
	sizeof(union  A1282),
	sizeof(struct A1283),
	sizeof(struct A1284),
	sizeof(union  A1285),
	sizeof(struct A1286),
	sizeof(union  A1287),
	sizeof(struct A1288),
	sizeof(struct A1289),
	sizeof(union  A1290),
	sizeof(union  A1291),
	sizeof(struct A1292),
	sizeof(struct A1293),
	sizeof(union  A1294)
};
funptr G_agg_touchdcstfuncs[] = {
	(funptr)&f_touchdcstA1,
	(funptr)&f_touchdcstA2,
	(funptr)&f_touchdcstA3,
	(funptr)&f_touchdcstA4,
	(funptr)&f_touchdcstA5,
	(funptr)&f_touchdcstA6,
	(funptr)&f_touchdcstA7,
	(funptr)&f_touchdcstA8,
	(funptr)&f_touchdcstA9,
	(funptr)&f_touchdcstA10,
	(funptr)&f_touchdcstA11,
	(funptr)&f_touchdcstA12,
	(funptr)&f_touchdcstA13,
	(funptr)&f_touchdcstA14,
	(funptr)&f_touchdcstA15,
	(funptr)&f_touchdcstA16,
	(funptr)&f_touchdcstA17,
	(funptr)&f_touchdcstA18,
	(funptr)&f_touchdcstA19,
	(funptr)&f_touchdcstA20,
	(funptr)&f_touchdcstA21,
	(funptr)&f_touchdcstA22,
	(funptr)&f_touchdcstA23,
	(funptr)&f_touchdcstA24,
	(funptr)&f_touchdcstA25,
	(funptr)&f_touchdcstA26,
	(funptr)&f_touchdcstA27,
	(funptr)&f_touchdcstA28,
	(funptr)&f_touchdcstA29,
	(funptr)&f_touchdcstA30,
	(funptr)&f_touchdcstA31,
	(funptr)&f_touchdcstA32,
	(funptr)&f_touchdcstA33,
	(funptr)&f_touchdcstA34,
	(funptr)&f_touchdcstA35,
	(funptr)&f_touchdcstA36,
	(funptr)&f_touchdcstA37,
	(funptr)&f_touchdcstA38,
	(funptr)&f_touchdcstA39,
	(funptr)&f_touchdcstA40,
	(funptr)&f_touchdcstA41,
	(funptr)&f_touchdcstA42,
	(funptr)&f_touchdcstA43,
	(funptr)&f_touchdcstA44,
	(funptr)&f_touchdcstA45,
	(funptr)&f_touchdcstA46,
	(funptr)&f_touchdcstA47,
	(funptr)&f_touchdcstA48,
	(funptr)&f_touchdcstA49,
	(funptr)&f_touchdcstA50,
	(funptr)&f_touchdcstA51,
	(funptr)&f_touchdcstA52,
	(funptr)&f_touchdcstA53,
	(funptr)&f_touchdcstA54,
	(funptr)&f_touchdcstA55,
	(funptr)&f_touchdcstA56,
	(funptr)&f_touchdcstA57,
	(funptr)&f_touchdcstA58,
	(funptr)&f_touchdcstA59,
	(funptr)&f_touchdcstA60,
	(funptr)&f_touchdcstA61,
	(funptr)&f_touchdcstA62,
	(funptr)&f_touchdcstA63,
	(funptr)&f_touchdcstA64,
	(funptr)&f_touchdcstA65,
	(funptr)&f_touchdcstA66,
	(funptr)&f_touchdcstA67,
	(funptr)&f_touchdcstA68,
	(funptr)&f_touchdcstA69,
	(funptr)&f_touchdcstA70,
	(funptr)&f_touchdcstA71,
	(funptr)&f_touchdcstA72,
	(funptr)&f_touchdcstA73,
	(funptr)&f_touchdcstA74,
	(funptr)&f_touchdcstA75,
	(funptr)&f_touchdcstA76,
	(funptr)&f_touchdcstA77,
	(funptr)&f_touchdcstA78,
	(funptr)&f_touchdcstA79,
	(funptr)&f_touchdcstA80,
	(funptr)&f_touchdcstA81,
	(funptr)&f_touchdcstA82,
	(funptr)&f_touchdcstA83,
	(funptr)&f_touchdcstA84,
	(funptr)&f_touchdcstA85,
	(funptr)&f_touchdcstA86,
	(funptr)&f_touchdcstA87,
	(funptr)&f_touchdcstA88,
	(funptr)&f_touchdcstA89,
	(funptr)&f_touchdcstA90,
	(funptr)&f_touchdcstA91,
	(funptr)&f_touchdcstA92,
	(funptr)&f_touchdcstA93,
	(funptr)&f_touchdcstA94,
	(funptr)&f_touchdcstA95,
	(funptr)&f_touchdcstA96,
	(funptr)&f_touchdcstA97,
	(funptr)&f_touchdcstA98,
	(funptr)&f_touchdcstA99,
	(funptr)&f_touchdcstA100,
	(funptr)&f_touchdcstA101,
	(funptr)&f_touchdcstA102,
	(funptr)&f_touchdcstA103,
	(funptr)&f_touchdcstA104,
	(funptr)&f_touchdcstA105,
	(funptr)&f_touchdcstA106,
	(funptr)&f_touchdcstA107,
	(funptr)&f_touchdcstA108,
	(funptr)&f_touchdcstA109,
	(funptr)&f_touchdcstA110,
	(funptr)&f_touchdcstA111,
	(funptr)&f_touchdcstA112,
	(funptr)&f_touchdcstA113,
	(funptr)&f_touchdcstA114,
	(funptr)&f_touchdcstA115,
	(funptr)&f_touchdcstA116,
	(funptr)&f_touchdcstA117,
	(funptr)&f_touchdcstA118,
	(funptr)&f_touchdcstA119,
	(funptr)&f_touchdcstA120,
	(funptr)&f_touchdcstA121,
	(funptr)&f_touchdcstA122,
	(funptr)&f_touchdcstA123,
	(funptr)&f_touchdcstA124,
	(funptr)&f_touchdcstA125,
	(funptr)&f_touchdcstA126,
	(funptr)&f_touchdcstA127,
	(funptr)&f_touchdcstA128,
	(funptr)&f_touchdcstA129,
	(funptr)&f_touchdcstA130,
	(funptr)&f_touchdcstA131,
	(funptr)&f_touchdcstA132,
	(funptr)&f_touchdcstA133,
	(funptr)&f_touchdcstA134,
	(funptr)&f_touchdcstA135,
	(funptr)&f_touchdcstA136,
	(funptr)&f_touchdcstA137,
	(funptr)&f_touchdcstA138,
	(funptr)&f_touchdcstA139,
	(funptr)&f_touchdcstA140,
	(funptr)&f_touchdcstA141,
	(funptr)&f_touchdcstA142,
	(funptr)&f_touchdcstA143,
	(funptr)&f_touchdcstA144,
	(funptr)&f_touchdcstA145,
	(funptr)&f_touchdcstA146,
	(funptr)&f_touchdcstA147,
	(funptr)&f_touchdcstA148,
	(funptr)&f_touchdcstA149,
	(funptr)&f_touchdcstA150,
	(funptr)&f_touchdcstA151,
	(funptr)&f_touchdcstA152,
	(funptr)&f_touchdcstA153,
	(funptr)&f_touchdcstA154,
	(funptr)&f_touchdcstA155,
	(funptr)&f_touchdcstA156,
	(funptr)&f_touchdcstA157,
	(funptr)&f_touchdcstA158,
	(funptr)&f_touchdcstA159,
	(funptr)&f_touchdcstA160,
	(funptr)&f_touchdcstA161,
	(funptr)&f_touchdcstA162,
	(funptr)&f_touchdcstA163,
	(funptr)&f_touchdcstA164,
	(funptr)&f_touchdcstA165,
	(funptr)&f_touchdcstA166,
	(funptr)&f_touchdcstA167,
	(funptr)&f_touchdcstA168,
	(funptr)&f_touchdcstA169,
	(funptr)&f_touchdcstA170,
	(funptr)&f_touchdcstA171,
	(funptr)&f_touchdcstA172,
	(funptr)&f_touchdcstA173,
	(funptr)&f_touchdcstA174,
	(funptr)&f_touchdcstA175,
	(funptr)&f_touchdcstA176,
	(funptr)&f_touchdcstA177,
	(funptr)&f_touchdcstA178,
	(funptr)&f_touchdcstA179,
	(funptr)&f_touchdcstA180,
	(funptr)&f_touchdcstA181,
	(funptr)&f_touchdcstA182,
	(funptr)&f_touchdcstA183,
	(funptr)&f_touchdcstA184,
	(funptr)&f_touchdcstA185,
	(funptr)&f_touchdcstA186,
	(funptr)&f_touchdcstA187,
	(funptr)&f_touchdcstA188,
	(funptr)&f_touchdcstA189,
	(funptr)&f_touchdcstA190,
	(funptr)&f_touchdcstA191,
	(funptr)&f_touchdcstA192,
	(funptr)&f_touchdcstA193,
	(funptr)&f_touchdcstA194,
	(funptr)&f_touchdcstA195,
	(funptr)&f_touchdcstA196,
	(funptr)&f_touchdcstA197,
	(funptr)&f_touchdcstA198,
	(funptr)&f_touchdcstA199,
	(funptr)&f_touchdcstA200,
	(funptr)&f_touchdcstA201,
	(funptr)&f_touchdcstA202,
	(funptr)&f_touchdcstA203,
	(funptr)&f_touchdcstA204,
	(funptr)&f_touchdcstA205,
	(funptr)&f_touchdcstA206,
	(funptr)&f_touchdcstA207,
	(funptr)&f_touchdcstA208,
	(funptr)&f_touchdcstA209,
	(funptr)&f_touchdcstA210,
	(funptr)&f_touchdcstA211,
	(funptr)&f_touchdcstA212,
	(funptr)&f_touchdcstA213,
	(funptr)&f_touchdcstA214,
	(funptr)&f_touchdcstA215,
	(funptr)&f_touchdcstA216,
	(funptr)&f_touchdcstA217,
	(funptr)&f_touchdcstA218,
	(funptr)&f_touchdcstA219,
	(funptr)&f_touchdcstA220,
	(funptr)&f_touchdcstA221,
	(funptr)&f_touchdcstA222,
	(funptr)&f_touchdcstA223,
	(funptr)&f_touchdcstA224,
	(funptr)&f_touchdcstA225,
	(funptr)&f_touchdcstA226,
	(funptr)&f_touchdcstA227,
	(funptr)&f_touchdcstA228,
	(funptr)&f_touchdcstA229,
	(funptr)&f_touchdcstA230,
	(funptr)&f_touchdcstA231,
	(funptr)&f_touchdcstA232,
	(funptr)&f_touchdcstA233,
	(funptr)&f_touchdcstA234,
	(funptr)&f_touchdcstA235,
	(funptr)&f_touchdcstA236,
	(funptr)&f_touchdcstA237,
	(funptr)&f_touchdcstA238,
	(funptr)&f_touchdcstA239,
	(funptr)&f_touchdcstA240,
	(funptr)&f_touchdcstA241,
	(funptr)&f_touchdcstA242,
	(funptr)&f_touchdcstA243,
	(funptr)&f_touchdcstA244,
	(funptr)&f_touchdcstA245,
	(funptr)&f_touchdcstA246,
	(funptr)&f_touchdcstA247,
	(funptr)&f_touchdcstA248,
	(funptr)&f_touchdcstA249,
	(funptr)&f_touchdcstA250,
	(funptr)&f_touchdcstA251,
	(funptr)&f_touchdcstA252,
	(funptr)&f_touchdcstA253,
	(funptr)&f_touchdcstA254,
	(funptr)&f_touchdcstA255,
	(funptr)&f_touchdcstA256,
	(funptr)&f_touchdcstA257,
	(funptr)&f_touchdcstA258,
	(funptr)&f_touchdcstA259,
	(funptr)&f_touchdcstA260,
	(funptr)&f_touchdcstA261,
	(funptr)&f_touchdcstA262,
	(funptr)&f_touchdcstA263,
	(funptr)&f_touchdcstA264,
	(funptr)&f_touchdcstA265,
	(funptr)&f_touchdcstA266,
	(funptr)&f_touchdcstA267,
	(funptr)&f_touchdcstA268,
	(funptr)&f_touchdcstA269,
	(funptr)&f_touchdcstA270,
	(funptr)&f_touchdcstA271,
	(funptr)&f_touchdcstA272,
	(funptr)&f_touchdcstA273,
	(funptr)&f_touchdcstA274,
	(funptr)&f_touchdcstA275,
	(funptr)&f_touchdcstA276,
	(funptr)&f_touchdcstA277,
	(funptr)&f_touchdcstA278,
	(funptr)&f_touchdcstA279,
	(funptr)&f_touchdcstA280,
	(funptr)&f_touchdcstA281,
	(funptr)&f_touchdcstA282,
	(funptr)&f_touchdcstA283,
	(funptr)&f_touchdcstA284,
	(funptr)&f_touchdcstA285,
	(funptr)&f_touchdcstA286,
	(funptr)&f_touchdcstA287,
	(funptr)&f_touchdcstA288,
	(funptr)&f_touchdcstA289,
	(funptr)&f_touchdcstA290,
	(funptr)&f_touchdcstA291,
	(funptr)&f_touchdcstA292,
	(funptr)&f_touchdcstA293,
	(funptr)&f_touchdcstA294,
	(funptr)&f_touchdcstA295,
	(funptr)&f_touchdcstA296,
	(funptr)&f_touchdcstA297,
	(funptr)&f_touchdcstA298,
	(funptr)&f_touchdcstA299,
	(funptr)&f_touchdcstA300,
	(funptr)&f_touchdcstA301,
	(funptr)&f_touchdcstA302,
	(funptr)&f_touchdcstA303,
	(funptr)&f_touchdcstA304,
	(funptr)&f_touchdcstA305,
	(funptr)&f_touchdcstA306,
	(funptr)&f_touchdcstA307,
	(funptr)&f_touchdcstA308,
	(funptr)&f_touchdcstA309,
	(funptr)&f_touchdcstA310,
	(funptr)&f_touchdcstA311,
	(funptr)&f_touchdcstA312,
	(funptr)&f_touchdcstA313,
	(funptr)&f_touchdcstA314,
	(funptr)&f_touchdcstA315,
	(funptr)&f_touchdcstA316,
	(funptr)&f_touchdcstA317,
	(funptr)&f_touchdcstA318,
	(funptr)&f_touchdcstA319,
	(funptr)&f_touchdcstA320,
	(funptr)&f_touchdcstA321,
	(funptr)&f_touchdcstA322,
	(funptr)&f_touchdcstA323,
	(funptr)&f_touchdcstA324,
	(funptr)&f_touchdcstA325,
	(funptr)&f_touchdcstA326,
	(funptr)&f_touchdcstA327,
	(funptr)&f_touchdcstA328,
	(funptr)&f_touchdcstA329,
	(funptr)&f_touchdcstA330,
	(funptr)&f_touchdcstA331,
	(funptr)&f_touchdcstA332,
	(funptr)&f_touchdcstA333,
	(funptr)&f_touchdcstA334,
	(funptr)&f_touchdcstA335,
	(funptr)&f_touchdcstA336,
	(funptr)&f_touchdcstA337,
	(funptr)&f_touchdcstA338,
	(funptr)&f_touchdcstA339,
	(funptr)&f_touchdcstA340,
	(funptr)&f_touchdcstA341,
	(funptr)&f_touchdcstA342,
	(funptr)&f_touchdcstA343,
	(funptr)&f_touchdcstA344,
	(funptr)&f_touchdcstA345,
	(funptr)&f_touchdcstA346,
	(funptr)&f_touchdcstA347,
	(funptr)&f_touchdcstA348,
	(funptr)&f_touchdcstA349,
	(funptr)&f_touchdcstA350,
	(funptr)&f_touchdcstA351,
	(funptr)&f_touchdcstA352,
	(funptr)&f_touchdcstA353,
	(funptr)&f_touchdcstA354,
	(funptr)&f_touchdcstA355,
	(funptr)&f_touchdcstA356,
	(funptr)&f_touchdcstA357,
	(funptr)&f_touchdcstA358,
	(funptr)&f_touchdcstA359,
	(funptr)&f_touchdcstA360,
	(funptr)&f_touchdcstA361,
	(funptr)&f_touchdcstA362,
	(funptr)&f_touchdcstA363,
	(funptr)&f_touchdcstA364,
	(funptr)&f_touchdcstA365,
	(funptr)&f_touchdcstA366,
	(funptr)&f_touchdcstA367,
	(funptr)&f_touchdcstA368,
	(funptr)&f_touchdcstA369,
	(funptr)&f_touchdcstA370,
	(funptr)&f_touchdcstA371,
	(funptr)&f_touchdcstA372,
	(funptr)&f_touchdcstA373,
	(funptr)&f_touchdcstA374,
	(funptr)&f_touchdcstA375,
	(funptr)&f_touchdcstA376,
	(funptr)&f_touchdcstA377,
	(funptr)&f_touchdcstA378,
	(funptr)&f_touchdcstA379,
	(funptr)&f_touchdcstA380,
	(funptr)&f_touchdcstA381,
	(funptr)&f_touchdcstA382,
	(funptr)&f_touchdcstA383,
	(funptr)&f_touchdcstA384,
	(funptr)&f_touchdcstA385,
	(funptr)&f_touchdcstA386,
	(funptr)&f_touchdcstA387,
	(funptr)&f_touchdcstA388,
	(funptr)&f_touchdcstA389,
	(funptr)&f_touchdcstA390,
	(funptr)&f_touchdcstA391,
	(funptr)&f_touchdcstA392,
	(funptr)&f_touchdcstA393,
	(funptr)&f_touchdcstA394,
	(funptr)&f_touchdcstA395,
	(funptr)&f_touchdcstA396,
	(funptr)&f_touchdcstA397,
	(funptr)&f_touchdcstA398,
	(funptr)&f_touchdcstA399,
	(funptr)&f_touchdcstA400,
	(funptr)&f_touchdcstA401,
	(funptr)&f_touchdcstA402,
	(funptr)&f_touchdcstA403,
	(funptr)&f_touchdcstA404,
	(funptr)&f_touchdcstA405,
	(funptr)&f_touchdcstA406,
	(funptr)&f_touchdcstA407,
	(funptr)&f_touchdcstA408,
	(funptr)&f_touchdcstA409,
	(funptr)&f_touchdcstA410,
	(funptr)&f_touchdcstA411,
	(funptr)&f_touchdcstA412,
	(funptr)&f_touchdcstA413,
	(funptr)&f_touchdcstA414,
	(funptr)&f_touchdcstA415,
	(funptr)&f_touchdcstA416,
	(funptr)&f_touchdcstA417,
	(funptr)&f_touchdcstA418,
	(funptr)&f_touchdcstA419,
	(funptr)&f_touchdcstA420,
	(funptr)&f_touchdcstA421,
	(funptr)&f_touchdcstA422,
	(funptr)&f_touchdcstA423,
	(funptr)&f_touchdcstA424,
	(funptr)&f_touchdcstA425,
	(funptr)&f_touchdcstA426,
	(funptr)&f_touchdcstA427,
	(funptr)&f_touchdcstA428,
	(funptr)&f_touchdcstA429,
	(funptr)&f_touchdcstA430,
	(funptr)&f_touchdcstA431,
	(funptr)&f_touchdcstA432,
	(funptr)&f_touchdcstA433,
	(funptr)&f_touchdcstA434,
	(funptr)&f_touchdcstA435,
	(funptr)&f_touchdcstA436,
	(funptr)&f_touchdcstA437,
	(funptr)&f_touchdcstA438,
	(funptr)&f_touchdcstA439,
	(funptr)&f_touchdcstA440,
	(funptr)&f_touchdcstA441,
	(funptr)&f_touchdcstA442,
	(funptr)&f_touchdcstA443,
	(funptr)&f_touchdcstA444,
	(funptr)&f_touchdcstA445,
	(funptr)&f_touchdcstA446,
	(funptr)&f_touchdcstA447,
	(funptr)&f_touchdcstA448,
	(funptr)&f_touchdcstA449,
	(funptr)&f_touchdcstA450,
	(funptr)&f_touchdcstA451,
	(funptr)&f_touchdcstA452,
	(funptr)&f_touchdcstA453,
	(funptr)&f_touchdcstA454,
	(funptr)&f_touchdcstA455,
	(funptr)&f_touchdcstA456,
	(funptr)&f_touchdcstA457,
	(funptr)&f_touchdcstA458,
	(funptr)&f_touchdcstA459,
	(funptr)&f_touchdcstA460,
	(funptr)&f_touchdcstA461,
	(funptr)&f_touchdcstA462,
	(funptr)&f_touchdcstA463,
	(funptr)&f_touchdcstA464,
	(funptr)&f_touchdcstA465,
	(funptr)&f_touchdcstA466,
	(funptr)&f_touchdcstA467,
	(funptr)&f_touchdcstA468,
	(funptr)&f_touchdcstA469,
	(funptr)&f_touchdcstA470,
	(funptr)&f_touchdcstA471,
	(funptr)&f_touchdcstA472,
	(funptr)&f_touchdcstA473,
	(funptr)&f_touchdcstA474,
	(funptr)&f_touchdcstA475,
	(funptr)&f_touchdcstA476,
	(funptr)&f_touchdcstA477,
	(funptr)&f_touchdcstA478,
	(funptr)&f_touchdcstA479,
	(funptr)&f_touchdcstA480,
	(funptr)&f_touchdcstA481,
	(funptr)&f_touchdcstA482,
	(funptr)&f_touchdcstA483,
	(funptr)&f_touchdcstA484,
	(funptr)&f_touchdcstA485,
	(funptr)&f_touchdcstA486,
	(funptr)&f_touchdcstA487,
	(funptr)&f_touchdcstA488,
	(funptr)&f_touchdcstA489,
	(funptr)&f_touchdcstA490,
	(funptr)&f_touchdcstA491,
	(funptr)&f_touchdcstA492,
	(funptr)&f_touchdcstA493,
	(funptr)&f_touchdcstA494,
	(funptr)&f_touchdcstA495,
	(funptr)&f_touchdcstA496,
	(funptr)&f_touchdcstA497,
	(funptr)&f_touchdcstA498,
	(funptr)&f_touchdcstA499,
	(funptr)&f_touchdcstA500,
	(funptr)&f_touchdcstA501,
	(funptr)&f_touchdcstA502,
	(funptr)&f_touchdcstA503,
	(funptr)&f_touchdcstA504,
	(funptr)&f_touchdcstA505,
	(funptr)&f_touchdcstA506,
	(funptr)&f_touchdcstA507,
	(funptr)&f_touchdcstA508,
	(funptr)&f_touchdcstA509,
	(funptr)&f_touchdcstA510,
	(funptr)&f_touchdcstA511,
	(funptr)&f_touchdcstA512,
	(funptr)&f_touchdcstA513,
	(funptr)&f_touchdcstA514,
	(funptr)&f_touchdcstA515,
	(funptr)&f_touchdcstA516,
	(funptr)&f_touchdcstA517,
	(funptr)&f_touchdcstA518,
	(funptr)&f_touchdcstA519,
	(funptr)&f_touchdcstA520,
	(funptr)&f_touchdcstA521,
	(funptr)&f_touchdcstA522,
	(funptr)&f_touchdcstA523,
	(funptr)&f_touchdcstA524,
	(funptr)&f_touchdcstA525,
	(funptr)&f_touchdcstA526,
	(funptr)&f_touchdcstA527,
	(funptr)&f_touchdcstA528,
	(funptr)&f_touchdcstA529,
	(funptr)&f_touchdcstA530,
	(funptr)&f_touchdcstA531,
	(funptr)&f_touchdcstA532,
	(funptr)&f_touchdcstA533,
	(funptr)&f_touchdcstA534,
	(funptr)&f_touchdcstA535,
	(funptr)&f_touchdcstA536,
	(funptr)&f_touchdcstA537,
	(funptr)&f_touchdcstA538,
	(funptr)&f_touchdcstA539,
	(funptr)&f_touchdcstA540,
	(funptr)&f_touchdcstA541,
	(funptr)&f_touchdcstA542,
	(funptr)&f_touchdcstA543,
	(funptr)&f_touchdcstA544,
	(funptr)&f_touchdcstA545,
	(funptr)&f_touchdcstA546,
	(funptr)&f_touchdcstA547,
	(funptr)&f_touchdcstA548,
	(funptr)&f_touchdcstA549,
	(funptr)&f_touchdcstA550,
	(funptr)&f_touchdcstA551,
	(funptr)&f_touchdcstA552,
	(funptr)&f_touchdcstA553,
	(funptr)&f_touchdcstA554,
	(funptr)&f_touchdcstA555,
	(funptr)&f_touchdcstA556,
	(funptr)&f_touchdcstA557,
	(funptr)&f_touchdcstA558,
	(funptr)&f_touchdcstA559,
	(funptr)&f_touchdcstA560,
	(funptr)&f_touchdcstA561,
	(funptr)&f_touchdcstA562,
	(funptr)&f_touchdcstA563,
	(funptr)&f_touchdcstA564,
	(funptr)&f_touchdcstA565,
	(funptr)&f_touchdcstA566,
	(funptr)&f_touchdcstA567,
	(funptr)&f_touchdcstA568,
	(funptr)&f_touchdcstA569,
	(funptr)&f_touchdcstA570,
	(funptr)&f_touchdcstA571,
	(funptr)&f_touchdcstA572,
	(funptr)&f_touchdcstA573,
	(funptr)&f_touchdcstA574,
	(funptr)&f_touchdcstA575,
	(funptr)&f_touchdcstA576,
	(funptr)&f_touchdcstA577,
	(funptr)&f_touchdcstA578,
	(funptr)&f_touchdcstA579,
	(funptr)&f_touchdcstA580,
	(funptr)&f_touchdcstA581,
	(funptr)&f_touchdcstA582,
	(funptr)&f_touchdcstA583,
	(funptr)&f_touchdcstA584,
	(funptr)&f_touchdcstA585,
	(funptr)&f_touchdcstA586,
	(funptr)&f_touchdcstA587,
	(funptr)&f_touchdcstA588,
	(funptr)&f_touchdcstA589,
	(funptr)&f_touchdcstA590,
	(funptr)&f_touchdcstA591,
	(funptr)&f_touchdcstA592,
	(funptr)&f_touchdcstA593,
	(funptr)&f_touchdcstA594,
	(funptr)&f_touchdcstA595,
	(funptr)&f_touchdcstA596,
	(funptr)&f_touchdcstA597,
	(funptr)&f_touchdcstA598,
	(funptr)&f_touchdcstA599,
	(funptr)&f_touchdcstA600,
	(funptr)&f_touchdcstA601,
	(funptr)&f_touchdcstA602,
	(funptr)&f_touchdcstA603,
	(funptr)&f_touchdcstA604,
	(funptr)&f_touchdcstA605,
	(funptr)&f_touchdcstA606,
	(funptr)&f_touchdcstA607,
	(funptr)&f_touchdcstA608,
	(funptr)&f_touchdcstA609,
	(funptr)&f_touchdcstA610,
	(funptr)&f_touchdcstA611,
	(funptr)&f_touchdcstA612,
	(funptr)&f_touchdcstA613,
	(funptr)&f_touchdcstA614,
	(funptr)&f_touchdcstA615,
	(funptr)&f_touchdcstA616,
	(funptr)&f_touchdcstA617,
	(funptr)&f_touchdcstA618,
	(funptr)&f_touchdcstA619,
	(funptr)&f_touchdcstA620,
	(funptr)&f_touchdcstA621,
	(funptr)&f_touchdcstA622,
	(funptr)&f_touchdcstA623,
	(funptr)&f_touchdcstA624,
	(funptr)&f_touchdcstA625,
	(funptr)&f_touchdcstA626,
	(funptr)&f_touchdcstA627,
	(funptr)&f_touchdcstA628,
	(funptr)&f_touchdcstA629,
	(funptr)&f_touchdcstA630,
	(funptr)&f_touchdcstA631,
	(funptr)&f_touchdcstA632,
	(funptr)&f_touchdcstA633,
	(funptr)&f_touchdcstA634,
	(funptr)&f_touchdcstA635,
	(funptr)&f_touchdcstA636,
	(funptr)&f_touchdcstA637,
	(funptr)&f_touchdcstA638,
	(funptr)&f_touchdcstA639,
	(funptr)&f_touchdcstA640,
	(funptr)&f_touchdcstA641,
	(funptr)&f_touchdcstA642,
	(funptr)&f_touchdcstA643,
	(funptr)&f_touchdcstA644,
	(funptr)&f_touchdcstA645,
	(funptr)&f_touchdcstA646,
	(funptr)&f_touchdcstA647,
	(funptr)&f_touchdcstA648,
	(funptr)&f_touchdcstA649,
	(funptr)&f_touchdcstA650,
	(funptr)&f_touchdcstA651,
	(funptr)&f_touchdcstA652,
	(funptr)&f_touchdcstA653,
	(funptr)&f_touchdcstA654,
	(funptr)&f_touchdcstA655,
	(funptr)&f_touchdcstA656,
	(funptr)&f_touchdcstA657,
	(funptr)&f_touchdcstA658,
	(funptr)&f_touchdcstA659,
	(funptr)&f_touchdcstA660,
	(funptr)&f_touchdcstA661,
	(funptr)&f_touchdcstA662,
	(funptr)&f_touchdcstA663,
	(funptr)&f_touchdcstA664,
	(funptr)&f_touchdcstA665,
	(funptr)&f_touchdcstA666,
	(funptr)&f_touchdcstA667,
	(funptr)&f_touchdcstA668,
	(funptr)&f_touchdcstA669,
	(funptr)&f_touchdcstA670,
	(funptr)&f_touchdcstA671,
	(funptr)&f_touchdcstA672,
	(funptr)&f_touchdcstA673,
	(funptr)&f_touchdcstA674,
	(funptr)&f_touchdcstA675,
	(funptr)&f_touchdcstA676,
	(funptr)&f_touchdcstA677,
	(funptr)&f_touchdcstA678,
	(funptr)&f_touchdcstA679,
	(funptr)&f_touchdcstA680,
	(funptr)&f_touchdcstA681,
	(funptr)&f_touchdcstA682,
	(funptr)&f_touchdcstA683,
	(funptr)&f_touchdcstA684,
	(funptr)&f_touchdcstA685,
	(funptr)&f_touchdcstA686,
	(funptr)&f_touchdcstA687,
	(funptr)&f_touchdcstA688,
	(funptr)&f_touchdcstA689,
	(funptr)&f_touchdcstA690,
	(funptr)&f_touchdcstA691,
	(funptr)&f_touchdcstA692,
	(funptr)&f_touchdcstA693,
	(funptr)&f_touchdcstA694,
	(funptr)&f_touchdcstA695,
	(funptr)&f_touchdcstA696,
	(funptr)&f_touchdcstA697,
	(funptr)&f_touchdcstA698,
	(funptr)&f_touchdcstA699,
	(funptr)&f_touchdcstA700,
	(funptr)&f_touchdcstA701,
	(funptr)&f_touchdcstA702,
	(funptr)&f_touchdcstA703,
	(funptr)&f_touchdcstA704,
	(funptr)&f_touchdcstA705,
	(funptr)&f_touchdcstA706,
	(funptr)&f_touchdcstA707,
	(funptr)&f_touchdcstA708,
	(funptr)&f_touchdcstA709,
	(funptr)&f_touchdcstA710,
	(funptr)&f_touchdcstA711,
	(funptr)&f_touchdcstA712,
	(funptr)&f_touchdcstA713,
	(funptr)&f_touchdcstA714,
	(funptr)&f_touchdcstA715,
	(funptr)&f_touchdcstA716,
	(funptr)&f_touchdcstA717,
	(funptr)&f_touchdcstA718,
	(funptr)&f_touchdcstA719,
	(funptr)&f_touchdcstA720,
	(funptr)&f_touchdcstA721,
	(funptr)&f_touchdcstA722,
	(funptr)&f_touchdcstA723,
	(funptr)&f_touchdcstA724,
	(funptr)&f_touchdcstA725,
	(funptr)&f_touchdcstA726,
	(funptr)&f_touchdcstA727,
	(funptr)&f_touchdcstA728,
	(funptr)&f_touchdcstA729,
	(funptr)&f_touchdcstA730,
	(funptr)&f_touchdcstA731,
	(funptr)&f_touchdcstA732,
	(funptr)&f_touchdcstA733,
	(funptr)&f_touchdcstA734,
	(funptr)&f_touchdcstA735,
	(funptr)&f_touchdcstA736,
	(funptr)&f_touchdcstA737,
	(funptr)&f_touchdcstA738,
	(funptr)&f_touchdcstA739,
	(funptr)&f_touchdcstA740,
	(funptr)&f_touchdcstA741,
	(funptr)&f_touchdcstA742,
	(funptr)&f_touchdcstA743,
	(funptr)&f_touchdcstA744,
	(funptr)&f_touchdcstA745,
	(funptr)&f_touchdcstA746,
	(funptr)&f_touchdcstA747,
	(funptr)&f_touchdcstA748,
	(funptr)&f_touchdcstA749,
	(funptr)&f_touchdcstA750,
	(funptr)&f_touchdcstA751,
	(funptr)&f_touchdcstA752,
	(funptr)&f_touchdcstA753,
	(funptr)&f_touchdcstA754,
	(funptr)&f_touchdcstA755,
	(funptr)&f_touchdcstA756,
	(funptr)&f_touchdcstA757,
	(funptr)&f_touchdcstA758,
	(funptr)&f_touchdcstA759,
	(funptr)&f_touchdcstA760,
	(funptr)&f_touchdcstA761,
	(funptr)&f_touchdcstA762,
	(funptr)&f_touchdcstA763,
	(funptr)&f_touchdcstA764,
	(funptr)&f_touchdcstA765,
	(funptr)&f_touchdcstA766,
	(funptr)&f_touchdcstA767,
	(funptr)&f_touchdcstA768,
	(funptr)&f_touchdcstA769,
	(funptr)&f_touchdcstA770,
	(funptr)&f_touchdcstA771,
	(funptr)&f_touchdcstA772,
	(funptr)&f_touchdcstA773,
	(funptr)&f_touchdcstA774,
	(funptr)&f_touchdcstA775,
	(funptr)&f_touchdcstA776,
	(funptr)&f_touchdcstA777,
	(funptr)&f_touchdcstA778,
	(funptr)&f_touchdcstA779,
	(funptr)&f_touchdcstA780,
	(funptr)&f_touchdcstA781,
	(funptr)&f_touchdcstA782,
	(funptr)&f_touchdcstA783,
	(funptr)&f_touchdcstA784,
	(funptr)&f_touchdcstA785,
	(funptr)&f_touchdcstA786,
	(funptr)&f_touchdcstA787,
	(funptr)&f_touchdcstA788,
	(funptr)&f_touchdcstA789,
	(funptr)&f_touchdcstA790,
	(funptr)&f_touchdcstA791,
	(funptr)&f_touchdcstA792,
	(funptr)&f_touchdcstA793,
	(funptr)&f_touchdcstA794,
	(funptr)&f_touchdcstA795,
	(funptr)&f_touchdcstA796,
	(funptr)&f_touchdcstA797,
	(funptr)&f_touchdcstA798,
	(funptr)&f_touchdcstA799,
	(funptr)&f_touchdcstA800,
	(funptr)&f_touchdcstA801,
	(funptr)&f_touchdcstA802,
	(funptr)&f_touchdcstA803,
	(funptr)&f_touchdcstA804,
	(funptr)&f_touchdcstA805,
	(funptr)&f_touchdcstA806,
	(funptr)&f_touchdcstA807,
	(funptr)&f_touchdcstA808,
	(funptr)&f_touchdcstA809,
	(funptr)&f_touchdcstA810,
	(funptr)&f_touchdcstA811,
	(funptr)&f_touchdcstA812,
	(funptr)&f_touchdcstA813,
	(funptr)&f_touchdcstA814,
	(funptr)&f_touchdcstA815,
	(funptr)&f_touchdcstA816,
	(funptr)&f_touchdcstA817,
	(funptr)&f_touchdcstA818,
	(funptr)&f_touchdcstA819,
	(funptr)&f_touchdcstA820,
	(funptr)&f_touchdcstA821,
	(funptr)&f_touchdcstA822,
	(funptr)&f_touchdcstA823,
	(funptr)&f_touchdcstA824,
	(funptr)&f_touchdcstA825,
	(funptr)&f_touchdcstA826,
	(funptr)&f_touchdcstA827,
	(funptr)&f_touchdcstA828,
	(funptr)&f_touchdcstA829,
	(funptr)&f_touchdcstA830,
	(funptr)&f_touchdcstA831,
	(funptr)&f_touchdcstA832,
	(funptr)&f_touchdcstA833,
	(funptr)&f_touchdcstA834,
	(funptr)&f_touchdcstA835,
	(funptr)&f_touchdcstA836,
	(funptr)&f_touchdcstA837,
	(funptr)&f_touchdcstA838,
	(funptr)&f_touchdcstA839,
	(funptr)&f_touchdcstA840,
	(funptr)&f_touchdcstA841,
	(funptr)&f_touchdcstA842,
	(funptr)&f_touchdcstA843,
	(funptr)&f_touchdcstA844,
	(funptr)&f_touchdcstA845,
	(funptr)&f_touchdcstA846,
	(funptr)&f_touchdcstA847,
	(funptr)&f_touchdcstA848,
	(funptr)&f_touchdcstA849,
	(funptr)&f_touchdcstA850,
	(funptr)&f_touchdcstA851,
	(funptr)&f_touchdcstA852,
	(funptr)&f_touchdcstA853,
	(funptr)&f_touchdcstA854,
	(funptr)&f_touchdcstA855,
	(funptr)&f_touchdcstA856,
	(funptr)&f_touchdcstA857,
	(funptr)&f_touchdcstA858,
	(funptr)&f_touchdcstA859,
	(funptr)&f_touchdcstA860,
	(funptr)&f_touchdcstA861,
	(funptr)&f_touchdcstA862,
	(funptr)&f_touchdcstA863,
	(funptr)&f_touchdcstA864,
	(funptr)&f_touchdcstA865,
	(funptr)&f_touchdcstA866,
	(funptr)&f_touchdcstA867,
	(funptr)&f_touchdcstA868,
	(funptr)&f_touchdcstA869,
	(funptr)&f_touchdcstA870,
	(funptr)&f_touchdcstA871,
	(funptr)&f_touchdcstA872,
	(funptr)&f_touchdcstA873,
	(funptr)&f_touchdcstA874,
	(funptr)&f_touchdcstA875,
	(funptr)&f_touchdcstA876,
	(funptr)&f_touchdcstA877,
	(funptr)&f_touchdcstA878,
	(funptr)&f_touchdcstA879,
	(funptr)&f_touchdcstA880,
	(funptr)&f_touchdcstA881,
	(funptr)&f_touchdcstA882,
	(funptr)&f_touchdcstA883,
	(funptr)&f_touchdcstA884,
	(funptr)&f_touchdcstA885,
	(funptr)&f_touchdcstA886,
	(funptr)&f_touchdcstA887,
	(funptr)&f_touchdcstA888,
	(funptr)&f_touchdcstA889,
	(funptr)&f_touchdcstA890,
	(funptr)&f_touchdcstA891,
	(funptr)&f_touchdcstA892,
	(funptr)&f_touchdcstA893,
	(funptr)&f_touchdcstA894,
	(funptr)&f_touchdcstA895,
	(funptr)&f_touchdcstA896,
	(funptr)&f_touchdcstA897,
	(funptr)&f_touchdcstA898,
	(funptr)&f_touchdcstA899,
	(funptr)&f_touchdcstA900,
	(funptr)&f_touchdcstA901,
	(funptr)&f_touchdcstA902,
	(funptr)&f_touchdcstA903,
	(funptr)&f_touchdcstA904,
	(funptr)&f_touchdcstA905,
	(funptr)&f_touchdcstA906,
	(funptr)&f_touchdcstA907,
	(funptr)&f_touchdcstA908,
	(funptr)&f_touchdcstA909,
	(funptr)&f_touchdcstA910,
	(funptr)&f_touchdcstA911,
	(funptr)&f_touchdcstA912,
	(funptr)&f_touchdcstA913,
	(funptr)&f_touchdcstA914,
	(funptr)&f_touchdcstA915,
	(funptr)&f_touchdcstA916,
	(funptr)&f_touchdcstA917,
	(funptr)&f_touchdcstA918,
	(funptr)&f_touchdcstA919,
	(funptr)&f_touchdcstA920,
	(funptr)&f_touchdcstA921,
	(funptr)&f_touchdcstA922,
	(funptr)&f_touchdcstA923,
	(funptr)&f_touchdcstA924,
	(funptr)&f_touchdcstA925,
	(funptr)&f_touchdcstA926,
	(funptr)&f_touchdcstA927,
	(funptr)&f_touchdcstA928,
	(funptr)&f_touchdcstA929,
	(funptr)&f_touchdcstA930,
	(funptr)&f_touchdcstA931,
	(funptr)&f_touchdcstA932,
	(funptr)&f_touchdcstA933,
	(funptr)&f_touchdcstA934,
	(funptr)&f_touchdcstA935,
	(funptr)&f_touchdcstA936,
	(funptr)&f_touchdcstA937,
	(funptr)&f_touchdcstA938,
	(funptr)&f_touchdcstA939,
	(funptr)&f_touchdcstA940,
	(funptr)&f_touchdcstA941,
	(funptr)&f_touchdcstA942,
	(funptr)&f_touchdcstA943,
	(funptr)&f_touchdcstA944,
	(funptr)&f_touchdcstA945,
	(funptr)&f_touchdcstA946,
	(funptr)&f_touchdcstA947,
	(funptr)&f_touchdcstA948,
	(funptr)&f_touchdcstA949,
	(funptr)&f_touchdcstA950,
	(funptr)&f_touchdcstA951,
	(funptr)&f_touchdcstA952,
	(funptr)&f_touchdcstA953,
	(funptr)&f_touchdcstA954,
	(funptr)&f_touchdcstA955,
	(funptr)&f_touchdcstA956,
	(funptr)&f_touchdcstA957,
	(funptr)&f_touchdcstA958,
	(funptr)&f_touchdcstA959,
	(funptr)&f_touchdcstA960,
	(funptr)&f_touchdcstA961,
	(funptr)&f_touchdcstA962,
	(funptr)&f_touchdcstA963,
	(funptr)&f_touchdcstA964,
	(funptr)&f_touchdcstA965,
	(funptr)&f_touchdcstA966,
	(funptr)&f_touchdcstA967,
	(funptr)&f_touchdcstA968,
	(funptr)&f_touchdcstA969,
	(funptr)&f_touchdcstA970,
	(funptr)&f_touchdcstA971,
	(funptr)&f_touchdcstA972,
	(funptr)&f_touchdcstA973,
	(funptr)&f_touchdcstA974,
	(funptr)&f_touchdcstA975,
	(funptr)&f_touchdcstA976,
	(funptr)&f_touchdcstA977,
	(funptr)&f_touchdcstA978,
	(funptr)&f_touchdcstA979,
	(funptr)&f_touchdcstA980,
	(funptr)&f_touchdcstA981,
	(funptr)&f_touchdcstA982,
	(funptr)&f_touchdcstA983,
	(funptr)&f_touchdcstA984,
	(funptr)&f_touchdcstA985,
	(funptr)&f_touchdcstA986,
	(funptr)&f_touchdcstA987,
	(funptr)&f_touchdcstA988,
	(funptr)&f_touchdcstA989,
	(funptr)&f_touchdcstA990,
	(funptr)&f_touchdcstA991,
	(funptr)&f_touchdcstA992,
	(funptr)&f_touchdcstA993,
	(funptr)&f_touchdcstA994,
	(funptr)&f_touchdcstA995,
	(funptr)&f_touchdcstA996,
	(funptr)&f_touchdcstA997,
	(funptr)&f_touchdcstA998,
	(funptr)&f_touchdcstA999,
	(funptr)&f_touchdcstA1000,
	(funptr)&f_touchdcstA1001,
	(funptr)&f_touchdcstA1002,
	(funptr)&f_touchdcstA1003,
	(funptr)&f_touchdcstA1004,
	(funptr)&f_touchdcstA1005,
	(funptr)&f_touchdcstA1006,
	(funptr)&f_touchdcstA1007,
	(funptr)&f_touchdcstA1008,
	(funptr)&f_touchdcstA1009,
	(funptr)&f_touchdcstA1010,
	(funptr)&f_touchdcstA1011,
	(funptr)&f_touchdcstA1012,
	(funptr)&f_touchdcstA1013,
	(funptr)&f_touchdcstA1014,
	(funptr)&f_touchdcstA1015,
	(funptr)&f_touchdcstA1016,
	(funptr)&f_touchdcstA1017,
	(funptr)&f_touchdcstA1018,
	(funptr)&f_touchdcstA1019,
	(funptr)&f_touchdcstA1020,
	(funptr)&f_touchdcstA1021,
	(funptr)&f_touchdcstA1022,
	(funptr)&f_touchdcstA1023,
	(funptr)&f_touchdcstA1024,
	(funptr)&f_touchdcstA1025,
	(funptr)&f_touchdcstA1026,
	(funptr)&f_touchdcstA1027,
	(funptr)&f_touchdcstA1028,
	(funptr)&f_touchdcstA1029,
	(funptr)&f_touchdcstA1030,
	(funptr)&f_touchdcstA1031,
	(funptr)&f_touchdcstA1032,
	(funptr)&f_touchdcstA1033,
	(funptr)&f_touchdcstA1034,
	(funptr)&f_touchdcstA1035,
	(funptr)&f_touchdcstA1036,
	(funptr)&f_touchdcstA1037,
	(funptr)&f_touchdcstA1038,
	(funptr)&f_touchdcstA1039,
	(funptr)&f_touchdcstA1040,
	(funptr)&f_touchdcstA1041,
	(funptr)&f_touchdcstA1042,
	(funptr)&f_touchdcstA1043,
	(funptr)&f_touchdcstA1044,
	(funptr)&f_touchdcstA1045,
	(funptr)&f_touchdcstA1046,
	(funptr)&f_touchdcstA1047,
	(funptr)&f_touchdcstA1048,
	(funptr)&f_touchdcstA1049,
	(funptr)&f_touchdcstA1050,
	(funptr)&f_touchdcstA1051,
	(funptr)&f_touchdcstA1052,
	(funptr)&f_touchdcstA1053,
	(funptr)&f_touchdcstA1054,
	(funptr)&f_touchdcstA1055,
	(funptr)&f_touchdcstA1056,
	(funptr)&f_touchdcstA1057,
	(funptr)&f_touchdcstA1058,
	(funptr)&f_touchdcstA1059,
	(funptr)&f_touchdcstA1060,
	(funptr)&f_touchdcstA1061,
	(funptr)&f_touchdcstA1062,
	(funptr)&f_touchdcstA1063,
	(funptr)&f_touchdcstA1064,
	(funptr)&f_touchdcstA1065,
	(funptr)&f_touchdcstA1066,
	(funptr)&f_touchdcstA1067,
	(funptr)&f_touchdcstA1068,
	(funptr)&f_touchdcstA1069,
	(funptr)&f_touchdcstA1070,
	(funptr)&f_touchdcstA1071,
	(funptr)&f_touchdcstA1072,
	(funptr)&f_touchdcstA1073,
	(funptr)&f_touchdcstA1074,
	(funptr)&f_touchdcstA1075,
	(funptr)&f_touchdcstA1076,
	(funptr)&f_touchdcstA1077,
	(funptr)&f_touchdcstA1078,
	(funptr)&f_touchdcstA1079,
	(funptr)&f_touchdcstA1080,
	(funptr)&f_touchdcstA1081,
	(funptr)&f_touchdcstA1082,
	(funptr)&f_touchdcstA1083,
	(funptr)&f_touchdcstA1084,
	(funptr)&f_touchdcstA1085,
	(funptr)&f_touchdcstA1086,
	(funptr)&f_touchdcstA1087,
	(funptr)&f_touchdcstA1088,
	(funptr)&f_touchdcstA1089,
	(funptr)&f_touchdcstA1090,
	(funptr)&f_touchdcstA1091,
	(funptr)&f_touchdcstA1092,
	(funptr)&f_touchdcstA1093,
	(funptr)&f_touchdcstA1094,
	(funptr)&f_touchdcstA1095,
	(funptr)&f_touchdcstA1096,
	(funptr)&f_touchdcstA1097,
	(funptr)&f_touchdcstA1098,
	(funptr)&f_touchdcstA1099,
	(funptr)&f_touchdcstA1100,
	(funptr)&f_touchdcstA1101,
	(funptr)&f_touchdcstA1102,
	(funptr)&f_touchdcstA1103,
	(funptr)&f_touchdcstA1104,
	(funptr)&f_touchdcstA1105,
	(funptr)&f_touchdcstA1106,
	(funptr)&f_touchdcstA1107,
	(funptr)&f_touchdcstA1108,
	(funptr)&f_touchdcstA1109,
	(funptr)&f_touchdcstA1110,
	(funptr)&f_touchdcstA1111,
	(funptr)&f_touchdcstA1112,
	(funptr)&f_touchdcstA1113,
	(funptr)&f_touchdcstA1114,
	(funptr)&f_touchdcstA1115,
	(funptr)&f_touchdcstA1116,
	(funptr)&f_touchdcstA1117,
	(funptr)&f_touchdcstA1118,
	(funptr)&f_touchdcstA1119,
	(funptr)&f_touchdcstA1120,
	(funptr)&f_touchdcstA1121,
	(funptr)&f_touchdcstA1122,
	(funptr)&f_touchdcstA1123,
	(funptr)&f_touchdcstA1124,
	(funptr)&f_touchdcstA1125,
	(funptr)&f_touchdcstA1126,
	(funptr)&f_touchdcstA1127,
	(funptr)&f_touchdcstA1128,
	(funptr)&f_touchdcstA1129,
	(funptr)&f_touchdcstA1130,
	(funptr)&f_touchdcstA1131,
	(funptr)&f_touchdcstA1132,
	(funptr)&f_touchdcstA1133,
	(funptr)&f_touchdcstA1134,
	(funptr)&f_touchdcstA1135,
	(funptr)&f_touchdcstA1136,
	(funptr)&f_touchdcstA1137,
	(funptr)&f_touchdcstA1138,
	(funptr)&f_touchdcstA1139,
	(funptr)&f_touchdcstA1140,
	(funptr)&f_touchdcstA1141,
	(funptr)&f_touchdcstA1142,
	(funptr)&f_touchdcstA1143,
	(funptr)&f_touchdcstA1144,
	(funptr)&f_touchdcstA1145,
	(funptr)&f_touchdcstA1146,
	(funptr)&f_touchdcstA1147,
	(funptr)&f_touchdcstA1148,
	(funptr)&f_touchdcstA1149,
	(funptr)&f_touchdcstA1150,
	(funptr)&f_touchdcstA1151,
	(funptr)&f_touchdcstA1152,
	(funptr)&f_touchdcstA1153,
	(funptr)&f_touchdcstA1154,
	(funptr)&f_touchdcstA1155,
	(funptr)&f_touchdcstA1156,
	(funptr)&f_touchdcstA1157,
	(funptr)&f_touchdcstA1158,
	(funptr)&f_touchdcstA1159,
	(funptr)&f_touchdcstA1160,
	(funptr)&f_touchdcstA1161,
	(funptr)&f_touchdcstA1162,
	(funptr)&f_touchdcstA1163,
	(funptr)&f_touchdcstA1164,
	(funptr)&f_touchdcstA1165,
	(funptr)&f_touchdcstA1166,
	(funptr)&f_touchdcstA1167,
	(funptr)&f_touchdcstA1168,
	(funptr)&f_touchdcstA1169,
	(funptr)&f_touchdcstA1170,
	(funptr)&f_touchdcstA1171,
	(funptr)&f_touchdcstA1172,
	(funptr)&f_touchdcstA1173,
	(funptr)&f_touchdcstA1174,
	(funptr)&f_touchdcstA1175,
	(funptr)&f_touchdcstA1176,
	(funptr)&f_touchdcstA1177,
	(funptr)&f_touchdcstA1178,
	(funptr)&f_touchdcstA1179,
	(funptr)&f_touchdcstA1180,
	(funptr)&f_touchdcstA1181,
	(funptr)&f_touchdcstA1182,
	(funptr)&f_touchdcstA1183,
	(funptr)&f_touchdcstA1184,
	(funptr)&f_touchdcstA1185,
	(funptr)&f_touchdcstA1186,
	(funptr)&f_touchdcstA1187,
	(funptr)&f_touchdcstA1188,
	(funptr)&f_touchdcstA1189,
	(funptr)&f_touchdcstA1190,
	(funptr)&f_touchdcstA1191,
	(funptr)&f_touchdcstA1192,
	(funptr)&f_touchdcstA1193,
	(funptr)&f_touchdcstA1194,
	(funptr)&f_touchdcstA1195,
	(funptr)&f_touchdcstA1196,
	(funptr)&f_touchdcstA1197,
	(funptr)&f_touchdcstA1198,
	(funptr)&f_touchdcstA1199,
	(funptr)&f_touchdcstA1200,
	(funptr)&f_touchdcstA1201,
	(funptr)&f_touchdcstA1202,
	(funptr)&f_touchdcstA1203,
	(funptr)&f_touchdcstA1204,
	(funptr)&f_touchdcstA1205,
	(funptr)&f_touchdcstA1206,
	(funptr)&f_touchdcstA1207,
	(funptr)&f_touchdcstA1208,
	(funptr)&f_touchdcstA1209,
	(funptr)&f_touchdcstA1210,
	(funptr)&f_touchdcstA1211,
	(funptr)&f_touchdcstA1212,
	(funptr)&f_touchdcstA1213,
	(funptr)&f_touchdcstA1214,
	(funptr)&f_touchdcstA1215,
	(funptr)&f_touchdcstA1216,
	(funptr)&f_touchdcstA1217,
	(funptr)&f_touchdcstA1218,
	(funptr)&f_touchdcstA1219,
	(funptr)&f_touchdcstA1220,
	(funptr)&f_touchdcstA1221,
	(funptr)&f_touchdcstA1222,
	(funptr)&f_touchdcstA1223,
	(funptr)&f_touchdcstA1224,
	(funptr)&f_touchdcstA1225,
	(funptr)&f_touchdcstA1226,
	(funptr)&f_touchdcstA1227,
	(funptr)&f_touchdcstA1228,
	(funptr)&f_touchdcstA1229,
	(funptr)&f_touchdcstA1230,
	(funptr)&f_touchdcstA1231,
	(funptr)&f_touchdcstA1232,
	(funptr)&f_touchdcstA1233,
	(funptr)&f_touchdcstA1234,
	(funptr)&f_touchdcstA1235,
	(funptr)&f_touchdcstA1236,
	(funptr)&f_touchdcstA1237,
	(funptr)&f_touchdcstA1238,
	(funptr)&f_touchdcstA1239,
	(funptr)&f_touchdcstA1240,
	(funptr)&f_touchdcstA1241,
	(funptr)&f_touchdcstA1242,
	(funptr)&f_touchdcstA1243,
	(funptr)&f_touchdcstA1244,
	(funptr)&f_touchdcstA1245,
	(funptr)&f_touchdcstA1246,
	(funptr)&f_touchdcstA1247,
	(funptr)&f_touchdcstA1248,
	(funptr)&f_touchdcstA1249,
	(funptr)&f_touchdcstA1250,
	(funptr)&f_touchdcstA1251,
	(funptr)&f_touchdcstA1252,
	(funptr)&f_touchdcstA1253,
	(funptr)&f_touchdcstA1254,
	(funptr)&f_touchdcstA1255,
	(funptr)&f_touchdcstA1256,
	(funptr)&f_touchdcstA1257,
	(funptr)&f_touchdcstA1258,
	(funptr)&f_touchdcstA1259,
	(funptr)&f_touchdcstA1260,
	(funptr)&f_touchdcstA1261,
	(funptr)&f_touchdcstA1262,
	(funptr)&f_touchdcstA1263,
	(funptr)&f_touchdcstA1264,
	(funptr)&f_touchdcstA1265,
	(funptr)&f_touchdcstA1266,
	(funptr)&f_touchdcstA1267,
	(funptr)&f_touchdcstA1268,
	(funptr)&f_touchdcstA1269,
	(funptr)&f_touchdcstA1270,
	(funptr)&f_touchdcstA1271,
	(funptr)&f_touchdcstA1272,
	(funptr)&f_touchdcstA1273,
	(funptr)&f_touchdcstA1274,
	(funptr)&f_touchdcstA1275,
	(funptr)&f_touchdcstA1276,
	(funptr)&f_touchdcstA1277,
	(funptr)&f_touchdcstA1278,
	(funptr)&f_touchdcstA1279,
	(funptr)&f_touchdcstA1280,
	(funptr)&f_touchdcstA1281,
	(funptr)&f_touchdcstA1282,
	(funptr)&f_touchdcstA1283,
	(funptr)&f_touchdcstA1284,
	(funptr)&f_touchdcstA1285,
	(funptr)&f_touchdcstA1286,
	(funptr)&f_touchdcstA1287,
	(funptr)&f_touchdcstA1288,
	(funptr)&f_touchdcstA1289,
	(funptr)&f_touchdcstA1290,
	(funptr)&f_touchdcstA1291,
	(funptr)&f_touchdcstA1292,
	(funptr)&f_touchdcstA1293,
	(funptr)&f_touchdcstA1294
};
funptr G_agg_cmpfuncs[] = {
	(funptr)&f_cmpA1,
	(funptr)&f_cmpA2,
	(funptr)&f_cmpA3,
	(funptr)&f_cmpA4,
	(funptr)&f_cmpA5,
	(funptr)&f_cmpA6,
	(funptr)&f_cmpA7,
	(funptr)&f_cmpA8,
	(funptr)&f_cmpA9,
	(funptr)&f_cmpA10,
	(funptr)&f_cmpA11,
	(funptr)&f_cmpA12,
	(funptr)&f_cmpA13,
	(funptr)&f_cmpA14,
	(funptr)&f_cmpA15,
	(funptr)&f_cmpA16,
	(funptr)&f_cmpA17,
	(funptr)&f_cmpA18,
	(funptr)&f_cmpA19,
	(funptr)&f_cmpA20,
	(funptr)&f_cmpA21,
	(funptr)&f_cmpA22,
	(funptr)&f_cmpA23,
	(funptr)&f_cmpA24,
	(funptr)&f_cmpA25,
	(funptr)&f_cmpA26,
	(funptr)&f_cmpA27,
	(funptr)&f_cmpA28,
	(funptr)&f_cmpA29,
	(funptr)&f_cmpA30,
	(funptr)&f_cmpA31,
	(funptr)&f_cmpA32,
	(funptr)&f_cmpA33,
	(funptr)&f_cmpA34,
	(funptr)&f_cmpA35,
	(funptr)&f_cmpA36,
	(funptr)&f_cmpA37,
	(funptr)&f_cmpA38,
	(funptr)&f_cmpA39,
	(funptr)&f_cmpA40,
	(funptr)&f_cmpA41,
	(funptr)&f_cmpA42,
	(funptr)&f_cmpA43,
	(funptr)&f_cmpA44,
	(funptr)&f_cmpA45,
	(funptr)&f_cmpA46,
	(funptr)&f_cmpA47,
	(funptr)&f_cmpA48,
	(funptr)&f_cmpA49,
	(funptr)&f_cmpA50,
	(funptr)&f_cmpA51,
	(funptr)&f_cmpA52,
	(funptr)&f_cmpA53,
	(funptr)&f_cmpA54,
	(funptr)&f_cmpA55,
	(funptr)&f_cmpA56,
	(funptr)&f_cmpA57,
	(funptr)&f_cmpA58,
	(funptr)&f_cmpA59,
	(funptr)&f_cmpA60,
	(funptr)&f_cmpA61,
	(funptr)&f_cmpA62,
	(funptr)&f_cmpA63,
	(funptr)&f_cmpA64,
	(funptr)&f_cmpA65,
	(funptr)&f_cmpA66,
	(funptr)&f_cmpA67,
	(funptr)&f_cmpA68,
	(funptr)&f_cmpA69,
	(funptr)&f_cmpA70,
	(funptr)&f_cmpA71,
	(funptr)&f_cmpA72,
	(funptr)&f_cmpA73,
	(funptr)&f_cmpA74,
	(funptr)&f_cmpA75,
	(funptr)&f_cmpA76,
	(funptr)&f_cmpA77,
	(funptr)&f_cmpA78,
	(funptr)&f_cmpA79,
	(funptr)&f_cmpA80,
	(funptr)&f_cmpA81,
	(funptr)&f_cmpA82,
	(funptr)&f_cmpA83,
	(funptr)&f_cmpA84,
	(funptr)&f_cmpA85,
	(funptr)&f_cmpA86,
	(funptr)&f_cmpA87,
	(funptr)&f_cmpA88,
	(funptr)&f_cmpA89,
	(funptr)&f_cmpA90,
	(funptr)&f_cmpA91,
	(funptr)&f_cmpA92,
	(funptr)&f_cmpA93,
	(funptr)&f_cmpA94,
	(funptr)&f_cmpA95,
	(funptr)&f_cmpA96,
	(funptr)&f_cmpA97,
	(funptr)&f_cmpA98,
	(funptr)&f_cmpA99,
	(funptr)&f_cmpA100,
	(funptr)&f_cmpA101,
	(funptr)&f_cmpA102,
	(funptr)&f_cmpA103,
	(funptr)&f_cmpA104,
	(funptr)&f_cmpA105,
	(funptr)&f_cmpA106,
	(funptr)&f_cmpA107,
	(funptr)&f_cmpA108,
	(funptr)&f_cmpA109,
	(funptr)&f_cmpA110,
	(funptr)&f_cmpA111,
	(funptr)&f_cmpA112,
	(funptr)&f_cmpA113,
	(funptr)&f_cmpA114,
	(funptr)&f_cmpA115,
	(funptr)&f_cmpA116,
	(funptr)&f_cmpA117,
	(funptr)&f_cmpA118,
	(funptr)&f_cmpA119,
	(funptr)&f_cmpA120,
	(funptr)&f_cmpA121,
	(funptr)&f_cmpA122,
	(funptr)&f_cmpA123,
	(funptr)&f_cmpA124,
	(funptr)&f_cmpA125,
	(funptr)&f_cmpA126,
	(funptr)&f_cmpA127,
	(funptr)&f_cmpA128,
	(funptr)&f_cmpA129,
	(funptr)&f_cmpA130,
	(funptr)&f_cmpA131,
	(funptr)&f_cmpA132,
	(funptr)&f_cmpA133,
	(funptr)&f_cmpA134,
	(funptr)&f_cmpA135,
	(funptr)&f_cmpA136,
	(funptr)&f_cmpA137,
	(funptr)&f_cmpA138,
	(funptr)&f_cmpA139,
	(funptr)&f_cmpA140,
	(funptr)&f_cmpA141,
	(funptr)&f_cmpA142,
	(funptr)&f_cmpA143,
	(funptr)&f_cmpA144,
	(funptr)&f_cmpA145,
	(funptr)&f_cmpA146,
	(funptr)&f_cmpA147,
	(funptr)&f_cmpA148,
	(funptr)&f_cmpA149,
	(funptr)&f_cmpA150,
	(funptr)&f_cmpA151,
	(funptr)&f_cmpA152,
	(funptr)&f_cmpA153,
	(funptr)&f_cmpA154,
	(funptr)&f_cmpA155,
	(funptr)&f_cmpA156,
	(funptr)&f_cmpA157,
	(funptr)&f_cmpA158,
	(funptr)&f_cmpA159,
	(funptr)&f_cmpA160,
	(funptr)&f_cmpA161,
	(funptr)&f_cmpA162,
	(funptr)&f_cmpA163,
	(funptr)&f_cmpA164,
	(funptr)&f_cmpA165,
	(funptr)&f_cmpA166,
	(funptr)&f_cmpA167,
	(funptr)&f_cmpA168,
	(funptr)&f_cmpA169,
	(funptr)&f_cmpA170,
	(funptr)&f_cmpA171,
	(funptr)&f_cmpA172,
	(funptr)&f_cmpA173,
	(funptr)&f_cmpA174,
	(funptr)&f_cmpA175,
	(funptr)&f_cmpA176,
	(funptr)&f_cmpA177,
	(funptr)&f_cmpA178,
	(funptr)&f_cmpA179,
	(funptr)&f_cmpA180,
	(funptr)&f_cmpA181,
	(funptr)&f_cmpA182,
	(funptr)&f_cmpA183,
	(funptr)&f_cmpA184,
	(funptr)&f_cmpA185,
	(funptr)&f_cmpA186,
	(funptr)&f_cmpA187,
	(funptr)&f_cmpA188,
	(funptr)&f_cmpA189,
	(funptr)&f_cmpA190,
	(funptr)&f_cmpA191,
	(funptr)&f_cmpA192,
	(funptr)&f_cmpA193,
	(funptr)&f_cmpA194,
	(funptr)&f_cmpA195,
	(funptr)&f_cmpA196,
	(funptr)&f_cmpA197,
	(funptr)&f_cmpA198,
	(funptr)&f_cmpA199,
	(funptr)&f_cmpA200,
	(funptr)&f_cmpA201,
	(funptr)&f_cmpA202,
	(funptr)&f_cmpA203,
	(funptr)&f_cmpA204,
	(funptr)&f_cmpA205,
	(funptr)&f_cmpA206,
	(funptr)&f_cmpA207,
	(funptr)&f_cmpA208,
	(funptr)&f_cmpA209,
	(funptr)&f_cmpA210,
	(funptr)&f_cmpA211,
	(funptr)&f_cmpA212,
	(funptr)&f_cmpA213,
	(funptr)&f_cmpA214,
	(funptr)&f_cmpA215,
	(funptr)&f_cmpA216,
	(funptr)&f_cmpA217,
	(funptr)&f_cmpA218,
	(funptr)&f_cmpA219,
	(funptr)&f_cmpA220,
	(funptr)&f_cmpA221,
	(funptr)&f_cmpA222,
	(funptr)&f_cmpA223,
	(funptr)&f_cmpA224,
	(funptr)&f_cmpA225,
	(funptr)&f_cmpA226,
	(funptr)&f_cmpA227,
	(funptr)&f_cmpA228,
	(funptr)&f_cmpA229,
	(funptr)&f_cmpA230,
	(funptr)&f_cmpA231,
	(funptr)&f_cmpA232,
	(funptr)&f_cmpA233,
	(funptr)&f_cmpA234,
	(funptr)&f_cmpA235,
	(funptr)&f_cmpA236,
	(funptr)&f_cmpA237,
	(funptr)&f_cmpA238,
	(funptr)&f_cmpA239,
	(funptr)&f_cmpA240,
	(funptr)&f_cmpA241,
	(funptr)&f_cmpA242,
	(funptr)&f_cmpA243,
	(funptr)&f_cmpA244,
	(funptr)&f_cmpA245,
	(funptr)&f_cmpA246,
	(funptr)&f_cmpA247,
	(funptr)&f_cmpA248,
	(funptr)&f_cmpA249,
	(funptr)&f_cmpA250,
	(funptr)&f_cmpA251,
	(funptr)&f_cmpA252,
	(funptr)&f_cmpA253,
	(funptr)&f_cmpA254,
	(funptr)&f_cmpA255,
	(funptr)&f_cmpA256,
	(funptr)&f_cmpA257,
	(funptr)&f_cmpA258,
	(funptr)&f_cmpA259,
	(funptr)&f_cmpA260,
	(funptr)&f_cmpA261,
	(funptr)&f_cmpA262,
	(funptr)&f_cmpA263,
	(funptr)&f_cmpA264,
	(funptr)&f_cmpA265,
	(funptr)&f_cmpA266,
	(funptr)&f_cmpA267,
	(funptr)&f_cmpA268,
	(funptr)&f_cmpA269,
	(funptr)&f_cmpA270,
	(funptr)&f_cmpA271,
	(funptr)&f_cmpA272,
	(funptr)&f_cmpA273,
	(funptr)&f_cmpA274,
	(funptr)&f_cmpA275,
	(funptr)&f_cmpA276,
	(funptr)&f_cmpA277,
	(funptr)&f_cmpA278,
	(funptr)&f_cmpA279,
	(funptr)&f_cmpA280,
	(funptr)&f_cmpA281,
	(funptr)&f_cmpA282,
	(funptr)&f_cmpA283,
	(funptr)&f_cmpA284,
	(funptr)&f_cmpA285,
	(funptr)&f_cmpA286,
	(funptr)&f_cmpA287,
	(funptr)&f_cmpA288,
	(funptr)&f_cmpA289,
	(funptr)&f_cmpA290,
	(funptr)&f_cmpA291,
	(funptr)&f_cmpA292,
	(funptr)&f_cmpA293,
	(funptr)&f_cmpA294,
	(funptr)&f_cmpA295,
	(funptr)&f_cmpA296,
	(funptr)&f_cmpA297,
	(funptr)&f_cmpA298,
	(funptr)&f_cmpA299,
	(funptr)&f_cmpA300,
	(funptr)&f_cmpA301,
	(funptr)&f_cmpA302,
	(funptr)&f_cmpA303,
	(funptr)&f_cmpA304,
	(funptr)&f_cmpA305,
	(funptr)&f_cmpA306,
	(funptr)&f_cmpA307,
	(funptr)&f_cmpA308,
	(funptr)&f_cmpA309,
	(funptr)&f_cmpA310,
	(funptr)&f_cmpA311,
	(funptr)&f_cmpA312,
	(funptr)&f_cmpA313,
	(funptr)&f_cmpA314,
	(funptr)&f_cmpA315,
	(funptr)&f_cmpA316,
	(funptr)&f_cmpA317,
	(funptr)&f_cmpA318,
	(funptr)&f_cmpA319,
	(funptr)&f_cmpA320,
	(funptr)&f_cmpA321,
	(funptr)&f_cmpA322,
	(funptr)&f_cmpA323,
	(funptr)&f_cmpA324,
	(funptr)&f_cmpA325,
	(funptr)&f_cmpA326,
	(funptr)&f_cmpA327,
	(funptr)&f_cmpA328,
	(funptr)&f_cmpA329,
	(funptr)&f_cmpA330,
	(funptr)&f_cmpA331,
	(funptr)&f_cmpA332,
	(funptr)&f_cmpA333,
	(funptr)&f_cmpA334,
	(funptr)&f_cmpA335,
	(funptr)&f_cmpA336,
	(funptr)&f_cmpA337,
	(funptr)&f_cmpA338,
	(funptr)&f_cmpA339,
	(funptr)&f_cmpA340,
	(funptr)&f_cmpA341,
	(funptr)&f_cmpA342,
	(funptr)&f_cmpA343,
	(funptr)&f_cmpA344,
	(funptr)&f_cmpA345,
	(funptr)&f_cmpA346,
	(funptr)&f_cmpA347,
	(funptr)&f_cmpA348,
	(funptr)&f_cmpA349,
	(funptr)&f_cmpA350,
	(funptr)&f_cmpA351,
	(funptr)&f_cmpA352,
	(funptr)&f_cmpA353,
	(funptr)&f_cmpA354,
	(funptr)&f_cmpA355,
	(funptr)&f_cmpA356,
	(funptr)&f_cmpA357,
	(funptr)&f_cmpA358,
	(funptr)&f_cmpA359,
	(funptr)&f_cmpA360,
	(funptr)&f_cmpA361,
	(funptr)&f_cmpA362,
	(funptr)&f_cmpA363,
	(funptr)&f_cmpA364,
	(funptr)&f_cmpA365,
	(funptr)&f_cmpA366,
	(funptr)&f_cmpA367,
	(funptr)&f_cmpA368,
	(funptr)&f_cmpA369,
	(funptr)&f_cmpA370,
	(funptr)&f_cmpA371,
	(funptr)&f_cmpA372,
	(funptr)&f_cmpA373,
	(funptr)&f_cmpA374,
	(funptr)&f_cmpA375,
	(funptr)&f_cmpA376,
	(funptr)&f_cmpA377,
	(funptr)&f_cmpA378,
	(funptr)&f_cmpA379,
	(funptr)&f_cmpA380,
	(funptr)&f_cmpA381,
	(funptr)&f_cmpA382,
	(funptr)&f_cmpA383,
	(funptr)&f_cmpA384,
	(funptr)&f_cmpA385,
	(funptr)&f_cmpA386,
	(funptr)&f_cmpA387,
	(funptr)&f_cmpA388,
	(funptr)&f_cmpA389,
	(funptr)&f_cmpA390,
	(funptr)&f_cmpA391,
	(funptr)&f_cmpA392,
	(funptr)&f_cmpA393,
	(funptr)&f_cmpA394,
	(funptr)&f_cmpA395,
	(funptr)&f_cmpA396,
	(funptr)&f_cmpA397,
	(funptr)&f_cmpA398,
	(funptr)&f_cmpA399,
	(funptr)&f_cmpA400,
	(funptr)&f_cmpA401,
	(funptr)&f_cmpA402,
	(funptr)&f_cmpA403,
	(funptr)&f_cmpA404,
	(funptr)&f_cmpA405,
	(funptr)&f_cmpA406,
	(funptr)&f_cmpA407,
	(funptr)&f_cmpA408,
	(funptr)&f_cmpA409,
	(funptr)&f_cmpA410,
	(funptr)&f_cmpA411,
	(funptr)&f_cmpA412,
	(funptr)&f_cmpA413,
	(funptr)&f_cmpA414,
	(funptr)&f_cmpA415,
	(funptr)&f_cmpA416,
	(funptr)&f_cmpA417,
	(funptr)&f_cmpA418,
	(funptr)&f_cmpA419,
	(funptr)&f_cmpA420,
	(funptr)&f_cmpA421,
	(funptr)&f_cmpA422,
	(funptr)&f_cmpA423,
	(funptr)&f_cmpA424,
	(funptr)&f_cmpA425,
	(funptr)&f_cmpA426,
	(funptr)&f_cmpA427,
	(funptr)&f_cmpA428,
	(funptr)&f_cmpA429,
	(funptr)&f_cmpA430,
	(funptr)&f_cmpA431,
	(funptr)&f_cmpA432,
	(funptr)&f_cmpA433,
	(funptr)&f_cmpA434,
	(funptr)&f_cmpA435,
	(funptr)&f_cmpA436,
	(funptr)&f_cmpA437,
	(funptr)&f_cmpA438,
	(funptr)&f_cmpA439,
	(funptr)&f_cmpA440,
	(funptr)&f_cmpA441,
	(funptr)&f_cmpA442,
	(funptr)&f_cmpA443,
	(funptr)&f_cmpA444,
	(funptr)&f_cmpA445,
	(funptr)&f_cmpA446,
	(funptr)&f_cmpA447,
	(funptr)&f_cmpA448,
	(funptr)&f_cmpA449,
	(funptr)&f_cmpA450,
	(funptr)&f_cmpA451,
	(funptr)&f_cmpA452,
	(funptr)&f_cmpA453,
	(funptr)&f_cmpA454,
	(funptr)&f_cmpA455,
	(funptr)&f_cmpA456,
	(funptr)&f_cmpA457,
	(funptr)&f_cmpA458,
	(funptr)&f_cmpA459,
	(funptr)&f_cmpA460,
	(funptr)&f_cmpA461,
	(funptr)&f_cmpA462,
	(funptr)&f_cmpA463,
	(funptr)&f_cmpA464,
	(funptr)&f_cmpA465,
	(funptr)&f_cmpA466,
	(funptr)&f_cmpA467,
	(funptr)&f_cmpA468,
	(funptr)&f_cmpA469,
	(funptr)&f_cmpA470,
	(funptr)&f_cmpA471,
	(funptr)&f_cmpA472,
	(funptr)&f_cmpA473,
	(funptr)&f_cmpA474,
	(funptr)&f_cmpA475,
	(funptr)&f_cmpA476,
	(funptr)&f_cmpA477,
	(funptr)&f_cmpA478,
	(funptr)&f_cmpA479,
	(funptr)&f_cmpA480,
	(funptr)&f_cmpA481,
	(funptr)&f_cmpA482,
	(funptr)&f_cmpA483,
	(funptr)&f_cmpA484,
	(funptr)&f_cmpA485,
	(funptr)&f_cmpA486,
	(funptr)&f_cmpA487,
	(funptr)&f_cmpA488,
	(funptr)&f_cmpA489,
	(funptr)&f_cmpA490,
	(funptr)&f_cmpA491,
	(funptr)&f_cmpA492,
	(funptr)&f_cmpA493,
	(funptr)&f_cmpA494,
	(funptr)&f_cmpA495,
	(funptr)&f_cmpA496,
	(funptr)&f_cmpA497,
	(funptr)&f_cmpA498,
	(funptr)&f_cmpA499,
	(funptr)&f_cmpA500,
	(funptr)&f_cmpA501,
	(funptr)&f_cmpA502,
	(funptr)&f_cmpA503,
	(funptr)&f_cmpA504,
	(funptr)&f_cmpA505,
	(funptr)&f_cmpA506,
	(funptr)&f_cmpA507,
	(funptr)&f_cmpA508,
	(funptr)&f_cmpA509,
	(funptr)&f_cmpA510,
	(funptr)&f_cmpA511,
	(funptr)&f_cmpA512,
	(funptr)&f_cmpA513,
	(funptr)&f_cmpA514,
	(funptr)&f_cmpA515,
	(funptr)&f_cmpA516,
	(funptr)&f_cmpA517,
	(funptr)&f_cmpA518,
	(funptr)&f_cmpA519,
	(funptr)&f_cmpA520,
	(funptr)&f_cmpA521,
	(funptr)&f_cmpA522,
	(funptr)&f_cmpA523,
	(funptr)&f_cmpA524,
	(funptr)&f_cmpA525,
	(funptr)&f_cmpA526,
	(funptr)&f_cmpA527,
	(funptr)&f_cmpA528,
	(funptr)&f_cmpA529,
	(funptr)&f_cmpA530,
	(funptr)&f_cmpA531,
	(funptr)&f_cmpA532,
	(funptr)&f_cmpA533,
	(funptr)&f_cmpA534,
	(funptr)&f_cmpA535,
	(funptr)&f_cmpA536,
	(funptr)&f_cmpA537,
	(funptr)&f_cmpA538,
	(funptr)&f_cmpA539,
	(funptr)&f_cmpA540,
	(funptr)&f_cmpA541,
	(funptr)&f_cmpA542,
	(funptr)&f_cmpA543,
	(funptr)&f_cmpA544,
	(funptr)&f_cmpA545,
	(funptr)&f_cmpA546,
	(funptr)&f_cmpA547,
	(funptr)&f_cmpA548,
	(funptr)&f_cmpA549,
	(funptr)&f_cmpA550,
	(funptr)&f_cmpA551,
	(funptr)&f_cmpA552,
	(funptr)&f_cmpA553,
	(funptr)&f_cmpA554,
	(funptr)&f_cmpA555,
	(funptr)&f_cmpA556,
	(funptr)&f_cmpA557,
	(funptr)&f_cmpA558,
	(funptr)&f_cmpA559,
	(funptr)&f_cmpA560,
	(funptr)&f_cmpA561,
	(funptr)&f_cmpA562,
	(funptr)&f_cmpA563,
	(funptr)&f_cmpA564,
	(funptr)&f_cmpA565,
	(funptr)&f_cmpA566,
	(funptr)&f_cmpA567,
	(funptr)&f_cmpA568,
	(funptr)&f_cmpA569,
	(funptr)&f_cmpA570,
	(funptr)&f_cmpA571,
	(funptr)&f_cmpA572,
	(funptr)&f_cmpA573,
	(funptr)&f_cmpA574,
	(funptr)&f_cmpA575,
	(funptr)&f_cmpA576,
	(funptr)&f_cmpA577,
	(funptr)&f_cmpA578,
	(funptr)&f_cmpA579,
	(funptr)&f_cmpA580,
	(funptr)&f_cmpA581,
	(funptr)&f_cmpA582,
	(funptr)&f_cmpA583,
	(funptr)&f_cmpA584,
	(funptr)&f_cmpA585,
	(funptr)&f_cmpA586,
	(funptr)&f_cmpA587,
	(funptr)&f_cmpA588,
	(funptr)&f_cmpA589,
	(funptr)&f_cmpA590,
	(funptr)&f_cmpA591,
	(funptr)&f_cmpA592,
	(funptr)&f_cmpA593,
	(funptr)&f_cmpA594,
	(funptr)&f_cmpA595,
	(funptr)&f_cmpA596,
	(funptr)&f_cmpA597,
	(funptr)&f_cmpA598,
	(funptr)&f_cmpA599,
	(funptr)&f_cmpA600,
	(funptr)&f_cmpA601,
	(funptr)&f_cmpA602,
	(funptr)&f_cmpA603,
	(funptr)&f_cmpA604,
	(funptr)&f_cmpA605,
	(funptr)&f_cmpA606,
	(funptr)&f_cmpA607,
	(funptr)&f_cmpA608,
	(funptr)&f_cmpA609,
	(funptr)&f_cmpA610,
	(funptr)&f_cmpA611,
	(funptr)&f_cmpA612,
	(funptr)&f_cmpA613,
	(funptr)&f_cmpA614,
	(funptr)&f_cmpA615,
	(funptr)&f_cmpA616,
	(funptr)&f_cmpA617,
	(funptr)&f_cmpA618,
	(funptr)&f_cmpA619,
	(funptr)&f_cmpA620,
	(funptr)&f_cmpA621,
	(funptr)&f_cmpA622,
	(funptr)&f_cmpA623,
	(funptr)&f_cmpA624,
	(funptr)&f_cmpA625,
	(funptr)&f_cmpA626,
	(funptr)&f_cmpA627,
	(funptr)&f_cmpA628,
	(funptr)&f_cmpA629,
	(funptr)&f_cmpA630,
	(funptr)&f_cmpA631,
	(funptr)&f_cmpA632,
	(funptr)&f_cmpA633,
	(funptr)&f_cmpA634,
	(funptr)&f_cmpA635,
	(funptr)&f_cmpA636,
	(funptr)&f_cmpA637,
	(funptr)&f_cmpA638,
	(funptr)&f_cmpA639,
	(funptr)&f_cmpA640,
	(funptr)&f_cmpA641,
	(funptr)&f_cmpA642,
	(funptr)&f_cmpA643,
	(funptr)&f_cmpA644,
	(funptr)&f_cmpA645,
	(funptr)&f_cmpA646,
	(funptr)&f_cmpA647,
	(funptr)&f_cmpA648,
	(funptr)&f_cmpA649,
	(funptr)&f_cmpA650,
	(funptr)&f_cmpA651,
	(funptr)&f_cmpA652,
	(funptr)&f_cmpA653,
	(funptr)&f_cmpA654,
	(funptr)&f_cmpA655,
	(funptr)&f_cmpA656,
	(funptr)&f_cmpA657,
	(funptr)&f_cmpA658,
	(funptr)&f_cmpA659,
	(funptr)&f_cmpA660,
	(funptr)&f_cmpA661,
	(funptr)&f_cmpA662,
	(funptr)&f_cmpA663,
	(funptr)&f_cmpA664,
	(funptr)&f_cmpA665,
	(funptr)&f_cmpA666,
	(funptr)&f_cmpA667,
	(funptr)&f_cmpA668,
	(funptr)&f_cmpA669,
	(funptr)&f_cmpA670,
	(funptr)&f_cmpA671,
	(funptr)&f_cmpA672,
	(funptr)&f_cmpA673,
	(funptr)&f_cmpA674,
	(funptr)&f_cmpA675,
	(funptr)&f_cmpA676,
	(funptr)&f_cmpA677,
	(funptr)&f_cmpA678,
	(funptr)&f_cmpA679,
	(funptr)&f_cmpA680,
	(funptr)&f_cmpA681,
	(funptr)&f_cmpA682,
	(funptr)&f_cmpA683,
	(funptr)&f_cmpA684,
	(funptr)&f_cmpA685,
	(funptr)&f_cmpA686,
	(funptr)&f_cmpA687,
	(funptr)&f_cmpA688,
	(funptr)&f_cmpA689,
	(funptr)&f_cmpA690,
	(funptr)&f_cmpA691,
	(funptr)&f_cmpA692,
	(funptr)&f_cmpA693,
	(funptr)&f_cmpA694,
	(funptr)&f_cmpA695,
	(funptr)&f_cmpA696,
	(funptr)&f_cmpA697,
	(funptr)&f_cmpA698,
	(funptr)&f_cmpA699,
	(funptr)&f_cmpA700,
	(funptr)&f_cmpA701,
	(funptr)&f_cmpA702,
	(funptr)&f_cmpA703,
	(funptr)&f_cmpA704,
	(funptr)&f_cmpA705,
	(funptr)&f_cmpA706,
	(funptr)&f_cmpA707,
	(funptr)&f_cmpA708,
	(funptr)&f_cmpA709,
	(funptr)&f_cmpA710,
	(funptr)&f_cmpA711,
	(funptr)&f_cmpA712,
	(funptr)&f_cmpA713,
	(funptr)&f_cmpA714,
	(funptr)&f_cmpA715,
	(funptr)&f_cmpA716,
	(funptr)&f_cmpA717,
	(funptr)&f_cmpA718,
	(funptr)&f_cmpA719,
	(funptr)&f_cmpA720,
	(funptr)&f_cmpA721,
	(funptr)&f_cmpA722,
	(funptr)&f_cmpA723,
	(funptr)&f_cmpA724,
	(funptr)&f_cmpA725,
	(funptr)&f_cmpA726,
	(funptr)&f_cmpA727,
	(funptr)&f_cmpA728,
	(funptr)&f_cmpA729,
	(funptr)&f_cmpA730,
	(funptr)&f_cmpA731,
	(funptr)&f_cmpA732,
	(funptr)&f_cmpA733,
	(funptr)&f_cmpA734,
	(funptr)&f_cmpA735,
	(funptr)&f_cmpA736,
	(funptr)&f_cmpA737,
	(funptr)&f_cmpA738,
	(funptr)&f_cmpA739,
	(funptr)&f_cmpA740,
	(funptr)&f_cmpA741,
	(funptr)&f_cmpA742,
	(funptr)&f_cmpA743,
	(funptr)&f_cmpA744,
	(funptr)&f_cmpA745,
	(funptr)&f_cmpA746,
	(funptr)&f_cmpA747,
	(funptr)&f_cmpA748,
	(funptr)&f_cmpA749,
	(funptr)&f_cmpA750,
	(funptr)&f_cmpA751,
	(funptr)&f_cmpA752,
	(funptr)&f_cmpA753,
	(funptr)&f_cmpA754,
	(funptr)&f_cmpA755,
	(funptr)&f_cmpA756,
	(funptr)&f_cmpA757,
	(funptr)&f_cmpA758,
	(funptr)&f_cmpA759,
	(funptr)&f_cmpA760,
	(funptr)&f_cmpA761,
	(funptr)&f_cmpA762,
	(funptr)&f_cmpA763,
	(funptr)&f_cmpA764,
	(funptr)&f_cmpA765,
	(funptr)&f_cmpA766,
	(funptr)&f_cmpA767,
	(funptr)&f_cmpA768,
	(funptr)&f_cmpA769,
	(funptr)&f_cmpA770,
	(funptr)&f_cmpA771,
	(funptr)&f_cmpA772,
	(funptr)&f_cmpA773,
	(funptr)&f_cmpA774,
	(funptr)&f_cmpA775,
	(funptr)&f_cmpA776,
	(funptr)&f_cmpA777,
	(funptr)&f_cmpA778,
	(funptr)&f_cmpA779,
	(funptr)&f_cmpA780,
	(funptr)&f_cmpA781,
	(funptr)&f_cmpA782,
	(funptr)&f_cmpA783,
	(funptr)&f_cmpA784,
	(funptr)&f_cmpA785,
	(funptr)&f_cmpA786,
	(funptr)&f_cmpA787,
	(funptr)&f_cmpA788,
	(funptr)&f_cmpA789,
	(funptr)&f_cmpA790,
	(funptr)&f_cmpA791,
	(funptr)&f_cmpA792,
	(funptr)&f_cmpA793,
	(funptr)&f_cmpA794,
	(funptr)&f_cmpA795,
	(funptr)&f_cmpA796,
	(funptr)&f_cmpA797,
	(funptr)&f_cmpA798,
	(funptr)&f_cmpA799,
	(funptr)&f_cmpA800,
	(funptr)&f_cmpA801,
	(funptr)&f_cmpA802,
	(funptr)&f_cmpA803,
	(funptr)&f_cmpA804,
	(funptr)&f_cmpA805,
	(funptr)&f_cmpA806,
	(funptr)&f_cmpA807,
	(funptr)&f_cmpA808,
	(funptr)&f_cmpA809,
	(funptr)&f_cmpA810,
	(funptr)&f_cmpA811,
	(funptr)&f_cmpA812,
	(funptr)&f_cmpA813,
	(funptr)&f_cmpA814,
	(funptr)&f_cmpA815,
	(funptr)&f_cmpA816,
	(funptr)&f_cmpA817,
	(funptr)&f_cmpA818,
	(funptr)&f_cmpA819,
	(funptr)&f_cmpA820,
	(funptr)&f_cmpA821,
	(funptr)&f_cmpA822,
	(funptr)&f_cmpA823,
	(funptr)&f_cmpA824,
	(funptr)&f_cmpA825,
	(funptr)&f_cmpA826,
	(funptr)&f_cmpA827,
	(funptr)&f_cmpA828,
	(funptr)&f_cmpA829,
	(funptr)&f_cmpA830,
	(funptr)&f_cmpA831,
	(funptr)&f_cmpA832,
	(funptr)&f_cmpA833,
	(funptr)&f_cmpA834,
	(funptr)&f_cmpA835,
	(funptr)&f_cmpA836,
	(funptr)&f_cmpA837,
	(funptr)&f_cmpA838,
	(funptr)&f_cmpA839,
	(funptr)&f_cmpA840,
	(funptr)&f_cmpA841,
	(funptr)&f_cmpA842,
	(funptr)&f_cmpA843,
	(funptr)&f_cmpA844,
	(funptr)&f_cmpA845,
	(funptr)&f_cmpA846,
	(funptr)&f_cmpA847,
	(funptr)&f_cmpA848,
	(funptr)&f_cmpA849,
	(funptr)&f_cmpA850,
	(funptr)&f_cmpA851,
	(funptr)&f_cmpA852,
	(funptr)&f_cmpA853,
	(funptr)&f_cmpA854,
	(funptr)&f_cmpA855,
	(funptr)&f_cmpA856,
	(funptr)&f_cmpA857,
	(funptr)&f_cmpA858,
	(funptr)&f_cmpA859,
	(funptr)&f_cmpA860,
	(funptr)&f_cmpA861,
	(funptr)&f_cmpA862,
	(funptr)&f_cmpA863,
	(funptr)&f_cmpA864,
	(funptr)&f_cmpA865,
	(funptr)&f_cmpA866,
	(funptr)&f_cmpA867,
	(funptr)&f_cmpA868,
	(funptr)&f_cmpA869,
	(funptr)&f_cmpA870,
	(funptr)&f_cmpA871,
	(funptr)&f_cmpA872,
	(funptr)&f_cmpA873,
	(funptr)&f_cmpA874,
	(funptr)&f_cmpA875,
	(funptr)&f_cmpA876,
	(funptr)&f_cmpA877,
	(funptr)&f_cmpA878,
	(funptr)&f_cmpA879,
	(funptr)&f_cmpA880,
	(funptr)&f_cmpA881,
	(funptr)&f_cmpA882,
	(funptr)&f_cmpA883,
	(funptr)&f_cmpA884,
	(funptr)&f_cmpA885,
	(funptr)&f_cmpA886,
	(funptr)&f_cmpA887,
	(funptr)&f_cmpA888,
	(funptr)&f_cmpA889,
	(funptr)&f_cmpA890,
	(funptr)&f_cmpA891,
	(funptr)&f_cmpA892,
	(funptr)&f_cmpA893,
	(funptr)&f_cmpA894,
	(funptr)&f_cmpA895,
	(funptr)&f_cmpA896,
	(funptr)&f_cmpA897,
	(funptr)&f_cmpA898,
	(funptr)&f_cmpA899,
	(funptr)&f_cmpA900,
	(funptr)&f_cmpA901,
	(funptr)&f_cmpA902,
	(funptr)&f_cmpA903,
	(funptr)&f_cmpA904,
	(funptr)&f_cmpA905,
	(funptr)&f_cmpA906,
	(funptr)&f_cmpA907,
	(funptr)&f_cmpA908,
	(funptr)&f_cmpA909,
	(funptr)&f_cmpA910,
	(funptr)&f_cmpA911,
	(funptr)&f_cmpA912,
	(funptr)&f_cmpA913,
	(funptr)&f_cmpA914,
	(funptr)&f_cmpA915,
	(funptr)&f_cmpA916,
	(funptr)&f_cmpA917,
	(funptr)&f_cmpA918,
	(funptr)&f_cmpA919,
	(funptr)&f_cmpA920,
	(funptr)&f_cmpA921,
	(funptr)&f_cmpA922,
	(funptr)&f_cmpA923,
	(funptr)&f_cmpA924,
	(funptr)&f_cmpA925,
	(funptr)&f_cmpA926,
	(funptr)&f_cmpA927,
	(funptr)&f_cmpA928,
	(funptr)&f_cmpA929,
	(funptr)&f_cmpA930,
	(funptr)&f_cmpA931,
	(funptr)&f_cmpA932,
	(funptr)&f_cmpA933,
	(funptr)&f_cmpA934,
	(funptr)&f_cmpA935,
	(funptr)&f_cmpA936,
	(funptr)&f_cmpA937,
	(funptr)&f_cmpA938,
	(funptr)&f_cmpA939,
	(funptr)&f_cmpA940,
	(funptr)&f_cmpA941,
	(funptr)&f_cmpA942,
	(funptr)&f_cmpA943,
	(funptr)&f_cmpA944,
	(funptr)&f_cmpA945,
	(funptr)&f_cmpA946,
	(funptr)&f_cmpA947,
	(funptr)&f_cmpA948,
	(funptr)&f_cmpA949,
	(funptr)&f_cmpA950,
	(funptr)&f_cmpA951,
	(funptr)&f_cmpA952,
	(funptr)&f_cmpA953,
	(funptr)&f_cmpA954,
	(funptr)&f_cmpA955,
	(funptr)&f_cmpA956,
	(funptr)&f_cmpA957,
	(funptr)&f_cmpA958,
	(funptr)&f_cmpA959,
	(funptr)&f_cmpA960,
	(funptr)&f_cmpA961,
	(funptr)&f_cmpA962,
	(funptr)&f_cmpA963,
	(funptr)&f_cmpA964,
	(funptr)&f_cmpA965,
	(funptr)&f_cmpA966,
	(funptr)&f_cmpA967,
	(funptr)&f_cmpA968,
	(funptr)&f_cmpA969,
	(funptr)&f_cmpA970,
	(funptr)&f_cmpA971,
	(funptr)&f_cmpA972,
	(funptr)&f_cmpA973,
	(funptr)&f_cmpA974,
	(funptr)&f_cmpA975,
	(funptr)&f_cmpA976,
	(funptr)&f_cmpA977,
	(funptr)&f_cmpA978,
	(funptr)&f_cmpA979,
	(funptr)&f_cmpA980,
	(funptr)&f_cmpA981,
	(funptr)&f_cmpA982,
	(funptr)&f_cmpA983,
	(funptr)&f_cmpA984,
	(funptr)&f_cmpA985,
	(funptr)&f_cmpA986,
	(funptr)&f_cmpA987,
	(funptr)&f_cmpA988,
	(funptr)&f_cmpA989,
	(funptr)&f_cmpA990,
	(funptr)&f_cmpA991,
	(funptr)&f_cmpA992,
	(funptr)&f_cmpA993,
	(funptr)&f_cmpA994,
	(funptr)&f_cmpA995,
	(funptr)&f_cmpA996,
	(funptr)&f_cmpA997,
	(funptr)&f_cmpA998,
	(funptr)&f_cmpA999,
	(funptr)&f_cmpA1000,
	(funptr)&f_cmpA1001,
	(funptr)&f_cmpA1002,
	(funptr)&f_cmpA1003,
	(funptr)&f_cmpA1004,
	(funptr)&f_cmpA1005,
	(funptr)&f_cmpA1006,
	(funptr)&f_cmpA1007,
	(funptr)&f_cmpA1008,
	(funptr)&f_cmpA1009,
	(funptr)&f_cmpA1010,
	(funptr)&f_cmpA1011,
	(funptr)&f_cmpA1012,
	(funptr)&f_cmpA1013,
	(funptr)&f_cmpA1014,
	(funptr)&f_cmpA1015,
	(funptr)&f_cmpA1016,
	(funptr)&f_cmpA1017,
	(funptr)&f_cmpA1018,
	(funptr)&f_cmpA1019,
	(funptr)&f_cmpA1020,
	(funptr)&f_cmpA1021,
	(funptr)&f_cmpA1022,
	(funptr)&f_cmpA1023,
	(funptr)&f_cmpA1024,
	(funptr)&f_cmpA1025,
	(funptr)&f_cmpA1026,
	(funptr)&f_cmpA1027,
	(funptr)&f_cmpA1028,
	(funptr)&f_cmpA1029,
	(funptr)&f_cmpA1030,
	(funptr)&f_cmpA1031,
	(funptr)&f_cmpA1032,
	(funptr)&f_cmpA1033,
	(funptr)&f_cmpA1034,
	(funptr)&f_cmpA1035,
	(funptr)&f_cmpA1036,
	(funptr)&f_cmpA1037,
	(funptr)&f_cmpA1038,
	(funptr)&f_cmpA1039,
	(funptr)&f_cmpA1040,
	(funptr)&f_cmpA1041,
	(funptr)&f_cmpA1042,
	(funptr)&f_cmpA1043,
	(funptr)&f_cmpA1044,
	(funptr)&f_cmpA1045,
	(funptr)&f_cmpA1046,
	(funptr)&f_cmpA1047,
	(funptr)&f_cmpA1048,
	(funptr)&f_cmpA1049,
	(funptr)&f_cmpA1050,
	(funptr)&f_cmpA1051,
	(funptr)&f_cmpA1052,
	(funptr)&f_cmpA1053,
	(funptr)&f_cmpA1054,
	(funptr)&f_cmpA1055,
	(funptr)&f_cmpA1056,
	(funptr)&f_cmpA1057,
	(funptr)&f_cmpA1058,
	(funptr)&f_cmpA1059,
	(funptr)&f_cmpA1060,
	(funptr)&f_cmpA1061,
	(funptr)&f_cmpA1062,
	(funptr)&f_cmpA1063,
	(funptr)&f_cmpA1064,
	(funptr)&f_cmpA1065,
	(funptr)&f_cmpA1066,
	(funptr)&f_cmpA1067,
	(funptr)&f_cmpA1068,
	(funptr)&f_cmpA1069,
	(funptr)&f_cmpA1070,
	(funptr)&f_cmpA1071,
	(funptr)&f_cmpA1072,
	(funptr)&f_cmpA1073,
	(funptr)&f_cmpA1074,
	(funptr)&f_cmpA1075,
	(funptr)&f_cmpA1076,
	(funptr)&f_cmpA1077,
	(funptr)&f_cmpA1078,
	(funptr)&f_cmpA1079,
	(funptr)&f_cmpA1080,
	(funptr)&f_cmpA1081,
	(funptr)&f_cmpA1082,
	(funptr)&f_cmpA1083,
	(funptr)&f_cmpA1084,
	(funptr)&f_cmpA1085,
	(funptr)&f_cmpA1086,
	(funptr)&f_cmpA1087,
	(funptr)&f_cmpA1088,
	(funptr)&f_cmpA1089,
	(funptr)&f_cmpA1090,
	(funptr)&f_cmpA1091,
	(funptr)&f_cmpA1092,
	(funptr)&f_cmpA1093,
	(funptr)&f_cmpA1094,
	(funptr)&f_cmpA1095,
	(funptr)&f_cmpA1096,
	(funptr)&f_cmpA1097,
	(funptr)&f_cmpA1098,
	(funptr)&f_cmpA1099,
	(funptr)&f_cmpA1100,
	(funptr)&f_cmpA1101,
	(funptr)&f_cmpA1102,
	(funptr)&f_cmpA1103,
	(funptr)&f_cmpA1104,
	(funptr)&f_cmpA1105,
	(funptr)&f_cmpA1106,
	(funptr)&f_cmpA1107,
	(funptr)&f_cmpA1108,
	(funptr)&f_cmpA1109,
	(funptr)&f_cmpA1110,
	(funptr)&f_cmpA1111,
	(funptr)&f_cmpA1112,
	(funptr)&f_cmpA1113,
	(funptr)&f_cmpA1114,
	(funptr)&f_cmpA1115,
	(funptr)&f_cmpA1116,
	(funptr)&f_cmpA1117,
	(funptr)&f_cmpA1118,
	(funptr)&f_cmpA1119,
	(funptr)&f_cmpA1120,
	(funptr)&f_cmpA1121,
	(funptr)&f_cmpA1122,
	(funptr)&f_cmpA1123,
	(funptr)&f_cmpA1124,
	(funptr)&f_cmpA1125,
	(funptr)&f_cmpA1126,
	(funptr)&f_cmpA1127,
	(funptr)&f_cmpA1128,
	(funptr)&f_cmpA1129,
	(funptr)&f_cmpA1130,
	(funptr)&f_cmpA1131,
	(funptr)&f_cmpA1132,
	(funptr)&f_cmpA1133,
	(funptr)&f_cmpA1134,
	(funptr)&f_cmpA1135,
	(funptr)&f_cmpA1136,
	(funptr)&f_cmpA1137,
	(funptr)&f_cmpA1138,
	(funptr)&f_cmpA1139,
	(funptr)&f_cmpA1140,
	(funptr)&f_cmpA1141,
	(funptr)&f_cmpA1142,
	(funptr)&f_cmpA1143,
	(funptr)&f_cmpA1144,
	(funptr)&f_cmpA1145,
	(funptr)&f_cmpA1146,
	(funptr)&f_cmpA1147,
	(funptr)&f_cmpA1148,
	(funptr)&f_cmpA1149,
	(funptr)&f_cmpA1150,
	(funptr)&f_cmpA1151,
	(funptr)&f_cmpA1152,
	(funptr)&f_cmpA1153,
	(funptr)&f_cmpA1154,
	(funptr)&f_cmpA1155,
	(funptr)&f_cmpA1156,
	(funptr)&f_cmpA1157,
	(funptr)&f_cmpA1158,
	(funptr)&f_cmpA1159,
	(funptr)&f_cmpA1160,
	(funptr)&f_cmpA1161,
	(funptr)&f_cmpA1162,
	(funptr)&f_cmpA1163,
	(funptr)&f_cmpA1164,
	(funptr)&f_cmpA1165,
	(funptr)&f_cmpA1166,
	(funptr)&f_cmpA1167,
	(funptr)&f_cmpA1168,
	(funptr)&f_cmpA1169,
	(funptr)&f_cmpA1170,
	(funptr)&f_cmpA1171,
	(funptr)&f_cmpA1172,
	(funptr)&f_cmpA1173,
	(funptr)&f_cmpA1174,
	(funptr)&f_cmpA1175,
	(funptr)&f_cmpA1176,
	(funptr)&f_cmpA1177,
	(funptr)&f_cmpA1178,
	(funptr)&f_cmpA1179,
	(funptr)&f_cmpA1180,
	(funptr)&f_cmpA1181,
	(funptr)&f_cmpA1182,
	(funptr)&f_cmpA1183,
	(funptr)&f_cmpA1184,
	(funptr)&f_cmpA1185,
	(funptr)&f_cmpA1186,
	(funptr)&f_cmpA1187,
	(funptr)&f_cmpA1188,
	(funptr)&f_cmpA1189,
	(funptr)&f_cmpA1190,
	(funptr)&f_cmpA1191,
	(funptr)&f_cmpA1192,
	(funptr)&f_cmpA1193,
	(funptr)&f_cmpA1194,
	(funptr)&f_cmpA1195,
	(funptr)&f_cmpA1196,
	(funptr)&f_cmpA1197,
	(funptr)&f_cmpA1198,
	(funptr)&f_cmpA1199,
	(funptr)&f_cmpA1200,
	(funptr)&f_cmpA1201,
	(funptr)&f_cmpA1202,
	(funptr)&f_cmpA1203,
	(funptr)&f_cmpA1204,
	(funptr)&f_cmpA1205,
	(funptr)&f_cmpA1206,
	(funptr)&f_cmpA1207,
	(funptr)&f_cmpA1208,
	(funptr)&f_cmpA1209,
	(funptr)&f_cmpA1210,
	(funptr)&f_cmpA1211,
	(funptr)&f_cmpA1212,
	(funptr)&f_cmpA1213,
	(funptr)&f_cmpA1214,
	(funptr)&f_cmpA1215,
	(funptr)&f_cmpA1216,
	(funptr)&f_cmpA1217,
	(funptr)&f_cmpA1218,
	(funptr)&f_cmpA1219,
	(funptr)&f_cmpA1220,
	(funptr)&f_cmpA1221,
	(funptr)&f_cmpA1222,
	(funptr)&f_cmpA1223,
	(funptr)&f_cmpA1224,
	(funptr)&f_cmpA1225,
	(funptr)&f_cmpA1226,
	(funptr)&f_cmpA1227,
	(funptr)&f_cmpA1228,
	(funptr)&f_cmpA1229,
	(funptr)&f_cmpA1230,
	(funptr)&f_cmpA1231,
	(funptr)&f_cmpA1232,
	(funptr)&f_cmpA1233,
	(funptr)&f_cmpA1234,
	(funptr)&f_cmpA1235,
	(funptr)&f_cmpA1236,
	(funptr)&f_cmpA1237,
	(funptr)&f_cmpA1238,
	(funptr)&f_cmpA1239,
	(funptr)&f_cmpA1240,
	(funptr)&f_cmpA1241,
	(funptr)&f_cmpA1242,
	(funptr)&f_cmpA1243,
	(funptr)&f_cmpA1244,
	(funptr)&f_cmpA1245,
	(funptr)&f_cmpA1246,
	(funptr)&f_cmpA1247,
	(funptr)&f_cmpA1248,
	(funptr)&f_cmpA1249,
	(funptr)&f_cmpA1250,
	(funptr)&f_cmpA1251,
	(funptr)&f_cmpA1252,
	(funptr)&f_cmpA1253,
	(funptr)&f_cmpA1254,
	(funptr)&f_cmpA1255,
	(funptr)&f_cmpA1256,
	(funptr)&f_cmpA1257,
	(funptr)&f_cmpA1258,
	(funptr)&f_cmpA1259,
	(funptr)&f_cmpA1260,
	(funptr)&f_cmpA1261,
	(funptr)&f_cmpA1262,
	(funptr)&f_cmpA1263,
	(funptr)&f_cmpA1264,
	(funptr)&f_cmpA1265,
	(funptr)&f_cmpA1266,
	(funptr)&f_cmpA1267,
	(funptr)&f_cmpA1268,
	(funptr)&f_cmpA1269,
	(funptr)&f_cmpA1270,
	(funptr)&f_cmpA1271,
	(funptr)&f_cmpA1272,
	(funptr)&f_cmpA1273,
	(funptr)&f_cmpA1274,
	(funptr)&f_cmpA1275,
	(funptr)&f_cmpA1276,
	(funptr)&f_cmpA1277,
	(funptr)&f_cmpA1278,
	(funptr)&f_cmpA1279,
	(funptr)&f_cmpA1280,
	(funptr)&f_cmpA1281,
	(funptr)&f_cmpA1282,
	(funptr)&f_cmpA1283,
	(funptr)&f_cmpA1284,
	(funptr)&f_cmpA1285,
	(funptr)&f_cmpA1286,
	(funptr)&f_cmpA1287,
	(funptr)&f_cmpA1288,
	(funptr)&f_cmpA1289,
	(funptr)&f_cmpA1290,
	(funptr)&f_cmpA1291,
	(funptr)&f_cmpA1292,
	(funptr)&f_cmpA1293,
	(funptr)&f_cmpA1294
};
int G_maxargs = 16;
